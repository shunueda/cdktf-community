import * as cdktf from 'cdktf';
import { DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnv,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvList,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvFrom,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvFromToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvFromToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvFromList,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLifecycle,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLifecycleToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLifecycleToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLifecycleOutputReference,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLivenessProbe,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLivenessProbeToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLivenessProbeToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLivenessProbeOutputReference,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersPorts,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersPortsToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersPortsToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersPortsList,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersReadinessProbe,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersReadinessProbeToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersReadinessProbeToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersReadinessProbeOutputReference,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResizePolicy,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResizePolicyToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResizePolicyToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResizePolicyList,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResources,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResourcesToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResourcesToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResourcesOutputReference,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersSecurityContext,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersSecurityContextToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersSecurityContextToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersSecurityContextOutputReference,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersStartupProbe,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersStartupProbeToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersStartupProbeToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersStartupProbeOutputReference,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeDevices,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeDevicesToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeDevicesToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeDevicesList,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeMounts,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeMountsToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeMountsToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeMountsList,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecContainers,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecContainersToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecContainersToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecContainersList,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecEphemeralContainers,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecEphemeralContainersToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecEphemeralContainersToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecEphemeralContainersList,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationConfiguration,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationConfigurationToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationConfigurationToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationConfigurationList,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationIntegrationKit,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationIntegrationKitToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationIntegrationKitToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationIntegrationKitOutputReference,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationSources,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationSourcesToTerraform,
dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationSourcesToHclTerraform,
DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationSourcesList } from './structs0'
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainers {
  /**
  * Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. '$$(VAR_NAME)' will produce the string literal '$(VAR_NAME)'. Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#args DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#args}
  */
  readonly args?: string[];
  /**
  * Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. '$$(VAR_NAME)' will produce the string literal '$(VAR_NAME)'. Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#command DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * List of environment variables to set in the container. Cannot be updated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#env DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#env}
  */
  readonly env?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnv[] | cdktf.IResolvable;
  /**
  * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#env_from DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#env_from}
  */
  readonly envFrom?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvFrom[] | cdktf.IResolvable;
  /**
  * Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#image DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#image_pull_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#image_pull_policy}
  */
  readonly imagePullPolicy?: string;
  /**
  * Actions that the management system should take in response to container lifecycle events. Cannot be updated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#lifecycle DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#lifecycle}
  */
  readonly lifecycle?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLifecycle;
  /**
  * Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#liveness_probe DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#liveness_probe}
  */
  readonly livenessProbe?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLivenessProbe;
  /**
  * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default '0.0.0.0' address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#ports DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#ports}
  */
  readonly ports?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersPorts[] | cdktf.IResolvable;
  /**
  * Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#readiness_probe DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#readiness_probe}
  */
  readonly readinessProbe?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersReadinessProbe;
  /**
  * Resources resize policy for the container.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#resize_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#resize_policy}
  */
  readonly resizePolicy?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResizePolicy[] | cdktf.IResolvable;
  /**
  * Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#resources DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResources;
  /**
  * RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is 'Always'. For non-init containers or when this field is not specified, the restart behavior is defined by the Pod's restart policy and the container type. Setting the RestartPolicy as 'Always' for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy 'Always' will be shut down. This lifecycle differs from normal init containers and is often referred to as a 'sidecar' container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#restart_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#restart_policy}
  */
  readonly restartPolicy?: string;
  /**
  * SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#security_context DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#security_context}
  */
  readonly securityContext?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersSecurityContext;
  /**
  * StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#startup_probe DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#startup_probe}
  */
  readonly startupProbe?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersStartupProbe;
  /**
  * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#stdin DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#stdin}
  */
  readonly stdin?: boolean | cdktf.IResolvable;
  /**
  * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#stdin_once DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#stdin_once}
  */
  readonly stdinOnce?: boolean | cdktf.IResolvable;
  /**
  * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#termination_message_path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#termination_message_path}
  */
  readonly terminationMessagePath?: string;
  /**
  * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#termination_message_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#termination_message_policy}
  */
  readonly terminationMessagePolicy?: string;
  /**
  * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tty DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tty}
  */
  readonly tty?: boolean | cdktf.IResolvable;
  /**
  * volumeDevices is the list of block devices to be used by the container.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_devices DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_devices}
  */
  readonly volumeDevices?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeDevices[] | cdktf.IResolvable;
  /**
  * Pod volumes to mount into the container's filesystem. Cannot be updated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_mounts DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_mounts}
  */
  readonly volumeMounts?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeMounts[] | cdktf.IResolvable;
  /**
  * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#working_dir DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#working_dir}
  */
  readonly workingDir?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    args: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.args),
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    env: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvToTerraform, false)(struct!.env),
    env_from: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvFromToTerraform, false)(struct!.envFrom),
    image: cdktf.stringToTerraform(struct!.image),
    image_pull_policy: cdktf.stringToTerraform(struct!.imagePullPolicy),
    lifecycle: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLifecycleToTerraform(struct!.lifecycle),
    liveness_probe: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLivenessProbeToTerraform(struct!.livenessProbe),
    name: cdktf.stringToTerraform(struct!.name),
    ports: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersPortsToTerraform, false)(struct!.ports),
    readiness_probe: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersReadinessProbeToTerraform(struct!.readinessProbe),
    resize_policy: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResizePolicyToTerraform, false)(struct!.resizePolicy),
    resources: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResourcesToTerraform(struct!.resources),
    restart_policy: cdktf.stringToTerraform(struct!.restartPolicy),
    security_context: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersSecurityContextToTerraform(struct!.securityContext),
    startup_probe: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersStartupProbeToTerraform(struct!.startupProbe),
    stdin: cdktf.booleanToTerraform(struct!.stdin),
    stdin_once: cdktf.booleanToTerraform(struct!.stdinOnce),
    termination_message_path: cdktf.stringToTerraform(struct!.terminationMessagePath),
    termination_message_policy: cdktf.stringToTerraform(struct!.terminationMessagePolicy),
    tty: cdktf.booleanToTerraform(struct!.tty),
    volume_devices: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeDevicesToTerraform, false)(struct!.volumeDevices),
    volume_mounts: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeMountsToTerraform, false)(struct!.volumeMounts),
    working_dir: cdktf.stringToTerraform(struct!.workingDir),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    args: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.args),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    env: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvToHclTerraform, false)(struct!.env),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvList",
    },
    env_from: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvFromToHclTerraform, false)(struct!.envFrom),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvFromList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_policy: {
      value: cdktf.stringToHclTerraform(struct!.imagePullPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    lifecycle: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLifecycleToHclTerraform(struct!.lifecycle),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLifecycle",
    },
    liveness_probe: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLivenessProbeToHclTerraform(struct!.livenessProbe),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLivenessProbe",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ports: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersPortsToHclTerraform, false)(struct!.ports),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersPortsList",
    },
    readiness_probe: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersReadinessProbeToHclTerraform(struct!.readinessProbe),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersReadinessProbe",
    },
    resize_policy: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResizePolicyToHclTerraform, false)(struct!.resizePolicy),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResizePolicyList",
    },
    resources: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResources",
    },
    restart_policy: {
      value: cdktf.stringToHclTerraform(struct!.restartPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    security_context: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersSecurityContextToHclTerraform(struct!.securityContext),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersSecurityContext",
    },
    startup_probe: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersStartupProbeToHclTerraform(struct!.startupProbe),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersStartupProbe",
    },
    stdin: {
      value: cdktf.booleanToHclTerraform(struct!.stdin),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    stdin_once: {
      value: cdktf.booleanToHclTerraform(struct!.stdinOnce),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    termination_message_path: {
      value: cdktf.stringToHclTerraform(struct!.terminationMessagePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    termination_message_policy: {
      value: cdktf.stringToHclTerraform(struct!.terminationMessagePolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tty: {
      value: cdktf.booleanToHclTerraform(struct!.tty),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volume_devices: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeDevicesToHclTerraform, false)(struct!.volumeDevices),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeDevicesList",
    },
    volume_mounts: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeMountsToHclTerraform, false)(struct!.volumeMounts),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeMountsList",
    },
    working_dir: {
      value: cdktf.stringToHclTerraform(struct!.workingDir),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._args !== undefined) {
      hasAnyValues = true;
      internalValueResult.args = this._args;
    }
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._env?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.env = this._env?.internalValue;
    }
    if (this._envFrom?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.envFrom = this._envFrom?.internalValue;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._imagePullPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullPolicy = this._imagePullPolicy;
    }
    if (this._lifecycle?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.lifecycle = this._lifecycle?.internalValue;
    }
    if (this._livenessProbe?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessProbe = this._livenessProbe?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._ports?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ports = this._ports?.internalValue;
    }
    if (this._readinessProbe?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessProbe = this._readinessProbe?.internalValue;
    }
    if (this._resizePolicy?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resizePolicy = this._resizePolicy?.internalValue;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._restartPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.restartPolicy = this._restartPolicy;
    }
    if (this._securityContext?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.securityContext = this._securityContext?.internalValue;
    }
    if (this._startupProbe?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.startupProbe = this._startupProbe?.internalValue;
    }
    if (this._stdin !== undefined) {
      hasAnyValues = true;
      internalValueResult.stdin = this._stdin;
    }
    if (this._stdinOnce !== undefined) {
      hasAnyValues = true;
      internalValueResult.stdinOnce = this._stdinOnce;
    }
    if (this._terminationMessagePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminationMessagePath = this._terminationMessagePath;
    }
    if (this._terminationMessagePolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminationMessagePolicy = this._terminationMessagePolicy;
    }
    if (this._tty !== undefined) {
      hasAnyValues = true;
      internalValueResult.tty = this._tty;
    }
    if (this._volumeDevices?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeDevices = this._volumeDevices?.internalValue;
    }
    if (this._volumeMounts?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMounts = this._volumeMounts?.internalValue;
    }
    if (this._workingDir !== undefined) {
      hasAnyValues = true;
      internalValueResult.workingDir = this._workingDir;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._args = undefined;
      this._command = undefined;
      this._env.internalValue = undefined;
      this._envFrom.internalValue = undefined;
      this._image = undefined;
      this._imagePullPolicy = undefined;
      this._lifecycle.internalValue = undefined;
      this._livenessProbe.internalValue = undefined;
      this._name = undefined;
      this._ports.internalValue = undefined;
      this._readinessProbe.internalValue = undefined;
      this._resizePolicy.internalValue = undefined;
      this._resources.internalValue = undefined;
      this._restartPolicy = undefined;
      this._securityContext.internalValue = undefined;
      this._startupProbe.internalValue = undefined;
      this._stdin = undefined;
      this._stdinOnce = undefined;
      this._terminationMessagePath = undefined;
      this._terminationMessagePolicy = undefined;
      this._tty = undefined;
      this._volumeDevices.internalValue = undefined;
      this._volumeMounts.internalValue = undefined;
      this._workingDir = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._args = value.args;
      this._command = value.command;
      this._env.internalValue = value.env;
      this._envFrom.internalValue = value.envFrom;
      this._image = value.image;
      this._imagePullPolicy = value.imagePullPolicy;
      this._lifecycle.internalValue = value.lifecycle;
      this._livenessProbe.internalValue = value.livenessProbe;
      this._name = value.name;
      this._ports.internalValue = value.ports;
      this._readinessProbe.internalValue = value.readinessProbe;
      this._resizePolicy.internalValue = value.resizePolicy;
      this._resources.internalValue = value.resources;
      this._restartPolicy = value.restartPolicy;
      this._securityContext.internalValue = value.securityContext;
      this._startupProbe.internalValue = value.startupProbe;
      this._stdin = value.stdin;
      this._stdinOnce = value.stdinOnce;
      this._terminationMessagePath = value.terminationMessagePath;
      this._terminationMessagePolicy = value.terminationMessagePolicy;
      this._tty = value.tty;
      this._volumeDevices.internalValue = value.volumeDevices;
      this._volumeMounts.internalValue = value.volumeMounts;
      this._workingDir = value.workingDir;
    }
  }

  // args - computed: false, optional: true, required: false
  private _args?: string[]; 
  public get args() {
    return this.getListAttribute('args');
  }
  public set args(value: string[]) {
    this._args = value;
  }
  public resetArgs() {
    this._args = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get argsInput() {
    return this._args;
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // env - computed: false, optional: true, required: false
  private _env = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvList(this, "env", false);
  public get env() {
    return this._env;
  }
  public putEnv(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnv[] | cdktf.IResolvable) {
    this._env.internalValue = value;
  }
  public resetEnv() {
    this._env.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get envInput() {
    return this._env.internalValue;
  }

  // env_from - computed: false, optional: true, required: false
  private _envFrom = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvFromList(this, "env_from", false);
  public get envFrom() {
    return this._envFrom;
  }
  public putEnvFrom(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersEnvFrom[] | cdktf.IResolvable) {
    this._envFrom.internalValue = value;
  }
  public resetEnvFrom() {
    this._envFrom.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get envFromInput() {
    return this._envFrom.internalValue;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // image_pull_policy - computed: false, optional: true, required: false
  private _imagePullPolicy?: string; 
  public get imagePullPolicy() {
    return this.getStringAttribute('image_pull_policy');
  }
  public set imagePullPolicy(value: string) {
    this._imagePullPolicy = value;
  }
  public resetImagePullPolicy() {
    this._imagePullPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullPolicyInput() {
    return this._imagePullPolicy;
  }

  // lifecycle - computed: false, optional: true, required: false
  private _lifecycle = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLifecycleOutputReference(this, "lifecycle");
  public get lifecycle() {
    return this._lifecycle;
  }
  public putLifecycle(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLifecycle) {
    this._lifecycle.internalValue = value;
  }
  public resetLifecycle() {
    this._lifecycle.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lifecycleInput() {
    return this._lifecycle.internalValue;
  }

  // liveness_probe - computed: false, optional: true, required: false
  private _livenessProbe = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLivenessProbeOutputReference(this, "liveness_probe");
  public get livenessProbe() {
    return this._livenessProbe;
  }
  public putLivenessProbe(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersLivenessProbe) {
    this._livenessProbe.internalValue = value;
  }
  public resetLivenessProbe() {
    this._livenessProbe.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessProbeInput() {
    return this._livenessProbe.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // ports - computed: false, optional: true, required: false
  private _ports = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersPortsList(this, "ports", false);
  public get ports() {
    return this._ports;
  }
  public putPorts(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersPorts[] | cdktf.IResolvable) {
    this._ports.internalValue = value;
  }
  public resetPorts() {
    this._ports.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portsInput() {
    return this._ports.internalValue;
  }

  // readiness_probe - computed: false, optional: true, required: false
  private _readinessProbe = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersReadinessProbeOutputReference(this, "readiness_probe");
  public get readinessProbe() {
    return this._readinessProbe;
  }
  public putReadinessProbe(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersReadinessProbe) {
    this._readinessProbe.internalValue = value;
  }
  public resetReadinessProbe() {
    this._readinessProbe.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessProbeInput() {
    return this._readinessProbe.internalValue;
  }

  // resize_policy - computed: false, optional: true, required: false
  private _resizePolicy = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResizePolicyList(this, "resize_policy", false);
  public get resizePolicy() {
    return this._resizePolicy;
  }
  public putResizePolicy(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResizePolicy[] | cdktf.IResolvable) {
    this._resizePolicy.internalValue = value;
  }
  public resetResizePolicy() {
    this._resizePolicy.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resizePolicyInput() {
    return this._resizePolicy.internalValue;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // restart_policy - computed: false, optional: true, required: false
  private _restartPolicy?: string; 
  public get restartPolicy() {
    return this.getStringAttribute('restart_policy');
  }
  public set restartPolicy(value: string) {
    this._restartPolicy = value;
  }
  public resetRestartPolicy() {
    this._restartPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get restartPolicyInput() {
    return this._restartPolicy;
  }

  // security_context - computed: false, optional: true, required: false
  private _securityContext = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersSecurityContextOutputReference(this, "security_context");
  public get securityContext() {
    return this._securityContext;
  }
  public putSecurityContext(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersSecurityContext) {
    this._securityContext.internalValue = value;
  }
  public resetSecurityContext() {
    this._securityContext.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get securityContextInput() {
    return this._securityContext.internalValue;
  }

  // startup_probe - computed: false, optional: true, required: false
  private _startupProbe = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersStartupProbeOutputReference(this, "startup_probe");
  public get startupProbe() {
    return this._startupProbe;
  }
  public putStartupProbe(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersStartupProbe) {
    this._startupProbe.internalValue = value;
  }
  public resetStartupProbe() {
    this._startupProbe.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startupProbeInput() {
    return this._startupProbe.internalValue;
  }

  // stdin - computed: false, optional: true, required: false
  private _stdin?: boolean | cdktf.IResolvable; 
  public get stdin() {
    return this.getBooleanAttribute('stdin');
  }
  public set stdin(value: boolean | cdktf.IResolvable) {
    this._stdin = value;
  }
  public resetStdin() {
    this._stdin = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stdinInput() {
    return this._stdin;
  }

  // stdin_once - computed: false, optional: true, required: false
  private _stdinOnce?: boolean | cdktf.IResolvable; 
  public get stdinOnce() {
    return this.getBooleanAttribute('stdin_once');
  }
  public set stdinOnce(value: boolean | cdktf.IResolvable) {
    this._stdinOnce = value;
  }
  public resetStdinOnce() {
    this._stdinOnce = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stdinOnceInput() {
    return this._stdinOnce;
  }

  // termination_message_path - computed: false, optional: true, required: false
  private _terminationMessagePath?: string; 
  public get terminationMessagePath() {
    return this.getStringAttribute('termination_message_path');
  }
  public set terminationMessagePath(value: string) {
    this._terminationMessagePath = value;
  }
  public resetTerminationMessagePath() {
    this._terminationMessagePath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminationMessagePathInput() {
    return this._terminationMessagePath;
  }

  // termination_message_policy - computed: false, optional: true, required: false
  private _terminationMessagePolicy?: string; 
  public get terminationMessagePolicy() {
    return this.getStringAttribute('termination_message_policy');
  }
  public set terminationMessagePolicy(value: string) {
    this._terminationMessagePolicy = value;
  }
  public resetTerminationMessagePolicy() {
    this._terminationMessagePolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminationMessagePolicyInput() {
    return this._terminationMessagePolicy;
  }

  // tty - computed: false, optional: true, required: false
  private _tty?: boolean | cdktf.IResolvable; 
  public get tty() {
    return this.getBooleanAttribute('tty');
  }
  public set tty(value: boolean | cdktf.IResolvable) {
    this._tty = value;
  }
  public resetTty() {
    this._tty = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ttyInput() {
    return this._tty;
  }

  // volume_devices - computed: false, optional: true, required: false
  private _volumeDevices = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeDevicesList(this, "volume_devices", false);
  public get volumeDevices() {
    return this._volumeDevices;
  }
  public putVolumeDevices(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeDevices[] | cdktf.IResolvable) {
    this._volumeDevices.internalValue = value;
  }
  public resetVolumeDevices() {
    this._volumeDevices.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeDevicesInput() {
    return this._volumeDevices.internalValue;
  }

  // volume_mounts - computed: false, optional: true, required: false
  private _volumeMounts = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeMountsList(this, "volume_mounts", false);
  public get volumeMounts() {
    return this._volumeMounts;
  }
  public putVolumeMounts(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersVolumeMounts[] | cdktf.IResolvable) {
    this._volumeMounts.internalValue = value;
  }
  public resetVolumeMounts() {
    this._volumeMounts.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeMountsInput() {
    return this._volumeMounts.internalValue;
  }

  // working_dir - computed: false, optional: true, required: false
  private _workingDir?: string; 
  public get workingDir() {
    return this.getStringAttribute('working_dir');
  }
  public set workingDir(value: string) {
    this._workingDir = value;
  }
  public resetWorkingDir() {
    this._workingDir = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get workingDirInput() {
    return this._workingDir;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptions {
  /**
  * Level is SELinux level label that applies to the container.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#level DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#level}
  */
  readonly level?: string;
  /**
  * Role is a SELinux role label that applies to the container.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#role DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#role}
  */
  readonly role?: string;
  /**
  * Type is a SELinux type label that applies to the container.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * User is a SELinux user label that applies to the container.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#user DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptionsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    level: cdktf.stringToTerraform(struct!.level),
    role: cdktf.stringToTerraform(struct!.role),
    type: cdktf.stringToTerraform(struct!.type),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptionsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    level: {
      value: cdktf.stringToHclTerraform(struct!.level),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    role: {
      value: cdktf.stringToHclTerraform(struct!.role),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._level !== undefined) {
      hasAnyValues = true;
      internalValueResult.level = this._level;
    }
    if (this._role !== undefined) {
      hasAnyValues = true;
      internalValueResult.role = this._role;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._level = undefined;
      this._role = undefined;
      this._type = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._level = value.level;
      this._role = value.role;
      this._type = value.type;
      this._user = value.user;
    }
  }

  // level - computed: false, optional: true, required: false
  private _level?: string; 
  public get level() {
    return this.getStringAttribute('level');
  }
  public set level(value: string) {
    this._level = value;
  }
  public resetLevel() {
    this._level = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get levelInput() {
    return this._level;
  }

  // role - computed: false, optional: true, required: false
  private _role?: string; 
  public get role() {
    return this.getStringAttribute('role');
  }
  public set role(value: string) {
    this._role = value;
  }
  public resetRole() {
    this._role = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get roleInput() {
    return this._role;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfile {
  /**
  * localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is 'Localhost'. Must NOT be set for any other type.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#localhost_profile DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#localhost_profile}
  */
  readonly localhostProfile?: string;
  /**
  * type indicates which kind of seccomp profile will be applied. Valid options are: Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#type}
  */
  readonly type: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfileToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    localhost_profile: cdktf.stringToTerraform(struct!.localhostProfile),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfileToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    localhost_profile: {
      value: cdktf.stringToHclTerraform(struct!.localhostProfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._localhostProfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.localhostProfile = this._localhostProfile;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._localhostProfile = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._localhostProfile = value.localhostProfile;
      this._type = value.type;
    }
  }

  // localhost_profile - computed: false, optional: true, required: false
  private _localhostProfile?: string; 
  public get localhostProfile() {
    return this.getStringAttribute('localhost_profile');
  }
  public set localhostProfile(value: string) {
    this._localhostProfile = value;
  }
  public resetLocalhostProfile() {
    this._localhostProfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get localhostProfileInput() {
    return this._localhostProfile;
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctls {
  /**
  * Name of a property to set
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Value of a property to set
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#value DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#value}
  */
  readonly value: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctlsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctls | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctlsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctls | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctlsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctls | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctls | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
      this._value = value.value;
    }
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctlsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctls[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctlsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctlsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptions {
  /**
  * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#gmsa_credential_spec DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#gmsa_credential_spec}
  */
  readonly gmsaCredentialSpec?: string;
  /**
  * GMSACredentialSpecName is the name of the GMSA credential spec to use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#gmsa_credential_spec_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#gmsa_credential_spec_name}
  */
  readonly gmsaCredentialSpecName?: string;
  /**
  * HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#host_process DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#host_process}
  */
  readonly hostProcess?: boolean | cdktf.IResolvable;
  /**
  * The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#run_as_user_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#run_as_user_name}
  */
  readonly runAsUserName?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptionsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    gmsa_credential_spec: cdktf.stringToTerraform(struct!.gmsaCredentialSpec),
    gmsa_credential_spec_name: cdktf.stringToTerraform(struct!.gmsaCredentialSpecName),
    host_process: cdktf.booleanToTerraform(struct!.hostProcess),
    run_as_user_name: cdktf.stringToTerraform(struct!.runAsUserName),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptionsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    gmsa_credential_spec: {
      value: cdktf.stringToHclTerraform(struct!.gmsaCredentialSpec),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gmsa_credential_spec_name: {
      value: cdktf.stringToHclTerraform(struct!.gmsaCredentialSpecName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    host_process: {
      value: cdktf.booleanToHclTerraform(struct!.hostProcess),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user_name: {
      value: cdktf.stringToHclTerraform(struct!.runAsUserName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._gmsaCredentialSpec !== undefined) {
      hasAnyValues = true;
      internalValueResult.gmsaCredentialSpec = this._gmsaCredentialSpec;
    }
    if (this._gmsaCredentialSpecName !== undefined) {
      hasAnyValues = true;
      internalValueResult.gmsaCredentialSpecName = this._gmsaCredentialSpecName;
    }
    if (this._hostProcess !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostProcess = this._hostProcess;
    }
    if (this._runAsUserName !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUserName = this._runAsUserName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._gmsaCredentialSpec = undefined;
      this._gmsaCredentialSpecName = undefined;
      this._hostProcess = undefined;
      this._runAsUserName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._gmsaCredentialSpec = value.gmsaCredentialSpec;
      this._gmsaCredentialSpecName = value.gmsaCredentialSpecName;
      this._hostProcess = value.hostProcess;
      this._runAsUserName = value.runAsUserName;
    }
  }

  // gmsa_credential_spec - computed: false, optional: true, required: false
  private _gmsaCredentialSpec?: string; 
  public get gmsaCredentialSpec() {
    return this.getStringAttribute('gmsa_credential_spec');
  }
  public set gmsaCredentialSpec(value: string) {
    this._gmsaCredentialSpec = value;
  }
  public resetGmsaCredentialSpec() {
    this._gmsaCredentialSpec = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gmsaCredentialSpecInput() {
    return this._gmsaCredentialSpec;
  }

  // gmsa_credential_spec_name - computed: false, optional: true, required: false
  private _gmsaCredentialSpecName?: string; 
  public get gmsaCredentialSpecName() {
    return this.getStringAttribute('gmsa_credential_spec_name');
  }
  public set gmsaCredentialSpecName(value: string) {
    this._gmsaCredentialSpecName = value;
  }
  public resetGmsaCredentialSpecName() {
    this._gmsaCredentialSpecName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gmsaCredentialSpecNameInput() {
    return this._gmsaCredentialSpecName;
  }

  // host_process - computed: false, optional: true, required: false
  private _hostProcess?: boolean | cdktf.IResolvable; 
  public get hostProcess() {
    return this.getBooleanAttribute('host_process');
  }
  public set hostProcess(value: boolean | cdktf.IResolvable) {
    this._hostProcess = value;
  }
  public resetHostProcess() {
    this._hostProcess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostProcessInput() {
    return this._hostProcess;
  }

  // run_as_user_name - computed: false, optional: true, required: false
  private _runAsUserName?: string; 
  public get runAsUserName() {
    return this.getStringAttribute('run_as_user_name');
  }
  public set runAsUserName(value: string) {
    this._runAsUserName = value;
  }
  public resetRunAsUserName() {
    this._runAsUserName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserNameInput() {
    return this._runAsUserName;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContext {
  /**
  * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_group DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_group}
  */
  readonly fsGroup?: number;
  /**
  * fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are 'OnRootMismatch' and 'Always'. If not specified, 'Always' is used. Note that this field cannot be set when spec.os.name is windows.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_group_change_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_group_change_policy}
  */
  readonly fsGroupChangePolicy?: string;
  /**
  * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#run_as_group DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#run_as_group}
  */
  readonly runAsGroup?: number;
  /**
  * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#run_as_non_root DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#run_as_non_root}
  */
  readonly runAsNonRoot?: boolean | cdktf.IResolvable;
  /**
  * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#run_as_user DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#run_as_user}
  */
  readonly runAsUser?: number;
  /**
  * The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#se_linux_options DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#se_linux_options}
  */
  readonly seLinuxOptions?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptions;
  /**
  * The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#seccomp_profile DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#seccomp_profile}
  */
  readonly seccompProfile?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfile;
  /**
  * A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process. If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#supplemental_groups DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#supplemental_groups}
  */
  readonly supplementalGroups?: string[];
  /**
  * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#sysctls DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#sysctls}
  */
  readonly sysctls?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctls[] | cdktf.IResolvable;
  /**
  * The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#windows_options DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#windows_options}
  */
  readonly windowsOptions?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptions;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_group: cdktf.numberToTerraform(struct!.fsGroup),
    fs_group_change_policy: cdktf.stringToTerraform(struct!.fsGroupChangePolicy),
    run_as_group: cdktf.numberToTerraform(struct!.runAsGroup),
    run_as_non_root: cdktf.booleanToTerraform(struct!.runAsNonRoot),
    run_as_user: cdktf.numberToTerraform(struct!.runAsUser),
    se_linux_options: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptionsToTerraform(struct!.seLinuxOptions),
    seccomp_profile: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfileToTerraform(struct!.seccompProfile),
    supplemental_groups: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.supplementalGroups),
    sysctls: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctlsToTerraform, false)(struct!.sysctls),
    windows_options: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptionsToTerraform(struct!.windowsOptions),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_group: {
      value: cdktf.numberToHclTerraform(struct!.fsGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    fs_group_change_policy: {
      value: cdktf.stringToHclTerraform(struct!.fsGroupChangePolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    run_as_group: {
      value: cdktf.numberToHclTerraform(struct!.runAsGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    run_as_non_root: {
      value: cdktf.booleanToHclTerraform(struct!.runAsNonRoot),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user: {
      value: cdktf.numberToHclTerraform(struct!.runAsUser),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    se_linux_options: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptionsToHclTerraform(struct!.seLinuxOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptions",
    },
    seccomp_profile: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfileToHclTerraform(struct!.seccompProfile),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfile",
    },
    supplemental_groups: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.supplementalGroups),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    sysctls: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctlsToHclTerraform, false)(struct!.sysctls),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctlsList",
    },
    windows_options: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptionsToHclTerraform(struct!.windowsOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptions",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContext | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsGroup = this._fsGroup;
    }
    if (this._fsGroupChangePolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsGroupChangePolicy = this._fsGroupChangePolicy;
    }
    if (this._runAsGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsGroup = this._runAsGroup;
    }
    if (this._runAsNonRoot !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsNonRoot = this._runAsNonRoot;
    }
    if (this._runAsUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUser = this._runAsUser;
    }
    if (this._seLinuxOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seLinuxOptions = this._seLinuxOptions?.internalValue;
    }
    if (this._seccompProfile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.seccompProfile = this._seccompProfile?.internalValue;
    }
    if (this._supplementalGroups !== undefined) {
      hasAnyValues = true;
      internalValueResult.supplementalGroups = this._supplementalGroups;
    }
    if (this._sysctls?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sysctls = this._sysctls?.internalValue;
    }
    if (this._windowsOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.windowsOptions = this._windowsOptions?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContext | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsGroup = undefined;
      this._fsGroupChangePolicy = undefined;
      this._runAsGroup = undefined;
      this._runAsNonRoot = undefined;
      this._runAsUser = undefined;
      this._seLinuxOptions.internalValue = undefined;
      this._seccompProfile.internalValue = undefined;
      this._supplementalGroups = undefined;
      this._sysctls.internalValue = undefined;
      this._windowsOptions.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsGroup = value.fsGroup;
      this._fsGroupChangePolicy = value.fsGroupChangePolicy;
      this._runAsGroup = value.runAsGroup;
      this._runAsNonRoot = value.runAsNonRoot;
      this._runAsUser = value.runAsUser;
      this._seLinuxOptions.internalValue = value.seLinuxOptions;
      this._seccompProfile.internalValue = value.seccompProfile;
      this._supplementalGroups = value.supplementalGroups;
      this._sysctls.internalValue = value.sysctls;
      this._windowsOptions.internalValue = value.windowsOptions;
    }
  }

  // fs_group - computed: false, optional: true, required: false
  private _fsGroup?: number; 
  public get fsGroup() {
    return this.getNumberAttribute('fs_group');
  }
  public set fsGroup(value: number) {
    this._fsGroup = value;
  }
  public resetFsGroup() {
    this._fsGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsGroupInput() {
    return this._fsGroup;
  }

  // fs_group_change_policy - computed: false, optional: true, required: false
  private _fsGroupChangePolicy?: string; 
  public get fsGroupChangePolicy() {
    return this.getStringAttribute('fs_group_change_policy');
  }
  public set fsGroupChangePolicy(value: string) {
    this._fsGroupChangePolicy = value;
  }
  public resetFsGroupChangePolicy() {
    this._fsGroupChangePolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsGroupChangePolicyInput() {
    return this._fsGroupChangePolicy;
  }

  // run_as_group - computed: false, optional: true, required: false
  private _runAsGroup?: number; 
  public get runAsGroup() {
    return this.getNumberAttribute('run_as_group');
  }
  public set runAsGroup(value: number) {
    this._runAsGroup = value;
  }
  public resetRunAsGroup() {
    this._runAsGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsGroupInput() {
    return this._runAsGroup;
  }

  // run_as_non_root - computed: false, optional: true, required: false
  private _runAsNonRoot?: boolean | cdktf.IResolvable; 
  public get runAsNonRoot() {
    return this.getBooleanAttribute('run_as_non_root');
  }
  public set runAsNonRoot(value: boolean | cdktf.IResolvable) {
    this._runAsNonRoot = value;
  }
  public resetRunAsNonRoot() {
    this._runAsNonRoot = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsNonRootInput() {
    return this._runAsNonRoot;
  }

  // run_as_user - computed: false, optional: true, required: false
  private _runAsUser?: number; 
  public get runAsUser() {
    return this.getNumberAttribute('run_as_user');
  }
  public set runAsUser(value: number) {
    this._runAsUser = value;
  }
  public resetRunAsUser() {
    this._runAsUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserInput() {
    return this._runAsUser;
  }

  // se_linux_options - computed: false, optional: true, required: false
  private _seLinuxOptions = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptionsOutputReference(this, "se_linux_options");
  public get seLinuxOptions() {
    return this._seLinuxOptions;
  }
  public putSeLinuxOptions(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeLinuxOptions) {
    this._seLinuxOptions.internalValue = value;
  }
  public resetSeLinuxOptions() {
    this._seLinuxOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seLinuxOptionsInput() {
    return this._seLinuxOptions.internalValue;
  }

  // seccomp_profile - computed: false, optional: true, required: false
  private _seccompProfile = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfileOutputReference(this, "seccomp_profile");
  public get seccompProfile() {
    return this._seccompProfile;
  }
  public putSeccompProfile(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSeccompProfile) {
    this._seccompProfile.internalValue = value;
  }
  public resetSeccompProfile() {
    this._seccompProfile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seccompProfileInput() {
    return this._seccompProfile.internalValue;
  }

  // supplemental_groups - computed: false, optional: true, required: false
  private _supplementalGroups?: string[]; 
  public get supplementalGroups() {
    return this.getListAttribute('supplemental_groups');
  }
  public set supplementalGroups(value: string[]) {
    this._supplementalGroups = value;
  }
  public resetSupplementalGroups() {
    this._supplementalGroups = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get supplementalGroupsInput() {
    return this._supplementalGroups;
  }

  // sysctls - computed: false, optional: true, required: false
  private _sysctls = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctlsList(this, "sysctls", false);
  public get sysctls() {
    return this._sysctls;
  }
  public putSysctls(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextSysctls[] | cdktf.IResolvable) {
    this._sysctls.internalValue = value;
  }
  public resetSysctls() {
    this._sysctls.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sysctlsInput() {
    return this._sysctls.internalValue;
  }

  // windows_options - computed: false, optional: true, required: false
  private _windowsOptions = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptionsOutputReference(this, "windows_options");
  public get windowsOptions() {
    return this._windowsOptions;
  }
  public putWindowsOptions(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextWindowsOptions) {
    this._windowsOptions.internalValue = value;
  }
  public resetWindowsOptions() {
    this._windowsOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get windowsOptionsInput() {
    return this._windowsOptions.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#key DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#operator DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#values DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#match_expressions DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#match_labels DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraints {
  /**
  * LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#label_selector DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelector;
  /**
  * MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector. This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#match_label_keys DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#match_label_keys}
  */
  readonly matchLabelKeys?: string[];
  /**
  * MaxSkew describes the degree to which pods may be unevenly distributed. When 'whenUnsatisfiable=DoNotSchedule', it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | | P P | P P | P | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When 'whenUnsatisfiable=ScheduleAnyway', it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_skew DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_skew}
  */
  readonly maxSkew: number;
  /**
  * MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats 'global minimum' as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule. For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | | P P | P P | P P | The number of domains is less than 5(MinDomains), so 'global minimum' is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew. This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_domains DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_domains}
  */
  readonly minDomains?: number;
  /**
  * NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations. If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#node_affinity_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#node_affinity_policy}
  */
  readonly nodeAffinityPolicy?: string;
  /**
  * NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included. If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#node_taints_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#node_taints_policy}
  */
  readonly nodeTaintsPolicy?: string;
  /**
  * TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a 'bucket', and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is 'kubernetes.io/hostname', each Node is a domain of that topology. And, if TopologyKey is 'topology.kubernetes.io/zone', each zone is a domain of that topology. It's a required field.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#topology_key DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#topology_key}
  */
  readonly topologyKey: string;
  /**
  * WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location, but giving higher precedence to topologies that would help reduce the skew. A constraint is considered 'Unsatisfiable' for an incoming pod if and only if every possible node assignment for that pod would violate 'MaxSkew' on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P | P | P | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#when_unsatisfiable DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#when_unsatisfiable}
  */
  readonly whenUnsatisfiable: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraints | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorToTerraform(struct!.labelSelector),
    match_label_keys: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.matchLabelKeys),
    max_skew: cdktf.numberToTerraform(struct!.maxSkew),
    min_domains: cdktf.numberToTerraform(struct!.minDomains),
    node_affinity_policy: cdktf.stringToTerraform(struct!.nodeAffinityPolicy),
    node_taints_policy: cdktf.stringToTerraform(struct!.nodeTaintsPolicy),
    topology_key: cdktf.stringToTerraform(struct!.topologyKey),
    when_unsatisfiable: cdktf.stringToTerraform(struct!.whenUnsatisfiable),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraints | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelector",
    },
    match_label_keys: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.matchLabelKeys),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    max_skew: {
      value: cdktf.numberToHclTerraform(struct!.maxSkew),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    min_domains: {
      value: cdktf.numberToHclTerraform(struct!.minDomains),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    node_affinity_policy: {
      value: cdktf.stringToHclTerraform(struct!.nodeAffinityPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_taints_policy: {
      value: cdktf.stringToHclTerraform(struct!.nodeTaintsPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topology_key: {
      value: cdktf.stringToHclTerraform(struct!.topologyKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    when_unsatisfiable: {
      value: cdktf.stringToHclTerraform(struct!.whenUnsatisfiable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraints | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._matchLabelKeys !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabelKeys = this._matchLabelKeys;
    }
    if (this._maxSkew !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxSkew = this._maxSkew;
    }
    if (this._minDomains !== undefined) {
      hasAnyValues = true;
      internalValueResult.minDomains = this._minDomains;
    }
    if (this._nodeAffinityPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeAffinityPolicy = this._nodeAffinityPolicy;
    }
    if (this._nodeTaintsPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeTaintsPolicy = this._nodeTaintsPolicy;
    }
    if (this._topologyKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyKey = this._topologyKey;
    }
    if (this._whenUnsatisfiable !== undefined) {
      hasAnyValues = true;
      internalValueResult.whenUnsatisfiable = this._whenUnsatisfiable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraints | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._matchLabelKeys = undefined;
      this._maxSkew = undefined;
      this._minDomains = undefined;
      this._nodeAffinityPolicy = undefined;
      this._nodeTaintsPolicy = undefined;
      this._topologyKey = undefined;
      this._whenUnsatisfiable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._matchLabelKeys = value.matchLabelKeys;
      this._maxSkew = value.maxSkew;
      this._minDomains = value.minDomains;
      this._nodeAffinityPolicy = value.nodeAffinityPolicy;
      this._nodeTaintsPolicy = value.nodeTaintsPolicy;
      this._topologyKey = value.topologyKey;
      this._whenUnsatisfiable = value.whenUnsatisfiable;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // match_label_keys - computed: false, optional: true, required: false
  private _matchLabelKeys?: string[]; 
  public get matchLabelKeys() {
    return this.getListAttribute('match_label_keys');
  }
  public set matchLabelKeys(value: string[]) {
    this._matchLabelKeys = value;
  }
  public resetMatchLabelKeys() {
    this._matchLabelKeys = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelKeysInput() {
    return this._matchLabelKeys;
  }

  // max_skew - computed: false, optional: false, required: true
  private _maxSkew?: number; 
  public get maxSkew() {
    return this.getNumberAttribute('max_skew');
  }
  public set maxSkew(value: number) {
    this._maxSkew = value;
  }
  // Temporarily expose input value. Use with caution.
  public get maxSkewInput() {
    return this._maxSkew;
  }

  // min_domains - computed: false, optional: true, required: false
  private _minDomains?: number; 
  public get minDomains() {
    return this.getNumberAttribute('min_domains');
  }
  public set minDomains(value: number) {
    this._minDomains = value;
  }
  public resetMinDomains() {
    this._minDomains = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minDomainsInput() {
    return this._minDomains;
  }

  // node_affinity_policy - computed: false, optional: true, required: false
  private _nodeAffinityPolicy?: string; 
  public get nodeAffinityPolicy() {
    return this.getStringAttribute('node_affinity_policy');
  }
  public set nodeAffinityPolicy(value: string) {
    this._nodeAffinityPolicy = value;
  }
  public resetNodeAffinityPolicy() {
    this._nodeAffinityPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeAffinityPolicyInput() {
    return this._nodeAffinityPolicy;
  }

  // node_taints_policy - computed: false, optional: true, required: false
  private _nodeTaintsPolicy?: string; 
  public get nodeTaintsPolicy() {
    return this.getStringAttribute('node_taints_policy');
  }
  public set nodeTaintsPolicy(value: string) {
    this._nodeTaintsPolicy = value;
  }
  public resetNodeTaintsPolicy() {
    this._nodeTaintsPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeTaintsPolicyInput() {
    return this._nodeTaintsPolicy;
  }

  // topology_key - computed: false, optional: false, required: true
  private _topologyKey?: string; 
  public get topologyKey() {
    return this.getStringAttribute('topology_key');
  }
  public set topologyKey(value: string) {
    this._topologyKey = value;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyKeyInput() {
    return this._topologyKey;
  }

  // when_unsatisfiable - computed: false, optional: false, required: true
  private _whenUnsatisfiable?: string; 
  public get whenUnsatisfiable() {
    return this.getStringAttribute('when_unsatisfiable');
  }
  public set whenUnsatisfiable(value: string) {
    this._whenUnsatisfiable = value;
  }
  // Temporarily expose input value. Use with caution.
  public get whenUnsatisfiableInput() {
    return this._whenUnsatisfiable;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraints[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStore {
  /**
  * fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: 'ext4', 'xfs', 'ntfs'. Implicitly inferred to be 'ext4' if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as '1'. Similarly, the volume partition for /dev/sda is '0' (or you can leave the property empty).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#partition DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#partition}
  */
  readonly partition?: number;
  /**
  * readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_id DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_id}
  */
  readonly volumeId: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStoreToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStore | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    partition: cdktf.numberToTerraform(struct!.partition),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    volume_id: cdktf.stringToTerraform(struct!.volumeId),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStoreToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStore | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition: {
      value: cdktf.numberToHclTerraform(struct!.partition),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volume_id: {
      value: cdktf.stringToHclTerraform(struct!.volumeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStoreOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStore | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._partition !== undefined) {
      hasAnyValues = true;
      internalValueResult.partition = this._partition;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._volumeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeId = this._volumeId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStore | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._partition = undefined;
      this._readOnly = undefined;
      this._volumeId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._partition = value.partition;
      this._readOnly = value.readOnly;
      this._volumeId = value.volumeId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // partition - computed: false, optional: true, required: false
  private _partition?: number; 
  public get partition() {
    return this.getNumberAttribute('partition');
  }
  public set partition(value: number) {
    this._partition = value;
  }
  public resetPartition() {
    this._partition = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionInput() {
    return this._partition;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // volume_id - computed: false, optional: false, required: true
  private _volumeId?: string; 
  public get volumeId() {
    return this.getStringAttribute('volume_id');
  }
  public set volumeId(value: string) {
    this._volumeId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeIdInput() {
    return this._volumeId;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDisk {
  /**
  * cachingMode is the Host Caching mode: None, Read Only, Read Write.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#caching_mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#caching_mode}
  */
  readonly cachingMode?: string;
  /**
  * diskName is the Name of the data disk in the blob storage
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#disk_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#disk_name}
  */
  readonly diskName: string;
  /**
  * diskURI is the URI of data disk in the blob storage
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#disk_uri DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#disk_uri}
  */
  readonly diskUri: string;
  /**
  * fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. 'ext4', 'xfs', 'ntfs'. Implicitly inferred to be 'ext4' if unspecified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * kind expected values are Shared: multiple blob disks per storage account Dedicated: single blob disk per storage account Managed: azure managed data disk (only in managed availability set). defaults to shared
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#kind DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDiskToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    caching_mode: cdktf.stringToTerraform(struct!.cachingMode),
    disk_name: cdktf.stringToTerraform(struct!.diskName),
    disk_uri: cdktf.stringToTerraform(struct!.diskUri),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    kind: cdktf.stringToTerraform(struct!.kind),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDiskToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    caching_mode: {
      value: cdktf.stringToHclTerraform(struct!.cachingMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disk_name: {
      value: cdktf.stringToHclTerraform(struct!.diskName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disk_uri: {
      value: cdktf.stringToHclTerraform(struct!.diskUri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cachingMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.cachingMode = this._cachingMode;
    }
    if (this._diskName !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskName = this._diskName;
    }
    if (this._diskUri !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskUri = this._diskUri;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cachingMode = undefined;
      this._diskName = undefined;
      this._diskUri = undefined;
      this._fsType = undefined;
      this._kind = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cachingMode = value.cachingMode;
      this._diskName = value.diskName;
      this._diskUri = value.diskUri;
      this._fsType = value.fsType;
      this._kind = value.kind;
      this._readOnly = value.readOnly;
    }
  }

  // caching_mode - computed: false, optional: true, required: false
  private _cachingMode?: string; 
  public get cachingMode() {
    return this.getStringAttribute('caching_mode');
  }
  public set cachingMode(value: string) {
    this._cachingMode = value;
  }
  public resetCachingMode() {
    this._cachingMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cachingModeInput() {
    return this._cachingMode;
  }

  // disk_name - computed: false, optional: false, required: true
  private _diskName?: string; 
  public get diskName() {
    return this.getStringAttribute('disk_name');
  }
  public set diskName(value: string) {
    this._diskName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get diskNameInput() {
    return this._diskName;
  }

  // disk_uri - computed: false, optional: false, required: true
  private _diskUri?: string; 
  public get diskUri() {
    return this.getStringAttribute('disk_uri');
  }
  public set diskUri(value: string) {
    this._diskUri = value;
  }
  // Temporarily expose input value. Use with caution.
  public get diskUriInput() {
    return this._diskUri;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFile {
  /**
  * readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * secretName is the name of secret that contains Azure Storage Account Name and Key
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret_name}
  */
  readonly secretName: string;
  /**
  * shareName is the azure share Name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#share_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#share_name}
  */
  readonly shareName: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFileToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
    share_name: cdktf.stringToTerraform(struct!.shareName),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFileToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFile | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    share_name: {
      value: cdktf.stringToHclTerraform(struct!.shareName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFileOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFile | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    if (this._shareName !== undefined) {
      hasAnyValues = true;
      internalValueResult.shareName = this._shareName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFile | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._readOnly = undefined;
      this._secretName = undefined;
      this._shareName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._readOnly = value.readOnly;
      this._secretName = value.secretName;
      this._shareName = value.shareName;
    }
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_name - computed: false, optional: false, required: true
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }

  // share_name - computed: false, optional: false, required: true
  private _shareName?: string; 
  public get shareName() {
    return this.getStringAttribute('share_name');
  }
  public set shareName(value: string) {
    this._shareName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get shareNameInput() {
    return this._shareName;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRef {
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfs {
  /**
  * monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#monitors DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#monitors}
  */
  readonly monitors: string[];
  /**
  * path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret_file DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret_file}
  */
  readonly secretFile?: string;
  /**
  * secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRef;
  /**
  * user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#user DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    monitors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitors),
    path: cdktf.stringToTerraform(struct!.path),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_file: cdktf.stringToTerraform(struct!.secretFile),
    secret_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRefToTerraform(struct!.secretRef),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    monitors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_file: {
      value: cdktf.stringToHclTerraform(struct!.secretFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRef",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._monitors !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitors = this._monitors;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretFile = this._secretFile;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._monitors = undefined;
      this._path = undefined;
      this._readOnly = undefined;
      this._secretFile = undefined;
      this._secretRef.internalValue = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._monitors = value.monitors;
      this._path = value.path;
      this._readOnly = value.readOnly;
      this._secretFile = value.secretFile;
      this._secretRef.internalValue = value.secretRef;
      this._user = value.user;
    }
  }

  // monitors - computed: false, optional: false, required: true
  private _monitors?: string[]; 
  public get monitors() {
    return this.getListAttribute('monitors');
  }
  public set monitors(value: string[]) {
    this._monitors = value;
  }
  // Temporarily expose input value. Use with caution.
  public get monitorsInput() {
    return this._monitors;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_file - computed: false, optional: true, required: false
  private _secretFile?: string; 
  public get secretFile() {
    return this.getStringAttribute('secret_file');
  }
  public set secretFile(value: string) {
    this._secretFile = value;
  }
  public resetSecretFile() {
    this._secretFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretFileInput() {
    return this._secretFile;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRef {
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinder {
  /**
  * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: 'ext4', 'xfs', 'ntfs'. Implicitly inferred to be 'ext4' if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRef;
  /**
  * volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_id DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_id}
  */
  readonly volumeId: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRefToTerraform(struct!.secretRef),
    volume_id: cdktf.stringToTerraform(struct!.volumeId),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRef",
    },
    volume_id: {
      value: cdktf.stringToHclTerraform(struct!.volumeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinder | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._volumeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeId = this._volumeId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinder | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._volumeId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._volumeId = value.volumeId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // volume_id - computed: false, optional: false, required: true
  private _volumeId?: string; 
  public get volumeId() {
    return this.getStringAttribute('volume_id');
  }
  public set volumeId(value: string) {
    this._volumeId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeIdInput() {
    return this._volumeId;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItems {
  /**
  * key is the key to project.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#key DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItemsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItemsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: false, required: true
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItemsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMap {
  /**
  * defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#default_mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItems[] | cdktf.IResolvable;
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * optional specify whether the ConfigMap or its keys must be defined
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#optional DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    items: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItemsToTerraform, false)(struct!.items),
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    items: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItemsList",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMap | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMap | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._items.internalValue = undefined;
      this._name = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._items.internalValue = value.items;
      this._name = value.name;
      this._optional = value.optional;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRef {
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsi {
  /**
  * driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#driver DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#driver}
  */
  readonly driver: string;
  /**
  * fsType to mount. Ex. 'ext4', 'xfs', 'ntfs'. If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#node_publish_secret_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#node_publish_secret_ref}
  */
  readonly nodePublishSecretRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRef;
  /**
  * readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_attributes DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_attributes}
  */
  readonly volumeAttributes?: { [key: string]: string };
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    driver: cdktf.stringToTerraform(struct!.driver),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    node_publish_secret_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRefToTerraform(struct!.nodePublishSecretRef),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    volume_attributes: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.volumeAttributes),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    driver: {
      value: cdktf.stringToHclTerraform(struct!.driver),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_publish_secret_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRefToHclTerraform(struct!.nodePublishSecretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRef",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volume_attributes: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.volumeAttributes),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._driver !== undefined) {
      hasAnyValues = true;
      internalValueResult.driver = this._driver;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._nodePublishSecretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodePublishSecretRef = this._nodePublishSecretRef?.internalValue;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._volumeAttributes !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeAttributes = this._volumeAttributes;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._driver = undefined;
      this._fsType = undefined;
      this._nodePublishSecretRef.internalValue = undefined;
      this._readOnly = undefined;
      this._volumeAttributes = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._driver = value.driver;
      this._fsType = value.fsType;
      this._nodePublishSecretRef.internalValue = value.nodePublishSecretRef;
      this._readOnly = value.readOnly;
      this._volumeAttributes = value.volumeAttributes;
    }
  }

  // driver - computed: false, optional: false, required: true
  private _driver?: string; 
  public get driver() {
    return this.getStringAttribute('driver');
  }
  public set driver(value: string) {
    this._driver = value;
  }
  // Temporarily expose input value. Use with caution.
  public get driverInput() {
    return this._driver;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // node_publish_secret_ref - computed: false, optional: true, required: false
  private _nodePublishSecretRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRefOutputReference(this, "node_publish_secret_ref");
  public get nodePublishSecretRef() {
    return this._nodePublishSecretRef;
  }
  public putNodePublishSecretRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiNodePublishSecretRef) {
    this._nodePublishSecretRef.internalValue = value;
  }
  public resetNodePublishSecretRef() {
    this._nodePublishSecretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodePublishSecretRefInput() {
    return this._nodePublishSecretRef.internalValue;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // volume_attributes - computed: false, optional: true, required: false
  private _volumeAttributes?: { [key: string]: string }; 
  public get volumeAttributes() {
    return this.getStringMapAttribute('volume_attributes');
  }
  public set volumeAttributes(value: { [key: string]: string }) {
    this._volumeAttributes = value;
  }
  public resetVolumeAttributes() {
    this._volumeAttributes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeAttributesInput() {
    return this._volumeAttributes;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRef {
  /**
  * Version of the schema the FieldPath is written in terms of, defaults to 'v1'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#api_version DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Path of the field to select in the specified API version.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#field_path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#field_path}
  */
  readonly fieldPath: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: false, required: true
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRef {
  /**
  * Container name: required for volumes, optional for env vars
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#container_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#container_name}
  */
  readonly containerName?: string;
  /**
  * Specifies the output format of the exposed resources, defaults to '1'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#divisor DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#divisor}
  */
  readonly divisor?: string;
  /**
  * Required: resource to select
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#resource DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#resource}
  */
  readonly resource: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_name: cdktf.stringToTerraform(struct!.containerName),
    divisor: cdktf.stringToTerraform(struct!.divisor),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_name: {
      value: cdktf.stringToHclTerraform(struct!.containerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    divisor: {
      value: cdktf.stringToHclTerraform(struct!.divisor),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerName = this._containerName;
    }
    if (this._divisor !== undefined) {
      hasAnyValues = true;
      internalValueResult.divisor = this._divisor;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerName = undefined;
      this._divisor = undefined;
      this._resource = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerName = value.containerName;
      this._divisor = value.divisor;
      this._resource = value.resource;
    }
  }

  // container_name - computed: false, optional: true, required: false
  private _containerName?: string; 
  public get containerName() {
    return this.getStringAttribute('container_name');
  }
  public set containerName(value: string) {
    this._containerName = value;
  }
  public resetContainerName() {
    this._containerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNameInput() {
    return this._containerName;
  }

  // divisor - computed: false, optional: true, required: false
  private _divisor?: string; 
  public get divisor() {
    return this.getStringAttribute('divisor');
  }
  public set divisor(value: string) {
    this._divisor = value;
  }
  public resetDivisor() {
    this._divisor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get divisorInput() {
    return this._divisor;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItems {
  /**
  * Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#field_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#field_ref}
  */
  readonly fieldRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRef;
  /**
  * Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Required: Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path: string;
  /**
  * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#resource_field_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#resource_field_ref}
  */
  readonly resourceFieldRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRef;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    field_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRefToTerraform(struct!.fieldRef),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
    resource_field_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRefToTerraform(struct!.resourceFieldRef),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    field_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRefToHclTerraform(struct!.fieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRef",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_field_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRefToHclTerraform(struct!.resourceFieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldRef = this._fieldRef?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._resourceFieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceFieldRef = this._resourceFieldRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = undefined;
      this._mode = undefined;
      this._path = undefined;
      this._resourceFieldRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = value.fieldRef;
      this._mode = value.mode;
      this._path = value.path;
      this._resourceFieldRef.internalValue = value.resourceFieldRef;
    }
  }

  // field_ref - computed: false, optional: true, required: false
  private _fieldRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRefOutputReference(this, "field_ref");
  public get fieldRef() {
    return this._fieldRef;
  }
  public putFieldRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsFieldRef) {
    this._fieldRef.internalValue = value;
  }
  public resetFieldRef() {
    this._fieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldRefInput() {
    return this._fieldRef.internalValue;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: false, required: true
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // resource_field_ref - computed: false, optional: true, required: false
  private _resourceFieldRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutputReference(this, "resource_field_ref");
  public get resourceFieldRef() {
    return this._resourceFieldRef;
  }
  public putResourceFieldRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsResourceFieldRef) {
    this._resourceFieldRef.internalValue = value;
  }
  public resetResourceFieldRef() {
    this._resourceFieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceFieldRefInput() {
    return this._resourceFieldRef.internalValue;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApi {
  /**
  * Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#default_mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * Items is a list of downward API volume file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItems[] | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    items: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsToTerraform, false)(struct!.items),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    items: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._items.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._items.internalValue = value.items;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDir {
  /**
  * medium represents what type of storage medium should back this directory. The default is '' which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#medium DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#medium}
  */
  readonly medium?: string;
  /**
  * sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#size_limit DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#size_limit}
  */
  readonly sizeLimit?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDirToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDir | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    medium: cdktf.stringToTerraform(struct!.medium),
    size_limit: cdktf.stringToTerraform(struct!.sizeLimit),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDirToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDir | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    medium: {
      value: cdktf.stringToHclTerraform(struct!.medium),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    size_limit: {
      value: cdktf.stringToHclTerraform(struct!.sizeLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDirOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDir | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._medium !== undefined) {
      hasAnyValues = true;
      internalValueResult.medium = this._medium;
    }
    if (this._sizeLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.sizeLimit = this._sizeLimit;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDir | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._medium = undefined;
      this._sizeLimit = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._medium = value.medium;
      this._sizeLimit = value.sizeLimit;
    }
  }

  // medium - computed: false, optional: true, required: false
  private _medium?: string; 
  public get medium() {
    return this.getStringAttribute('medium');
  }
  public set medium(value: string) {
    this._medium = value;
  }
  public resetMedium() {
    this._medium = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mediumInput() {
    return this._medium;
  }

  // size_limit - computed: false, optional: true, required: false
  private _sizeLimit?: string; 
  public get sizeLimit() {
    return this.getStringAttribute('size_limit');
  }
  public set sizeLimit(value: string) {
    this._sizeLimit = value;
  }
  public resetSizeLimit() {
    this._sizeLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeLimitInput() {
    return this._sizeLimit;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
  /**
  * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#api_group DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#api_group}
  */
  readonly apiGroup?: string;
  /**
  * Kind is the type of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#kind DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#kind}
  */
  readonly kind: string;
  /**
  * Name is the name of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_group: cdktf.stringToTerraform(struct!.apiGroup),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_group: {
      value: cdktf.stringToHclTerraform(struct!.apiGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiGroup = this._apiGroup;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiGroup = undefined;
      this._kind = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiGroup = value.apiGroup;
      this._kind = value.kind;
      this._name = value.name;
    }
  }

  // api_group - computed: false, optional: true, required: false
  private _apiGroup?: string; 
  public get apiGroup() {
    return this.getStringAttribute('api_group');
  }
  public set apiGroup(value: string) {
    this._apiGroup = value;
  }
  public resetApiGroup() {
    this._apiGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiGroupInput() {
    return this._apiGroup;
  }

  // kind - computed: false, optional: false, required: true
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
  /**
  * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#api_group DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#api_group}
  */
  readonly apiGroup?: string;
  /**
  * Kind is the type of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#kind DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#kind}
  */
  readonly kind: string;
  /**
  * Name is the name of resource being referenced
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#namespace DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#namespace}
  */
  readonly namespace?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_group: cdktf.stringToTerraform(struct!.apiGroup),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_group: {
      value: cdktf.stringToHclTerraform(struct!.apiGroup),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiGroup !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiGroup = this._apiGroup;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiGroup = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiGroup = value.apiGroup;
      this._kind = value.kind;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // api_group - computed: false, optional: true, required: false
  private _apiGroup?: string; 
  public get apiGroup() {
    return this.getStringAttribute('api_group');
  }
  public set apiGroup(value: string) {
    this._apiGroup = value;
  }
  public resetApiGroup() {
    this._apiGroup = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiGroupInput() {
    return this._apiGroup;
  }

  // kind - computed: false, optional: false, required: true
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
  /**
  * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#limits DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#limits}
  */
  readonly limits?: { [key: string]: string };
  /**
  * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#requests DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#requests}
  */
  readonly requests?: { [key: string]: string };
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    limits: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.limits),
    requests: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requests),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    limits: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.limits),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    requests: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requests),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._limits !== undefined) {
      hasAnyValues = true;
      internalValueResult.limits = this._limits;
    }
    if (this._requests !== undefined) {
      hasAnyValues = true;
      internalValueResult.requests = this._requests;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._limits = undefined;
      this._requests = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._limits = value.limits;
      this._requests = value.requests;
    }
  }

  // limits - computed: false, optional: true, required: false
  private _limits?: { [key: string]: string }; 
  public get limits() {
    return this.getStringMapAttribute('limits');
  }
  public set limits(value: { [key: string]: string }) {
    this._limits = value;
  }
  public resetLimits() {
    this._limits = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitsInput() {
    return this._limits;
  }

  // requests - computed: false, optional: true, required: false
  private _requests?: { [key: string]: string }; 
  public get requests() {
    return this.getStringMapAttribute('requests');
  }
  public set requests(value: { [key: string]: string }) {
    this._requests = value;
  }
  public resetRequests() {
    this._requests = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestsInput() {
    return this._requests;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#key DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#operator DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#values DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#match_expressions DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#match_labels DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec {
  /**
  * accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#access_modes DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#access_modes}
  */
  readonly accessModes?: string[];
  /**
  * dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#data_source DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#data_source}
  */
  readonly dataSource?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource;
  /**
  * dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef preserves all values, and generates an error if a disallowed value is specified. * While dataSource only allows local objects, dataSourceRef allows objects in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#data_source_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#data_source_ref}
  */
  readonly dataSourceRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef;
  /**
  * resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#resources DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#resources}
  */
  readonly resources?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources;
  /**
  * selector is a label query over volumes to consider for binding.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#selector DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#selector}
  */
  readonly selector?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector;
  /**
  * storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#storage_class_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#storage_class_name}
  */
  readonly storageClassName?: string;
  /**
  * volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_attributes_class_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_attributes_class_name}
  */
  readonly volumeAttributesClassName?: string;
  /**
  * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_mode}
  */
  readonly volumeMode?: string;
  /**
  * volumeName is the binding reference to the PersistentVolume backing this claim.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_name}
  */
  readonly volumeName?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    access_modes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.accessModes),
    data_source: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceToTerraform(struct!.dataSource),
    data_source_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefToTerraform(struct!.dataSourceRef),
    resources: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesToTerraform(struct!.resources),
    selector: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorToTerraform(struct!.selector),
    storage_class_name: cdktf.stringToTerraform(struct!.storageClassName),
    volume_attributes_class_name: cdktf.stringToTerraform(struct!.volumeAttributesClassName),
    volume_mode: cdktf.stringToTerraform(struct!.volumeMode),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    access_modes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.accessModes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    data_source: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceToHclTerraform(struct!.dataSource),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource",
    },
    data_source_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefToHclTerraform(struct!.dataSourceRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef",
    },
    resources: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesToHclTerraform(struct!.resources),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources",
    },
    selector: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector",
    },
    storage_class_name: {
      value: cdktf.stringToHclTerraform(struct!.storageClassName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_attributes_class_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeAttributesClassName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_mode: {
      value: cdktf.stringToHclTerraform(struct!.volumeMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._accessModes !== undefined) {
      hasAnyValues = true;
      internalValueResult.accessModes = this._accessModes;
    }
    if (this._dataSource?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSource = this._dataSource?.internalValue;
    }
    if (this._dataSourceRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSourceRef = this._dataSourceRef?.internalValue;
    }
    if (this._resources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources?.internalValue;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._storageClassName !== undefined) {
      hasAnyValues = true;
      internalValueResult.storageClassName = this._storageClassName;
    }
    if (this._volumeAttributesClassName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeAttributesClassName = this._volumeAttributesClassName;
    }
    if (this._volumeMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeMode = this._volumeMode;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._accessModes = undefined;
      this._dataSource.internalValue = undefined;
      this._dataSourceRef.internalValue = undefined;
      this._resources.internalValue = undefined;
      this._selector.internalValue = undefined;
      this._storageClassName = undefined;
      this._volumeAttributesClassName = undefined;
      this._volumeMode = undefined;
      this._volumeName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._accessModes = value.accessModes;
      this._dataSource.internalValue = value.dataSource;
      this._dataSourceRef.internalValue = value.dataSourceRef;
      this._resources.internalValue = value.resources;
      this._selector.internalValue = value.selector;
      this._storageClassName = value.storageClassName;
      this._volumeAttributesClassName = value.volumeAttributesClassName;
      this._volumeMode = value.volumeMode;
      this._volumeName = value.volumeName;
    }
  }

  // access_modes - computed: false, optional: true, required: false
  private _accessModes?: string[]; 
  public get accessModes() {
    return this.getListAttribute('access_modes');
  }
  public set accessModes(value: string[]) {
    this._accessModes = value;
  }
  public resetAccessModes() {
    this._accessModes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get accessModesInput() {
    return this._accessModes;
  }

  // data_source - computed: false, optional: true, required: false
  private _dataSource = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutputReference(this, "data_source");
  public get dataSource() {
    return this._dataSource;
  }
  public putDataSource(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) {
    this._dataSource.internalValue = value;
  }
  public resetDataSource() {
    this._dataSource.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceInput() {
    return this._dataSource.internalValue;
  }

  // data_source_ref - computed: false, optional: true, required: false
  private _dataSourceRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutputReference(this, "data_source_ref");
  public get dataSourceRef() {
    return this._dataSourceRef;
  }
  public putDataSourceRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) {
    this._dataSourceRef.internalValue = value;
  }
  public resetDataSourceRef() {
    this._dataSourceRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSourceRefInput() {
    return this._dataSourceRef.internalValue;
  }

  // resources - computed: false, optional: true, required: false
  private _resources = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutputReference(this, "resources");
  public get resources() {
    return this._resources;
  }
  public putResources(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) {
    this._resources.internalValue = value;
  }
  public resetResources() {
    this._resources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources.internalValue;
  }

  // selector - computed: false, optional: true, required: false
  private _selector = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) {
    this._selector.internalValue = value;
  }
  public resetSelector() {
    this._selector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // storage_class_name - computed: false, optional: true, required: false
  private _storageClassName?: string; 
  public get storageClassName() {
    return this.getStringAttribute('storage_class_name');
  }
  public set storageClassName(value: string) {
    this._storageClassName = value;
  }
  public resetStorageClassName() {
    this._storageClassName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageClassNameInput() {
    return this._storageClassName;
  }

  // volume_attributes_class_name - computed: false, optional: true, required: false
  private _volumeAttributesClassName?: string; 
  public get volumeAttributesClassName() {
    return this.getStringAttribute('volume_attributes_class_name');
  }
  public set volumeAttributesClassName(value: string) {
    this._volumeAttributesClassName = value;
  }
  public resetVolumeAttributesClassName() {
    this._volumeAttributesClassName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeAttributesClassNameInput() {
    return this._volumeAttributesClassName;
  }

  // volume_mode - computed: false, optional: true, required: false
  private _volumeMode?: string; 
  public get volumeMode() {
    return this.getStringAttribute('volume_mode');
  }
  public set volumeMode(value: string) {
    this._volumeMode = value;
  }
  public resetVolumeMode() {
    this._volumeMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeModeInput() {
    return this._volumeMode;
  }

  // volume_name - computed: false, optional: true, required: false
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  public resetVolumeName() {
    this._volumeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplate {
  /**
  * May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#metadata DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#metadata}
  */
  readonly metadata?: { [key: string]: string };
  /**
  * The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#spec DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#spec}
  */
  readonly spec: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.metadata),
    spec: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecToTerraform(struct!.spec),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.metadata),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    spec: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata?: { [key: string]: string }; 
  public get metadata() {
    return this.getStringMapAttribute('metadata');
  }
  public set metadata(value: { [key: string]: string }) {
    this._metadata = value;
  }
  public resetMetadata() {
    this._metadata = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata;
  }

  // spec - computed: false, optional: false, required: true
  private _spec = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) {
    this._spec.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeral {
  /**
  * Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod. The name of the PVC will be '<pod name>-<volume name>' where '<volume name>' is the name from the 'PodSpec.Volumes' array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. Required, must not be nil.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_claim_template DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_claim_template}
  */
  readonly volumeClaimTemplate?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplate;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeral | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    volume_claim_template: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateToTerraform(struct!.volumeClaimTemplate),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeral | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    volume_claim_template: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateToHclTerraform(struct!.volumeClaimTemplate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplate",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeral | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._volumeClaimTemplate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeClaimTemplate = this._volumeClaimTemplate?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeral | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._volumeClaimTemplate.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._volumeClaimTemplate.internalValue = value.volumeClaimTemplate;
    }
  }

  // volume_claim_template - computed: false, optional: true, required: false
  private _volumeClaimTemplate = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplateOutputReference(this, "volume_claim_template");
  public get volumeClaimTemplate() {
    return this._volumeClaimTemplate;
  }
  public putVolumeClaimTemplate(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralVolumeClaimTemplate) {
    this._volumeClaimTemplate.internalValue = value;
  }
  public resetVolumeClaimTemplate() {
    this._volumeClaimTemplate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeClaimTemplateInput() {
    return this._volumeClaimTemplate.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFc {
  /**
  * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. 'ext4', 'xfs', 'ntfs'. Implicitly inferred to be 'ext4' if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * lun is Optional: FC target lun number
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#lun DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#lun}
  */
  readonly lun?: number;
  /**
  * readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * targetWWNs is Optional: FC target worldwide names (WWNs)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#target_ww_ns DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#target_ww_ns}
  */
  readonly targetWwNs?: string[];
  /**
  * wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#wwids DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#wwids}
  */
  readonly wwids?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFcToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    lun: cdktf.numberToTerraform(struct!.lun),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    target_ww_ns: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.targetWwNs),
    wwids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.wwids),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFcToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    lun: {
      value: cdktf.numberToHclTerraform(struct!.lun),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    target_ww_ns: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.targetWwNs),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    wwids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.wwids),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._lun !== undefined) {
      hasAnyValues = true;
      internalValueResult.lun = this._lun;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._targetWwNs !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetWwNs = this._targetWwNs;
    }
    if (this._wwids !== undefined) {
      hasAnyValues = true;
      internalValueResult.wwids = this._wwids;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._lun = undefined;
      this._readOnly = undefined;
      this._targetWwNs = undefined;
      this._wwids = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._lun = value.lun;
      this._readOnly = value.readOnly;
      this._targetWwNs = value.targetWwNs;
      this._wwids = value.wwids;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // lun - computed: false, optional: true, required: false
  private _lun?: number; 
  public get lun() {
    return this.getNumberAttribute('lun');
  }
  public set lun(value: number) {
    this._lun = value;
  }
  public resetLun() {
    this._lun = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lunInput() {
    return this._lun;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // target_ww_ns - computed: false, optional: true, required: false
  private _targetWwNs?: string[]; 
  public get targetWwNs() {
    return this.getListAttribute('target_ww_ns');
  }
  public set targetWwNs(value: string[]) {
    this._targetWwNs = value;
  }
  public resetTargetWwNs() {
    this._targetWwNs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetWwNsInput() {
    return this._targetWwNs;
  }

  // wwids - computed: false, optional: true, required: false
  private _wwids?: string[]; 
  public get wwids() {
    return this.getListAttribute('wwids');
  }
  public set wwids(value: string[]) {
    this._wwids = value;
  }
  public resetWwids() {
    this._wwids = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get wwidsInput() {
    return this._wwids;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRef {
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolume {
  /**
  * driver is the name of the driver to use for this volume.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#driver DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#driver}
  */
  readonly driver: string;
  /**
  * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. 'ext4', 'xfs', 'ntfs'. The default filesystem depends on FlexVolume script.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * options is Optional: this field holds extra command options if any.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#options DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#options}
  */
  readonly options?: { [key: string]: string };
  /**
  * readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRef;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    driver: cdktf.stringToTerraform(struct!.driver),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    options: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.options),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRefToTerraform(struct!.secretRef),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    driver: {
      value: cdktf.stringToHclTerraform(struct!.driver),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    options: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.options),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolume | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._driver !== undefined) {
      hasAnyValues = true;
      internalValueResult.driver = this._driver;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._options !== undefined) {
      hasAnyValues = true;
      internalValueResult.options = this._options;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolume | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._driver = undefined;
      this._fsType = undefined;
      this._options = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._driver = value.driver;
      this._fsType = value.fsType;
      this._options = value.options;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
    }
  }

  // driver - computed: false, optional: false, required: true
  private _driver?: string; 
  public get driver() {
    return this.getStringAttribute('driver');
  }
  public set driver(value: string) {
    this._driver = value;
  }
  // Temporarily expose input value. Use with caution.
  public get driverInput() {
    return this._driver;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // options - computed: false, optional: true, required: false
  private _options?: { [key: string]: string }; 
  public get options() {
    return this.getStringMapAttribute('options');
  }
  public set options(value: { [key: string]: string }) {
    this._options = value;
  }
  public resetOptions() {
    this._options = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionsInput() {
    return this._options;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlocker {
  /**
  * datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#dataset_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#dataset_name}
  */
  readonly datasetName?: string;
  /**
  * datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#dataset_uuid DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#dataset_uuid}
  */
  readonly datasetUuid?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlockerToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlocker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dataset_name: cdktf.stringToTerraform(struct!.datasetName),
    dataset_uuid: cdktf.stringToTerraform(struct!.datasetUuid),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlockerToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlocker | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dataset_name: {
      value: cdktf.stringToHclTerraform(struct!.datasetName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dataset_uuid: {
      value: cdktf.stringToHclTerraform(struct!.datasetUuid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlockerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlocker | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._datasetName !== undefined) {
      hasAnyValues = true;
      internalValueResult.datasetName = this._datasetName;
    }
    if (this._datasetUuid !== undefined) {
      hasAnyValues = true;
      internalValueResult.datasetUuid = this._datasetUuid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlocker | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._datasetName = undefined;
      this._datasetUuid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._datasetName = value.datasetName;
      this._datasetUuid = value.datasetUuid;
    }
  }

  // dataset_name - computed: false, optional: true, required: false
  private _datasetName?: string; 
  public get datasetName() {
    return this.getStringAttribute('dataset_name');
  }
  public set datasetName(value: string) {
    this._datasetName = value;
  }
  public resetDatasetName() {
    this._datasetName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get datasetNameInput() {
    return this._datasetName;
  }

  // dataset_uuid - computed: false, optional: true, required: false
  private _datasetUuid?: string; 
  public get datasetUuid() {
    return this.getStringAttribute('dataset_uuid');
  }
  public set datasetUuid(value: string) {
    this._datasetUuid = value;
  }
  public resetDatasetUuid() {
    this._datasetUuid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get datasetUuidInput() {
    return this._datasetUuid;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDisk {
  /**
  * fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: 'ext4', 'xfs', 'ntfs'. Implicitly inferred to be 'ext4' if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as '1'. Similarly, the volume partition for /dev/sda is '0' (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#partition DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#partition}
  */
  readonly partition?: number;
  /**
  * pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pd_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pd_name}
  */
  readonly pdName: string;
  /**
  * readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDiskToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    partition: cdktf.numberToTerraform(struct!.partition),
    pd_name: cdktf.stringToTerraform(struct!.pdName),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDiskToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    partition: {
      value: cdktf.numberToHclTerraform(struct!.partition),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    pd_name: {
      value: cdktf.stringToHclTerraform(struct!.pdName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._partition !== undefined) {
      hasAnyValues = true;
      internalValueResult.partition = this._partition;
    }
    if (this._pdName !== undefined) {
      hasAnyValues = true;
      internalValueResult.pdName = this._pdName;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._partition = undefined;
      this._pdName = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._partition = value.partition;
      this._pdName = value.pdName;
      this._readOnly = value.readOnly;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // partition - computed: false, optional: true, required: false
  private _partition?: number; 
  public get partition() {
    return this.getNumberAttribute('partition');
  }
  public set partition(value: number) {
    this._partition = value;
  }
  public resetPartition() {
    this._partition = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get partitionInput() {
    return this._partition;
  }

  // pd_name - computed: false, optional: false, required: true
  private _pdName?: string; 
  public get pdName() {
    return this.getStringAttribute('pd_name');
  }
  public set pdName(value: string) {
    this._pdName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pdNameInput() {
    return this._pdName;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepo {
  /**
  * directory is the target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#directory DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#directory}
  */
  readonly directory?: string;
  /**
  * repository is the URL
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#repository DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#repository}
  */
  readonly repository: string;
  /**
  * revision is the commit hash for the specified revision.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#revision DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#revision}
  */
  readonly revision?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepoToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    directory: cdktf.stringToTerraform(struct!.directory),
    repository: cdktf.stringToTerraform(struct!.repository),
    revision: cdktf.stringToTerraform(struct!.revision),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepoToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    directory: {
      value: cdktf.stringToHclTerraform(struct!.directory),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    repository: {
      value: cdktf.stringToHclTerraform(struct!.repository),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    revision: {
      value: cdktf.stringToHclTerraform(struct!.revision),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepoOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepo | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._directory !== undefined) {
      hasAnyValues = true;
      internalValueResult.directory = this._directory;
    }
    if (this._repository !== undefined) {
      hasAnyValues = true;
      internalValueResult.repository = this._repository;
    }
    if (this._revision !== undefined) {
      hasAnyValues = true;
      internalValueResult.revision = this._revision;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepo | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._directory = undefined;
      this._repository = undefined;
      this._revision = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._directory = value.directory;
      this._repository = value.repository;
      this._revision = value.revision;
    }
  }

  // directory - computed: false, optional: true, required: false
  private _directory?: string; 
  public get directory() {
    return this.getStringAttribute('directory');
  }
  public set directory(value: string) {
    this._directory = value;
  }
  public resetDirectory() {
    this._directory = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directoryInput() {
    return this._directory;
  }

  // repository - computed: false, optional: false, required: true
  private _repository?: string; 
  public get repository() {
    return this.getStringAttribute('repository');
  }
  public set repository(value: string) {
    this._repository = value;
  }
  // Temporarily expose input value. Use with caution.
  public get repositoryInput() {
    return this._repository;
  }

  // revision - computed: false, optional: true, required: false
  private _revision?: string; 
  public get revision() {
    return this.getStringAttribute('revision');
  }
  public set revision(value: string) {
    this._revision = value;
  }
  public resetRevision() {
    this._revision = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get revisionInput() {
    return this._revision;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfs {
  /**
  * endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#endpoints DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#endpoints}
  */
  readonly endpoints: string;
  /**
  * path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path: string;
  /**
  * readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    endpoints: cdktf.stringToTerraform(struct!.endpoints),
    path: cdktf.stringToTerraform(struct!.path),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    endpoints: {
      value: cdktf.stringToHclTerraform(struct!.endpoints),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._endpoints !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoints = this._endpoints;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._endpoints = undefined;
      this._path = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._endpoints = value.endpoints;
      this._path = value.path;
      this._readOnly = value.readOnly;
    }
  }

  // endpoints - computed: false, optional: false, required: true
  private _endpoints?: string; 
  public get endpoints() {
    return this.getStringAttribute('endpoints');
  }
  public set endpoints(value: string) {
    this._endpoints = value;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointsInput() {
    return this._endpoints;
  }

  // path - computed: false, optional: false, required: true
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPath {
  /**
  * path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path: string;
  /**
  * type for HostPath Volume Defaults to '' More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPathToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    path: cdktf.stringToTerraform(struct!.path),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPathToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPath | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPathOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPath | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPath | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._path = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._path = value.path;
      this._type = value.type;
    }
  }

  // path - computed: false, optional: false, required: true
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRef {
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsi {
  /**
  * chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#chap_auth_discovery DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#chap_auth_discovery}
  */
  readonly chapAuthDiscovery?: boolean | cdktf.IResolvable;
  /**
  * chapAuthSession defines whether support iSCSI Session CHAP authentication
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#chap_auth_session DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#chap_auth_session}
  */
  readonly chapAuthSession?: boolean | cdktf.IResolvable;
  /**
  * fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: 'ext4', 'xfs', 'ntfs'. Implicitly inferred to be 'ext4' if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#initiator_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#initiator_name}
  */
  readonly initiatorName?: string;
  /**
  * iqn is the target iSCSI Qualified Name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#iqn DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#iqn}
  */
  readonly iqn: string;
  /**
  * iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#iscsi_interface DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#iscsi_interface}
  */
  readonly iscsiInterface?: string;
  /**
  * lun represents iSCSI Target Lun number.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#lun DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#lun}
  */
  readonly lun: number;
  /**
  * portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#portals DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#portals}
  */
  readonly portals?: string[];
  /**
  * readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * secretRef is the CHAP Secret for iSCSI target and initiator authentication
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRef;
  /**
  * targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#target_portal DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#target_portal}
  */
  readonly targetPortal: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    chap_auth_discovery: cdktf.booleanToTerraform(struct!.chapAuthDiscovery),
    chap_auth_session: cdktf.booleanToTerraform(struct!.chapAuthSession),
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    initiator_name: cdktf.stringToTerraform(struct!.initiatorName),
    iqn: cdktf.stringToTerraform(struct!.iqn),
    iscsi_interface: cdktf.stringToTerraform(struct!.iscsiInterface),
    lun: cdktf.numberToTerraform(struct!.lun),
    portals: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.portals),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRefToTerraform(struct!.secretRef),
    target_portal: cdktf.stringToTerraform(struct!.targetPortal),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    chap_auth_discovery: {
      value: cdktf.booleanToHclTerraform(struct!.chapAuthDiscovery),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    chap_auth_session: {
      value: cdktf.booleanToHclTerraform(struct!.chapAuthSession),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    initiator_name: {
      value: cdktf.stringToHclTerraform(struct!.initiatorName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    iqn: {
      value: cdktf.stringToHclTerraform(struct!.iqn),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    iscsi_interface: {
      value: cdktf.stringToHclTerraform(struct!.iscsiInterface),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    lun: {
      value: cdktf.numberToHclTerraform(struct!.lun),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    portals: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.portals),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRef",
    },
    target_portal: {
      value: cdktf.stringToHclTerraform(struct!.targetPortal),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._chapAuthDiscovery !== undefined) {
      hasAnyValues = true;
      internalValueResult.chapAuthDiscovery = this._chapAuthDiscovery;
    }
    if (this._chapAuthSession !== undefined) {
      hasAnyValues = true;
      internalValueResult.chapAuthSession = this._chapAuthSession;
    }
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._initiatorName !== undefined) {
      hasAnyValues = true;
      internalValueResult.initiatorName = this._initiatorName;
    }
    if (this._iqn !== undefined) {
      hasAnyValues = true;
      internalValueResult.iqn = this._iqn;
    }
    if (this._iscsiInterface !== undefined) {
      hasAnyValues = true;
      internalValueResult.iscsiInterface = this._iscsiInterface;
    }
    if (this._lun !== undefined) {
      hasAnyValues = true;
      internalValueResult.lun = this._lun;
    }
    if (this._portals !== undefined) {
      hasAnyValues = true;
      internalValueResult.portals = this._portals;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._targetPortal !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetPortal = this._targetPortal;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._chapAuthDiscovery = undefined;
      this._chapAuthSession = undefined;
      this._fsType = undefined;
      this._initiatorName = undefined;
      this._iqn = undefined;
      this._iscsiInterface = undefined;
      this._lun = undefined;
      this._portals = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._targetPortal = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._chapAuthDiscovery = value.chapAuthDiscovery;
      this._chapAuthSession = value.chapAuthSession;
      this._fsType = value.fsType;
      this._initiatorName = value.initiatorName;
      this._iqn = value.iqn;
      this._iscsiInterface = value.iscsiInterface;
      this._lun = value.lun;
      this._portals = value.portals;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._targetPortal = value.targetPortal;
    }
  }

  // chap_auth_discovery - computed: false, optional: true, required: false
  private _chapAuthDiscovery?: boolean | cdktf.IResolvable; 
  public get chapAuthDiscovery() {
    return this.getBooleanAttribute('chap_auth_discovery');
  }
  public set chapAuthDiscovery(value: boolean | cdktf.IResolvable) {
    this._chapAuthDiscovery = value;
  }
  public resetChapAuthDiscovery() {
    this._chapAuthDiscovery = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get chapAuthDiscoveryInput() {
    return this._chapAuthDiscovery;
  }

  // chap_auth_session - computed: false, optional: true, required: false
  private _chapAuthSession?: boolean | cdktf.IResolvable; 
  public get chapAuthSession() {
    return this.getBooleanAttribute('chap_auth_session');
  }
  public set chapAuthSession(value: boolean | cdktf.IResolvable) {
    this._chapAuthSession = value;
  }
  public resetChapAuthSession() {
    this._chapAuthSession = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get chapAuthSessionInput() {
    return this._chapAuthSession;
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // initiator_name - computed: false, optional: true, required: false
  private _initiatorName?: string; 
  public get initiatorName() {
    return this.getStringAttribute('initiator_name');
  }
  public set initiatorName(value: string) {
    this._initiatorName = value;
  }
  public resetInitiatorName() {
    this._initiatorName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initiatorNameInput() {
    return this._initiatorName;
  }

  // iqn - computed: false, optional: false, required: true
  private _iqn?: string; 
  public get iqn() {
    return this.getStringAttribute('iqn');
  }
  public set iqn(value: string) {
    this._iqn = value;
  }
  // Temporarily expose input value. Use with caution.
  public get iqnInput() {
    return this._iqn;
  }

  // iscsi_interface - computed: false, optional: true, required: false
  private _iscsiInterface?: string; 
  public get iscsiInterface() {
    return this.getStringAttribute('iscsi_interface');
  }
  public set iscsiInterface(value: string) {
    this._iscsiInterface = value;
  }
  public resetIscsiInterface() {
    this._iscsiInterface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iscsiInterfaceInput() {
    return this._iscsiInterface;
  }

  // lun - computed: false, optional: false, required: true
  private _lun?: number; 
  public get lun() {
    return this.getNumberAttribute('lun');
  }
  public set lun(value: number) {
    this._lun = value;
  }
  // Temporarily expose input value. Use with caution.
  public get lunInput() {
    return this._lun;
  }

  // portals - computed: false, optional: true, required: false
  private _portals?: string[]; 
  public get portals() {
    return this.getListAttribute('portals');
  }
  public set portals(value: string[]) {
    this._portals = value;
  }
  public resetPortals() {
    this._portals = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portalsInput() {
    return this._portals;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // target_portal - computed: false, optional: false, required: true
  private _targetPortal?: string; 
  public get targetPortal() {
    return this.getStringAttribute('target_portal');
  }
  public set targetPortal(value: string) {
    this._targetPortal = value;
  }
  // Temporarily expose input value. Use with caution.
  public get targetPortalInput() {
    return this._targetPortal;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfs {
  /**
  * path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path: string;
  /**
  * readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#server DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#server}
  */
  readonly server: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    path: cdktf.stringToTerraform(struct!.path),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    server: cdktf.stringToTerraform(struct!.server),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    server: {
      value: cdktf.stringToHclTerraform(struct!.server),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._server !== undefined) {
      hasAnyValues = true;
      internalValueResult.server = this._server;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._path = undefined;
      this._readOnly = undefined;
      this._server = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._path = value.path;
      this._readOnly = value.readOnly;
      this._server = value.server;
    }
  }

  // path - computed: false, optional: false, required: true
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // server - computed: false, optional: false, required: true
  private _server?: string; 
  public get server() {
    return this.getStringAttribute('server');
  }
  public set server(value: string) {
    this._server = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serverInput() {
    return this._server;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaim {
  /**
  * claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#claim_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#claim_name}
  */
  readonly claimName: string;
  /**
  * readOnly Will force the ReadOnly setting in VolumeMounts. Default false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaimToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaim | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    claim_name: cdktf.stringToTerraform(struct!.claimName),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaimToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaim | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    claim_name: {
      value: cdktf.stringToHclTerraform(struct!.claimName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaimOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaim | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._claimName !== undefined) {
      hasAnyValues = true;
      internalValueResult.claimName = this._claimName;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaim | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._claimName = undefined;
      this._readOnly = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._claimName = value.claimName;
      this._readOnly = value.readOnly;
    }
  }

  // claim_name - computed: false, optional: false, required: true
  private _claimName?: string; 
  public get claimName() {
    return this.getStringAttribute('claim_name');
  }
  public set claimName(value: string) {
    this._claimName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get claimNameInput() {
    return this._claimName;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDisk {
  /**
  * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. 'ext4', 'xfs', 'ntfs'. Implicitly inferred to be 'ext4' if unspecified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * pdID is the ID that identifies Photon Controller persistent disk
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pd_id DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pd_id}
  */
  readonly pdId: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDiskToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    pd_id: cdktf.stringToTerraform(struct!.pdId),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDiskToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDisk | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pd_id: {
      value: cdktf.stringToHclTerraform(struct!.pdId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDiskOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDisk | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._pdId !== undefined) {
      hasAnyValues = true;
      internalValueResult.pdId = this._pdId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDisk | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._pdId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._pdId = value.pdId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // pd_id - computed: false, optional: false, required: true
  private _pdId?: string; 
  public get pdId() {
    return this.getStringAttribute('pd_id');
  }
  public set pdId(value: string) {
    this._pdId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pdIdInput() {
    return this._pdId;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolume {
  /**
  * fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. 'ext4', 'xfs'. Implicitly inferred to be 'ext4' if unspecified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * volumeID uniquely identifies a Portworx volume
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_id DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_id}
  */
  readonly volumeId: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolumeToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    volume_id: cdktf.stringToTerraform(struct!.volumeId),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolumeToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volume_id: {
      value: cdktf.stringToHclTerraform(struct!.volumeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolumeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolume | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._volumeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeId = this._volumeId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolume | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._readOnly = undefined;
      this._volumeId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._readOnly = value.readOnly;
      this._volumeId = value.volumeId;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // volume_id - computed: false, optional: false, required: true
  private _volumeId?: string; 
  public get volumeId() {
    return this.getStringAttribute('volume_id');
  }
  public set volumeId(value: string) {
    this._volumeId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeIdInput() {
    return this._volumeId;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#key DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#operator DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#values DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
  /**
  * matchExpressions is a list of label selector requirements. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#match_expressions DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#match_expressions}
  */
  readonly matchExpressions?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions[] | cdktf.IResolvable;
  /**
  * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The requirements are ANDed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#match_labels DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#match_labels}
  */
  readonly matchLabels?: { [key: string]: string };
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    match_expressions: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsToTerraform, false)(struct!.matchExpressions),
    match_labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.matchLabels),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    match_expressions: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsToHclTerraform, false)(struct!.matchExpressions),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsList",
    },
    match_labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.matchLabels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._matchExpressions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchExpressions = this._matchExpressions?.internalValue;
    }
    if (this._matchLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.matchLabels = this._matchLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = undefined;
      this._matchLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._matchExpressions.internalValue = value.matchExpressions;
      this._matchLabels = value.matchLabels;
    }
  }

  // match_expressions - computed: false, optional: true, required: false
  private _matchExpressions = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsList(this, "match_expressions", false);
  public get matchExpressions() {
    return this._matchExpressions;
  }
  public putMatchExpressions(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions[] | cdktf.IResolvable) {
    this._matchExpressions.internalValue = value;
  }
  public resetMatchExpressions() {
    this._matchExpressions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchExpressionsInput() {
    return this._matchExpressions.internalValue;
  }

  // match_labels - computed: false, optional: true, required: false
  private _matchLabels?: { [key: string]: string }; 
  public get matchLabels() {
    return this.getStringMapAttribute('match_labels');
  }
  public set matchLabels(value: { [key: string]: string }) {
    this._matchLabels = value;
  }
  public resetMatchLabels() {
    this._matchLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get matchLabelsInput() {
    return this._matchLabels;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundle {
  /**
  * Select all ClusterTrustBundles that match this label selector. Only has effect if signerName is set. Mutually-exclusive with name. If unset, interpreted as 'match nothing'. If set but empty, interpreted as 'match everything'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#label_selector DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#label_selector}
  */
  readonly labelSelector?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector;
  /**
  * Select a single ClusterTrustBundle by object name. Mutually-exclusive with signerName and labelSelector.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available. If using name, then the named ClusterTrustBundle is allowed not to exist. If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#optional DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
  /**
  * Relative path from the volume root to write the bundle.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path: string;
  /**
  * Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name. The contents of all selected ClusterTrustBundles will be unified and deduplicated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#signer_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#signer_name}
  */
  readonly signerName?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundle | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    label_selector: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorToTerraform(struct!.labelSelector),
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
    path: cdktf.stringToTerraform(struct!.path),
    signer_name: cdktf.stringToTerraform(struct!.signerName),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundle | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    label_selector: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorToHclTerraform(struct!.labelSelector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signer_name: {
      value: cdktf.stringToHclTerraform(struct!.signerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundle | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labelSelector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelector = this._labelSelector?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._signerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.signerName = this._signerName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundle | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = undefined;
      this._name = undefined;
      this._optional = undefined;
      this._path = undefined;
      this._signerName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labelSelector.internalValue = value.labelSelector;
      this._name = value.name;
      this._optional = value.optional;
      this._path = value.path;
      this._signerName = value.signerName;
    }
  }

  // label_selector - computed: false, optional: true, required: false
  private _labelSelector = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutputReference(this, "label_selector");
  public get labelSelector() {
    return this._labelSelector;
  }
  public putLabelSelector(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) {
    this._labelSelector.internalValue = value;
  }
  public resetLabelSelector() {
    this._labelSelector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorInput() {
    return this._labelSelector.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }

  // path - computed: false, optional: false, required: true
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // signer_name - computed: false, optional: true, required: false
  private _signerName?: string; 
  public get signerName() {
    return this.getStringAttribute('signer_name');
  }
  public set signerName(value: string) {
    this._signerName = value;
  }
  public resetSignerName() {
    this._signerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signerNameInput() {
    return this._signerName;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItems {
  /**
  * key is the key to project.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#key DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItemsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItemsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: false, required: true
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItemsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMap {
  /**
  * items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItems[] | cdktf.IResolvable;
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * optional specify whether the ConfigMap or its keys must be defined
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#optional DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    items: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItemsToTerraform, false)(struct!.items),
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMap | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    items: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItemsList",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMap | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMap | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._items.internalValue = undefined;
      this._name = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._items.internalValue = value.items;
      this._name = value.name;
      this._optional = value.optional;
    }
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
  * Version of the schema the FieldPath is written in terms of, defaults to 'v1'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#api_version DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * Path of the field to select in the specified API version.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#field_path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#field_path}
  */
  readonly fieldPath: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: false, required: true
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
  * Container name: required for volumes, optional for env vars
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#container_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#container_name}
  */
  readonly containerName?: string;
  /**
  * Specifies the output format of the exposed resources, defaults to '1'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#divisor DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#divisor}
  */
  readonly divisor?: string;
  /**
  * Required: resource to select
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#resource DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#resource}
  */
  readonly resource: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_name: cdktf.stringToTerraform(struct!.containerName),
    divisor: cdktf.stringToTerraform(struct!.divisor),
    resource: cdktf.stringToTerraform(struct!.resource),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_name: {
      value: cdktf.stringToHclTerraform(struct!.containerName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    divisor: {
      value: cdktf.stringToHclTerraform(struct!.divisor),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource: {
      value: cdktf.stringToHclTerraform(struct!.resource),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerName !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerName = this._containerName;
    }
    if (this._divisor !== undefined) {
      hasAnyValues = true;
      internalValueResult.divisor = this._divisor;
    }
    if (this._resource !== undefined) {
      hasAnyValues = true;
      internalValueResult.resource = this._resource;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerName = undefined;
      this._divisor = undefined;
      this._resource = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerName = value.containerName;
      this._divisor = value.divisor;
      this._resource = value.resource;
    }
  }

  // container_name - computed: false, optional: true, required: false
  private _containerName?: string; 
  public get containerName() {
    return this.getStringAttribute('container_name');
  }
  public set containerName(value: string) {
    this._containerName = value;
  }
  public resetContainerName() {
    this._containerName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNameInput() {
    return this._containerName;
  }

  // divisor - computed: false, optional: true, required: false
  private _divisor?: string; 
  public get divisor() {
    return this.getStringAttribute('divisor');
  }
  public set divisor(value: string) {
    this._divisor = value;
  }
  public resetDivisor() {
    this._divisor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get divisorInput() {
    return this._divisor;
  }

  // resource - computed: false, optional: false, required: true
  private _resource?: string; 
  public get resource() {
    return this.getStringAttribute('resource');
  }
  public set resource(value: string) {
    this._resource = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceInput() {
    return this._resource;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItems {
  /**
  * Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#field_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#field_ref}
  */
  readonly fieldRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef;
  /**
  * Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * Required: Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path: string;
  /**
  * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#resource_field_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#resource_field_ref}
  */
  readonly resourceFieldRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    field_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefToTerraform(struct!.fieldRef),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
    resource_field_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefToTerraform(struct!.resourceFieldRef),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    field_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefToHclTerraform(struct!.fieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_field_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefToHclTerraform(struct!.resourceFieldRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldRef = this._fieldRef?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._resourceFieldRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceFieldRef = this._resourceFieldRef?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = undefined;
      this._mode = undefined;
      this._path = undefined;
      this._resourceFieldRef.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fieldRef.internalValue = value.fieldRef;
      this._mode = value.mode;
      this._path = value.path;
      this._resourceFieldRef.internalValue = value.resourceFieldRef;
    }
  }

  // field_ref - computed: false, optional: true, required: false
  private _fieldRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutputReference(this, "field_ref");
  public get fieldRef() {
    return this._fieldRef;
  }
  public putFieldRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef) {
    this._fieldRef.internalValue = value;
  }
  public resetFieldRef() {
    this._fieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldRefInput() {
    return this._fieldRef.internalValue;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: false, required: true
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // resource_field_ref - computed: false, optional: true, required: false
  private _resourceFieldRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutputReference(this, "resource_field_ref");
  public get resourceFieldRef() {
    return this._resourceFieldRef;
  }
  public putResourceFieldRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef) {
    this._resourceFieldRef.internalValue = value;
  }
  public resetResourceFieldRef() {
    this._resourceFieldRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceFieldRefInput() {
    return this._resourceFieldRef.internalValue;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApi {
  /**
  * Items is a list of DownwardAPIVolume file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItems[] | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    items: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsToTerraform, false)(struct!.items),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    items: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._items.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._items.internalValue = value.items;
    }
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItems {
  /**
  * key is the key to project.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#key DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItemsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItemsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: false, required: true
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItemsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecret {
  /**
  * items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItems[] | cdktf.IResolvable;
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * optional field specify whether the Secret or its key must be defined
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#optional DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    items: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItemsToTerraform, false)(struct!.items),
    name: cdktf.stringToTerraform(struct!.name),
    optional: cdktf.booleanToTerraform(struct!.optional),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    items: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItemsList",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecret | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecret | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._items.internalValue = undefined;
      this._name = undefined;
      this._optional = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._items.internalValue = value.items;
      this._name = value.name;
      this._optional = value.optional;
    }
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountToken {
  /**
  * audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#audience DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#audience}
  */
  readonly audience?: string;
  /**
  * expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#expiration_seconds DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#expiration_seconds}
  */
  readonly expirationSeconds?: number;
  /**
  * path is the path relative to the mount point of the file to project the token into.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountTokenToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountToken | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    audience: cdktf.stringToTerraform(struct!.audience),
    expiration_seconds: cdktf.numberToTerraform(struct!.expirationSeconds),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountTokenToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountToken | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    audience: {
      value: cdktf.stringToHclTerraform(struct!.audience),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expiration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.expirationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountToken | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._audience !== undefined) {
      hasAnyValues = true;
      internalValueResult.audience = this._audience;
    }
    if (this._expirationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.expirationSeconds = this._expirationSeconds;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountToken | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._audience = undefined;
      this._expirationSeconds = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._audience = value.audience;
      this._expirationSeconds = value.expirationSeconds;
      this._path = value.path;
    }
  }

  // audience - computed: false, optional: true, required: false
  private _audience?: string; 
  public get audience() {
    return this.getStringAttribute('audience');
  }
  public set audience(value: string) {
    this._audience = value;
  }
  public resetAudience() {
    this._audience = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get audienceInput() {
    return this._audience;
  }

  // expiration_seconds - computed: false, optional: true, required: false
  private _expirationSeconds?: number; 
  public get expirationSeconds() {
    return this.getNumberAttribute('expiration_seconds');
  }
  public set expirationSeconds(value: number) {
    this._expirationSeconds = value;
  }
  public resetExpirationSeconds() {
    this._expirationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expirationSecondsInput() {
    return this._expirationSeconds;
  }

  // path - computed: false, optional: false, required: true
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSources {
  /**
  * ClusterTrustBundle allows a pod to access the '.spec.trustBundle' field of ClusterTrustBundle objects in an auto-updating file. Alpha, gated by the ClusterTrustBundleProjection feature gate. ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector. Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem. Esoteric PEM features such as inter-block comments and block headers are stripped. Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#cluster_trust_bundle DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#cluster_trust_bundle}
  */
  readonly clusterTrustBundle?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundle;
  /**
  * configMap information about the configMap data to project
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#config_map DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#config_map}
  */
  readonly configMap?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMap;
  /**
  * downwardAPI information about the downwardAPI data to project
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#downward_api DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#downward_api}
  */
  readonly downwardApi?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApi;
  /**
  * secret information about the secret data to project
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret}
  */
  readonly secret?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecret;
  /**
  * serviceAccountToken is information about the serviceAccountToken data to project
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#service_account_token DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#service_account_token}
  */
  readonly serviceAccountToken?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountToken;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster_trust_bundle: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleToTerraform(struct!.clusterTrustBundle),
    config_map: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapToTerraform(struct!.configMap),
    downward_api: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiToTerraform(struct!.downwardApi),
    secret: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretToTerraform(struct!.secret),
    service_account_token: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountTokenToTerraform(struct!.serviceAccountToken),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSources | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster_trust_bundle: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleToHclTerraform(struct!.clusterTrustBundle),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundle",
    },
    config_map: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapToHclTerraform(struct!.configMap),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMap",
    },
    downward_api: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiToHclTerraform(struct!.downwardApi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApi",
    },
    secret: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretToHclTerraform(struct!.secret),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecret",
    },
    service_account_token: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountTokenToHclTerraform(struct!.serviceAccountToken),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountToken",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSources | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clusterTrustBundle?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterTrustBundle = this._clusterTrustBundle?.internalValue;
    }
    if (this._configMap?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMap = this._configMap?.internalValue;
    }
    if (this._downwardApi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.downwardApi = this._downwardApi?.internalValue;
    }
    if (this._secret?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret?.internalValue;
    }
    if (this._serviceAccountToken?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountToken = this._serviceAccountToken?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSources | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clusterTrustBundle.internalValue = undefined;
      this._configMap.internalValue = undefined;
      this._downwardApi.internalValue = undefined;
      this._secret.internalValue = undefined;
      this._serviceAccountToken.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clusterTrustBundle.internalValue = value.clusterTrustBundle;
      this._configMap.internalValue = value.configMap;
      this._downwardApi.internalValue = value.downwardApi;
      this._secret.internalValue = value.secret;
      this._serviceAccountToken.internalValue = value.serviceAccountToken;
    }
  }

  // cluster_trust_bundle - computed: false, optional: true, required: false
  private _clusterTrustBundle = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutputReference(this, "cluster_trust_bundle");
  public get clusterTrustBundle() {
    return this._clusterTrustBundle;
  }
  public putClusterTrustBundle(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesClusterTrustBundle) {
    this._clusterTrustBundle.internalValue = value;
  }
  public resetClusterTrustBundle() {
    this._clusterTrustBundle.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterTrustBundleInput() {
    return this._clusterTrustBundle.internalValue;
  }

  // config_map - computed: false, optional: true, required: false
  private _configMap = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMapOutputReference(this, "config_map");
  public get configMap() {
    return this._configMap;
  }
  public putConfigMap(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesConfigMap) {
    this._configMap.internalValue = value;
  }
  public resetConfigMap() {
    this._configMap.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapInput() {
    return this._configMap.internalValue;
  }

  // downward_api - computed: false, optional: true, required: false
  private _downwardApi = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApiOutputReference(this, "downward_api");
  public get downwardApi() {
    return this._downwardApi;
  }
  public putDownwardApi(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesDownwardApi) {
    this._downwardApi.internalValue = value;
  }
  public resetDownwardApi() {
    this._downwardApi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get downwardApiInput() {
    return this._downwardApi.internalValue;
  }

  // secret - computed: false, optional: true, required: false
  private _secret = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecretOutputReference(this, "secret");
  public get secret() {
    return this._secret;
  }
  public putSecret(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesSecret) {
    this._secret.internalValue = value;
  }
  public resetSecret() {
    this._secret.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret.internalValue;
  }

  // service_account_token - computed: false, optional: true, required: false
  private _serviceAccountToken = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutputReference(this, "service_account_token");
  public get serviceAccountToken() {
    return this._serviceAccountToken;
  }
  public putServiceAccountToken(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesServiceAccountToken) {
    this._serviceAccountToken.internalValue = value;
  }
  public resetServiceAccountToken() {
    this._serviceAccountToken.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountTokenInput() {
    return this._serviceAccountToken.internalValue;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSources[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjected {
  /**
  * defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#default_mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * sources is the list of volume projections
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#sources DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#sources}
  */
  readonly sources?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSources[] | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjected | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    sources: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesToTerraform, false)(struct!.sources),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjected | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sources: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesToHclTerraform, false)(struct!.sources),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjected | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._sources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sources = this._sources?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjected | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._sources.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._sources.internalValue = value.sources;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // sources - computed: false, optional: true, required: false
  private _sources = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSourcesList(this, "sources", false);
  public get sources() {
    return this._sources;
  }
  public putSources(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedSources[] | cdktf.IResolvable) {
    this._sources.internalValue = value;
  }
  public resetSources() {
    this._sources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourcesInput() {
    return this._sources.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyte {
  /**
  * group to map volume access to Default is no group
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#group DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#group}
  */
  readonly group?: string;
  /**
  * readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#registry DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#registry}
  */
  readonly registry: string;
  /**
  * tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tenant DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tenant}
  */
  readonly tenant?: string;
  /**
  * user to map volume access to Defaults to serivceaccount user
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#user DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#user}
  */
  readonly user?: string;
  /**
  * volume is a string that references an already created Quobyte volume by name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume}
  */
  readonly volume: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyteToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyte | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    group: cdktf.stringToTerraform(struct!.group),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    registry: cdktf.stringToTerraform(struct!.registry),
    tenant: cdktf.stringToTerraform(struct!.tenant),
    user: cdktf.stringToTerraform(struct!.user),
    volume: cdktf.stringToTerraform(struct!.volume),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyteToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyte | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    group: {
      value: cdktf.stringToHclTerraform(struct!.group),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    registry: {
      value: cdktf.stringToHclTerraform(struct!.registry),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tenant: {
      value: cdktf.stringToHclTerraform(struct!.tenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume: {
      value: cdktf.stringToHclTerraform(struct!.volume),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyte | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._group !== undefined) {
      hasAnyValues = true;
      internalValueResult.group = this._group;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._registry !== undefined) {
      hasAnyValues = true;
      internalValueResult.registry = this._registry;
    }
    if (this._tenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.tenant = this._tenant;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    if (this._volume !== undefined) {
      hasAnyValues = true;
      internalValueResult.volume = this._volume;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyte | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._group = undefined;
      this._readOnly = undefined;
      this._registry = undefined;
      this._tenant = undefined;
      this._user = undefined;
      this._volume = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._group = value.group;
      this._readOnly = value.readOnly;
      this._registry = value.registry;
      this._tenant = value.tenant;
      this._user = value.user;
      this._volume = value.volume;
    }
  }

  // group - computed: false, optional: true, required: false
  private _group?: string; 
  public get group() {
    return this.getStringAttribute('group');
  }
  public set group(value: string) {
    this._group = value;
  }
  public resetGroup() {
    this._group = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get groupInput() {
    return this._group;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // registry - computed: false, optional: false, required: true
  private _registry?: string; 
  public get registry() {
    return this.getStringAttribute('registry');
  }
  public set registry(value: string) {
    this._registry = value;
  }
  // Temporarily expose input value. Use with caution.
  public get registryInput() {
    return this._registry;
  }

  // tenant - computed: false, optional: true, required: false
  private _tenant?: string; 
  public get tenant() {
    return this.getStringAttribute('tenant');
  }
  public set tenant(value: string) {
    this._tenant = value;
  }
  public resetTenant() {
    this._tenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tenantInput() {
    return this._tenant;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }

  // volume - computed: false, optional: false, required: true
  private _volume?: string; 
  public get volume() {
    return this.getStringAttribute('volume');
  }
  public set volume(value: string) {
    this._volume = value;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeInput() {
    return this._volume;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRef {
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbd {
  /**
  * fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: 'ext4', 'xfs', 'ntfs'. Implicitly inferred to be 'ext4' if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#image DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#image}
  */
  readonly image: string;
  /**
  * keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#keyring DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#keyring}
  */
  readonly keyring?: string;
  /**
  * monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#monitors DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#monitors}
  */
  readonly monitors: string[];
  /**
  * pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pool DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pool}
  */
  readonly pool?: string;
  /**
  * readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRef;
  /**
  * user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#user DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    image: cdktf.stringToTerraform(struct!.image),
    keyring: cdktf.stringToTerraform(struct!.keyring),
    monitors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.monitors),
    pool: cdktf.stringToTerraform(struct!.pool),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRefToTerraform(struct!.secretRef),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbd | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keyring: {
      value: cdktf.stringToHclTerraform(struct!.keyring),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    monitors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.monitors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pool: {
      value: cdktf.stringToHclTerraform(struct!.pool),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRef",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbd | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._keyring !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyring = this._keyring;
    }
    if (this._monitors !== undefined) {
      hasAnyValues = true;
      internalValueResult.monitors = this._monitors;
    }
    if (this._pool !== undefined) {
      hasAnyValues = true;
      internalValueResult.pool = this._pool;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbd | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._image = undefined;
      this._keyring = undefined;
      this._monitors = undefined;
      this._pool = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._image = value.image;
      this._keyring = value.keyring;
      this._monitors = value.monitors;
      this._pool = value.pool;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._user = value.user;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // image - computed: false, optional: false, required: true
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // keyring - computed: false, optional: true, required: false
  private _keyring?: string; 
  public get keyring() {
    return this.getStringAttribute('keyring');
  }
  public set keyring(value: string) {
    this._keyring = value;
  }
  public resetKeyring() {
    this._keyring = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyringInput() {
    return this._keyring;
  }

  // monitors - computed: false, optional: false, required: true
  private _monitors?: string[]; 
  public get monitors() {
    return this.getListAttribute('monitors');
  }
  public set monitors(value: string[]) {
    this._monitors = value;
  }
  // Temporarily expose input value. Use with caution.
  public get monitorsInput() {
    return this._monitors;
  }

  // pool - computed: false, optional: true, required: false
  private _pool?: string; 
  public get pool() {
    return this.getStringAttribute('pool');
  }
  public set pool(value: string) {
    this._pool = value;
  }
  public resetPool() {
    this._pool = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get poolInput() {
    return this._pool;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRef {
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIo {
  /**
  * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. 'ext4', 'xfs', 'ntfs'. Default is 'xfs'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * gateway is the host address of the ScaleIO API Gateway.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#gateway DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#gateway}
  */
  readonly gateway: string;
  /**
  * protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#protection_domain DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#protection_domain}
  */
  readonly protectionDomain?: string;
  /**
  * readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRef;
  /**
  * sslEnabled Flag enable/disable SSL communication with Gateway, default false
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#ssl_enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#ssl_enabled}
  */
  readonly sslEnabled?: boolean | cdktf.IResolvable;
  /**
  * storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#storage_mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#storage_mode}
  */
  readonly storageMode?: string;
  /**
  * storagePool is the ScaleIO Storage Pool associated with the protection domain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#storage_pool DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#storage_pool}
  */
  readonly storagePool?: string;
  /**
  * system is the name of the storage system as configured in ScaleIO.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#system DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#system}
  */
  readonly systemAttribute: string;
  /**
  * volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_name}
  */
  readonly volumeName?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    gateway: cdktf.stringToTerraform(struct!.gateway),
    protection_domain: cdktf.stringToTerraform(struct!.protectionDomain),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRefToTerraform(struct!.secretRef),
    ssl_enabled: cdktf.booleanToTerraform(struct!.sslEnabled),
    storage_mode: cdktf.stringToTerraform(struct!.storageMode),
    storage_pool: cdktf.stringToTerraform(struct!.storagePool),
    system: cdktf.stringToTerraform(struct!.systemAttribute),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gateway: {
      value: cdktf.stringToHclTerraform(struct!.gateway),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    protection_domain: {
      value: cdktf.stringToHclTerraform(struct!.protectionDomain),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRef",
    },
    ssl_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.sslEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    storage_mode: {
      value: cdktf.stringToHclTerraform(struct!.storageMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    storage_pool: {
      value: cdktf.stringToHclTerraform(struct!.storagePool),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    system: {
      value: cdktf.stringToHclTerraform(struct!.systemAttribute),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIo | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._gateway !== undefined) {
      hasAnyValues = true;
      internalValueResult.gateway = this._gateway;
    }
    if (this._protectionDomain !== undefined) {
      hasAnyValues = true;
      internalValueResult.protectionDomain = this._protectionDomain;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._sslEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.sslEnabled = this._sslEnabled;
    }
    if (this._storageMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.storageMode = this._storageMode;
    }
    if (this._storagePool !== undefined) {
      hasAnyValues = true;
      internalValueResult.storagePool = this._storagePool;
    }
    if (this._system !== undefined) {
      hasAnyValues = true;
      internalValueResult.systemAttribute = this._system;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIo | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._gateway = undefined;
      this._protectionDomain = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._sslEnabled = undefined;
      this._storageMode = undefined;
      this._storagePool = undefined;
      this._system = undefined;
      this._volumeName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._gateway = value.gateway;
      this._protectionDomain = value.protectionDomain;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._sslEnabled = value.sslEnabled;
      this._storageMode = value.storageMode;
      this._storagePool = value.storagePool;
      this._system = value.systemAttribute;
      this._volumeName = value.volumeName;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // gateway - computed: false, optional: false, required: true
  private _gateway?: string; 
  public get gateway() {
    return this.getStringAttribute('gateway');
  }
  public set gateway(value: string) {
    this._gateway = value;
  }
  // Temporarily expose input value. Use with caution.
  public get gatewayInput() {
    return this._gateway;
  }

  // protection_domain - computed: false, optional: true, required: false
  private _protectionDomain?: string; 
  public get protectionDomain() {
    return this.getStringAttribute('protection_domain');
  }
  public set protectionDomain(value: string) {
    this._protectionDomain = value;
  }
  public resetProtectionDomain() {
    this._protectionDomain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protectionDomainInput() {
    return this._protectionDomain;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: false, required: true
  private _secretRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoSecretRef) {
    this._secretRef.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // ssl_enabled - computed: false, optional: true, required: false
  private _sslEnabled?: boolean | cdktf.IResolvable; 
  public get sslEnabled() {
    return this.getBooleanAttribute('ssl_enabled');
  }
  public set sslEnabled(value: boolean | cdktf.IResolvable) {
    this._sslEnabled = value;
  }
  public resetSslEnabled() {
    this._sslEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sslEnabledInput() {
    return this._sslEnabled;
  }

  // storage_mode - computed: false, optional: true, required: false
  private _storageMode?: string; 
  public get storageMode() {
    return this.getStringAttribute('storage_mode');
  }
  public set storageMode(value: string) {
    this._storageMode = value;
  }
  public resetStorageMode() {
    this._storageMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageModeInput() {
    return this._storageMode;
  }

  // storage_pool - computed: false, optional: true, required: false
  private _storagePool?: string; 
  public get storagePool() {
    return this.getStringAttribute('storage_pool');
  }
  public set storagePool(value: string) {
    this._storagePool = value;
  }
  public resetStoragePool() {
    this._storagePool = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storagePoolInput() {
    return this._storagePool;
  }

  // system - computed: false, optional: false, required: true
  private _system?: string; 
  public get systemAttribute() {
    return this.getStringAttribute('system');
  }
  public set systemAttribute(value: string) {
    this._system = value;
  }
  // Temporarily expose input value. Use with caution.
  public get systemAttributeInput() {
    return this._system;
  }

  // volume_name - computed: false, optional: true, required: false
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  public resetVolumeName() {
    this._volumeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItems {
  /**
  * key is the key to project.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#key DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#mode}
  */
  readonly mode?: number;
  /**
  * path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItemsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    mode: cdktf.numberToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItemsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItems | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.numberToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItemsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItems | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItems | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._mode = undefined;
      this._path = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._mode = value.mode;
      this._path = value.path;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // mode - computed: false, optional: true, required: false
  private _mode?: number; 
  public get mode() {
    return this.getNumberAttribute('mode');
  }
  public set mode(value: number) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: false, required: true
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItemsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItems[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItemsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItemsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecret {
  /**
  * defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#default_mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#default_mode}
  */
  readonly defaultMode?: number;
  /**
  * items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#items}
  */
  readonly items?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItems[] | cdktf.IResolvable;
  /**
  * optional field specify whether the Secret or its keys must be defined
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#optional DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#optional}
  */
  readonly optional?: boolean | cdktf.IResolvable;
  /**
  * secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default_mode: cdktf.numberToTerraform(struct!.defaultMode),
    items: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItemsToTerraform, false)(struct!.items),
    optional: cdktf.booleanToTerraform(struct!.optional),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default_mode: {
      value: cdktf.numberToHclTerraform(struct!.defaultMode),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    items: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItemsToHclTerraform, false)(struct!.items),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItemsList",
    },
    optional: {
      value: cdktf.booleanToHclTerraform(struct!.optional),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecret | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._defaultMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.defaultMode = this._defaultMode;
    }
    if (this._items?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.items = this._items?.internalValue;
    }
    if (this._optional !== undefined) {
      hasAnyValues = true;
      internalValueResult.optional = this._optional;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecret | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._defaultMode = undefined;
      this._items.internalValue = undefined;
      this._optional = undefined;
      this._secretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._defaultMode = value.defaultMode;
      this._items.internalValue = value.items;
      this._optional = value.optional;
      this._secretName = value.secretName;
    }
  }

  // default_mode - computed: false, optional: true, required: false
  private _defaultMode?: number; 
  public get defaultMode() {
    return this.getNumberAttribute('default_mode');
  }
  public set defaultMode(value: number) {
    this._defaultMode = value;
  }
  public resetDefaultMode() {
    this._defaultMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultModeInput() {
    return this._defaultMode;
  }

  // items - computed: false, optional: true, required: false
  private _items = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItemsList(this, "items", false);
  public get items() {
    return this._items;
  }
  public putItems(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretItems[] | cdktf.IResolvable) {
    this._items.internalValue = value;
  }
  public resetItems() {
    this._items.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get itemsInput() {
    return this._items.internalValue;
  }

  // optional - computed: false, optional: true, required: false
  private _optional?: boolean | cdktf.IResolvable; 
  public get optional() {
    return this.getBooleanAttribute('optional');
  }
  public set optional(value: boolean | cdktf.IResolvable) {
    this._optional = value;
  }
  public resetOptional() {
    this._optional = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionalInput() {
    return this._optional;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRef {
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._name = value.name;
    }
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageos {
  /**
  * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. 'ext4', 'xfs', 'ntfs'. Implicitly inferred to be 'ext4' if unspecified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#read_only DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#read_only}
  */
  readonly readOnly?: boolean | cdktf.IResolvable;
  /**
  * secretRef specifies the secret to use for obtaining the StorageOS API credentials. If not specified, default values will be attempted.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret_ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret_ref}
  */
  readonly secretRef?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRef;
  /**
  * volumeName is the human-readable name of the StorageOS volume. Volume names are only unique within a namespace.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_name}
  */
  readonly volumeName?: string;
  /**
  * volumeNamespace specifies the scope of the volume within StorageOS. If no namespace is specified then the Pod's namespace will be used. This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to 'default' if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_namespace DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_namespace}
  */
  readonly volumeNamespace?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    read_only: cdktf.booleanToTerraform(struct!.readOnly),
    secret_ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRefToTerraform(struct!.secretRef),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
    volume_namespace: cdktf.stringToTerraform(struct!.volumeNamespace),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    read_only: {
      value: cdktf.booleanToHclTerraform(struct!.readOnly),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRefToHclTerraform(struct!.secretRef),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRef",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_namespace: {
      value: cdktf.stringToHclTerraform(struct!.volumeNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._readOnly !== undefined) {
      hasAnyValues = true;
      internalValueResult.readOnly = this._readOnly;
    }
    if (this._secretRef?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretRef = this._secretRef?.internalValue;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    if (this._volumeNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeNamespace = this._volumeNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._readOnly = undefined;
      this._secretRef.internalValue = undefined;
      this._volumeName = undefined;
      this._volumeNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._readOnly = value.readOnly;
      this._secretRef.internalValue = value.secretRef;
      this._volumeName = value.volumeName;
      this._volumeNamespace = value.volumeNamespace;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // read_only - computed: false, optional: true, required: false
  private _readOnly?: boolean | cdktf.IResolvable; 
  public get readOnly() {
    return this.getBooleanAttribute('read_only');
  }
  public set readOnly(value: boolean | cdktf.IResolvable) {
    this._readOnly = value;
  }
  public resetReadOnly() {
    this._readOnly = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readOnlyInput() {
    return this._readOnly;
  }

  // secret_ref - computed: false, optional: true, required: false
  private _secretRef = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRefOutputReference(this, "secret_ref");
  public get secretRef() {
    return this._secretRef;
  }
  public putSecretRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosSecretRef) {
    this._secretRef.internalValue = value;
  }
  public resetSecretRef() {
    this._secretRef.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretRefInput() {
    return this._secretRef.internalValue;
  }

  // volume_name - computed: false, optional: true, required: false
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  public resetVolumeName() {
    this._volumeName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }

  // volume_namespace - computed: false, optional: true, required: false
  private _volumeNamespace?: string; 
  public get volumeNamespace() {
    return this.getStringAttribute('volume_namespace');
  }
  public set volumeNamespace(value: string) {
    this._volumeNamespace = value;
  }
  public resetVolumeNamespace() {
    this._volumeNamespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNamespaceInput() {
    return this._volumeNamespace;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolume {
  /**
  * fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. 'ext4', 'xfs', 'ntfs'. Implicitly inferred to be 'ext4' if unspecified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fs_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fs_type}
  */
  readonly fsType?: string;
  /**
  * storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#storage_policy_id DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#storage_policy_id}
  */
  readonly storagePolicyId?: string;
  /**
  * storagePolicyName is the storage Policy Based Management (SPBM) profile name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#storage_policy_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#storage_policy_name}
  */
  readonly storagePolicyName?: string;
  /**
  * volumePath is the path that identifies vSphere volume vmdk
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volume_path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volume_path}
  */
  readonly volumePath: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolumeToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fs_type: cdktf.stringToTerraform(struct!.fsType),
    storage_policy_id: cdktf.stringToTerraform(struct!.storagePolicyId),
    storage_policy_name: cdktf.stringToTerraform(struct!.storagePolicyName),
    volume_path: cdktf.stringToTerraform(struct!.volumePath),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolumeToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolume | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fs_type: {
      value: cdktf.stringToHclTerraform(struct!.fsType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    storage_policy_id: {
      value: cdktf.stringToHclTerraform(struct!.storagePolicyId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    storage_policy_name: {
      value: cdktf.stringToHclTerraform(struct!.storagePolicyName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_path: {
      value: cdktf.stringToHclTerraform(struct!.volumePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolumeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolume | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fsType !== undefined) {
      hasAnyValues = true;
      internalValueResult.fsType = this._fsType;
    }
    if (this._storagePolicyId !== undefined) {
      hasAnyValues = true;
      internalValueResult.storagePolicyId = this._storagePolicyId;
    }
    if (this._storagePolicyName !== undefined) {
      hasAnyValues = true;
      internalValueResult.storagePolicyName = this._storagePolicyName;
    }
    if (this._volumePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumePath = this._volumePath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolume | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fsType = undefined;
      this._storagePolicyId = undefined;
      this._storagePolicyName = undefined;
      this._volumePath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fsType = value.fsType;
      this._storagePolicyId = value.storagePolicyId;
      this._storagePolicyName = value.storagePolicyName;
      this._volumePath = value.volumePath;
    }
  }

  // fs_type - computed: false, optional: true, required: false
  private _fsType?: string; 
  public get fsType() {
    return this.getStringAttribute('fs_type');
  }
  public set fsType(value: string) {
    this._fsType = value;
  }
  public resetFsType() {
    this._fsType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fsTypeInput() {
    return this._fsType;
  }

  // storage_policy_id - computed: false, optional: true, required: false
  private _storagePolicyId?: string; 
  public get storagePolicyId() {
    return this.getStringAttribute('storage_policy_id');
  }
  public set storagePolicyId(value: string) {
    this._storagePolicyId = value;
  }
  public resetStoragePolicyId() {
    this._storagePolicyId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storagePolicyIdInput() {
    return this._storagePolicyId;
  }

  // storage_policy_name - computed: false, optional: true, required: false
  private _storagePolicyName?: string; 
  public get storagePolicyName() {
    return this.getStringAttribute('storage_policy_name');
  }
  public set storagePolicyName(value: string) {
    this._storagePolicyName = value;
  }
  public resetStoragePolicyName() {
    this._storagePolicyName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storagePolicyNameInput() {
    return this._storagePolicyName;
  }

  // volume_path - computed: false, optional: false, required: true
  private _volumePath?: string; 
  public get volumePath() {
    return this.getStringAttribute('volume_path');
  }
  public set volumePath(value: string) {
    this._volumePath = value;
  }
  // Temporarily expose input value. Use with caution.
  public get volumePathInput() {
    return this._volumePath;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumes {
  /**
  * awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#aws_elastic_block_store DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#aws_elastic_block_store}
  */
  readonly awsElasticBlockStore?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStore;
  /**
  * azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#azure_disk DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#azure_disk}
  */
  readonly azureDisk?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDisk;
  /**
  * azureFile represents an Azure File Service mount on the host and bind mount to the pod.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#azure_file DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#azure_file}
  */
  readonly azureFile?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFile;
  /**
  * cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#cephfs DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#cephfs}
  */
  readonly cephfs?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfs;
  /**
  * cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#cinder DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#cinder}
  */
  readonly cinder?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinder;
  /**
  * configMap represents a configMap that should populate this volume
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#config_map DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#config_map}
  */
  readonly configMap?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMap;
  /**
  * csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#csi DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#csi}
  */
  readonly csi?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsi;
  /**
  * downwardAPI represents downward API about the pod that should populate this volume
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#downward_api DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#downward_api}
  */
  readonly downwardApi?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApi;
  /**
  * emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#empty_dir DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#empty_dir}
  */
  readonly emptyDir?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDir;
  /**
  * ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through a PersistentVolumeClaim (see EphemeralVolumeSource for more information on the connection between this volume type and PersistentVolumeClaim). Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. A pod can use both types of ephemeral volumes and persistent volumes at the same time.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#ephemeral DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#ephemeral}
  */
  readonly ephemeral?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeral;
  /**
  * fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fc DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fc}
  */
  readonly fc?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFc;
  /**
  * flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#flex_volume DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#flex_volume}
  */
  readonly flexVolume?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolume;
  /**
  * flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#flocker DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#flocker}
  */
  readonly flocker?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlocker;
  /**
  * gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#gce_persistent_disk DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#gce_persistent_disk}
  */
  readonly gcePersistentDisk?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDisk;
  /**
  * gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#git_repo DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#git_repo}
  */
  readonly gitRepo?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepo;
  /**
  * glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#glusterfs DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#glusterfs}
  */
  readonly glusterfs?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfs;
  /**
  * hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#host_path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#host_path}
  */
  readonly hostPath?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPath;
  /**
  * iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#iscsi DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#iscsi}
  */
  readonly iscsi?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsi;
  /**
  * name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#nfs DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#nfs}
  */
  readonly nfs?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfs;
  /**
  * persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#persistent_volume_claim DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#persistent_volume_claim}
  */
  readonly persistentVolumeClaim?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaim;
  /**
  * photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#photon_persistent_disk DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#photon_persistent_disk}
  */
  readonly photonPersistentDisk?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDisk;
  /**
  * portworxVolume represents a portworx volume attached and mounted on kubelets host machine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#portworx_volume DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#portworx_volume}
  */
  readonly portworxVolume?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolume;
  /**
  * projected items for all in one resources secrets, configmaps, and downward API
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#projected DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#projected}
  */
  readonly projected?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjected;
  /**
  * quobyte represents a Quobyte mount on the host that shares a pod's lifetime
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#quobyte DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#quobyte}
  */
  readonly quobyte?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyte;
  /**
  * rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#rbd DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#rbd}
  */
  readonly rbd?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbd;
  /**
  * scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#scale_io DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#scale_io}
  */
  readonly scaleIo?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIo;
  /**
  * secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret}
  */
  readonly secret?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecret;
  /**
  * storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#storageos DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#storageos}
  */
  readonly storageos?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageos;
  /**
  * vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#vsphere_volume DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#vsphere_volume}
  */
  readonly vsphereVolume?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolume;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aws_elastic_block_store: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStoreToTerraform(struct!.awsElasticBlockStore),
    azure_disk: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDiskToTerraform(struct!.azureDisk),
    azure_file: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFileToTerraform(struct!.azureFile),
    cephfs: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsToTerraform(struct!.cephfs),
    cinder: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderToTerraform(struct!.cinder),
    config_map: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapToTerraform(struct!.configMap),
    csi: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiToTerraform(struct!.csi),
    downward_api: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiToTerraform(struct!.downwardApi),
    empty_dir: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDirToTerraform(struct!.emptyDir),
    ephemeral: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralToTerraform(struct!.ephemeral),
    fc: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFcToTerraform(struct!.fc),
    flex_volume: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeToTerraform(struct!.flexVolume),
    flocker: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlockerToTerraform(struct!.flocker),
    gce_persistent_disk: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDiskToTerraform(struct!.gcePersistentDisk),
    git_repo: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepoToTerraform(struct!.gitRepo),
    glusterfs: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfsToTerraform(struct!.glusterfs),
    host_path: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPathToTerraform(struct!.hostPath),
    iscsi: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiToTerraform(struct!.iscsi),
    name: cdktf.stringToTerraform(struct!.name),
    nfs: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfsToTerraform(struct!.nfs),
    persistent_volume_claim: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaimToTerraform(struct!.persistentVolumeClaim),
    photon_persistent_disk: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDiskToTerraform(struct!.photonPersistentDisk),
    portworx_volume: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolumeToTerraform(struct!.portworxVolume),
    projected: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedToTerraform(struct!.projected),
    quobyte: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyteToTerraform(struct!.quobyte),
    rbd: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdToTerraform(struct!.rbd),
    scale_io: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoToTerraform(struct!.scaleIo),
    secret: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretToTerraform(struct!.secret),
    storageos: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosToTerraform(struct!.storageos),
    vsphere_volume: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolumeToTerraform(struct!.vsphereVolume),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aws_elastic_block_store: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStoreToHclTerraform(struct!.awsElasticBlockStore),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStore",
    },
    azure_disk: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDiskToHclTerraform(struct!.azureDisk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDisk",
    },
    azure_file: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFileToHclTerraform(struct!.azureFile),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFile",
    },
    cephfs: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsToHclTerraform(struct!.cephfs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfs",
    },
    cinder: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderToHclTerraform(struct!.cinder),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinder",
    },
    config_map: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapToHclTerraform(struct!.configMap),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMap",
    },
    csi: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiToHclTerraform(struct!.csi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsi",
    },
    downward_api: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiToHclTerraform(struct!.downwardApi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApi",
    },
    empty_dir: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDirToHclTerraform(struct!.emptyDir),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDir",
    },
    ephemeral: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralToHclTerraform(struct!.ephemeral),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeral",
    },
    fc: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFcToHclTerraform(struct!.fc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFc",
    },
    flex_volume: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeToHclTerraform(struct!.flexVolume),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolume",
    },
    flocker: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlockerToHclTerraform(struct!.flocker),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlocker",
    },
    gce_persistent_disk: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDiskToHclTerraform(struct!.gcePersistentDisk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDisk",
    },
    git_repo: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepoToHclTerraform(struct!.gitRepo),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepo",
    },
    glusterfs: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfsToHclTerraform(struct!.glusterfs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfs",
    },
    host_path: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPathToHclTerraform(struct!.hostPath),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPath",
    },
    iscsi: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiToHclTerraform(struct!.iscsi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsi",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    nfs: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfsToHclTerraform(struct!.nfs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfs",
    },
    persistent_volume_claim: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaimToHclTerraform(struct!.persistentVolumeClaim),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaim",
    },
    photon_persistent_disk: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDiskToHclTerraform(struct!.photonPersistentDisk),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDisk",
    },
    portworx_volume: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolumeToHclTerraform(struct!.portworxVolume),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolume",
    },
    projected: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedToHclTerraform(struct!.projected),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjected",
    },
    quobyte: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyteToHclTerraform(struct!.quobyte),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyte",
    },
    rbd: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdToHclTerraform(struct!.rbd),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbd",
    },
    scale_io: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoToHclTerraform(struct!.scaleIo),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIo",
    },
    secret: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretToHclTerraform(struct!.secret),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecret",
    },
    storageos: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosToHclTerraform(struct!.storageos),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageos",
    },
    vsphere_volume: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolumeToHclTerraform(struct!.vsphereVolume),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolume",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._awsElasticBlockStore?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.awsElasticBlockStore = this._awsElasticBlockStore?.internalValue;
    }
    if (this._azureDisk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.azureDisk = this._azureDisk?.internalValue;
    }
    if (this._azureFile?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.azureFile = this._azureFile?.internalValue;
    }
    if (this._cephfs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cephfs = this._cephfs?.internalValue;
    }
    if (this._cinder?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cinder = this._cinder?.internalValue;
    }
    if (this._configMap?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configMap = this._configMap?.internalValue;
    }
    if (this._csi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.csi = this._csi?.internalValue;
    }
    if (this._downwardApi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.downwardApi = this._downwardApi?.internalValue;
    }
    if (this._emptyDir?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.emptyDir = this._emptyDir?.internalValue;
    }
    if (this._ephemeral?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ephemeral = this._ephemeral?.internalValue;
    }
    if (this._fc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fc = this._fc?.internalValue;
    }
    if (this._flexVolume?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.flexVolume = this._flexVolume?.internalValue;
    }
    if (this._flocker?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.flocker = this._flocker?.internalValue;
    }
    if (this._gcePersistentDisk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.gcePersistentDisk = this._gcePersistentDisk?.internalValue;
    }
    if (this._gitRepo?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.gitRepo = this._gitRepo?.internalValue;
    }
    if (this._glusterfs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.glusterfs = this._glusterfs?.internalValue;
    }
    if (this._hostPath?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostPath = this._hostPath?.internalValue;
    }
    if (this._iscsi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.iscsi = this._iscsi?.internalValue;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._nfs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.nfs = this._nfs?.internalValue;
    }
    if (this._persistentVolumeClaim?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.persistentVolumeClaim = this._persistentVolumeClaim?.internalValue;
    }
    if (this._photonPersistentDisk?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.photonPersistentDisk = this._photonPersistentDisk?.internalValue;
    }
    if (this._portworxVolume?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.portworxVolume = this._portworxVolume?.internalValue;
    }
    if (this._projected?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.projected = this._projected?.internalValue;
    }
    if (this._quobyte?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.quobyte = this._quobyte?.internalValue;
    }
    if (this._rbd?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rbd = this._rbd?.internalValue;
    }
    if (this._scaleIo?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.scaleIo = this._scaleIo?.internalValue;
    }
    if (this._secret?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret?.internalValue;
    }
    if (this._storageos?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.storageos = this._storageos?.internalValue;
    }
    if (this._vsphereVolume?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vsphereVolume = this._vsphereVolume?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._awsElasticBlockStore.internalValue = undefined;
      this._azureDisk.internalValue = undefined;
      this._azureFile.internalValue = undefined;
      this._cephfs.internalValue = undefined;
      this._cinder.internalValue = undefined;
      this._configMap.internalValue = undefined;
      this._csi.internalValue = undefined;
      this._downwardApi.internalValue = undefined;
      this._emptyDir.internalValue = undefined;
      this._ephemeral.internalValue = undefined;
      this._fc.internalValue = undefined;
      this._flexVolume.internalValue = undefined;
      this._flocker.internalValue = undefined;
      this._gcePersistentDisk.internalValue = undefined;
      this._gitRepo.internalValue = undefined;
      this._glusterfs.internalValue = undefined;
      this._hostPath.internalValue = undefined;
      this._iscsi.internalValue = undefined;
      this._name = undefined;
      this._nfs.internalValue = undefined;
      this._persistentVolumeClaim.internalValue = undefined;
      this._photonPersistentDisk.internalValue = undefined;
      this._portworxVolume.internalValue = undefined;
      this._projected.internalValue = undefined;
      this._quobyte.internalValue = undefined;
      this._rbd.internalValue = undefined;
      this._scaleIo.internalValue = undefined;
      this._secret.internalValue = undefined;
      this._storageos.internalValue = undefined;
      this._vsphereVolume.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._awsElasticBlockStore.internalValue = value.awsElasticBlockStore;
      this._azureDisk.internalValue = value.azureDisk;
      this._azureFile.internalValue = value.azureFile;
      this._cephfs.internalValue = value.cephfs;
      this._cinder.internalValue = value.cinder;
      this._configMap.internalValue = value.configMap;
      this._csi.internalValue = value.csi;
      this._downwardApi.internalValue = value.downwardApi;
      this._emptyDir.internalValue = value.emptyDir;
      this._ephemeral.internalValue = value.ephemeral;
      this._fc.internalValue = value.fc;
      this._flexVolume.internalValue = value.flexVolume;
      this._flocker.internalValue = value.flocker;
      this._gcePersistentDisk.internalValue = value.gcePersistentDisk;
      this._gitRepo.internalValue = value.gitRepo;
      this._glusterfs.internalValue = value.glusterfs;
      this._hostPath.internalValue = value.hostPath;
      this._iscsi.internalValue = value.iscsi;
      this._name = value.name;
      this._nfs.internalValue = value.nfs;
      this._persistentVolumeClaim.internalValue = value.persistentVolumeClaim;
      this._photonPersistentDisk.internalValue = value.photonPersistentDisk;
      this._portworxVolume.internalValue = value.portworxVolume;
      this._projected.internalValue = value.projected;
      this._quobyte.internalValue = value.quobyte;
      this._rbd.internalValue = value.rbd;
      this._scaleIo.internalValue = value.scaleIo;
      this._secret.internalValue = value.secret;
      this._storageos.internalValue = value.storageos;
      this._vsphereVolume.internalValue = value.vsphereVolume;
    }
  }

  // aws_elastic_block_store - computed: false, optional: true, required: false
  private _awsElasticBlockStore = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStoreOutputReference(this, "aws_elastic_block_store");
  public get awsElasticBlockStore() {
    return this._awsElasticBlockStore;
  }
  public putAwsElasticBlockStore(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAwsElasticBlockStore) {
    this._awsElasticBlockStore.internalValue = value;
  }
  public resetAwsElasticBlockStore() {
    this._awsElasticBlockStore.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get awsElasticBlockStoreInput() {
    return this._awsElasticBlockStore.internalValue;
  }

  // azure_disk - computed: false, optional: true, required: false
  private _azureDisk = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDiskOutputReference(this, "azure_disk");
  public get azureDisk() {
    return this._azureDisk;
  }
  public putAzureDisk(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureDisk) {
    this._azureDisk.internalValue = value;
  }
  public resetAzureDisk() {
    this._azureDisk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get azureDiskInput() {
    return this._azureDisk.internalValue;
  }

  // azure_file - computed: false, optional: true, required: false
  private _azureFile = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFileOutputReference(this, "azure_file");
  public get azureFile() {
    return this._azureFile;
  }
  public putAzureFile(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesAzureFile) {
    this._azureFile.internalValue = value;
  }
  public resetAzureFile() {
    this._azureFile.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get azureFileInput() {
    return this._azureFile.internalValue;
  }

  // cephfs - computed: false, optional: true, required: false
  private _cephfs = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfsOutputReference(this, "cephfs");
  public get cephfs() {
    return this._cephfs;
  }
  public putCephfs(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCephfs) {
    this._cephfs.internalValue = value;
  }
  public resetCephfs() {
    this._cephfs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cephfsInput() {
    return this._cephfs.internalValue;
  }

  // cinder - computed: false, optional: true, required: false
  private _cinder = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinderOutputReference(this, "cinder");
  public get cinder() {
    return this._cinder;
  }
  public putCinder(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCinder) {
    this._cinder.internalValue = value;
  }
  public resetCinder() {
    this._cinder.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cinderInput() {
    return this._cinder.internalValue;
  }

  // config_map - computed: false, optional: true, required: false
  private _configMap = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMapOutputReference(this, "config_map");
  public get configMap() {
    return this._configMap;
  }
  public putConfigMap(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesConfigMap) {
    this._configMap.internalValue = value;
  }
  public resetConfigMap() {
    this._configMap.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configMapInput() {
    return this._configMap.internalValue;
  }

  // csi - computed: false, optional: true, required: false
  private _csi = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsiOutputReference(this, "csi");
  public get csi() {
    return this._csi;
  }
  public putCsi(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesCsi) {
    this._csi.internalValue = value;
  }
  public resetCsi() {
    this._csi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get csiInput() {
    return this._csi.internalValue;
  }

  // downward_api - computed: false, optional: true, required: false
  private _downwardApi = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApiOutputReference(this, "downward_api");
  public get downwardApi() {
    return this._downwardApi;
  }
  public putDownwardApi(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesDownwardApi) {
    this._downwardApi.internalValue = value;
  }
  public resetDownwardApi() {
    this._downwardApi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get downwardApiInput() {
    return this._downwardApi.internalValue;
  }

  // empty_dir - computed: false, optional: true, required: false
  private _emptyDir = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDirOutputReference(this, "empty_dir");
  public get emptyDir() {
    return this._emptyDir;
  }
  public putEmptyDir(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEmptyDir) {
    this._emptyDir.internalValue = value;
  }
  public resetEmptyDir() {
    this._emptyDir.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emptyDirInput() {
    return this._emptyDir.internalValue;
  }

  // ephemeral - computed: false, optional: true, required: false
  private _ephemeral = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeralOutputReference(this, "ephemeral");
  public get ephemeral() {
    return this._ephemeral;
  }
  public putEphemeral(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesEphemeral) {
    this._ephemeral.internalValue = value;
  }
  public resetEphemeral() {
    this._ephemeral.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ephemeralInput() {
    return this._ephemeral.internalValue;
  }

  // fc - computed: false, optional: true, required: false
  private _fc = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFcOutputReference(this, "fc");
  public get fc() {
    return this._fc;
  }
  public putFc(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFc) {
    this._fc.internalValue = value;
  }
  public resetFc() {
    this._fc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fcInput() {
    return this._fc.internalValue;
  }

  // flex_volume - computed: false, optional: true, required: false
  private _flexVolume = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolumeOutputReference(this, "flex_volume");
  public get flexVolume() {
    return this._flexVolume;
  }
  public putFlexVolume(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlexVolume) {
    this._flexVolume.internalValue = value;
  }
  public resetFlexVolume() {
    this._flexVolume.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flexVolumeInput() {
    return this._flexVolume.internalValue;
  }

  // flocker - computed: false, optional: true, required: false
  private _flocker = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlockerOutputReference(this, "flocker");
  public get flocker() {
    return this._flocker;
  }
  public putFlocker(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesFlocker) {
    this._flocker.internalValue = value;
  }
  public resetFlocker() {
    this._flocker.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flockerInput() {
    return this._flocker.internalValue;
  }

  // gce_persistent_disk - computed: false, optional: true, required: false
  private _gcePersistentDisk = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDiskOutputReference(this, "gce_persistent_disk");
  public get gcePersistentDisk() {
    return this._gcePersistentDisk;
  }
  public putGcePersistentDisk(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGcePersistentDisk) {
    this._gcePersistentDisk.internalValue = value;
  }
  public resetGcePersistentDisk() {
    this._gcePersistentDisk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gcePersistentDiskInput() {
    return this._gcePersistentDisk.internalValue;
  }

  // git_repo - computed: false, optional: true, required: false
  private _gitRepo = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepoOutputReference(this, "git_repo");
  public get gitRepo() {
    return this._gitRepo;
  }
  public putGitRepo(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGitRepo) {
    this._gitRepo.internalValue = value;
  }
  public resetGitRepo() {
    this._gitRepo.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gitRepoInput() {
    return this._gitRepo.internalValue;
  }

  // glusterfs - computed: false, optional: true, required: false
  private _glusterfs = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfsOutputReference(this, "glusterfs");
  public get glusterfs() {
    return this._glusterfs;
  }
  public putGlusterfs(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesGlusterfs) {
    this._glusterfs.internalValue = value;
  }
  public resetGlusterfs() {
    this._glusterfs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get glusterfsInput() {
    return this._glusterfs.internalValue;
  }

  // host_path - computed: false, optional: true, required: false
  private _hostPath = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPathOutputReference(this, "host_path");
  public get hostPath() {
    return this._hostPath;
  }
  public putHostPath(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesHostPath) {
    this._hostPath.internalValue = value;
  }
  public resetHostPath() {
    this._hostPath.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostPathInput() {
    return this._hostPath.internalValue;
  }

  // iscsi - computed: false, optional: true, required: false
  private _iscsi = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsiOutputReference(this, "iscsi");
  public get iscsi() {
    return this._iscsi;
  }
  public putIscsi(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesIscsi) {
    this._iscsi.internalValue = value;
  }
  public resetIscsi() {
    this._iscsi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get iscsiInput() {
    return this._iscsi.internalValue;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // nfs - computed: false, optional: true, required: false
  private _nfs = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfsOutputReference(this, "nfs");
  public get nfs() {
    return this._nfs;
  }
  public putNfs(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesNfs) {
    this._nfs.internalValue = value;
  }
  public resetNfs() {
    this._nfs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nfsInput() {
    return this._nfs.internalValue;
  }

  // persistent_volume_claim - computed: false, optional: true, required: false
  private _persistentVolumeClaim = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaimOutputReference(this, "persistent_volume_claim");
  public get persistentVolumeClaim() {
    return this._persistentVolumeClaim;
  }
  public putPersistentVolumeClaim(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPersistentVolumeClaim) {
    this._persistentVolumeClaim.internalValue = value;
  }
  public resetPersistentVolumeClaim() {
    this._persistentVolumeClaim.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get persistentVolumeClaimInput() {
    return this._persistentVolumeClaim.internalValue;
  }

  // photon_persistent_disk - computed: false, optional: true, required: false
  private _photonPersistentDisk = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDiskOutputReference(this, "photon_persistent_disk");
  public get photonPersistentDisk() {
    return this._photonPersistentDisk;
  }
  public putPhotonPersistentDisk(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPhotonPersistentDisk) {
    this._photonPersistentDisk.internalValue = value;
  }
  public resetPhotonPersistentDisk() {
    this._photonPersistentDisk.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get photonPersistentDiskInput() {
    return this._photonPersistentDisk.internalValue;
  }

  // portworx_volume - computed: false, optional: true, required: false
  private _portworxVolume = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolumeOutputReference(this, "portworx_volume");
  public get portworxVolume() {
    return this._portworxVolume;
  }
  public putPortworxVolume(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesPortworxVolume) {
    this._portworxVolume.internalValue = value;
  }
  public resetPortworxVolume() {
    this._portworxVolume.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portworxVolumeInput() {
    return this._portworxVolume.internalValue;
  }

  // projected - computed: false, optional: true, required: false
  private _projected = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjectedOutputReference(this, "projected");
  public get projected() {
    return this._projected;
  }
  public putProjected(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesProjected) {
    this._projected.internalValue = value;
  }
  public resetProjected() {
    this._projected.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectedInput() {
    return this._projected.internalValue;
  }

  // quobyte - computed: false, optional: true, required: false
  private _quobyte = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyteOutputReference(this, "quobyte");
  public get quobyte() {
    return this._quobyte;
  }
  public putQuobyte(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesQuobyte) {
    this._quobyte.internalValue = value;
  }
  public resetQuobyte() {
    this._quobyte.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get quobyteInput() {
    return this._quobyte.internalValue;
  }

  // rbd - computed: false, optional: true, required: false
  private _rbd = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbdOutputReference(this, "rbd");
  public get rbd() {
    return this._rbd;
  }
  public putRbd(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesRbd) {
    this._rbd.internalValue = value;
  }
  public resetRbd() {
    this._rbd.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rbdInput() {
    return this._rbd.internalValue;
  }

  // scale_io - computed: false, optional: true, required: false
  private _scaleIo = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIoOutputReference(this, "scale_io");
  public get scaleIo() {
    return this._scaleIo;
  }
  public putScaleIo(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesScaleIo) {
    this._scaleIo.internalValue = value;
  }
  public resetScaleIo() {
    this._scaleIo.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scaleIoInput() {
    return this._scaleIo.internalValue;
  }

  // secret - computed: false, optional: true, required: false
  private _secret = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecretOutputReference(this, "secret");
  public get secret() {
    return this._secret;
  }
  public putSecret(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesSecret) {
    this._secret.internalValue = value;
  }
  public resetSecret() {
    this._secret.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret.internalValue;
  }

  // storageos - computed: false, optional: true, required: false
  private _storageos = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageosOutputReference(this, "storageos");
  public get storageos() {
    return this._storageos;
  }
  public putStorageos(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesStorageos) {
    this._storageos.internalValue = value;
  }
  public resetStorageos() {
    this._storageos.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storageosInput() {
    return this._storageos.internalValue;
  }

  // vsphere_volume - computed: false, optional: true, required: false
  private _vsphereVolume = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolumeOutputReference(this, "vsphere_volume");
  public get vsphereVolume() {
    return this._vsphereVolume;
  }
  public putVsphereVolume(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesVsphereVolume) {
    this._vsphereVolume.internalValue = value;
  }
  public resetVsphereVolume() {
    this._vsphereVolume.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vsphereVolumeInput() {
    return this._vsphereVolume.internalValue;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumes[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpec {
  /**
  * ActiveDeadlineSeconds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#active_deadline_seconds DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#active_deadline_seconds}
  */
  readonly activeDeadlineSeconds?: number;
  /**
  * AutomountServiceAccountToken
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#automount_service_account_token DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#automount_service_account_token}
  */
  readonly automountServiceAccountToken?: boolean | cdktf.IResolvable;
  /**
  * Containers
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#containers DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#containers}
  */
  readonly containers: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecContainers[] | cdktf.IResolvable;
  /**
  * DNSPolicy
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#dns_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#dns_policy}
  */
  readonly dnsPolicy?: string;
  /**
  * EphemeralContainers
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#ephemeral_containers DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#ephemeral_containers}
  */
  readonly ephemeralContainers?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecEphemeralContainers[] | cdktf.IResolvable;
  /**
  * InitContainers
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#init_containers DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#init_containers}
  */
  readonly initContainers?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainers[] | cdktf.IResolvable;
  /**
  * NodeSelector
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#node_selector DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * RestartPolicy
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#restart_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#restart_policy}
  */
  readonly restartPolicy?: string;
  /**
  * PodSecurityContext
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#security_context DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#security_context}
  */
  readonly securityContext?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContext;
  /**
  * TerminationGracePeriodSeconds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#termination_grace_period_seconds DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#termination_grace_period_seconds}
  */
  readonly terminationGracePeriodSeconds?: number;
  /**
  * TopologySpreadConstraints
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#topology_spread_constraints DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#topology_spread_constraints}
  */
  readonly topologySpreadConstraints?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraints[] | cdktf.IResolvable;
  /**
  * Volumes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volumes DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volumes}
  */
  readonly volumes?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumes[] | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    active_deadline_seconds: cdktf.numberToTerraform(struct!.activeDeadlineSeconds),
    automount_service_account_token: cdktf.booleanToTerraform(struct!.automountServiceAccountToken),
    containers: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecContainersToTerraform, false)(struct!.containers),
    dns_policy: cdktf.stringToTerraform(struct!.dnsPolicy),
    ephemeral_containers: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecEphemeralContainersToTerraform, false)(struct!.ephemeralContainers),
    init_containers: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersToTerraform, false)(struct!.initContainers),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    restart_policy: cdktf.stringToTerraform(struct!.restartPolicy),
    security_context: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextToTerraform(struct!.securityContext),
    termination_grace_period_seconds: cdktf.numberToTerraform(struct!.terminationGracePeriodSeconds),
    topology_spread_constraints: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsToTerraform, false)(struct!.topologySpreadConstraints),
    volumes: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesToTerraform, false)(struct!.volumes),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    active_deadline_seconds: {
      value: cdktf.numberToHclTerraform(struct!.activeDeadlineSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    automount_service_account_token: {
      value: cdktf.booleanToHclTerraform(struct!.automountServiceAccountToken),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecContainersList",
    },
    dns_policy: {
      value: cdktf.stringToHclTerraform(struct!.dnsPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ephemeral_containers: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecEphemeralContainersToHclTerraform, false)(struct!.ephemeralContainers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecEphemeralContainersList",
    },
    init_containers: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersToHclTerraform, false)(struct!.initContainers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersList",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    restart_policy: {
      value: cdktf.stringToHclTerraform(struct!.restartPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    security_context: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextToHclTerraform(struct!.securityContext),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContext",
    },
    termination_grace_period_seconds: {
      value: cdktf.numberToHclTerraform(struct!.terminationGracePeriodSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topology_spread_constraints: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsToHclTerraform, false)(struct!.topologySpreadConstraints),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsList",
    },
    volumes: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesToHclTerraform, false)(struct!.volumes),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._activeDeadlineSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.activeDeadlineSeconds = this._activeDeadlineSeconds;
    }
    if (this._automountServiceAccountToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.automountServiceAccountToken = this._automountServiceAccountToken;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._dnsPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.dnsPolicy = this._dnsPolicy;
    }
    if (this._ephemeralContainers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ephemeralContainers = this._ephemeralContainers?.internalValue;
    }
    if (this._initContainers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.initContainers = this._initContainers?.internalValue;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._restartPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.restartPolicy = this._restartPolicy;
    }
    if (this._securityContext?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.securityContext = this._securityContext?.internalValue;
    }
    if (this._terminationGracePeriodSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.terminationGracePeriodSeconds = this._terminationGracePeriodSeconds;
    }
    if (this._topologySpreadConstraints?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologySpreadConstraints = this._topologySpreadConstraints?.internalValue;
    }
    if (this._volumes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumes = this._volumes?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._activeDeadlineSeconds = undefined;
      this._automountServiceAccountToken = undefined;
      this._containers.internalValue = undefined;
      this._dnsPolicy = undefined;
      this._ephemeralContainers.internalValue = undefined;
      this._initContainers.internalValue = undefined;
      this._nodeSelector = undefined;
      this._restartPolicy = undefined;
      this._securityContext.internalValue = undefined;
      this._terminationGracePeriodSeconds = undefined;
      this._topologySpreadConstraints.internalValue = undefined;
      this._volumes.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._activeDeadlineSeconds = value.activeDeadlineSeconds;
      this._automountServiceAccountToken = value.automountServiceAccountToken;
      this._containers.internalValue = value.containers;
      this._dnsPolicy = value.dnsPolicy;
      this._ephemeralContainers.internalValue = value.ephemeralContainers;
      this._initContainers.internalValue = value.initContainers;
      this._nodeSelector = value.nodeSelector;
      this._restartPolicy = value.restartPolicy;
      this._securityContext.internalValue = value.securityContext;
      this._terminationGracePeriodSeconds = value.terminationGracePeriodSeconds;
      this._topologySpreadConstraints.internalValue = value.topologySpreadConstraints;
      this._volumes.internalValue = value.volumes;
    }
  }

  // active_deadline_seconds - computed: false, optional: true, required: false
  private _activeDeadlineSeconds?: number; 
  public get activeDeadlineSeconds() {
    return this.getNumberAttribute('active_deadline_seconds');
  }
  public set activeDeadlineSeconds(value: number) {
    this._activeDeadlineSeconds = value;
  }
  public resetActiveDeadlineSeconds() {
    this._activeDeadlineSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get activeDeadlineSecondsInput() {
    return this._activeDeadlineSeconds;
  }

  // automount_service_account_token - computed: false, optional: true, required: false
  private _automountServiceAccountToken?: boolean | cdktf.IResolvable; 
  public get automountServiceAccountToken() {
    return this.getBooleanAttribute('automount_service_account_token');
  }
  public set automountServiceAccountToken(value: boolean | cdktf.IResolvable) {
    this._automountServiceAccountToken = value;
  }
  public resetAutomountServiceAccountToken() {
    this._automountServiceAccountToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get automountServiceAccountTokenInput() {
    return this._automountServiceAccountToken;
  }

  // containers - computed: false, optional: false, required: true
  private _containers = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // dns_policy - computed: false, optional: true, required: false
  private _dnsPolicy?: string; 
  public get dnsPolicy() {
    return this.getStringAttribute('dns_policy');
  }
  public set dnsPolicy(value: string) {
    this._dnsPolicy = value;
  }
  public resetDnsPolicy() {
    this._dnsPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dnsPolicyInput() {
    return this._dnsPolicy;
  }

  // ephemeral_containers - computed: false, optional: true, required: false
  private _ephemeralContainers = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecEphemeralContainersList(this, "ephemeral_containers", false);
  public get ephemeralContainers() {
    return this._ephemeralContainers;
  }
  public putEphemeralContainers(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecEphemeralContainers[] | cdktf.IResolvable) {
    this._ephemeralContainers.internalValue = value;
  }
  public resetEphemeralContainers() {
    this._ephemeralContainers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ephemeralContainersInput() {
    return this._ephemeralContainers.internalValue;
  }

  // init_containers - computed: false, optional: true, required: false
  private _initContainers = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainersList(this, "init_containers", false);
  public get initContainers() {
    return this._initContainers;
  }
  public putInitContainers(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecInitContainers[] | cdktf.IResolvable) {
    this._initContainers.internalValue = value;
  }
  public resetInitContainers() {
    this._initContainers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get initContainersInput() {
    return this._initContainers.internalValue;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // restart_policy - computed: false, optional: true, required: false
  private _restartPolicy?: string; 
  public get restartPolicy() {
    return this.getStringAttribute('restart_policy');
  }
  public set restartPolicy(value: string) {
    this._restartPolicy = value;
  }
  public resetRestartPolicy() {
    this._restartPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get restartPolicyInput() {
    return this._restartPolicy;
  }

  // security_context - computed: false, optional: true, required: false
  private _securityContext = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContextOutputReference(this, "security_context");
  public get securityContext() {
    return this._securityContext;
  }
  public putSecurityContext(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecSecurityContext) {
    this._securityContext.internalValue = value;
  }
  public resetSecurityContext() {
    this._securityContext.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get securityContextInput() {
    return this._securityContext.internalValue;
  }

  // termination_grace_period_seconds - computed: false, optional: true, required: false
  private _terminationGracePeriodSeconds?: number; 
  public get terminationGracePeriodSeconds() {
    return this.getNumberAttribute('termination_grace_period_seconds');
  }
  public set terminationGracePeriodSeconds(value: number) {
    this._terminationGracePeriodSeconds = value;
  }
  public resetTerminationGracePeriodSeconds() {
    this._terminationGracePeriodSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get terminationGracePeriodSecondsInput() {
    return this._terminationGracePeriodSeconds;
  }

  // topology_spread_constraints - computed: false, optional: true, required: false
  private _topologySpreadConstraints = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraintsList(this, "topology_spread_constraints", false);
  public get topologySpreadConstraints() {
    return this._topologySpreadConstraints;
  }
  public putTopologySpreadConstraints(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecTopologySpreadConstraints[] | cdktf.IResolvable) {
    this._topologySpreadConstraints.internalValue = value;
  }
  public resetTopologySpreadConstraints() {
    this._topologySpreadConstraints.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologySpreadConstraintsInput() {
    return this._topologySpreadConstraints.internalValue;
  }

  // volumes - computed: false, optional: true, required: false
  private _volumes = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumesList(this, "volumes", false);
  public get volumes() {
    return this._volumes;
  }
  public putVolumes(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecVolumes[] | cdktf.IResolvable) {
    this._volumes.internalValue = value;
  }
  public resetVolumes() {
    this._volumes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumesInput() {
    return this._volumes.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplate {
  /**
  * the specification
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#spec DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpec;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    spec: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecToTerraform(struct!.spec),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    spec: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._spec.internalValue = value.spec;
    }
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinity {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Defines a set of nodes the integration pod(s) are eligible to be scheduled on, based on labels on the node.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#node_affinity_labels DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#node_affinity_labels}
  */
  readonly nodeAffinityLabels?: string[];
  /**
  * Always co-locates multiple replicas of the integration in the same node (default 'false').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pod_affinity DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pod_affinity}
  */
  readonly podAffinity?: boolean | cdktf.IResolvable;
  /**
  * Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the integration pod(s) should be co-located with.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pod_affinity_labels DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pod_affinity_labels}
  */
  readonly podAffinityLabels?: string[];
  /**
  * Never co-locates multiple replicas of the integration in the same node (default 'false').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pod_anti_affinity DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pod_anti_affinity}
  */
  readonly podAntiAffinity?: boolean | cdktf.IResolvable;
  /**
  * Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the integration pod(s) should not be co-located with.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pod_anti_affinity_labels DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pod_anti_affinity_labels}
  */
  readonly podAntiAffinityLabels?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinityToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    node_affinity_labels: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodeAffinityLabels),
    pod_affinity: cdktf.booleanToTerraform(struct!.podAffinity),
    pod_affinity_labels: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podAffinityLabels),
    pod_anti_affinity: cdktf.booleanToTerraform(struct!.podAntiAffinity),
    pod_anti_affinity_labels: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podAntiAffinityLabels),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinityToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinity | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    node_affinity_labels: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodeAffinityLabels),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_affinity: {
      value: cdktf.booleanToHclTerraform(struct!.podAffinity),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    pod_affinity_labels: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podAffinityLabels),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_anti_affinity: {
      value: cdktf.booleanToHclTerraform(struct!.podAntiAffinity),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    pod_anti_affinity_labels: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podAntiAffinityLabels),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinityOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinity | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._nodeAffinityLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeAffinityLabels = this._nodeAffinityLabels;
    }
    if (this._podAffinity !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAffinity = this._podAffinity;
    }
    if (this._podAffinityLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAffinityLabels = this._podAffinityLabels;
    }
    if (this._podAntiAffinity !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAntiAffinity = this._podAntiAffinity;
    }
    if (this._podAntiAffinityLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.podAntiAffinityLabels = this._podAntiAffinityLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinity | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._nodeAffinityLabels = undefined;
      this._podAffinity = undefined;
      this._podAffinityLabels = undefined;
      this._podAntiAffinity = undefined;
      this._podAntiAffinityLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._nodeAffinityLabels = value.nodeAffinityLabels;
      this._podAffinity = value.podAffinity;
      this._podAffinityLabels = value.podAffinityLabels;
      this._podAntiAffinity = value.podAntiAffinity;
      this._podAntiAffinityLabels = value.podAntiAffinityLabels;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // node_affinity_labels - computed: false, optional: true, required: false
  private _nodeAffinityLabels?: string[]; 
  public get nodeAffinityLabels() {
    return this.getListAttribute('node_affinity_labels');
  }
  public set nodeAffinityLabels(value: string[]) {
    this._nodeAffinityLabels = value;
  }
  public resetNodeAffinityLabels() {
    this._nodeAffinityLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeAffinityLabelsInput() {
    return this._nodeAffinityLabels;
  }

  // pod_affinity - computed: false, optional: true, required: false
  private _podAffinity?: boolean | cdktf.IResolvable; 
  public get podAffinity() {
    return this.getBooleanAttribute('pod_affinity');
  }
  public set podAffinity(value: boolean | cdktf.IResolvable) {
    this._podAffinity = value;
  }
  public resetPodAffinity() {
    this._podAffinity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAffinityInput() {
    return this._podAffinity;
  }

  // pod_affinity_labels - computed: false, optional: true, required: false
  private _podAffinityLabels?: string[]; 
  public get podAffinityLabels() {
    return this.getListAttribute('pod_affinity_labels');
  }
  public set podAffinityLabels(value: string[]) {
    this._podAffinityLabels = value;
  }
  public resetPodAffinityLabels() {
    this._podAffinityLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAffinityLabelsInput() {
    return this._podAffinityLabels;
  }

  // pod_anti_affinity - computed: false, optional: true, required: false
  private _podAntiAffinity?: boolean | cdktf.IResolvable; 
  public get podAntiAffinity() {
    return this.getBooleanAttribute('pod_anti_affinity');
  }
  public set podAntiAffinity(value: boolean | cdktf.IResolvable) {
    this._podAntiAffinity = value;
  }
  public resetPodAntiAffinity() {
    this._podAntiAffinity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAntiAffinityInput() {
    return this._podAntiAffinity;
  }

  // pod_anti_affinity_labels - computed: false, optional: true, required: false
  private _podAntiAffinityLabels?: string[]; 
  public get podAntiAffinityLabels() {
    return this.getListAttribute('pod_anti_affinity_labels');
  }
  public set podAntiAffinityLabels(value: string[]) {
    this._podAntiAffinityLabels = value;
  }
  public resetPodAntiAffinityLabels() {
    this._podAntiAffinityLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podAntiAffinityLabelsInput() {
    return this._podAntiAffinityLabels;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilder {
  /**
  * When using 'pod' strategy, annotation to use for the builder pod.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#annotations DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Specify a base image. In order to have the application working properly it must be a container image which has a Java JDK installed and ready to use on path (ie '/usr/bin/java').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#base_image DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#base_image}
  */
  readonly baseImage?: string;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Use the incremental image build option, to reuse existing containers (default 'true')
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#incremental_image_build DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#incremental_image_build}
  */
  readonly incrementalImageBuild?: boolean | cdktf.IResolvable;
  /**
  * When using 'pod' strategy, the maximum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name 'builder'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#limit_cpu DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#limit_cpu}
  */
  readonly limitCpu?: string;
  /**
  * When using 'pod' strategy, the maximum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name 'builder'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#limit_memory DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#limit_memory}
  */
  readonly limitMemory?: string;
  /**
  * A list of references pointing to configmaps/secrets that contains a maven profile. This configmap/secret is a resource of the IntegrationKit created, therefore it needs to be present in the namespace where the operator is going to create the IntegrationKit. The content of the maven profile is expected to be a text containing a valid maven profile starting with '<profile>' and ending with '</profile>' that will be integrated as an inline profile in the POM. Syntax: [configmap|secret]:name[/key], where name represents the resource name, key optionally represents the resource key to be filtered (default key value = profile.xml).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#maven_profiles DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#maven_profiles}
  */
  readonly mavenProfiles?: string[];
  /**
  * Defines a set of nodes the builder pod is eligible to be scheduled on, based on labels on the node.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#node_selector DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * The build order strategy to use, either 'dependencies', 'fifo' or 'sequential' (default is the platform default)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#order_strategy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#order_strategy}
  */
  readonly orderStrategy?: string;
  /**
  * The list of manifest platforms to use to build a container image (default 'linux/amd64').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#platforms DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#platforms}
  */
  readonly platforms?: string[];
  /**
  * A list of properties to be provided to the build task
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#properties}
  */
  readonly properties?: string[];
  /**
  * When using 'pod' strategy, the minimum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name 'builder'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#request_cpu DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#request_cpu}
  */
  readonly requestCpu?: string;
  /**
  * When using 'pod' strategy, the minimum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name 'builder'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#request_memory DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#request_memory}
  */
  readonly requestMemory?: string;
  /**
  * The strategy to use, either 'pod' or 'routine' (default 'routine')
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#strategy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#strategy}
  */
  readonly strategy?: string;
  /**
  * A list of tasks to be executed (available only when using 'pod' strategy) with format '<name>;<container-image>;<container-command>'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tasks DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tasks}
  */
  readonly tasks?: string[];
  /**
  * A list of tasks sorted by the order of execution in a csv format, ie, '<taskName1>,<taskName2>,...'. Mind that you must include also the operator tasks ('builder', 'quarkus-native', 'package', 'jib', 's2i') if you need to execute them. Useful only with 'pod' strategy.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tasks_filter DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tasks_filter}
  */
  readonly tasksFilter?: string;
  /**
  * A list of limit cpu configuration for the specific task with format '<task-name>:<limit-cpu-conf>'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tasks_limit_cpu DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tasks_limit_cpu}
  */
  readonly tasksLimitCpu?: string[];
  /**
  * A list of limit memory configuration for the specific task with format '<task-name>:<limit-memory-conf>'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tasks_limit_memory DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tasks_limit_memory}
  */
  readonly tasksLimitMemory?: string[];
  /**
  * A list of request cpu configuration for the specific task with format '<task-name>:<request-cpu-conf>'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tasks_request_cpu DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tasks_request_cpu}
  */
  readonly tasksRequestCpu?: string[];
  /**
  * A list of request memory configuration for the specific task with format '<task-name>:<request-memory-conf>'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tasks_request_memory DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tasks_request_memory}
  */
  readonly tasksRequestMemory?: string[];
  /**
  * Enable verbose logging on build components that support it (e.g. Kaniko build pod). Deprecated no longer in use
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#verbose DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#verbose}
  */
  readonly verbose?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilderToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    base_image: cdktf.stringToTerraform(struct!.baseImage),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    incremental_image_build: cdktf.booleanToTerraform(struct!.incrementalImageBuild),
    limit_cpu: cdktf.stringToTerraform(struct!.limitCpu),
    limit_memory: cdktf.stringToTerraform(struct!.limitMemory),
    maven_profiles: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.mavenProfiles),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    order_strategy: cdktf.stringToTerraform(struct!.orderStrategy),
    platforms: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.platforms),
    properties: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.properties),
    request_cpu: cdktf.stringToTerraform(struct!.requestCpu),
    request_memory: cdktf.stringToTerraform(struct!.requestMemory),
    strategy: cdktf.stringToTerraform(struct!.strategy),
    tasks: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.tasks),
    tasks_filter: cdktf.stringToTerraform(struct!.tasksFilter),
    tasks_limit_cpu: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.tasksLimitCpu),
    tasks_limit_memory: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.tasksLimitMemory),
    tasks_request_cpu: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.tasksRequestCpu),
    tasks_request_memory: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.tasksRequestMemory),
    verbose: cdktf.booleanToTerraform(struct!.verbose),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilderToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    base_image: {
      value: cdktf.stringToHclTerraform(struct!.baseImage),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    incremental_image_build: {
      value: cdktf.booleanToHclTerraform(struct!.incrementalImageBuild),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    limit_cpu: {
      value: cdktf.stringToHclTerraform(struct!.limitCpu),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    limit_memory: {
      value: cdktf.stringToHclTerraform(struct!.limitMemory),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    maven_profiles: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.mavenProfiles),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    order_strategy: {
      value: cdktf.stringToHclTerraform(struct!.orderStrategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    platforms: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.platforms),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    properties: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.properties),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    request_cpu: {
      value: cdktf.stringToHclTerraform(struct!.requestCpu),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    request_memory: {
      value: cdktf.stringToHclTerraform(struct!.requestMemory),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    strategy: {
      value: cdktf.stringToHclTerraform(struct!.strategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tasks: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.tasks),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    tasks_filter: {
      value: cdktf.stringToHclTerraform(struct!.tasksFilter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tasks_limit_cpu: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.tasksLimitCpu),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    tasks_limit_memory: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.tasksLimitMemory),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    tasks_request_cpu: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.tasksRequestCpu),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    tasks_request_memory: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.tasksRequestMemory),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    verbose: {
      value: cdktf.booleanToHclTerraform(struct!.verbose),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilder | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._baseImage !== undefined) {
      hasAnyValues = true;
      internalValueResult.baseImage = this._baseImage;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._incrementalImageBuild !== undefined) {
      hasAnyValues = true;
      internalValueResult.incrementalImageBuild = this._incrementalImageBuild;
    }
    if (this._limitCpu !== undefined) {
      hasAnyValues = true;
      internalValueResult.limitCpu = this._limitCpu;
    }
    if (this._limitMemory !== undefined) {
      hasAnyValues = true;
      internalValueResult.limitMemory = this._limitMemory;
    }
    if (this._mavenProfiles !== undefined) {
      hasAnyValues = true;
      internalValueResult.mavenProfiles = this._mavenProfiles;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._orderStrategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.orderStrategy = this._orderStrategy;
    }
    if (this._platforms !== undefined) {
      hasAnyValues = true;
      internalValueResult.platforms = this._platforms;
    }
    if (this._properties !== undefined) {
      hasAnyValues = true;
      internalValueResult.properties = this._properties;
    }
    if (this._requestCpu !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestCpu = this._requestCpu;
    }
    if (this._requestMemory !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestMemory = this._requestMemory;
    }
    if (this._strategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.strategy = this._strategy;
    }
    if (this._tasks !== undefined) {
      hasAnyValues = true;
      internalValueResult.tasks = this._tasks;
    }
    if (this._tasksFilter !== undefined) {
      hasAnyValues = true;
      internalValueResult.tasksFilter = this._tasksFilter;
    }
    if (this._tasksLimitCpu !== undefined) {
      hasAnyValues = true;
      internalValueResult.tasksLimitCpu = this._tasksLimitCpu;
    }
    if (this._tasksLimitMemory !== undefined) {
      hasAnyValues = true;
      internalValueResult.tasksLimitMemory = this._tasksLimitMemory;
    }
    if (this._tasksRequestCpu !== undefined) {
      hasAnyValues = true;
      internalValueResult.tasksRequestCpu = this._tasksRequestCpu;
    }
    if (this._tasksRequestMemory !== undefined) {
      hasAnyValues = true;
      internalValueResult.tasksRequestMemory = this._tasksRequestMemory;
    }
    if (this._verbose !== undefined) {
      hasAnyValues = true;
      internalValueResult.verbose = this._verbose;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilder | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._baseImage = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._incrementalImageBuild = undefined;
      this._limitCpu = undefined;
      this._limitMemory = undefined;
      this._mavenProfiles = undefined;
      this._nodeSelector = undefined;
      this._orderStrategy = undefined;
      this._platforms = undefined;
      this._properties = undefined;
      this._requestCpu = undefined;
      this._requestMemory = undefined;
      this._strategy = undefined;
      this._tasks = undefined;
      this._tasksFilter = undefined;
      this._tasksLimitCpu = undefined;
      this._tasksLimitMemory = undefined;
      this._tasksRequestCpu = undefined;
      this._tasksRequestMemory = undefined;
      this._verbose = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._baseImage = value.baseImage;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._incrementalImageBuild = value.incrementalImageBuild;
      this._limitCpu = value.limitCpu;
      this._limitMemory = value.limitMemory;
      this._mavenProfiles = value.mavenProfiles;
      this._nodeSelector = value.nodeSelector;
      this._orderStrategy = value.orderStrategy;
      this._platforms = value.platforms;
      this._properties = value.properties;
      this._requestCpu = value.requestCpu;
      this._requestMemory = value.requestMemory;
      this._strategy = value.strategy;
      this._tasks = value.tasks;
      this._tasksFilter = value.tasksFilter;
      this._tasksLimitCpu = value.tasksLimitCpu;
      this._tasksLimitMemory = value.tasksLimitMemory;
      this._tasksRequestCpu = value.tasksRequestCpu;
      this._tasksRequestMemory = value.tasksRequestMemory;
      this._verbose = value.verbose;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // base_image - computed: false, optional: true, required: false
  private _baseImage?: string; 
  public get baseImage() {
    return this.getStringAttribute('base_image');
  }
  public set baseImage(value: string) {
    this._baseImage = value;
  }
  public resetBaseImage() {
    this._baseImage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get baseImageInput() {
    return this._baseImage;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // incremental_image_build - computed: false, optional: true, required: false
  private _incrementalImageBuild?: boolean | cdktf.IResolvable; 
  public get incrementalImageBuild() {
    return this.getBooleanAttribute('incremental_image_build');
  }
  public set incrementalImageBuild(value: boolean | cdktf.IResolvable) {
    this._incrementalImageBuild = value;
  }
  public resetIncrementalImageBuild() {
    this._incrementalImageBuild = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get incrementalImageBuildInput() {
    return this._incrementalImageBuild;
  }

  // limit_cpu - computed: false, optional: true, required: false
  private _limitCpu?: string; 
  public get limitCpu() {
    return this.getStringAttribute('limit_cpu');
  }
  public set limitCpu(value: string) {
    this._limitCpu = value;
  }
  public resetLimitCpu() {
    this._limitCpu = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitCpuInput() {
    return this._limitCpu;
  }

  // limit_memory - computed: false, optional: true, required: false
  private _limitMemory?: string; 
  public get limitMemory() {
    return this.getStringAttribute('limit_memory');
  }
  public set limitMemory(value: string) {
    this._limitMemory = value;
  }
  public resetLimitMemory() {
    this._limitMemory = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitMemoryInput() {
    return this._limitMemory;
  }

  // maven_profiles - computed: false, optional: true, required: false
  private _mavenProfiles?: string[]; 
  public get mavenProfiles() {
    return this.getListAttribute('maven_profiles');
  }
  public set mavenProfiles(value: string[]) {
    this._mavenProfiles = value;
  }
  public resetMavenProfiles() {
    this._mavenProfiles = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mavenProfilesInput() {
    return this._mavenProfiles;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // order_strategy - computed: false, optional: true, required: false
  private _orderStrategy?: string; 
  public get orderStrategy() {
    return this.getStringAttribute('order_strategy');
  }
  public set orderStrategy(value: string) {
    this._orderStrategy = value;
  }
  public resetOrderStrategy() {
    this._orderStrategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get orderStrategyInput() {
    return this._orderStrategy;
  }

  // platforms - computed: false, optional: true, required: false
  private _platforms?: string[]; 
  public get platforms() {
    return this.getListAttribute('platforms');
  }
  public set platforms(value: string[]) {
    this._platforms = value;
  }
  public resetPlatforms() {
    this._platforms = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get platformsInput() {
    return this._platforms;
  }

  // properties - computed: false, optional: true, required: false
  private _properties?: string[]; 
  public get properties() {
    return this.getListAttribute('properties');
  }
  public set properties(value: string[]) {
    this._properties = value;
  }
  public resetProperties() {
    this._properties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get propertiesInput() {
    return this._properties;
  }

  // request_cpu - computed: false, optional: true, required: false
  private _requestCpu?: string; 
  public get requestCpu() {
    return this.getStringAttribute('request_cpu');
  }
  public set requestCpu(value: string) {
    this._requestCpu = value;
  }
  public resetRequestCpu() {
    this._requestCpu = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestCpuInput() {
    return this._requestCpu;
  }

  // request_memory - computed: false, optional: true, required: false
  private _requestMemory?: string; 
  public get requestMemory() {
    return this.getStringAttribute('request_memory');
  }
  public set requestMemory(value: string) {
    this._requestMemory = value;
  }
  public resetRequestMemory() {
    this._requestMemory = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestMemoryInput() {
    return this._requestMemory;
  }

  // strategy - computed: false, optional: true, required: false
  private _strategy?: string; 
  public get strategy() {
    return this.getStringAttribute('strategy');
  }
  public set strategy(value: string) {
    this._strategy = value;
  }
  public resetStrategy() {
    this._strategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get strategyInput() {
    return this._strategy;
  }

  // tasks - computed: false, optional: true, required: false
  private _tasks?: string[]; 
  public get tasks() {
    return this.getListAttribute('tasks');
  }
  public set tasks(value: string[]) {
    this._tasks = value;
  }
  public resetTasks() {
    this._tasks = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tasksInput() {
    return this._tasks;
  }

  // tasks_filter - computed: false, optional: true, required: false
  private _tasksFilter?: string; 
  public get tasksFilter() {
    return this.getStringAttribute('tasks_filter');
  }
  public set tasksFilter(value: string) {
    this._tasksFilter = value;
  }
  public resetTasksFilter() {
    this._tasksFilter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tasksFilterInput() {
    return this._tasksFilter;
  }

  // tasks_limit_cpu - computed: false, optional: true, required: false
  private _tasksLimitCpu?: string[]; 
  public get tasksLimitCpu() {
    return this.getListAttribute('tasks_limit_cpu');
  }
  public set tasksLimitCpu(value: string[]) {
    this._tasksLimitCpu = value;
  }
  public resetTasksLimitCpu() {
    this._tasksLimitCpu = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tasksLimitCpuInput() {
    return this._tasksLimitCpu;
  }

  // tasks_limit_memory - computed: false, optional: true, required: false
  private _tasksLimitMemory?: string[]; 
  public get tasksLimitMemory() {
    return this.getListAttribute('tasks_limit_memory');
  }
  public set tasksLimitMemory(value: string[]) {
    this._tasksLimitMemory = value;
  }
  public resetTasksLimitMemory() {
    this._tasksLimitMemory = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tasksLimitMemoryInput() {
    return this._tasksLimitMemory;
  }

  // tasks_request_cpu - computed: false, optional: true, required: false
  private _tasksRequestCpu?: string[]; 
  public get tasksRequestCpu() {
    return this.getListAttribute('tasks_request_cpu');
  }
  public set tasksRequestCpu(value: string[]) {
    this._tasksRequestCpu = value;
  }
  public resetTasksRequestCpu() {
    this._tasksRequestCpu = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tasksRequestCpuInput() {
    return this._tasksRequestCpu;
  }

  // tasks_request_memory - computed: false, optional: true, required: false
  private _tasksRequestMemory?: string[]; 
  public get tasksRequestMemory() {
    return this.getListAttribute('tasks_request_memory');
  }
  public set tasksRequestMemory(value: string[]) {
    this._tasksRequestMemory = value;
  }
  public resetTasksRequestMemory() {
    this._tasksRequestMemory = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tasksRequestMemoryInput() {
    return this._tasksRequestMemory;
  }

  // verbose - computed: false, optional: true, required: false
  private _verbose?: boolean | cdktf.IResolvable; 
  public get verbose() {
    return this.getBooleanAttribute('verbose');
  }
  public set verbose(value: boolean | cdktf.IResolvable) {
    this._verbose = value;
  }
  public resetVerbose() {
    this._verbose = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get verboseInput() {
    return this._verbose;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamel {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * A list of properties to be provided to the Integration runtime
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#properties}
  */
  readonly properties?: string[];
  /**
  * The camel-k-runtime version to use for the integration. It overrides the default version set in the Integration Platform. You can use a fixed version (for example '3.2.3') or a semantic version (for example '3.x') which will try to resolve to the best matching Catalog existing on the cluster.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#runtime_version DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#runtime_version}
  */
  readonly runtimeVersion?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamelToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamel | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    properties: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.properties),
    runtime_version: cdktf.stringToTerraform(struct!.runtimeVersion),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamelToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamel | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    properties: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.properties),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    runtime_version: {
      value: cdktf.stringToHclTerraform(struct!.runtimeVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamelOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamel | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._properties !== undefined) {
      hasAnyValues = true;
      internalValueResult.properties = this._properties;
    }
    if (this._runtimeVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.runtimeVersion = this._runtimeVersion;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamel | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._properties = undefined;
      this._runtimeVersion = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._properties = value.properties;
      this._runtimeVersion = value.runtimeVersion;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // properties - computed: false, optional: true, required: false
  private _properties?: string[]; 
  public get properties() {
    return this.getListAttribute('properties');
  }
  public set properties(value: string[]) {
    this._properties = value;
  }
  public resetProperties() {
    this._properties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get propertiesInput() {
    return this._properties;
  }

  // runtime_version - computed: false, optional: true, required: false
  private _runtimeVersion?: string; 
  public get runtimeVersion() {
    return this.getStringAttribute('runtime_version');
  }
  public set runtimeVersion(value: string) {
    this._runtimeVersion = value;
  }
  public resetRuntimeVersion() {
    this._runtimeVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runtimeVersionInput() {
    return this._runtimeVersion;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainer {
  /**
  * Security Context AllowPrivilegeEscalation configuration (default false).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#allow_privilege_escalation DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#allow_privilege_escalation}
  */
  readonly allowPrivilegeEscalation?: boolean | cdktf.IResolvable;
  /**
  * To automatically enable the trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#auto DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#auto}
  */
  readonly auto?: boolean | cdktf.IResolvable;
  /**
  * Security Context Capabilities Add configuration (default none).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#capabilities_add DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#capabilities_add}
  */
  readonly capabilitiesAdd?: string[];
  /**
  * Security Context Capabilities Drop configuration (default ALL).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#capabilities_drop DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#capabilities_drop}
  */
  readonly capabilitiesDrop?: string[];
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Can be used to enable/disable exposure via kubernetes Service.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#expose DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#expose}
  */
  readonly expose?: boolean | cdktf.IResolvable;
  /**
  * The main container image to use for the Integration. When using this parameter the operator will create a synthetic IntegrationKit which won't be able to execute traits requiring CamelCatalog. If the container image you're using is coming from an IntegrationKit, use instead Integration '.spec.integrationKit' parameter. If you're moving the Integration across environments, you will also need to create an 'external' IntegrationKit.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#image DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * The pull policy: Always|Never|IfNotPresent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#image_pull_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#image_pull_policy}
  */
  readonly imagePullPolicy?: string;
  /**
  * The maximum amount of CPU to be provided (default 500 millicores).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#limit_cpu DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#limit_cpu}
  */
  readonly limitCpu?: string;
  /**
  * The maximum amount of memory to be provided (default 512 Mi).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#limit_memory DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#limit_memory}
  */
  readonly limitMemory?: string;
  /**
  * The main container name. It's named 'integration' by default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * To configure a different port exposed by the container (default '8080').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#port DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * To configure a different port name for the port exposed by the container. It defaults to 'http' only when the 'expose' parameter is true.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#port_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#port_name}
  */
  readonly portName?: string;
  /**
  * The minimum amount of CPU required (default 125 millicores).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#request_cpu DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#request_cpu}
  */
  readonly requestCpu?: string;
  /**
  * The minimum amount of memory required (default 128 Mi).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#request_memory DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#request_memory}
  */
  readonly requestMemory?: string;
  /**
  * Security Context RunAsNonRoot configuration (default false).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#run_as_non_root DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#run_as_non_root}
  */
  readonly runAsNonRoot?: boolean | cdktf.IResolvable;
  /**
  * Security Context RunAsUser configuration (default none): this value is automatically retrieved in Openshift clusters when not explicitly set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#run_as_user DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#run_as_user}
  */
  readonly runAsUser?: number;
  /**
  * Security Context SeccompProfileType configuration (default RuntimeDefault).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#seccomp_profile_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#seccomp_profile_type}
  */
  readonly seccompProfileType?: string;
  /**
  * To configure under which service port the container port is to be exposed (default '80').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#service_port DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#service_port}
  */
  readonly servicePort?: number;
  /**
  * To configure under which service port name the container port is to be exposed (default 'http').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#service_port_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#service_port_name}
  */
  readonly servicePortName?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainerToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow_privilege_escalation: cdktf.booleanToTerraform(struct!.allowPrivilegeEscalation),
    auto: cdktf.booleanToTerraform(struct!.auto),
    capabilities_add: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.capabilitiesAdd),
    capabilities_drop: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.capabilitiesDrop),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    expose: cdktf.booleanToTerraform(struct!.expose),
    image: cdktf.stringToTerraform(struct!.image),
    image_pull_policy: cdktf.stringToTerraform(struct!.imagePullPolicy),
    limit_cpu: cdktf.stringToTerraform(struct!.limitCpu),
    limit_memory: cdktf.stringToTerraform(struct!.limitMemory),
    name: cdktf.stringToTerraform(struct!.name),
    port: cdktf.numberToTerraform(struct!.port),
    port_name: cdktf.stringToTerraform(struct!.portName),
    request_cpu: cdktf.stringToTerraform(struct!.requestCpu),
    request_memory: cdktf.stringToTerraform(struct!.requestMemory),
    run_as_non_root: cdktf.booleanToTerraform(struct!.runAsNonRoot),
    run_as_user: cdktf.numberToTerraform(struct!.runAsUser),
    seccomp_profile_type: cdktf.stringToTerraform(struct!.seccompProfileType),
    service_port: cdktf.numberToTerraform(struct!.servicePort),
    service_port_name: cdktf.stringToTerraform(struct!.servicePortName),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainerToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow_privilege_escalation: {
      value: cdktf.booleanToHclTerraform(struct!.allowPrivilegeEscalation),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    auto: {
      value: cdktf.booleanToHclTerraform(struct!.auto),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    capabilities_add: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.capabilitiesAdd),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    capabilities_drop: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.capabilitiesDrop),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    expose: {
      value: cdktf.booleanToHclTerraform(struct!.expose),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_policy: {
      value: cdktf.stringToHclTerraform(struct!.imagePullPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    limit_cpu: {
      value: cdktf.stringToHclTerraform(struct!.limitCpu),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    limit_memory: {
      value: cdktf.stringToHclTerraform(struct!.limitMemory),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port_name: {
      value: cdktf.stringToHclTerraform(struct!.portName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    request_cpu: {
      value: cdktf.stringToHclTerraform(struct!.requestCpu),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    request_memory: {
      value: cdktf.stringToHclTerraform(struct!.requestMemory),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    run_as_non_root: {
      value: cdktf.booleanToHclTerraform(struct!.runAsNonRoot),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user: {
      value: cdktf.numberToHclTerraform(struct!.runAsUser),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    seccomp_profile_type: {
      value: cdktf.stringToHclTerraform(struct!.seccompProfileType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_port: {
      value: cdktf.numberToHclTerraform(struct!.servicePort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    service_port_name: {
      value: cdktf.stringToHclTerraform(struct!.servicePortName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowPrivilegeEscalation !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowPrivilegeEscalation = this._allowPrivilegeEscalation;
    }
    if (this._auto !== undefined) {
      hasAnyValues = true;
      internalValueResult.auto = this._auto;
    }
    if (this._capabilitiesAdd !== undefined) {
      hasAnyValues = true;
      internalValueResult.capabilitiesAdd = this._capabilitiesAdd;
    }
    if (this._capabilitiesDrop !== undefined) {
      hasAnyValues = true;
      internalValueResult.capabilitiesDrop = this._capabilitiesDrop;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._expose !== undefined) {
      hasAnyValues = true;
      internalValueResult.expose = this._expose;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._imagePullPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullPolicy = this._imagePullPolicy;
    }
    if (this._limitCpu !== undefined) {
      hasAnyValues = true;
      internalValueResult.limitCpu = this._limitCpu;
    }
    if (this._limitMemory !== undefined) {
      hasAnyValues = true;
      internalValueResult.limitMemory = this._limitMemory;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._portName !== undefined) {
      hasAnyValues = true;
      internalValueResult.portName = this._portName;
    }
    if (this._requestCpu !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestCpu = this._requestCpu;
    }
    if (this._requestMemory !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestMemory = this._requestMemory;
    }
    if (this._runAsNonRoot !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsNonRoot = this._runAsNonRoot;
    }
    if (this._runAsUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUser = this._runAsUser;
    }
    if (this._seccompProfileType !== undefined) {
      hasAnyValues = true;
      internalValueResult.seccompProfileType = this._seccompProfileType;
    }
    if (this._servicePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.servicePort = this._servicePort;
    }
    if (this._servicePortName !== undefined) {
      hasAnyValues = true;
      internalValueResult.servicePortName = this._servicePortName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowPrivilegeEscalation = undefined;
      this._auto = undefined;
      this._capabilitiesAdd = undefined;
      this._capabilitiesDrop = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._expose = undefined;
      this._image = undefined;
      this._imagePullPolicy = undefined;
      this._limitCpu = undefined;
      this._limitMemory = undefined;
      this._name = undefined;
      this._port = undefined;
      this._portName = undefined;
      this._requestCpu = undefined;
      this._requestMemory = undefined;
      this._runAsNonRoot = undefined;
      this._runAsUser = undefined;
      this._seccompProfileType = undefined;
      this._servicePort = undefined;
      this._servicePortName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowPrivilegeEscalation = value.allowPrivilegeEscalation;
      this._auto = value.auto;
      this._capabilitiesAdd = value.capabilitiesAdd;
      this._capabilitiesDrop = value.capabilitiesDrop;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._expose = value.expose;
      this._image = value.image;
      this._imagePullPolicy = value.imagePullPolicy;
      this._limitCpu = value.limitCpu;
      this._limitMemory = value.limitMemory;
      this._name = value.name;
      this._port = value.port;
      this._portName = value.portName;
      this._requestCpu = value.requestCpu;
      this._requestMemory = value.requestMemory;
      this._runAsNonRoot = value.runAsNonRoot;
      this._runAsUser = value.runAsUser;
      this._seccompProfileType = value.seccompProfileType;
      this._servicePort = value.servicePort;
      this._servicePortName = value.servicePortName;
    }
  }

  // allow_privilege_escalation - computed: false, optional: true, required: false
  private _allowPrivilegeEscalation?: boolean | cdktf.IResolvable; 
  public get allowPrivilegeEscalation() {
    return this.getBooleanAttribute('allow_privilege_escalation');
  }
  public set allowPrivilegeEscalation(value: boolean | cdktf.IResolvable) {
    this._allowPrivilegeEscalation = value;
  }
  public resetAllowPrivilegeEscalation() {
    this._allowPrivilegeEscalation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowPrivilegeEscalationInput() {
    return this._allowPrivilegeEscalation;
  }

  // auto - computed: false, optional: true, required: false
  private _auto?: boolean | cdktf.IResolvable; 
  public get auto() {
    return this.getBooleanAttribute('auto');
  }
  public set auto(value: boolean | cdktf.IResolvable) {
    this._auto = value;
  }
  public resetAuto() {
    this._auto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoInput() {
    return this._auto;
  }

  // capabilities_add - computed: false, optional: true, required: false
  private _capabilitiesAdd?: string[]; 
  public get capabilitiesAdd() {
    return this.getListAttribute('capabilities_add');
  }
  public set capabilitiesAdd(value: string[]) {
    this._capabilitiesAdd = value;
  }
  public resetCapabilitiesAdd() {
    this._capabilitiesAdd = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get capabilitiesAddInput() {
    return this._capabilitiesAdd;
  }

  // capabilities_drop - computed: false, optional: true, required: false
  private _capabilitiesDrop?: string[]; 
  public get capabilitiesDrop() {
    return this.getListAttribute('capabilities_drop');
  }
  public set capabilitiesDrop(value: string[]) {
    this._capabilitiesDrop = value;
  }
  public resetCapabilitiesDrop() {
    this._capabilitiesDrop = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get capabilitiesDropInput() {
    return this._capabilitiesDrop;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // expose - computed: false, optional: true, required: false
  private _expose?: boolean | cdktf.IResolvable; 
  public get expose() {
    return this.getBooleanAttribute('expose');
  }
  public set expose(value: boolean | cdktf.IResolvable) {
    this._expose = value;
  }
  public resetExpose() {
    this._expose = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exposeInput() {
    return this._expose;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // image_pull_policy - computed: false, optional: true, required: false
  private _imagePullPolicy?: string; 
  public get imagePullPolicy() {
    return this.getStringAttribute('image_pull_policy');
  }
  public set imagePullPolicy(value: string) {
    this._imagePullPolicy = value;
  }
  public resetImagePullPolicy() {
    this._imagePullPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullPolicyInput() {
    return this._imagePullPolicy;
  }

  // limit_cpu - computed: false, optional: true, required: false
  private _limitCpu?: string; 
  public get limitCpu() {
    return this.getStringAttribute('limit_cpu');
  }
  public set limitCpu(value: string) {
    this._limitCpu = value;
  }
  public resetLimitCpu() {
    this._limitCpu = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitCpuInput() {
    return this._limitCpu;
  }

  // limit_memory - computed: false, optional: true, required: false
  private _limitMemory?: string; 
  public get limitMemory() {
    return this.getStringAttribute('limit_memory');
  }
  public set limitMemory(value: string) {
    this._limitMemory = value;
  }
  public resetLimitMemory() {
    this._limitMemory = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get limitMemoryInput() {
    return this._limitMemory;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // port_name - computed: false, optional: true, required: false
  private _portName?: string; 
  public get portName() {
    return this.getStringAttribute('port_name');
  }
  public set portName(value: string) {
    this._portName = value;
  }
  public resetPortName() {
    this._portName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portNameInput() {
    return this._portName;
  }

  // request_cpu - computed: false, optional: true, required: false
  private _requestCpu?: string; 
  public get requestCpu() {
    return this.getStringAttribute('request_cpu');
  }
  public set requestCpu(value: string) {
    this._requestCpu = value;
  }
  public resetRequestCpu() {
    this._requestCpu = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestCpuInput() {
    return this._requestCpu;
  }

  // request_memory - computed: false, optional: true, required: false
  private _requestMemory?: string; 
  public get requestMemory() {
    return this.getStringAttribute('request_memory');
  }
  public set requestMemory(value: string) {
    this._requestMemory = value;
  }
  public resetRequestMemory() {
    this._requestMemory = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestMemoryInput() {
    return this._requestMemory;
  }

  // run_as_non_root - computed: false, optional: true, required: false
  private _runAsNonRoot?: boolean | cdktf.IResolvable; 
  public get runAsNonRoot() {
    return this.getBooleanAttribute('run_as_non_root');
  }
  public set runAsNonRoot(value: boolean | cdktf.IResolvable) {
    this._runAsNonRoot = value;
  }
  public resetRunAsNonRoot() {
    this._runAsNonRoot = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsNonRootInput() {
    return this._runAsNonRoot;
  }

  // run_as_user - computed: false, optional: true, required: false
  private _runAsUser?: number; 
  public get runAsUser() {
    return this.getNumberAttribute('run_as_user');
  }
  public set runAsUser(value: number) {
    this._runAsUser = value;
  }
  public resetRunAsUser() {
    this._runAsUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserInput() {
    return this._runAsUser;
  }

  // seccomp_profile_type - computed: false, optional: true, required: false
  private _seccompProfileType?: string; 
  public get seccompProfileType() {
    return this.getStringAttribute('seccomp_profile_type');
  }
  public set seccompProfileType(value: string) {
    this._seccompProfileType = value;
  }
  public resetSeccompProfileType() {
    this._seccompProfileType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seccompProfileTypeInput() {
    return this._seccompProfileType;
  }

  // service_port - computed: false, optional: true, required: false
  private _servicePort?: number; 
  public get servicePort() {
    return this.getNumberAttribute('service_port');
  }
  public set servicePort(value: number) {
    this._servicePort = value;
  }
  public resetServicePort() {
    this._servicePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get servicePortInput() {
    return this._servicePort;
  }

  // service_port_name - computed: false, optional: true, required: false
  private _servicePortName?: string; 
  public get servicePortName() {
    return this.getStringAttribute('service_port_name');
  }
  public set servicePortName(value: string) {
    this._servicePortName = value;
  }
  public resetServicePortName() {
    this._servicePortName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get servicePortNameInput() {
    return this._servicePortName;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCron {
  /**
  * Specifies the duration in seconds, relative to the start time, that the job may be continuously active before it is considered to be failed. It defaults to 60s.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#active_deadline_seconds DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#active_deadline_seconds}
  */
  readonly activeDeadlineSeconds?: number;
  /**
  * Automatically deploy the integration as CronJob when all routes are either starting from a periodic consumer (only 'cron', 'timer' and 'quartz' are supported) or a passive consumer (e.g. 'direct' is a passive consumer). It's required that all periodic consumers have the same period, and it can be expressed as cron schedule (e.g. '1m' can be expressed as '0/1 * * * *', while '35m' or '50s' cannot).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#auto DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#auto}
  */
  readonly auto?: boolean | cdktf.IResolvable;
  /**
  * Specifies the number of retries before marking the job failed. It defaults to 2.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#backoff_limit DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#backoff_limit}
  */
  readonly backoffLimit?: number;
  /**
  * A comma separated list of the Camel components that need to be customized in order for them to work when the schedule is triggered externally by Kubernetes. Supported components are currently: 'cron', 'timer' and 'quartz'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#components DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#components}
  */
  readonly components?: string;
  /**
  * Specifies how to treat concurrent executions of a Job. Valid values are: - 'Allow': allows CronJobs to run concurrently; - 'Forbid' (default): forbids concurrent runs, skipping next run if previous run hasn't finished yet; - 'Replace': cancels currently running job and replaces it with a new one
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#concurrency_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#concurrency_policy}
  */
  readonly concurrencyPolicy?: string;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Use the default Camel implementation of the 'cron' endpoint ('quartz') instead of trying to materialize the integration as Kubernetes CronJob.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#fallback DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#fallback}
  */
  readonly fallback?: boolean | cdktf.IResolvable;
  /**
  * The CronJob schedule for the whole integration. If multiple routes are declared, they must have the same schedule for this mechanism to work correctly.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#schedule DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#schedule}
  */
  readonly schedule?: string;
  /**
  * Optional deadline in seconds for starting the job if it misses scheduled time for any reason. Missed jobs executions will be counted as failed ones.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#starting_deadline_seconds DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#starting_deadline_seconds}
  */
  readonly startingDeadlineSeconds?: number;
  /**
  * The timezone that the CronJob will run on
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#time_zone DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#time_zone}
  */
  readonly timeZone?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCronToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCron | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    active_deadline_seconds: cdktf.numberToTerraform(struct!.activeDeadlineSeconds),
    auto: cdktf.booleanToTerraform(struct!.auto),
    backoff_limit: cdktf.numberToTerraform(struct!.backoffLimit),
    components: cdktf.stringToTerraform(struct!.components),
    concurrency_policy: cdktf.stringToTerraform(struct!.concurrencyPolicy),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    fallback: cdktf.booleanToTerraform(struct!.fallback),
    schedule: cdktf.stringToTerraform(struct!.schedule),
    starting_deadline_seconds: cdktf.numberToTerraform(struct!.startingDeadlineSeconds),
    time_zone: cdktf.stringToTerraform(struct!.timeZone),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCronToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCron | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    active_deadline_seconds: {
      value: cdktf.numberToHclTerraform(struct!.activeDeadlineSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    auto: {
      value: cdktf.booleanToHclTerraform(struct!.auto),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    backoff_limit: {
      value: cdktf.numberToHclTerraform(struct!.backoffLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    components: {
      value: cdktf.stringToHclTerraform(struct!.components),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    concurrency_policy: {
      value: cdktf.stringToHclTerraform(struct!.concurrencyPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    fallback: {
      value: cdktf.booleanToHclTerraform(struct!.fallback),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    schedule: {
      value: cdktf.stringToHclTerraform(struct!.schedule),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    starting_deadline_seconds: {
      value: cdktf.numberToHclTerraform(struct!.startingDeadlineSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    time_zone: {
      value: cdktf.stringToHclTerraform(struct!.timeZone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCronOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCron | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._activeDeadlineSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.activeDeadlineSeconds = this._activeDeadlineSeconds;
    }
    if (this._auto !== undefined) {
      hasAnyValues = true;
      internalValueResult.auto = this._auto;
    }
    if (this._backoffLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.backoffLimit = this._backoffLimit;
    }
    if (this._components !== undefined) {
      hasAnyValues = true;
      internalValueResult.components = this._components;
    }
    if (this._concurrencyPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.concurrencyPolicy = this._concurrencyPolicy;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._fallback !== undefined) {
      hasAnyValues = true;
      internalValueResult.fallback = this._fallback;
    }
    if (this._schedule !== undefined) {
      hasAnyValues = true;
      internalValueResult.schedule = this._schedule;
    }
    if (this._startingDeadlineSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.startingDeadlineSeconds = this._startingDeadlineSeconds;
    }
    if (this._timeZone !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeZone = this._timeZone;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCron | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._activeDeadlineSeconds = undefined;
      this._auto = undefined;
      this._backoffLimit = undefined;
      this._components = undefined;
      this._concurrencyPolicy = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._fallback = undefined;
      this._schedule = undefined;
      this._startingDeadlineSeconds = undefined;
      this._timeZone = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._activeDeadlineSeconds = value.activeDeadlineSeconds;
      this._auto = value.auto;
      this._backoffLimit = value.backoffLimit;
      this._components = value.components;
      this._concurrencyPolicy = value.concurrencyPolicy;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._fallback = value.fallback;
      this._schedule = value.schedule;
      this._startingDeadlineSeconds = value.startingDeadlineSeconds;
      this._timeZone = value.timeZone;
    }
  }

  // active_deadline_seconds - computed: false, optional: true, required: false
  private _activeDeadlineSeconds?: number; 
  public get activeDeadlineSeconds() {
    return this.getNumberAttribute('active_deadline_seconds');
  }
  public set activeDeadlineSeconds(value: number) {
    this._activeDeadlineSeconds = value;
  }
  public resetActiveDeadlineSeconds() {
    this._activeDeadlineSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get activeDeadlineSecondsInput() {
    return this._activeDeadlineSeconds;
  }

  // auto - computed: false, optional: true, required: false
  private _auto?: boolean | cdktf.IResolvable; 
  public get auto() {
    return this.getBooleanAttribute('auto');
  }
  public set auto(value: boolean | cdktf.IResolvable) {
    this._auto = value;
  }
  public resetAuto() {
    this._auto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoInput() {
    return this._auto;
  }

  // backoff_limit - computed: false, optional: true, required: false
  private _backoffLimit?: number; 
  public get backoffLimit() {
    return this.getNumberAttribute('backoff_limit');
  }
  public set backoffLimit(value: number) {
    this._backoffLimit = value;
  }
  public resetBackoffLimit() {
    this._backoffLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get backoffLimitInput() {
    return this._backoffLimit;
  }

  // components - computed: false, optional: true, required: false
  private _components?: string; 
  public get components() {
    return this.getStringAttribute('components');
  }
  public set components(value: string) {
    this._components = value;
  }
  public resetComponents() {
    this._components = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get componentsInput() {
    return this._components;
  }

  // concurrency_policy - computed: false, optional: true, required: false
  private _concurrencyPolicy?: string; 
  public get concurrencyPolicy() {
    return this.getStringAttribute('concurrency_policy');
  }
  public set concurrencyPolicy(value: string) {
    this._concurrencyPolicy = value;
  }
  public resetConcurrencyPolicy() {
    this._concurrencyPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get concurrencyPolicyInput() {
    return this._concurrencyPolicy;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // fallback - computed: false, optional: true, required: false
  private _fallback?: boolean | cdktf.IResolvable; 
  public get fallback() {
    return this.getBooleanAttribute('fallback');
  }
  public set fallback(value: boolean | cdktf.IResolvable) {
    this._fallback = value;
  }
  public resetFallback() {
    this._fallback = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fallbackInput() {
    return this._fallback;
  }

  // schedule - computed: false, optional: true, required: false
  private _schedule?: string; 
  public get schedule() {
    return this.getStringAttribute('schedule');
  }
  public set schedule(value: string) {
    this._schedule = value;
  }
  public resetSchedule() {
    this._schedule = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scheduleInput() {
    return this._schedule;
  }

  // starting_deadline_seconds - computed: false, optional: true, required: false
  private _startingDeadlineSeconds?: number; 
  public get startingDeadlineSeconds() {
    return this.getNumberAttribute('starting_deadline_seconds');
  }
  public set startingDeadlineSeconds(value: number) {
    this._startingDeadlineSeconds = value;
  }
  public resetStartingDeadlineSeconds() {
    this._startingDeadlineSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startingDeadlineSecondsInput() {
    return this._startingDeadlineSeconds;
  }

  // time_zone - computed: false, optional: true, required: false
  private _timeZone?: string; 
  public get timeZone() {
    return this.getStringAttribute('time_zone');
  }
  public set timeZone(value: string) {
    this._timeZone = value;
  }
  public resetTimeZone() {
    this._timeZone = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeZoneInput() {
    return this._timeZone;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependencies {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependenciesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependencies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependenciesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependencies | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependenciesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependencies | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependencies | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployer {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Allows to explicitly select the desired deployment kind between 'deployment', 'cron-job' or 'knative-service' when creating the resources for running the integration.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#kind DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Deprecated: won't be able to enforce client side update in the future. Use server-side apply to update the owned resources (default 'true'). Note that it automatically falls back to client-side patching, if SSA is not available, e.g., on old Kubernetes clusters.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#use_ssa DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#use_ssa}
  */
  readonly useSsa?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployerToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    kind: cdktf.stringToTerraform(struct!.kind),
    use_ssa: cdktf.booleanToTerraform(struct!.useSsa),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployerToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployer | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_ssa: {
      value: cdktf.booleanToHclTerraform(struct!.useSsa),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployer | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._useSsa !== undefined) {
      hasAnyValues = true;
      internalValueResult.useSsa = this._useSsa;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployer | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._kind = undefined;
      this._useSsa = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._kind = value.kind;
      this._useSsa = value.useSsa;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // use_ssa - computed: false, optional: true, required: false
  private _useSsa?: boolean | cdktf.IResolvable; 
  public get useSsa() {
    return this.getBooleanAttribute('use_ssa');
  }
  public set useSsa(value: boolean | cdktf.IResolvable) {
    this._useSsa = value;
  }
  public resetUseSsa() {
    this._useSsa = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useSsaInput() {
    return this._useSsa;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployment {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * The maximum time in seconds for the deployment to make progress before it is considered to be failed. It defaults to '60s'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#progress_deadline_seconds DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#progress_deadline_seconds}
  */
  readonly progressDeadlineSeconds?: number;
  /**
  * The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to '25%'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#rolling_update_max_surge DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#rolling_update_max_surge}
  */
  readonly rollingUpdateMaxSurge?: string;
  /**
  * The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to '25%'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#rolling_update_max_unavailable DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#rolling_update_max_unavailable}
  */
  readonly rollingUpdateMaxUnavailable?: string;
  /**
  * The deployment strategy to use to replace existing pods with new ones.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#strategy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#strategy}
  */
  readonly strategy?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeploymentToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployment | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    progress_deadline_seconds: cdktf.numberToTerraform(struct!.progressDeadlineSeconds),
    rolling_update_max_surge: cdktf.stringToTerraform(struct!.rollingUpdateMaxSurge),
    rolling_update_max_unavailable: cdktf.stringToTerraform(struct!.rollingUpdateMaxUnavailable),
    strategy: cdktf.stringToTerraform(struct!.strategy),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeploymentToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployment | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    progress_deadline_seconds: {
      value: cdktf.numberToHclTerraform(struct!.progressDeadlineSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rolling_update_max_surge: {
      value: cdktf.stringToHclTerraform(struct!.rollingUpdateMaxSurge),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    rolling_update_max_unavailable: {
      value: cdktf.stringToHclTerraform(struct!.rollingUpdateMaxUnavailable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    strategy: {
      value: cdktf.stringToHclTerraform(struct!.strategy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeploymentOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployment | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._progressDeadlineSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.progressDeadlineSeconds = this._progressDeadlineSeconds;
    }
    if (this._rollingUpdateMaxSurge !== undefined) {
      hasAnyValues = true;
      internalValueResult.rollingUpdateMaxSurge = this._rollingUpdateMaxSurge;
    }
    if (this._rollingUpdateMaxUnavailable !== undefined) {
      hasAnyValues = true;
      internalValueResult.rollingUpdateMaxUnavailable = this._rollingUpdateMaxUnavailable;
    }
    if (this._strategy !== undefined) {
      hasAnyValues = true;
      internalValueResult.strategy = this._strategy;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployment | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._progressDeadlineSeconds = undefined;
      this._rollingUpdateMaxSurge = undefined;
      this._rollingUpdateMaxUnavailable = undefined;
      this._strategy = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._progressDeadlineSeconds = value.progressDeadlineSeconds;
      this._rollingUpdateMaxSurge = value.rollingUpdateMaxSurge;
      this._rollingUpdateMaxUnavailable = value.rollingUpdateMaxUnavailable;
      this._strategy = value.strategy;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // progress_deadline_seconds - computed: false, optional: true, required: false
  private _progressDeadlineSeconds?: number; 
  public get progressDeadlineSeconds() {
    return this.getNumberAttribute('progress_deadline_seconds');
  }
  public set progressDeadlineSeconds(value: number) {
    this._progressDeadlineSeconds = value;
  }
  public resetProgressDeadlineSeconds() {
    this._progressDeadlineSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get progressDeadlineSecondsInput() {
    return this._progressDeadlineSeconds;
  }

  // rolling_update_max_surge - computed: false, optional: true, required: false
  private _rollingUpdateMaxSurge?: string; 
  public get rollingUpdateMaxSurge() {
    return this.getStringAttribute('rolling_update_max_surge');
  }
  public set rollingUpdateMaxSurge(value: string) {
    this._rollingUpdateMaxSurge = value;
  }
  public resetRollingUpdateMaxSurge() {
    this._rollingUpdateMaxSurge = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rollingUpdateMaxSurgeInput() {
    return this._rollingUpdateMaxSurge;
  }

  // rolling_update_max_unavailable - computed: false, optional: true, required: false
  private _rollingUpdateMaxUnavailable?: string; 
  public get rollingUpdateMaxUnavailable() {
    return this.getStringAttribute('rolling_update_max_unavailable');
  }
  public set rollingUpdateMaxUnavailable(value: string) {
    this._rollingUpdateMaxUnavailable = value;
  }
  public resetRollingUpdateMaxUnavailable() {
    this._rollingUpdateMaxUnavailable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rollingUpdateMaxUnavailableInput() {
    return this._rollingUpdateMaxUnavailable;
  }

  // strategy - computed: false, optional: true, required: false
  private _strategy?: string; 
  public get strategy() {
    return this.getStringAttribute('strategy');
  }
  public set strategy(value: string) {
    this._strategy = value;
  }
  public resetStrategy() {
    this._strategy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get strategyInput() {
    return this._strategy;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironment {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Enables injection of 'NAMESPACE' and 'POD_NAME' environment variables (default 'true')
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#container_meta DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#container_meta}
  */
  readonly containerMeta?: boolean | cdktf.IResolvable;
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Propagates the 'HTTP_PROXY', 'HTTPS_PROXY' and 'NO_PROXY' environment variables (default 'true')
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#http_proxy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#http_proxy}
  */
  readonly httpProxy?: boolean | cdktf.IResolvable;
  /**
  * A list of environment variables to be added to the integration container. The syntax is either VAR=VALUE or VAR=[configmap|secret]:name/key, where name represents the resource name, and key represents the resource key to be mapped as and environment variable. These take precedence over any previously defined environment variables.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#vars DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#vars}
  */
  readonly vars?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironmentToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironment | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    container_meta: cdktf.booleanToTerraform(struct!.containerMeta),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    http_proxy: cdktf.booleanToTerraform(struct!.httpProxy),
    vars: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.vars),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironmentToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironment | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    container_meta: {
      value: cdktf.booleanToHclTerraform(struct!.containerMeta),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    http_proxy: {
      value: cdktf.booleanToHclTerraform(struct!.httpProxy),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    vars: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.vars),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironmentOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironment | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._containerMeta !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerMeta = this._containerMeta;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._httpProxy !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpProxy = this._httpProxy;
    }
    if (this._vars !== undefined) {
      hasAnyValues = true;
      internalValueResult.vars = this._vars;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironment | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._containerMeta = undefined;
      this._enabled = undefined;
      this._httpProxy = undefined;
      this._vars = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._containerMeta = value.containerMeta;
      this._enabled = value.enabled;
      this._httpProxy = value.httpProxy;
      this._vars = value.vars;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // container_meta - computed: false, optional: true, required: false
  private _containerMeta?: boolean | cdktf.IResolvable; 
  public get containerMeta() {
    return this.getBooleanAttribute('container_meta');
  }
  public set containerMeta(value: boolean | cdktf.IResolvable) {
    this._containerMeta = value;
  }
  public resetContainerMeta() {
    this._containerMeta = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerMetaInput() {
    return this._containerMeta;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // http_proxy - computed: false, optional: true, required: false
  private _httpProxy?: boolean | cdktf.IResolvable; 
  public get httpProxy() {
    return this.getBooleanAttribute('http_proxy');
  }
  public set httpProxy(value: boolean | cdktf.IResolvable) {
    this._httpProxy = value;
  }
  public resetHttpProxy() {
    this._httpProxy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpProxyInput() {
    return this._httpProxy;
  }

  // vars - computed: false, optional: true, required: false
  private _vars?: string[]; 
  public get vars() {
    return this.getListAttribute('vars');
  }
  public set vars(value: string[]) {
    this._vars = value;
  }
  public resetVars() {
    this._vars = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get varsInput() {
    return this._vars;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandler {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * The error handler ref name provided or found in application properties
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#ref}
  */
  readonly ref?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandlerToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandler | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    ref: cdktf.stringToTerraform(struct!.ref),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandlerToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandler | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    ref: {
      value: cdktf.stringToHclTerraform(struct!.ref),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandlerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandler | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._ref !== undefined) {
      hasAnyValues = true;
      internalValueResult.ref = this._ref;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandler | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._ref = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._ref = value.ref;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // ref - computed: false, optional: true, required: false
  private _ref?: string; 
  public get ref() {
    return this.getStringAttribute('ref');
  }
  public set ref(value: string) {
    this._ref = value;
  }
  public resetRef() {
    this._ref = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get refInput() {
    return this._ref;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGc {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Discovery client cache to be used, either 'disabled', 'disk' or 'memory' (default 'memory'). Deprecated: to be removed from trait configuration.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#discovery_cache DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#discovery_cache}
  */
  readonly discoveryCache?: string;
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGcToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    discovery_cache: cdktf.stringToTerraform(struct!.discoveryCache),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGcToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    discovery_cache: {
      value: cdktf.stringToHclTerraform(struct!.discoveryCache),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._discoveryCache !== undefined) {
      hasAnyValues = true;
      internalValueResult.discoveryCache = this._discoveryCache;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._discoveryCache = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._discoveryCache = value.discoveryCache;
      this._enabled = value.enabled;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // discovery_cache - computed: false, optional: true, required: false
  private _discoveryCache?: string; 
  public get discoveryCache() {
    return this.getStringAttribute('discovery_cache');
  }
  public set discoveryCache(value: string) {
    this._discoveryCache = value;
  }
  public resetDiscoveryCache() {
    this._discoveryCache = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get discoveryCacheInput() {
    return this._discoveryCache;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealth {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Minimum consecutive failures for the liveness probe to be considered failed after having succeeded.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#liveness_failure_threshold DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#liveness_failure_threshold}
  */
  readonly livenessFailureThreshold?: number;
  /**
  * Number of seconds after the container has started before the liveness probe is initiated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#liveness_initial_delay DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#liveness_initial_delay}
  */
  readonly livenessInitialDelay?: number;
  /**
  * How often to perform the liveness probe.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#liveness_period DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#liveness_period}
  */
  readonly livenessPeriod?: number;
  /**
  * The liveness probe path to use (default provided by the Catalog runtime used).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#liveness_probe DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#liveness_probe}
  */
  readonly livenessProbe?: string;
  /**
  * Configures the liveness probe for the integration container (default 'false').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#liveness_probe_enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#liveness_probe_enabled}
  */
  readonly livenessProbeEnabled?: boolean | cdktf.IResolvable;
  /**
  * Scheme to use when connecting to the liveness probe (default 'HTTP').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#liveness_scheme DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#liveness_scheme}
  */
  readonly livenessScheme?: string;
  /**
  * Minimum consecutive successes for the liveness probe to be considered successful after having failed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#liveness_success_threshold DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#liveness_success_threshold}
  */
  readonly livenessSuccessThreshold?: number;
  /**
  * Number of seconds after which the liveness probe times out.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#liveness_timeout DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#liveness_timeout}
  */
  readonly livenessTimeout?: number;
  /**
  * Minimum consecutive failures for the readiness probe to be considered failed after having succeeded.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#readiness_failure_threshold DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#readiness_failure_threshold}
  */
  readonly readinessFailureThreshold?: number;
  /**
  * Number of seconds after the container has started before the readiness probe is initiated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#readiness_initial_delay DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#readiness_initial_delay}
  */
  readonly readinessInitialDelay?: number;
  /**
  * How often to perform the readiness probe.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#readiness_period DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#readiness_period}
  */
  readonly readinessPeriod?: number;
  /**
  * The readiness probe path to use (default provided by the Catalog runtime used).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#readiness_probe DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#readiness_probe}
  */
  readonly readinessProbe?: string;
  /**
  * Configures the readiness probe for the integration container (default 'true').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#readiness_probe_enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#readiness_probe_enabled}
  */
  readonly readinessProbeEnabled?: boolean | cdktf.IResolvable;
  /**
  * Scheme to use when connecting to the readiness probe (default 'HTTP').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#readiness_scheme DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#readiness_scheme}
  */
  readonly readinessScheme?: string;
  /**
  * Minimum consecutive successes for the readiness probe to be considered successful after having failed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#readiness_success_threshold DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#readiness_success_threshold}
  */
  readonly readinessSuccessThreshold?: number;
  /**
  * Number of seconds after which the readiness probe times out.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#readiness_timeout DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#readiness_timeout}
  */
  readonly readinessTimeout?: number;
  /**
  * Minimum consecutive failures for the startup probe to be considered failed after having succeeded.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#startup_failure_threshold DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#startup_failure_threshold}
  */
  readonly startupFailureThreshold?: number;
  /**
  * Number of seconds after the container has started before the startup probe is initiated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#startup_initial_delay DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#startup_initial_delay}
  */
  readonly startupInitialDelay?: number;
  /**
  * How often to perform the startup probe.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#startup_period DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#startup_period}
  */
  readonly startupPeriod?: number;
  /**
  * The startup probe path to use (default provided by the Catalog runtime used).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#startup_probe DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#startup_probe}
  */
  readonly startupProbe?: string;
  /**
  * Configures the startup probe for the integration container (default 'false').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#startup_probe_enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#startup_probe_enabled}
  */
  readonly startupProbeEnabled?: boolean | cdktf.IResolvable;
  /**
  * Scheme to use when connecting to the startup probe (default 'HTTP').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#startup_scheme DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#startup_scheme}
  */
  readonly startupScheme?: string;
  /**
  * Minimum consecutive successes for the startup probe to be considered successful after having failed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#startup_success_threshold DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#startup_success_threshold}
  */
  readonly startupSuccessThreshold?: number;
  /**
  * Number of seconds after which the startup probe times out.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#startup_timeout DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#startup_timeout}
  */
  readonly startupTimeout?: number;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealthToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    liveness_failure_threshold: cdktf.numberToTerraform(struct!.livenessFailureThreshold),
    liveness_initial_delay: cdktf.numberToTerraform(struct!.livenessInitialDelay),
    liveness_period: cdktf.numberToTerraform(struct!.livenessPeriod),
    liveness_probe: cdktf.stringToTerraform(struct!.livenessProbe),
    liveness_probe_enabled: cdktf.booleanToTerraform(struct!.livenessProbeEnabled),
    liveness_scheme: cdktf.stringToTerraform(struct!.livenessScheme),
    liveness_success_threshold: cdktf.numberToTerraform(struct!.livenessSuccessThreshold),
    liveness_timeout: cdktf.numberToTerraform(struct!.livenessTimeout),
    readiness_failure_threshold: cdktf.numberToTerraform(struct!.readinessFailureThreshold),
    readiness_initial_delay: cdktf.numberToTerraform(struct!.readinessInitialDelay),
    readiness_period: cdktf.numberToTerraform(struct!.readinessPeriod),
    readiness_probe: cdktf.stringToTerraform(struct!.readinessProbe),
    readiness_probe_enabled: cdktf.booleanToTerraform(struct!.readinessProbeEnabled),
    readiness_scheme: cdktf.stringToTerraform(struct!.readinessScheme),
    readiness_success_threshold: cdktf.numberToTerraform(struct!.readinessSuccessThreshold),
    readiness_timeout: cdktf.numberToTerraform(struct!.readinessTimeout),
    startup_failure_threshold: cdktf.numberToTerraform(struct!.startupFailureThreshold),
    startup_initial_delay: cdktf.numberToTerraform(struct!.startupInitialDelay),
    startup_period: cdktf.numberToTerraform(struct!.startupPeriod),
    startup_probe: cdktf.stringToTerraform(struct!.startupProbe),
    startup_probe_enabled: cdktf.booleanToTerraform(struct!.startupProbeEnabled),
    startup_scheme: cdktf.stringToTerraform(struct!.startupScheme),
    startup_success_threshold: cdktf.numberToTerraform(struct!.startupSuccessThreshold),
    startup_timeout: cdktf.numberToTerraform(struct!.startupTimeout),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealthToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    liveness_failure_threshold: {
      value: cdktf.numberToHclTerraform(struct!.livenessFailureThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    liveness_initial_delay: {
      value: cdktf.numberToHclTerraform(struct!.livenessInitialDelay),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    liveness_period: {
      value: cdktf.numberToHclTerraform(struct!.livenessPeriod),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    liveness_probe: {
      value: cdktf.stringToHclTerraform(struct!.livenessProbe),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    liveness_probe_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.livenessProbeEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    liveness_scheme: {
      value: cdktf.stringToHclTerraform(struct!.livenessScheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    liveness_success_threshold: {
      value: cdktf.numberToHclTerraform(struct!.livenessSuccessThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    liveness_timeout: {
      value: cdktf.numberToHclTerraform(struct!.livenessTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    readiness_failure_threshold: {
      value: cdktf.numberToHclTerraform(struct!.readinessFailureThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    readiness_initial_delay: {
      value: cdktf.numberToHclTerraform(struct!.readinessInitialDelay),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    readiness_period: {
      value: cdktf.numberToHclTerraform(struct!.readinessPeriod),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    readiness_probe: {
      value: cdktf.stringToHclTerraform(struct!.readinessProbe),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    readiness_probe_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.readinessProbeEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    readiness_scheme: {
      value: cdktf.stringToHclTerraform(struct!.readinessScheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    readiness_success_threshold: {
      value: cdktf.numberToHclTerraform(struct!.readinessSuccessThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    readiness_timeout: {
      value: cdktf.numberToHclTerraform(struct!.readinessTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    startup_failure_threshold: {
      value: cdktf.numberToHclTerraform(struct!.startupFailureThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    startup_initial_delay: {
      value: cdktf.numberToHclTerraform(struct!.startupInitialDelay),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    startup_period: {
      value: cdktf.numberToHclTerraform(struct!.startupPeriod),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    startup_probe: {
      value: cdktf.stringToHclTerraform(struct!.startupProbe),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    startup_probe_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.startupProbeEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    startup_scheme: {
      value: cdktf.stringToHclTerraform(struct!.startupScheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    startup_success_threshold: {
      value: cdktf.numberToHclTerraform(struct!.startupSuccessThreshold),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    startup_timeout: {
      value: cdktf.numberToHclTerraform(struct!.startupTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealthOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealth | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._livenessFailureThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessFailureThreshold = this._livenessFailureThreshold;
    }
    if (this._livenessInitialDelay !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessInitialDelay = this._livenessInitialDelay;
    }
    if (this._livenessPeriod !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessPeriod = this._livenessPeriod;
    }
    if (this._livenessProbe !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessProbe = this._livenessProbe;
    }
    if (this._livenessProbeEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessProbeEnabled = this._livenessProbeEnabled;
    }
    if (this._livenessScheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessScheme = this._livenessScheme;
    }
    if (this._livenessSuccessThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessSuccessThreshold = this._livenessSuccessThreshold;
    }
    if (this._livenessTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.livenessTimeout = this._livenessTimeout;
    }
    if (this._readinessFailureThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessFailureThreshold = this._readinessFailureThreshold;
    }
    if (this._readinessInitialDelay !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessInitialDelay = this._readinessInitialDelay;
    }
    if (this._readinessPeriod !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessPeriod = this._readinessPeriod;
    }
    if (this._readinessProbe !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessProbe = this._readinessProbe;
    }
    if (this._readinessProbeEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessProbeEnabled = this._readinessProbeEnabled;
    }
    if (this._readinessScheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessScheme = this._readinessScheme;
    }
    if (this._readinessSuccessThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessSuccessThreshold = this._readinessSuccessThreshold;
    }
    if (this._readinessTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.readinessTimeout = this._readinessTimeout;
    }
    if (this._startupFailureThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.startupFailureThreshold = this._startupFailureThreshold;
    }
    if (this._startupInitialDelay !== undefined) {
      hasAnyValues = true;
      internalValueResult.startupInitialDelay = this._startupInitialDelay;
    }
    if (this._startupPeriod !== undefined) {
      hasAnyValues = true;
      internalValueResult.startupPeriod = this._startupPeriod;
    }
    if (this._startupProbe !== undefined) {
      hasAnyValues = true;
      internalValueResult.startupProbe = this._startupProbe;
    }
    if (this._startupProbeEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.startupProbeEnabled = this._startupProbeEnabled;
    }
    if (this._startupScheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.startupScheme = this._startupScheme;
    }
    if (this._startupSuccessThreshold !== undefined) {
      hasAnyValues = true;
      internalValueResult.startupSuccessThreshold = this._startupSuccessThreshold;
    }
    if (this._startupTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.startupTimeout = this._startupTimeout;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealth | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._livenessFailureThreshold = undefined;
      this._livenessInitialDelay = undefined;
      this._livenessPeriod = undefined;
      this._livenessProbe = undefined;
      this._livenessProbeEnabled = undefined;
      this._livenessScheme = undefined;
      this._livenessSuccessThreshold = undefined;
      this._livenessTimeout = undefined;
      this._readinessFailureThreshold = undefined;
      this._readinessInitialDelay = undefined;
      this._readinessPeriod = undefined;
      this._readinessProbe = undefined;
      this._readinessProbeEnabled = undefined;
      this._readinessScheme = undefined;
      this._readinessSuccessThreshold = undefined;
      this._readinessTimeout = undefined;
      this._startupFailureThreshold = undefined;
      this._startupInitialDelay = undefined;
      this._startupPeriod = undefined;
      this._startupProbe = undefined;
      this._startupProbeEnabled = undefined;
      this._startupScheme = undefined;
      this._startupSuccessThreshold = undefined;
      this._startupTimeout = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._livenessFailureThreshold = value.livenessFailureThreshold;
      this._livenessInitialDelay = value.livenessInitialDelay;
      this._livenessPeriod = value.livenessPeriod;
      this._livenessProbe = value.livenessProbe;
      this._livenessProbeEnabled = value.livenessProbeEnabled;
      this._livenessScheme = value.livenessScheme;
      this._livenessSuccessThreshold = value.livenessSuccessThreshold;
      this._livenessTimeout = value.livenessTimeout;
      this._readinessFailureThreshold = value.readinessFailureThreshold;
      this._readinessInitialDelay = value.readinessInitialDelay;
      this._readinessPeriod = value.readinessPeriod;
      this._readinessProbe = value.readinessProbe;
      this._readinessProbeEnabled = value.readinessProbeEnabled;
      this._readinessScheme = value.readinessScheme;
      this._readinessSuccessThreshold = value.readinessSuccessThreshold;
      this._readinessTimeout = value.readinessTimeout;
      this._startupFailureThreshold = value.startupFailureThreshold;
      this._startupInitialDelay = value.startupInitialDelay;
      this._startupPeriod = value.startupPeriod;
      this._startupProbe = value.startupProbe;
      this._startupProbeEnabled = value.startupProbeEnabled;
      this._startupScheme = value.startupScheme;
      this._startupSuccessThreshold = value.startupSuccessThreshold;
      this._startupTimeout = value.startupTimeout;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // liveness_failure_threshold - computed: false, optional: true, required: false
  private _livenessFailureThreshold?: number; 
  public get livenessFailureThreshold() {
    return this.getNumberAttribute('liveness_failure_threshold');
  }
  public set livenessFailureThreshold(value: number) {
    this._livenessFailureThreshold = value;
  }
  public resetLivenessFailureThreshold() {
    this._livenessFailureThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessFailureThresholdInput() {
    return this._livenessFailureThreshold;
  }

  // liveness_initial_delay - computed: false, optional: true, required: false
  private _livenessInitialDelay?: number; 
  public get livenessInitialDelay() {
    return this.getNumberAttribute('liveness_initial_delay');
  }
  public set livenessInitialDelay(value: number) {
    this._livenessInitialDelay = value;
  }
  public resetLivenessInitialDelay() {
    this._livenessInitialDelay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessInitialDelayInput() {
    return this._livenessInitialDelay;
  }

  // liveness_period - computed: false, optional: true, required: false
  private _livenessPeriod?: number; 
  public get livenessPeriod() {
    return this.getNumberAttribute('liveness_period');
  }
  public set livenessPeriod(value: number) {
    this._livenessPeriod = value;
  }
  public resetLivenessPeriod() {
    this._livenessPeriod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessPeriodInput() {
    return this._livenessPeriod;
  }

  // liveness_probe - computed: false, optional: true, required: false
  private _livenessProbe?: string; 
  public get livenessProbe() {
    return this.getStringAttribute('liveness_probe');
  }
  public set livenessProbe(value: string) {
    this._livenessProbe = value;
  }
  public resetLivenessProbe() {
    this._livenessProbe = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessProbeInput() {
    return this._livenessProbe;
  }

  // liveness_probe_enabled - computed: false, optional: true, required: false
  private _livenessProbeEnabled?: boolean | cdktf.IResolvable; 
  public get livenessProbeEnabled() {
    return this.getBooleanAttribute('liveness_probe_enabled');
  }
  public set livenessProbeEnabled(value: boolean | cdktf.IResolvable) {
    this._livenessProbeEnabled = value;
  }
  public resetLivenessProbeEnabled() {
    this._livenessProbeEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessProbeEnabledInput() {
    return this._livenessProbeEnabled;
  }

  // liveness_scheme - computed: false, optional: true, required: false
  private _livenessScheme?: string; 
  public get livenessScheme() {
    return this.getStringAttribute('liveness_scheme');
  }
  public set livenessScheme(value: string) {
    this._livenessScheme = value;
  }
  public resetLivenessScheme() {
    this._livenessScheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessSchemeInput() {
    return this._livenessScheme;
  }

  // liveness_success_threshold - computed: false, optional: true, required: false
  private _livenessSuccessThreshold?: number; 
  public get livenessSuccessThreshold() {
    return this.getNumberAttribute('liveness_success_threshold');
  }
  public set livenessSuccessThreshold(value: number) {
    this._livenessSuccessThreshold = value;
  }
  public resetLivenessSuccessThreshold() {
    this._livenessSuccessThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessSuccessThresholdInput() {
    return this._livenessSuccessThreshold;
  }

  // liveness_timeout - computed: false, optional: true, required: false
  private _livenessTimeout?: number; 
  public get livenessTimeout() {
    return this.getNumberAttribute('liveness_timeout');
  }
  public set livenessTimeout(value: number) {
    this._livenessTimeout = value;
  }
  public resetLivenessTimeout() {
    this._livenessTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get livenessTimeoutInput() {
    return this._livenessTimeout;
  }

  // readiness_failure_threshold - computed: false, optional: true, required: false
  private _readinessFailureThreshold?: number; 
  public get readinessFailureThreshold() {
    return this.getNumberAttribute('readiness_failure_threshold');
  }
  public set readinessFailureThreshold(value: number) {
    this._readinessFailureThreshold = value;
  }
  public resetReadinessFailureThreshold() {
    this._readinessFailureThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessFailureThresholdInput() {
    return this._readinessFailureThreshold;
  }

  // readiness_initial_delay - computed: false, optional: true, required: false
  private _readinessInitialDelay?: number; 
  public get readinessInitialDelay() {
    return this.getNumberAttribute('readiness_initial_delay');
  }
  public set readinessInitialDelay(value: number) {
    this._readinessInitialDelay = value;
  }
  public resetReadinessInitialDelay() {
    this._readinessInitialDelay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessInitialDelayInput() {
    return this._readinessInitialDelay;
  }

  // readiness_period - computed: false, optional: true, required: false
  private _readinessPeriod?: number; 
  public get readinessPeriod() {
    return this.getNumberAttribute('readiness_period');
  }
  public set readinessPeriod(value: number) {
    this._readinessPeriod = value;
  }
  public resetReadinessPeriod() {
    this._readinessPeriod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessPeriodInput() {
    return this._readinessPeriod;
  }

  // readiness_probe - computed: false, optional: true, required: false
  private _readinessProbe?: string; 
  public get readinessProbe() {
    return this.getStringAttribute('readiness_probe');
  }
  public set readinessProbe(value: string) {
    this._readinessProbe = value;
  }
  public resetReadinessProbe() {
    this._readinessProbe = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessProbeInput() {
    return this._readinessProbe;
  }

  // readiness_probe_enabled - computed: false, optional: true, required: false
  private _readinessProbeEnabled?: boolean | cdktf.IResolvable; 
  public get readinessProbeEnabled() {
    return this.getBooleanAttribute('readiness_probe_enabled');
  }
  public set readinessProbeEnabled(value: boolean | cdktf.IResolvable) {
    this._readinessProbeEnabled = value;
  }
  public resetReadinessProbeEnabled() {
    this._readinessProbeEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessProbeEnabledInput() {
    return this._readinessProbeEnabled;
  }

  // readiness_scheme - computed: false, optional: true, required: false
  private _readinessScheme?: string; 
  public get readinessScheme() {
    return this.getStringAttribute('readiness_scheme');
  }
  public set readinessScheme(value: string) {
    this._readinessScheme = value;
  }
  public resetReadinessScheme() {
    this._readinessScheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessSchemeInput() {
    return this._readinessScheme;
  }

  // readiness_success_threshold - computed: false, optional: true, required: false
  private _readinessSuccessThreshold?: number; 
  public get readinessSuccessThreshold() {
    return this.getNumberAttribute('readiness_success_threshold');
  }
  public set readinessSuccessThreshold(value: number) {
    this._readinessSuccessThreshold = value;
  }
  public resetReadinessSuccessThreshold() {
    this._readinessSuccessThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessSuccessThresholdInput() {
    return this._readinessSuccessThreshold;
  }

  // readiness_timeout - computed: false, optional: true, required: false
  private _readinessTimeout?: number; 
  public get readinessTimeout() {
    return this.getNumberAttribute('readiness_timeout');
  }
  public set readinessTimeout(value: number) {
    this._readinessTimeout = value;
  }
  public resetReadinessTimeout() {
    this._readinessTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get readinessTimeoutInput() {
    return this._readinessTimeout;
  }

  // startup_failure_threshold - computed: false, optional: true, required: false
  private _startupFailureThreshold?: number; 
  public get startupFailureThreshold() {
    return this.getNumberAttribute('startup_failure_threshold');
  }
  public set startupFailureThreshold(value: number) {
    this._startupFailureThreshold = value;
  }
  public resetStartupFailureThreshold() {
    this._startupFailureThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startupFailureThresholdInput() {
    return this._startupFailureThreshold;
  }

  // startup_initial_delay - computed: false, optional: true, required: false
  private _startupInitialDelay?: number; 
  public get startupInitialDelay() {
    return this.getNumberAttribute('startup_initial_delay');
  }
  public set startupInitialDelay(value: number) {
    this._startupInitialDelay = value;
  }
  public resetStartupInitialDelay() {
    this._startupInitialDelay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startupInitialDelayInput() {
    return this._startupInitialDelay;
  }

  // startup_period - computed: false, optional: true, required: false
  private _startupPeriod?: number; 
  public get startupPeriod() {
    return this.getNumberAttribute('startup_period');
  }
  public set startupPeriod(value: number) {
    this._startupPeriod = value;
  }
  public resetStartupPeriod() {
    this._startupPeriod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startupPeriodInput() {
    return this._startupPeriod;
  }

  // startup_probe - computed: false, optional: true, required: false
  private _startupProbe?: string; 
  public get startupProbe() {
    return this.getStringAttribute('startup_probe');
  }
  public set startupProbe(value: string) {
    this._startupProbe = value;
  }
  public resetStartupProbe() {
    this._startupProbe = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startupProbeInput() {
    return this._startupProbe;
  }

  // startup_probe_enabled - computed: false, optional: true, required: false
  private _startupProbeEnabled?: boolean | cdktf.IResolvable; 
  public get startupProbeEnabled() {
    return this.getBooleanAttribute('startup_probe_enabled');
  }
  public set startupProbeEnabled(value: boolean | cdktf.IResolvable) {
    this._startupProbeEnabled = value;
  }
  public resetStartupProbeEnabled() {
    this._startupProbeEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startupProbeEnabledInput() {
    return this._startupProbeEnabled;
  }

  // startup_scheme - computed: false, optional: true, required: false
  private _startupScheme?: string; 
  public get startupScheme() {
    return this.getStringAttribute('startup_scheme');
  }
  public set startupScheme(value: string) {
    this._startupScheme = value;
  }
  public resetStartupScheme() {
    this._startupScheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startupSchemeInput() {
    return this._startupScheme;
  }

  // startup_success_threshold - computed: false, optional: true, required: false
  private _startupSuccessThreshold?: number; 
  public get startupSuccessThreshold() {
    return this.getNumberAttribute('startup_success_threshold');
  }
  public set startupSuccessThreshold(value: number) {
    this._startupSuccessThreshold = value;
  }
  public resetStartupSuccessThreshold() {
    this._startupSuccessThreshold = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startupSuccessThresholdInput() {
    return this._startupSuccessThreshold;
  }

  // startup_timeout - computed: false, optional: true, required: false
  private _startupTimeout?: number; 
  public get startupTimeout() {
    return this.getNumberAttribute('startup_timeout');
  }
  public set startupTimeout(value: number) {
    this._startupTimeout = value;
  }
  public resetStartupTimeout() {
    this._startupTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startupTimeoutInput() {
    return this._startupTimeout;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngress {
  /**
  * The annotations added to the ingress. This can be used to set controller specific annotations, e.g., when using the NGINX Ingress controller: See https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#annotations DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * To automatically add an ingress whenever the integration uses an HTTP endpoint consumer.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#auto DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#auto}
  */
  readonly auto?: boolean | cdktf.IResolvable;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * To configure the host exposed by the ingress.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#host DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * The Ingress class name as defined by the Ingress spec See https://kubernetes.io/docs/concepts/services-networking/ingress/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#ingress_class_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#ingress_class_name}
  */
  readonly ingressClassName?: string;
  /**
  * To configure the path exposed by the ingress (default '/').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * To configure the path type exposed by the ingress. One of 'Exact', 'Prefix', 'ImplementationSpecific' (default to 'Prefix').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#path_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#path_type}
  */
  readonly pathType?: string;
  /**
  * To configure tls hosts
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_hosts DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_hosts}
  */
  readonly tlsHosts?: string[];
  /**
  * To configure tls secret name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_secret_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_secret_name}
  */
  readonly tlsSecretName?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngressToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    auto: cdktf.booleanToTerraform(struct!.auto),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    host: cdktf.stringToTerraform(struct!.host),
    ingress_class_name: cdktf.stringToTerraform(struct!.ingressClassName),
    path: cdktf.stringToTerraform(struct!.path),
    path_type: cdktf.stringToTerraform(struct!.pathType),
    tls_hosts: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.tlsHosts),
    tls_secret_name: cdktf.stringToTerraform(struct!.tlsSecretName),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngressToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    auto: {
      value: cdktf.booleanToHclTerraform(struct!.auto),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ingress_class_name: {
      value: cdktf.stringToHclTerraform(struct!.ingressClassName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path_type: {
      value: cdktf.stringToHclTerraform(struct!.pathType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls_hosts: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.tlsHosts),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    tls_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.tlsSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngressOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngress | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._auto !== undefined) {
      hasAnyValues = true;
      internalValueResult.auto = this._auto;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._ingressClassName !== undefined) {
      hasAnyValues = true;
      internalValueResult.ingressClassName = this._ingressClassName;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._pathType !== undefined) {
      hasAnyValues = true;
      internalValueResult.pathType = this._pathType;
    }
    if (this._tlsHosts !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsHosts = this._tlsHosts;
    }
    if (this._tlsSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsSecretName = this._tlsSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngress | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._auto = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._host = undefined;
      this._ingressClassName = undefined;
      this._path = undefined;
      this._pathType = undefined;
      this._tlsHosts = undefined;
      this._tlsSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._auto = value.auto;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._host = value.host;
      this._ingressClassName = value.ingressClassName;
      this._path = value.path;
      this._pathType = value.pathType;
      this._tlsHosts = value.tlsHosts;
      this._tlsSecretName = value.tlsSecretName;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // auto - computed: false, optional: true, required: false
  private _auto?: boolean | cdktf.IResolvable; 
  public get auto() {
    return this.getBooleanAttribute('auto');
  }
  public set auto(value: boolean | cdktf.IResolvable) {
    this._auto = value;
  }
  public resetAuto() {
    this._auto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoInput() {
    return this._auto;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // ingress_class_name - computed: false, optional: true, required: false
  private _ingressClassName?: string; 
  public get ingressClassName() {
    return this.getStringAttribute('ingress_class_name');
  }
  public set ingressClassName(value: string) {
    this._ingressClassName = value;
  }
  public resetIngressClassName() {
    this._ingressClassName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ingressClassNameInput() {
    return this._ingressClassName;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // path_type - computed: false, optional: true, required: false
  private _pathType?: string; 
  public get pathType() {
    return this.getStringAttribute('path_type');
  }
  public set pathType(value: string) {
    this._pathType = value;
  }
  public resetPathType() {
    this._pathType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathTypeInput() {
    return this._pathType;
  }

  // tls_hosts - computed: false, optional: true, required: false
  private _tlsHosts?: string[]; 
  public get tlsHosts() {
    return this.getListAttribute('tls_hosts');
  }
  public set tlsHosts(value: string[]) {
    this._tlsHosts = value;
  }
  public resetTlsHosts() {
    this._tlsHosts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsHostsInput() {
    return this._tlsHosts;
  }

  // tls_secret_name - computed: false, optional: true, required: false
  private _tlsSecretName?: string; 
  public get tlsSecretName() {
    return this.getStringAttribute('tls_secret_name');
  }
  public set tlsSecretName(value: string) {
    this._tlsSecretName = value;
  }
  public resetTlsSecretName() {
    this._tlsSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsSecretNameInput() {
    return this._tlsSecretName;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstio {
  /**
  * Configures a (comma-separated) list of CIDR subnets that should not be intercepted by the Istio proxy ('10.0.0.0/8,172.16.0.0/12,192.168.0.0/16' by default).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#allow DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#allow}
  */
  readonly allow?: string;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Forces the value for labels 'sidecar.istio.io/inject'. By default the label is set to 'true' on deployment and not set on Knative Service.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#inject DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#inject}
  */
  readonly inject?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstioToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstio | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allow: cdktf.stringToTerraform(struct!.allow),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    inject: cdktf.booleanToTerraform(struct!.inject),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstioToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstio | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allow: {
      value: cdktf.stringToHclTerraform(struct!.allow),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    inject: {
      value: cdktf.booleanToHclTerraform(struct!.inject),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstioOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstio | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allow !== undefined) {
      hasAnyValues = true;
      internalValueResult.allow = this._allow;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._inject !== undefined) {
      hasAnyValues = true;
      internalValueResult.inject = this._inject;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstio | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allow = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._inject = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allow = value.allow;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._inject = value.inject;
    }
  }

  // allow - computed: false, optional: true, required: false
  private _allow?: string; 
  public get allow() {
    return this.getStringAttribute('allow');
  }
  public set allow(value: string) {
    this._allow = value;
  }
  public resetAllow() {
    this._allow = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowInput() {
    return this._allow;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // inject - computed: false, optional: true, required: false
  private _inject?: boolean | cdktf.IResolvable; 
  public get inject() {
    return this.getBooleanAttribute('inject');
  }
  public set inject(value: boolean | cdktf.IResolvable) {
    this._inject = value;
  }
  public resetInject() {
    this._inject = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get injectInput() {
    return this._inject;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokia {
  /**
  * The PEM encoded CA certification file path, used to verify client certificates, applicable when 'protocol' is 'https' and 'use-ssl-client-authentication' is 'true' (default '/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt' for OpenShift).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#ca_cert DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#ca_cert}
  */
  readonly caCert?: string;
  /**
  * The principal(s) which must be given in a client certificate to allow access to the Jolokia endpoint, applicable when 'protocol' is 'https' and 'use-ssl-client-authentication' is 'true' (default 'clientPrincipal=cn=system:master-proxy', 'cn=hawtio-online.hawtio.svc' and 'cn=fuse-console.fuse.svc' for OpenShift).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#client_principal DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#client_principal}
  */
  readonly clientPrincipal?: string[];
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Listen for multicast requests (default 'false')
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#discovery_enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#discovery_enabled}
  */
  readonly discoveryEnabled?: boolean | cdktf.IResolvable;
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Mandate the client certificate contains a client flag in the extended key usage section, applicable when 'protocol' is 'https' and 'use-ssl-client-authentication' is 'true' (default 'true' for OpenShift).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#extended_client_check DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#extended_client_check}
  */
  readonly extendedClientCheck?: boolean | cdktf.IResolvable;
  /**
  * The Host address to which the Jolokia agent should bind to. If ''*'' or ''0.0.0.0'' is given, the servers binds to every network interface (default ''*'').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#host DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * A list of additional Jolokia options as defined in https://jolokia.org/reference/html/agents.html#agent-jvm-config[JVM agent configuration options]
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#options DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#options}
  */
  readonly options?: string[];
  /**
  * The password used for authentication, applicable when the 'user' option is set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#password DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#password}
  */
  readonly password?: string;
  /**
  * The Jolokia endpoint port (default '8778').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#port DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * The protocol to use, either 'http' or 'https' (default 'https' for OpenShift)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#protocol DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#protocol}
  */
  readonly protocol?: string;
  /**
  * Whether client certificates should be used for authentication (default 'true' for OpenShift).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#use_ssl_client_authentication DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#use_ssl_client_authentication}
  */
  readonly useSslClientAuthentication?: boolean | cdktf.IResolvable;
  /**
  * The user to be used for authentication
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#user DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#user}
  */
  readonly user?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokiaToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokia | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ca_cert: cdktf.stringToTerraform(struct!.caCert),
    client_principal: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.clientPrincipal),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    discovery_enabled: cdktf.booleanToTerraform(struct!.discoveryEnabled),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    extended_client_check: cdktf.booleanToTerraform(struct!.extendedClientCheck),
    host: cdktf.stringToTerraform(struct!.host),
    options: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.options),
    password: cdktf.stringToTerraform(struct!.password),
    port: cdktf.numberToTerraform(struct!.port),
    protocol: cdktf.stringToTerraform(struct!.protocol),
    use_ssl_client_authentication: cdktf.booleanToTerraform(struct!.useSslClientAuthentication),
    user: cdktf.stringToTerraform(struct!.user),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokiaToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokia | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ca_cert: {
      value: cdktf.stringToHclTerraform(struct!.caCert),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    client_principal: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.clientPrincipal),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    discovery_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.discoveryEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    extended_client_check: {
      value: cdktf.booleanToHclTerraform(struct!.extendedClientCheck),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    options: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.options),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    protocol: {
      value: cdktf.stringToHclTerraform(struct!.protocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    use_ssl_client_authentication: {
      value: cdktf.booleanToHclTerraform(struct!.useSslClientAuthentication),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokiaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokia | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._caCert !== undefined) {
      hasAnyValues = true;
      internalValueResult.caCert = this._caCert;
    }
    if (this._clientPrincipal !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientPrincipal = this._clientPrincipal;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._discoveryEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.discoveryEnabled = this._discoveryEnabled;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._extendedClientCheck !== undefined) {
      hasAnyValues = true;
      internalValueResult.extendedClientCheck = this._extendedClientCheck;
    }
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._options !== undefined) {
      hasAnyValues = true;
      internalValueResult.options = this._options;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._protocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.protocol = this._protocol;
    }
    if (this._useSslClientAuthentication !== undefined) {
      hasAnyValues = true;
      internalValueResult.useSslClientAuthentication = this._useSslClientAuthentication;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokia | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._caCert = undefined;
      this._clientPrincipal = undefined;
      this._configuration = undefined;
      this._discoveryEnabled = undefined;
      this._enabled = undefined;
      this._extendedClientCheck = undefined;
      this._host = undefined;
      this._options = undefined;
      this._password = undefined;
      this._port = undefined;
      this._protocol = undefined;
      this._useSslClientAuthentication = undefined;
      this._user = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._caCert = value.caCert;
      this._clientPrincipal = value.clientPrincipal;
      this._configuration = value.configuration;
      this._discoveryEnabled = value.discoveryEnabled;
      this._enabled = value.enabled;
      this._extendedClientCheck = value.extendedClientCheck;
      this._host = value.host;
      this._options = value.options;
      this._password = value.password;
      this._port = value.port;
      this._protocol = value.protocol;
      this._useSslClientAuthentication = value.useSslClientAuthentication;
      this._user = value.user;
    }
  }

  // ca_cert - computed: false, optional: true, required: false
  private _caCert?: string; 
  public get caCert() {
    return this.getStringAttribute('ca_cert');
  }
  public set caCert(value: string) {
    this._caCert = value;
  }
  public resetCaCert() {
    this._caCert = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get caCertInput() {
    return this._caCert;
  }

  // client_principal - computed: false, optional: true, required: false
  private _clientPrincipal?: string[]; 
  public get clientPrincipal() {
    return this.getListAttribute('client_principal');
  }
  public set clientPrincipal(value: string[]) {
    this._clientPrincipal = value;
  }
  public resetClientPrincipal() {
    this._clientPrincipal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientPrincipalInput() {
    return this._clientPrincipal;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // discovery_enabled - computed: false, optional: true, required: false
  private _discoveryEnabled?: boolean | cdktf.IResolvable; 
  public get discoveryEnabled() {
    return this.getBooleanAttribute('discovery_enabled');
  }
  public set discoveryEnabled(value: boolean | cdktf.IResolvable) {
    this._discoveryEnabled = value;
  }
  public resetDiscoveryEnabled() {
    this._discoveryEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get discoveryEnabledInput() {
    return this._discoveryEnabled;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // extended_client_check - computed: false, optional: true, required: false
  private _extendedClientCheck?: boolean | cdktf.IResolvable; 
  public get extendedClientCheck() {
    return this.getBooleanAttribute('extended_client_check');
  }
  public set extendedClientCheck(value: boolean | cdktf.IResolvable) {
    this._extendedClientCheck = value;
  }
  public resetExtendedClientCheck() {
    this._extendedClientCheck = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get extendedClientCheckInput() {
    return this._extendedClientCheck;
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // options - computed: false, optional: true, required: false
  private _options?: string[]; 
  public get options() {
    return this.getListAttribute('options');
  }
  public set options(value: string[]) {
    this._options = value;
  }
  public resetOptions() {
    this._options = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionsInput() {
    return this._options;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // protocol - computed: false, optional: true, required: false
  private _protocol?: string; 
  public get protocol() {
    return this.getStringAttribute('protocol');
  }
  public set protocol(value: string) {
    this._protocol = value;
  }
  public resetProtocol() {
    this._protocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get protocolInput() {
    return this._protocol;
  }

  // use_ssl_client_authentication - computed: false, optional: true, required: false
  private _useSslClientAuthentication?: boolean | cdktf.IResolvable; 
  public get useSslClientAuthentication() {
    return this.getBooleanAttribute('use_ssl_client_authentication');
  }
  public set useSslClientAuthentication(value: boolean | cdktf.IResolvable) {
    this._useSslClientAuthentication = value;
  }
  public resetUseSslClientAuthentication() {
    this._useSslClientAuthentication = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useSslClientAuthenticationInput() {
    return this._useSslClientAuthentication;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvm {
  /**
  * Additional JVM classpath (use 'Linux' classpath separator)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#classpath DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#classpath}
  */
  readonly classpath?: string;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Activates remote debugging, so that a debugger can be attached to the JVM, e.g., using port-forwarding
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#debug DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#debug}
  */
  readonly debug?: boolean | cdktf.IResolvable;
  /**
  * Transport address at which to listen for the newly launched JVM (default '*:5005')
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#debug_address DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#debug_address}
  */
  readonly debugAddress?: string;
  /**
  * Suspends the target JVM immediately before the main class is loaded
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#debug_suspend DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#debug_suspend}
  */
  readonly debugSuspend?: boolean | cdktf.IResolvable;
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * The Jar dependency which will run the application. Leave it empty for managed Integrations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#jar DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#jar}
  */
  readonly jar?: string;
  /**
  * A list of JVM options
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#options DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#options}
  */
  readonly options?: string[];
  /**
  * Prints the command used the start the JVM in the container logs (default 'true') Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#print_command DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#print_command}
  */
  readonly printCommand?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvmToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    classpath: cdktf.stringToTerraform(struct!.classpath),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    debug: cdktf.booleanToTerraform(struct!.debug),
    debug_address: cdktf.stringToTerraform(struct!.debugAddress),
    debug_suspend: cdktf.booleanToTerraform(struct!.debugSuspend),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    jar: cdktf.stringToTerraform(struct!.jar),
    options: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.options),
    print_command: cdktf.booleanToTerraform(struct!.printCommand),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvmToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    classpath: {
      value: cdktf.stringToHclTerraform(struct!.classpath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    debug: {
      value: cdktf.booleanToHclTerraform(struct!.debug),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    debug_address: {
      value: cdktf.stringToHclTerraform(struct!.debugAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    debug_suspend: {
      value: cdktf.booleanToHclTerraform(struct!.debugSuspend),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    jar: {
      value: cdktf.stringToHclTerraform(struct!.jar),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    options: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.options),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    print_command: {
      value: cdktf.booleanToHclTerraform(struct!.printCommand),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._classpath !== undefined) {
      hasAnyValues = true;
      internalValueResult.classpath = this._classpath;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._debug !== undefined) {
      hasAnyValues = true;
      internalValueResult.debug = this._debug;
    }
    if (this._debugAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.debugAddress = this._debugAddress;
    }
    if (this._debugSuspend !== undefined) {
      hasAnyValues = true;
      internalValueResult.debugSuspend = this._debugSuspend;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._jar !== undefined) {
      hasAnyValues = true;
      internalValueResult.jar = this._jar;
    }
    if (this._options !== undefined) {
      hasAnyValues = true;
      internalValueResult.options = this._options;
    }
    if (this._printCommand !== undefined) {
      hasAnyValues = true;
      internalValueResult.printCommand = this._printCommand;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._classpath = undefined;
      this._configuration = undefined;
      this._debug = undefined;
      this._debugAddress = undefined;
      this._debugSuspend = undefined;
      this._enabled = undefined;
      this._jar = undefined;
      this._options = undefined;
      this._printCommand = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._classpath = value.classpath;
      this._configuration = value.configuration;
      this._debug = value.debug;
      this._debugAddress = value.debugAddress;
      this._debugSuspend = value.debugSuspend;
      this._enabled = value.enabled;
      this._jar = value.jar;
      this._options = value.options;
      this._printCommand = value.printCommand;
    }
  }

  // classpath - computed: false, optional: true, required: false
  private _classpath?: string; 
  public get classpath() {
    return this.getStringAttribute('classpath');
  }
  public set classpath(value: string) {
    this._classpath = value;
  }
  public resetClasspath() {
    this._classpath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get classpathInput() {
    return this._classpath;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // debug - computed: false, optional: true, required: false
  private _debug?: boolean | cdktf.IResolvable; 
  public get debug() {
    return this.getBooleanAttribute('debug');
  }
  public set debug(value: boolean | cdktf.IResolvable) {
    this._debug = value;
  }
  public resetDebug() {
    this._debug = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get debugInput() {
    return this._debug;
  }

  // debug_address - computed: false, optional: true, required: false
  private _debugAddress?: string; 
  public get debugAddress() {
    return this.getStringAttribute('debug_address');
  }
  public set debugAddress(value: string) {
    this._debugAddress = value;
  }
  public resetDebugAddress() {
    this._debugAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get debugAddressInput() {
    return this._debugAddress;
  }

  // debug_suspend - computed: false, optional: true, required: false
  private _debugSuspend?: boolean | cdktf.IResolvable; 
  public get debugSuspend() {
    return this.getBooleanAttribute('debug_suspend');
  }
  public set debugSuspend(value: boolean | cdktf.IResolvable) {
    this._debugSuspend = value;
  }
  public resetDebugSuspend() {
    this._debugSuspend = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get debugSuspendInput() {
    return this._debugSuspend;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // jar - computed: false, optional: true, required: false
  private _jar?: string; 
  public get jar() {
    return this.getStringAttribute('jar');
  }
  public set jar(value: string) {
    this._jar = value;
  }
  public resetJar() {
    this._jar = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jarInput() {
    return this._jar;
  }

  // options - computed: false, optional: true, required: false
  private _options?: string[]; 
  public get options() {
    return this.getListAttribute('options');
  }
  public set options(value: string[]) {
    this._options = value;
  }
  public resetOptions() {
    this._options = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionsInput() {
    return this._options;
  }

  // print_command - computed: false, optional: true, required: false
  private _printCommand?: boolean | cdktf.IResolvable; 
  public get printCommand() {
    return this.getBooleanAttribute('print_command');
  }
  public set printCommand(value: boolean | cdktf.IResolvable) {
    this._printCommand = value;
  }
  public resetPrintCommand() {
    this._printCommand = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get printCommandInput() {
    return this._printCommand;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKamelets {
  /**
  * Automatically inject all referenced Kamelets and their default configuration (enabled by default)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#auto DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#auto}
  */
  readonly auto?: boolean | cdktf.IResolvable;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Comma separated list of Kamelet names to load into the current integration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#list DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#list}
  */
  readonly list?: string;
  /**
  * The directory where the application mounts and reads Kamelet spec (default '/etc/camel/kamelets')
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#mount_point DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#mount_point}
  */
  readonly mountPoint?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKameletsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKamelets | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auto: cdktf.booleanToTerraform(struct!.auto),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    list: cdktf.stringToTerraform(struct!.list),
    mount_point: cdktf.stringToTerraform(struct!.mountPoint),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKameletsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKamelets | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auto: {
      value: cdktf.booleanToHclTerraform(struct!.auto),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    list: {
      value: cdktf.stringToHclTerraform(struct!.list),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mount_point: {
      value: cdktf.stringToHclTerraform(struct!.mountPoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKameletsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKamelets | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._auto !== undefined) {
      hasAnyValues = true;
      internalValueResult.auto = this._auto;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._list !== undefined) {
      hasAnyValues = true;
      internalValueResult.list = this._list;
    }
    if (this._mountPoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.mountPoint = this._mountPoint;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKamelets | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._auto = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._list = undefined;
      this._mountPoint = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._auto = value.auto;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._list = value.list;
      this._mountPoint = value.mountPoint;
    }
  }

  // auto - computed: false, optional: true, required: false
  private _auto?: boolean | cdktf.IResolvable; 
  public get auto() {
    return this.getBooleanAttribute('auto');
  }
  public set auto(value: boolean | cdktf.IResolvable) {
    this._auto = value;
  }
  public resetAuto() {
    this._auto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoInput() {
    return this._auto;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // list - computed: false, optional: true, required: false
  private _list?: string; 
  public get list() {
    return this.getStringAttribute('list');
  }
  public set list(value: string) {
    this._list = value;
  }
  public resetList() {
    this._list = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get listInput() {
    return this._list;
  }

  // mount_point - computed: false, optional: true, required: false
  private _mountPoint?: string; 
  public get mountPoint() {
    return this.getStringAttribute('mount_point');
  }
  public set mountPoint(value: string) {
    this._mountPoint = value;
  }
  public resetMountPoint() {
    this._mountPoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountPointInput() {
    return this._mountPoint;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKeda {
  /**
  * TraitConfiguration parameters configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration: { [key: string]: string };
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKedaToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKeda | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKedaToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKeda | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKedaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKeda | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKeda | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
    }
  }

  // configuration - computed: false, optional: false, required: true
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnative {
  /**
  * Enable automatic discovery of all trait properties.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#auto DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#auto}
  */
  readonly auto?: boolean | cdktf.IResolvable;
  /**
  * List of channels used as destination of integration routes. Can contain simple channel names or full Camel URIs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#channel_sinks DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#channel_sinks}
  */
  readonly channelSinks?: string[];
  /**
  * List of channels used as source of integration routes. Can contain simple channel names or full Camel URIs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#channel_sources DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#channel_sources}
  */
  readonly channelSources?: string[];
  /**
  * Can be used to inject a Knative complete configuration in JSON format.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#config DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#config}
  */
  readonly config?: string;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * List of endpoints used as destination of integration routes. Can contain simple endpoint names or full Camel URIs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#endpoint_sinks DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#endpoint_sinks}
  */
  readonly endpointSinks?: string[];
  /**
  * List of channels used as source of integration routes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#endpoint_sources DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#endpoint_sources}
  */
  readonly endpointSources?: string[];
  /**
  * List of event types that the integration will produce. Can contain simple event types or full Camel URIs (to use a specific broker).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#event_sinks DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#event_sinks}
  */
  readonly eventSinks?: string[];
  /**
  * List of event types that the integration will be subscribed to. Can contain simple event types or full Camel URIs (to use a specific broker different from 'default').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#event_sources DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#event_sources}
  */
  readonly eventSources?: string[];
  /**
  * Enables the default filtering for the Knative trigger using the event type If this is true, the created Knative trigger uses the event type as a filter on the event stream when no other filter criteria is given. (default: true)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#filter_event_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#filter_event_type}
  */
  readonly filterEventType?: boolean | cdktf.IResolvable;
  /**
  * Enables filtering on events based on the header 'ce-knativehistory'. Since this header has been removed in newer versions of Knative, filtering is disabled by default.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#filter_source_channels DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#filter_source_channels}
  */
  readonly filterSourceChannels?: boolean | cdktf.IResolvable;
  /**
  * Sets filter attributes on the event stream (such as event type, source, subject and so on). A list of key-value pairs that represent filter attributes and its values. The syntax is KEY=VALUE, e.g., 'source='my.source''. Filter attributes get set on the Knative trigger that is being created as part of this integration.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#filters DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#filters}
  */
  readonly filters?: string[];
  /**
  * Enables the camel-k-operator to set the 'bindings.knative.dev/include=true' label to the namespace As Knative requires this label to perform injection of K_SINK URL into the service. If this is false, the integration pod may start and fail, read the SinkBinding Knative documentation. (default: true)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#namespace_label DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#namespace_label}
  */
  readonly namespaceLabel?: boolean | cdktf.IResolvable;
  /**
  * Allows binding the integration to a sink via a Knative SinkBinding resource. This can be used when the integration targets a single sink. It's enabled by default when the integration targets a single sink (except when the integration is owned by a Knative source).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#sink_binding DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#sink_binding}
  */
  readonly sinkBinding?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnative | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auto: cdktf.booleanToTerraform(struct!.auto),
    channel_sinks: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.channelSinks),
    channel_sources: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.channelSources),
    config: cdktf.stringToTerraform(struct!.config),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    endpoint_sinks: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.endpointSinks),
    endpoint_sources: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.endpointSources),
    event_sinks: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.eventSinks),
    event_sources: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.eventSources),
    filter_event_type: cdktf.booleanToTerraform(struct!.filterEventType),
    filter_source_channels: cdktf.booleanToTerraform(struct!.filterSourceChannels),
    filters: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.filters),
    namespace_label: cdktf.booleanToTerraform(struct!.namespaceLabel),
    sink_binding: cdktf.booleanToTerraform(struct!.sinkBinding),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnative | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auto: {
      value: cdktf.booleanToHclTerraform(struct!.auto),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    channel_sinks: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.channelSinks),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    channel_sources: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.channelSources),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    config: {
      value: cdktf.stringToHclTerraform(struct!.config),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    endpoint_sinks: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.endpointSinks),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    endpoint_sources: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.endpointSources),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    event_sinks: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.eventSinks),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    event_sources: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.eventSources),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    filter_event_type: {
      value: cdktf.booleanToHclTerraform(struct!.filterEventType),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    filter_source_channels: {
      value: cdktf.booleanToHclTerraform(struct!.filterSourceChannels),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    filters: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.filters),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    namespace_label: {
      value: cdktf.booleanToHclTerraform(struct!.namespaceLabel),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sink_binding: {
      value: cdktf.booleanToHclTerraform(struct!.sinkBinding),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnative | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._auto !== undefined) {
      hasAnyValues = true;
      internalValueResult.auto = this._auto;
    }
    if (this._channelSinks !== undefined) {
      hasAnyValues = true;
      internalValueResult.channelSinks = this._channelSinks;
    }
    if (this._channelSources !== undefined) {
      hasAnyValues = true;
      internalValueResult.channelSources = this._channelSources;
    }
    if (this._config !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._endpointSinks !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpointSinks = this._endpointSinks;
    }
    if (this._endpointSources !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpointSources = this._endpointSources;
    }
    if (this._eventSinks !== undefined) {
      hasAnyValues = true;
      internalValueResult.eventSinks = this._eventSinks;
    }
    if (this._eventSources !== undefined) {
      hasAnyValues = true;
      internalValueResult.eventSources = this._eventSources;
    }
    if (this._filterEventType !== undefined) {
      hasAnyValues = true;
      internalValueResult.filterEventType = this._filterEventType;
    }
    if (this._filterSourceChannels !== undefined) {
      hasAnyValues = true;
      internalValueResult.filterSourceChannels = this._filterSourceChannels;
    }
    if (this._filters !== undefined) {
      hasAnyValues = true;
      internalValueResult.filters = this._filters;
    }
    if (this._namespaceLabel !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaceLabel = this._namespaceLabel;
    }
    if (this._sinkBinding !== undefined) {
      hasAnyValues = true;
      internalValueResult.sinkBinding = this._sinkBinding;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnative | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._auto = undefined;
      this._channelSinks = undefined;
      this._channelSources = undefined;
      this._config = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._endpointSinks = undefined;
      this._endpointSources = undefined;
      this._eventSinks = undefined;
      this._eventSources = undefined;
      this._filterEventType = undefined;
      this._filterSourceChannels = undefined;
      this._filters = undefined;
      this._namespaceLabel = undefined;
      this._sinkBinding = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._auto = value.auto;
      this._channelSinks = value.channelSinks;
      this._channelSources = value.channelSources;
      this._config = value.config;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._endpointSinks = value.endpointSinks;
      this._endpointSources = value.endpointSources;
      this._eventSinks = value.eventSinks;
      this._eventSources = value.eventSources;
      this._filterEventType = value.filterEventType;
      this._filterSourceChannels = value.filterSourceChannels;
      this._filters = value.filters;
      this._namespaceLabel = value.namespaceLabel;
      this._sinkBinding = value.sinkBinding;
    }
  }

  // auto - computed: false, optional: true, required: false
  private _auto?: boolean | cdktf.IResolvable; 
  public get auto() {
    return this.getBooleanAttribute('auto');
  }
  public set auto(value: boolean | cdktf.IResolvable) {
    this._auto = value;
  }
  public resetAuto() {
    this._auto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoInput() {
    return this._auto;
  }

  // channel_sinks - computed: false, optional: true, required: false
  private _channelSinks?: string[]; 
  public get channelSinks() {
    return this.getListAttribute('channel_sinks');
  }
  public set channelSinks(value: string[]) {
    this._channelSinks = value;
  }
  public resetChannelSinks() {
    this._channelSinks = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get channelSinksInput() {
    return this._channelSinks;
  }

  // channel_sources - computed: false, optional: true, required: false
  private _channelSources?: string[]; 
  public get channelSources() {
    return this.getListAttribute('channel_sources');
  }
  public set channelSources(value: string[]) {
    this._channelSources = value;
  }
  public resetChannelSources() {
    this._channelSources = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get channelSourcesInput() {
    return this._channelSources;
  }

  // config - computed: false, optional: true, required: false
  private _config?: string; 
  public get config() {
    return this.getStringAttribute('config');
  }
  public set config(value: string) {
    this._config = value;
  }
  public resetConfig() {
    this._config = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // endpoint_sinks - computed: false, optional: true, required: false
  private _endpointSinks?: string[]; 
  public get endpointSinks() {
    return this.getListAttribute('endpoint_sinks');
  }
  public set endpointSinks(value: string[]) {
    this._endpointSinks = value;
  }
  public resetEndpointSinks() {
    this._endpointSinks = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointSinksInput() {
    return this._endpointSinks;
  }

  // endpoint_sources - computed: false, optional: true, required: false
  private _endpointSources?: string[]; 
  public get endpointSources() {
    return this.getListAttribute('endpoint_sources');
  }
  public set endpointSources(value: string[]) {
    this._endpointSources = value;
  }
  public resetEndpointSources() {
    this._endpointSources = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointSourcesInput() {
    return this._endpointSources;
  }

  // event_sinks - computed: false, optional: true, required: false
  private _eventSinks?: string[]; 
  public get eventSinks() {
    return this.getListAttribute('event_sinks');
  }
  public set eventSinks(value: string[]) {
    this._eventSinks = value;
  }
  public resetEventSinks() {
    this._eventSinks = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get eventSinksInput() {
    return this._eventSinks;
  }

  // event_sources - computed: false, optional: true, required: false
  private _eventSources?: string[]; 
  public get eventSources() {
    return this.getListAttribute('event_sources');
  }
  public set eventSources(value: string[]) {
    this._eventSources = value;
  }
  public resetEventSources() {
    this._eventSources = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get eventSourcesInput() {
    return this._eventSources;
  }

  // filter_event_type - computed: false, optional: true, required: false
  private _filterEventType?: boolean | cdktf.IResolvable; 
  public get filterEventType() {
    return this.getBooleanAttribute('filter_event_type');
  }
  public set filterEventType(value: boolean | cdktf.IResolvable) {
    this._filterEventType = value;
  }
  public resetFilterEventType() {
    this._filterEventType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterEventTypeInput() {
    return this._filterEventType;
  }

  // filter_source_channels - computed: false, optional: true, required: false
  private _filterSourceChannels?: boolean | cdktf.IResolvable; 
  public get filterSourceChannels() {
    return this.getBooleanAttribute('filter_source_channels');
  }
  public set filterSourceChannels(value: boolean | cdktf.IResolvable) {
    this._filterSourceChannels = value;
  }
  public resetFilterSourceChannels() {
    this._filterSourceChannels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filterSourceChannelsInput() {
    return this._filterSourceChannels;
  }

  // filters - computed: false, optional: true, required: false
  private _filters?: string[]; 
  public get filters() {
    return this.getListAttribute('filters');
  }
  public set filters(value: string[]) {
    this._filters = value;
  }
  public resetFilters() {
    this._filters = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filtersInput() {
    return this._filters;
  }

  // namespace_label - computed: false, optional: true, required: false
  private _namespaceLabel?: boolean | cdktf.IResolvable; 
  public get namespaceLabel() {
    return this.getBooleanAttribute('namespace_label');
  }
  public set namespaceLabel(value: boolean | cdktf.IResolvable) {
    this._namespaceLabel = value;
  }
  public resetNamespaceLabel() {
    this._namespaceLabel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceLabelInput() {
    return this._namespaceLabel;
  }

  // sink_binding - computed: false, optional: true, required: false
  private _sinkBinding?: boolean | cdktf.IResolvable; 
  public get sinkBinding() {
    return this.getBooleanAttribute('sink_binding');
  }
  public set sinkBinding(value: boolean | cdktf.IResolvable) {
    this._sinkBinding = value;
  }
  public resetSinkBinding() {
    this._sinkBinding = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sinkBindingInput() {
    return this._sinkBinding;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeService {
  /**
  * The annotations added to route. This can be used to set knative service specific annotations CLI usage example: -t 'knative-service.annotations.'haproxy.router.openshift.io/balance'=true'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#annotations DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Automatically deploy the integration as Knative service when all conditions hold: * Integration is using the Knative profile * All routes are either starting from an HTTP based consumer or a passive consumer (e.g. 'direct' is a passive consumer)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#auto DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#auto}
  */
  readonly auto?: boolean | cdktf.IResolvable;
  /**
  * Configures the Knative autoscaling metric property (e.g. to set 'concurrency' based or 'cpu' based autoscaling). Refer to the Knative documentation for more information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#autoscaling_metric DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#autoscaling_metric}
  */
  readonly autoscalingMetric?: string;
  /**
  * Sets the allowed concurrency level or CPU percentage (depending on the autoscaling metric) for each Pod. Refer to the Knative documentation for more information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#autoscaling_target DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#autoscaling_target}
  */
  readonly autoscalingTarget?: number;
  /**
  * Configures the Knative autoscaling class property (e.g. to set 'hpa.autoscaling.knative.dev' or 'kpa.autoscaling.knative.dev' autoscaling). Refer to the Knative documentation for more information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#class DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#class}
  */
  readonly class?: string;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * An upper bound for the number of Pods that can be running in parallel for the integration. Knative has its own cap value that depends on the installation. Refer to the Knative documentation for more information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_scale DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_scale}
  */
  readonly maxScale?: number;
  /**
  * The minimum number of Pods that should be running at any time for the integration. It's **zero** by default, meaning that the integration is scaled down to zero when not used for a configured amount of time. Refer to the Knative documentation for more information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_scale DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_scale}
  */
  readonly minScale?: number;
  /**
  * Enables to gradually shift traffic to the latest Revision and sets the rollout duration. It's disabled by default and must be expressed as a Golang 'time.Duration' string representation, rounded to a second precision.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#rollout_duration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#rollout_duration}
  */
  readonly rolloutDuration?: string;
  /**
  * The maximum duration in seconds that the request instance is allowed to respond to a request. This field propagates to the integration pod's terminationGracePeriodSeconds Refer to the Knative documentation for more information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#timeout_seconds DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#timeout_seconds}
  */
  readonly timeoutSeconds?: number;
  /**
  * Setting 'cluster-local', Knative service becomes a private service. Specifically, this option applies the 'networking.knative.dev/visibility' label to Knative service. Refer to the Knative documentation for more information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#visibility DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#visibility}
  */
  readonly visibility?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeServiceToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeService | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    auto: cdktf.booleanToTerraform(struct!.auto),
    autoscaling_metric: cdktf.stringToTerraform(struct!.autoscalingMetric),
    autoscaling_target: cdktf.numberToTerraform(struct!.autoscalingTarget),
    class: cdktf.stringToTerraform(struct!.class),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    max_scale: cdktf.numberToTerraform(struct!.maxScale),
    min_scale: cdktf.numberToTerraform(struct!.minScale),
    rollout_duration: cdktf.stringToTerraform(struct!.rolloutDuration),
    timeout_seconds: cdktf.numberToTerraform(struct!.timeoutSeconds),
    visibility: cdktf.stringToTerraform(struct!.visibility),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeServiceToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeService | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    auto: {
      value: cdktf.booleanToHclTerraform(struct!.auto),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    autoscaling_metric: {
      value: cdktf.stringToHclTerraform(struct!.autoscalingMetric),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    autoscaling_target: {
      value: cdktf.numberToHclTerraform(struct!.autoscalingTarget),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    class: {
      value: cdktf.stringToHclTerraform(struct!.class),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    max_scale: {
      value: cdktf.numberToHclTerraform(struct!.maxScale),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    min_scale: {
      value: cdktf.numberToHclTerraform(struct!.minScale),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rollout_duration: {
      value: cdktf.stringToHclTerraform(struct!.rolloutDuration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    timeout_seconds: {
      value: cdktf.numberToHclTerraform(struct!.timeoutSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    visibility: {
      value: cdktf.stringToHclTerraform(struct!.visibility),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeServiceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeService | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._auto !== undefined) {
      hasAnyValues = true;
      internalValueResult.auto = this._auto;
    }
    if (this._autoscalingMetric !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoscalingMetric = this._autoscalingMetric;
    }
    if (this._autoscalingTarget !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoscalingTarget = this._autoscalingTarget;
    }
    if (this._class !== undefined) {
      hasAnyValues = true;
      internalValueResult.class = this._class;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._maxScale !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxScale = this._maxScale;
    }
    if (this._minScale !== undefined) {
      hasAnyValues = true;
      internalValueResult.minScale = this._minScale;
    }
    if (this._rolloutDuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.rolloutDuration = this._rolloutDuration;
    }
    if (this._timeoutSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeoutSeconds = this._timeoutSeconds;
    }
    if (this._visibility !== undefined) {
      hasAnyValues = true;
      internalValueResult.visibility = this._visibility;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeService | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._auto = undefined;
      this._autoscalingMetric = undefined;
      this._autoscalingTarget = undefined;
      this._class = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._maxScale = undefined;
      this._minScale = undefined;
      this._rolloutDuration = undefined;
      this._timeoutSeconds = undefined;
      this._visibility = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._auto = value.auto;
      this._autoscalingMetric = value.autoscalingMetric;
      this._autoscalingTarget = value.autoscalingTarget;
      this._class = value.class;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._maxScale = value.maxScale;
      this._minScale = value.minScale;
      this._rolloutDuration = value.rolloutDuration;
      this._timeoutSeconds = value.timeoutSeconds;
      this._visibility = value.visibility;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // auto - computed: false, optional: true, required: false
  private _auto?: boolean | cdktf.IResolvable; 
  public get auto() {
    return this.getBooleanAttribute('auto');
  }
  public set auto(value: boolean | cdktf.IResolvable) {
    this._auto = value;
  }
  public resetAuto() {
    this._auto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoInput() {
    return this._auto;
  }

  // autoscaling_metric - computed: false, optional: true, required: false
  private _autoscalingMetric?: string; 
  public get autoscalingMetric() {
    return this.getStringAttribute('autoscaling_metric');
  }
  public set autoscalingMetric(value: string) {
    this._autoscalingMetric = value;
  }
  public resetAutoscalingMetric() {
    this._autoscalingMetric = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoscalingMetricInput() {
    return this._autoscalingMetric;
  }

  // autoscaling_target - computed: false, optional: true, required: false
  private _autoscalingTarget?: number; 
  public get autoscalingTarget() {
    return this.getNumberAttribute('autoscaling_target');
  }
  public set autoscalingTarget(value: number) {
    this._autoscalingTarget = value;
  }
  public resetAutoscalingTarget() {
    this._autoscalingTarget = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoscalingTargetInput() {
    return this._autoscalingTarget;
  }

  // class - computed: false, optional: true, required: false
  private _class?: string; 
  public get class() {
    return this.getStringAttribute('class');
  }
  public set class(value: string) {
    this._class = value;
  }
  public resetClass() {
    this._class = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get classInput() {
    return this._class;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // max_scale - computed: false, optional: true, required: false
  private _maxScale?: number; 
  public get maxScale() {
    return this.getNumberAttribute('max_scale');
  }
  public set maxScale(value: number) {
    this._maxScale = value;
  }
  public resetMaxScale() {
    this._maxScale = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxScaleInput() {
    return this._maxScale;
  }

  // min_scale - computed: false, optional: true, required: false
  private _minScale?: number; 
  public get minScale() {
    return this.getNumberAttribute('min_scale');
  }
  public set minScale(value: number) {
    this._minScale = value;
  }
  public resetMinScale() {
    this._minScale = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minScaleInput() {
    return this._minScale;
  }

  // rollout_duration - computed: false, optional: true, required: false
  private _rolloutDuration?: string; 
  public get rolloutDuration() {
    return this.getStringAttribute('rollout_duration');
  }
  public set rolloutDuration(value: string) {
    this._rolloutDuration = value;
  }
  public resetRolloutDuration() {
    this._rolloutDuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rolloutDurationInput() {
    return this._rolloutDuration;
  }

  // timeout_seconds - computed: false, optional: true, required: false
  private _timeoutSeconds?: number; 
  public get timeoutSeconds() {
    return this.getNumberAttribute('timeout_seconds');
  }
  public set timeoutSeconds(value: number) {
    this._timeoutSeconds = value;
  }
  public resetTimeoutSeconds() {
    this._timeoutSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeoutSecondsInput() {
    return this._timeoutSeconds;
  }

  // visibility - computed: false, optional: true, required: false
  private _visibility?: string; 
  public get visibility() {
    return this.getStringAttribute('visibility');
  }
  public set visibility(value: string) {
    this._visibility = value;
  }
  public resetVisibility() {
    this._visibility = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get visibilityInput() {
    return this._visibility;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLogging {
  /**
  * Colorize the log output
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#color DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#color}
  */
  readonly color?: boolean | cdktf.IResolvable;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Logs message format
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#format DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#format}
  */
  readonly format?: string;
  /**
  * Output the logs in JSON
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#json DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#json}
  */
  readonly json?: boolean | cdktf.IResolvable;
  /**
  * Enable 'pretty printing' of the JSON logs
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#json_pretty_print DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#json_pretty_print}
  */
  readonly jsonPrettyPrint?: boolean | cdktf.IResolvable;
  /**
  * Adjust the logging level (defaults to 'INFO')
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#level DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#level}
  */
  readonly level?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLoggingToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLogging | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    color: cdktf.booleanToTerraform(struct!.color),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    format: cdktf.stringToTerraform(struct!.format),
    json: cdktf.booleanToTerraform(struct!.json),
    json_pretty_print: cdktf.booleanToTerraform(struct!.jsonPrettyPrint),
    level: cdktf.stringToTerraform(struct!.level),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLoggingToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLogging | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    color: {
      value: cdktf.booleanToHclTerraform(struct!.color),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    json: {
      value: cdktf.booleanToHclTerraform(struct!.json),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    json_pretty_print: {
      value: cdktf.booleanToHclTerraform(struct!.jsonPrettyPrint),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    level: {
      value: cdktf.stringToHclTerraform(struct!.level),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLoggingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLogging | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._color !== undefined) {
      hasAnyValues = true;
      internalValueResult.color = this._color;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._json !== undefined) {
      hasAnyValues = true;
      internalValueResult.json = this._json;
    }
    if (this._jsonPrettyPrint !== undefined) {
      hasAnyValues = true;
      internalValueResult.jsonPrettyPrint = this._jsonPrettyPrint;
    }
    if (this._level !== undefined) {
      hasAnyValues = true;
      internalValueResult.level = this._level;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLogging | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._color = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._format = undefined;
      this._json = undefined;
      this._jsonPrettyPrint = undefined;
      this._level = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._color = value.color;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._format = value.format;
      this._json = value.json;
      this._jsonPrettyPrint = value.jsonPrettyPrint;
      this._level = value.level;
    }
  }

  // color - computed: false, optional: true, required: false
  private _color?: boolean | cdktf.IResolvable; 
  public get color() {
    return this.getBooleanAttribute('color');
  }
  public set color(value: boolean | cdktf.IResolvable) {
    this._color = value;
  }
  public resetColor() {
    this._color = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get colorInput() {
    return this._color;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // json - computed: false, optional: true, required: false
  private _json?: boolean | cdktf.IResolvable; 
  public get json() {
    return this.getBooleanAttribute('json');
  }
  public set json(value: boolean | cdktf.IResolvable) {
    this._json = value;
  }
  public resetJson() {
    this._json = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonInput() {
    return this._json;
  }

  // json_pretty_print - computed: false, optional: true, required: false
  private _jsonPrettyPrint?: boolean | cdktf.IResolvable; 
  public get jsonPrettyPrint() {
    return this.getBooleanAttribute('json_pretty_print');
  }
  public set jsonPrettyPrint(value: boolean | cdktf.IResolvable) {
    this._jsonPrettyPrint = value;
  }
  public resetJsonPrettyPrint() {
    this._jsonPrettyPrint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jsonPrettyPrintInput() {
    return this._jsonPrettyPrint;
  }

  // level - computed: false, optional: true, required: false
  private _level?: string; 
  public get level() {
    return this.getStringAttribute('level');
  }
  public set level(value: string) {
    this._level = value;
  }
  public resetLevel() {
    this._level = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get levelInput() {
    return this._level;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMaster {
  /**
  * TraitConfiguration parameters configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration: { [key: string]: string };
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMasterToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMaster | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMasterToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMaster | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMasterOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMaster | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMaster | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
    }
  }

  // configuration - computed: false, optional: false, required: true
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMount {
  /**
  * A list of configuration pointing to configmap/secret. The configuration are expected to be UTF-8 resources as they are processed by runtime Camel Context and tried to be parsed as property files. They are also made available on the classpath in order to ease their usage directly from the Route. Syntax: [configmap|secret]:name[/key], where name represents the resource name and key optionally represents the resource key to be filtered
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configs DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configs}
  */
  readonly configs?: string[];
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * A list of EmptyDir volumes to be mounted. Syntax: [name:/container/path]
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#empty_dirs DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#empty_dirs}
  */
  readonly emptyDirs?: string[];
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Enable 'hot reload' when a secret/configmap mounted is edited (default 'false'). The configmap/secret must be marked with 'camel.apache.org/integration' label to be taken in account. The resource will be watched for any kind change, also for changes in metadata.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#hot_reload DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#hot_reload}
  */
  readonly hotReload?: boolean | cdktf.IResolvable;
  /**
  * A list of resources (text or binary content) pointing to configmap/secret. The resources are expected to be any resource type (text or binary content). The destination path can be either a default location or any path specified by the user. Syntax: [configmap|secret]:name[/key][@path], where name represents the resource name, key optionally represents the resource key to be filtered and path represents the destination path
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#resources DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#resources}
  */
  readonly resources?: string[];
  /**
  * Deprecated: no longer available since version 2.5.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#scan_kamelets_implicit_label_secrets DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#scan_kamelets_implicit_label_secrets}
  */
  readonly scanKameletsImplicitLabelSecrets?: boolean | cdktf.IResolvable;
  /**
  * A list of Persistent Volume Claims to be mounted. Syntax: [pvcname:/container/path]. If the PVC is not found, the Integration fails. You can use the syntax [pvcname:/container/path:size:accessMode<:storageClass>] to create a dynamic PVC based on the Storage Class provided or the default cluster Storage Class. However, if the PVC exists, the operator would mount it.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#volumes DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#volumes}
  */
  readonly volumes?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMountToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMount | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configs: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.configs),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    empty_dirs: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.emptyDirs),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    hot_reload: cdktf.booleanToTerraform(struct!.hotReload),
    resources: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.resources),
    scan_kamelets_implicit_label_secrets: cdktf.booleanToTerraform(struct!.scanKameletsImplicitLabelSecrets),
    volumes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.volumes),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMountToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMount | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configs: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.configs),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    empty_dirs: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.emptyDirs),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    hot_reload: {
      value: cdktf.booleanToHclTerraform(struct!.hotReload),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    resources: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.resources),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    scan_kamelets_implicit_label_secrets: {
      value: cdktf.booleanToHclTerraform(struct!.scanKameletsImplicitLabelSecrets),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    volumes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.volumes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMountOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMount | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configs !== undefined) {
      hasAnyValues = true;
      internalValueResult.configs = this._configs;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._emptyDirs !== undefined) {
      hasAnyValues = true;
      internalValueResult.emptyDirs = this._emptyDirs;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._hotReload !== undefined) {
      hasAnyValues = true;
      internalValueResult.hotReload = this._hotReload;
    }
    if (this._resources !== undefined) {
      hasAnyValues = true;
      internalValueResult.resources = this._resources;
    }
    if (this._scanKameletsImplicitLabelSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.scanKameletsImplicitLabelSecrets = this._scanKameletsImplicitLabelSecrets;
    }
    if (this._volumes !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumes = this._volumes;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMount | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configs = undefined;
      this._configuration = undefined;
      this._emptyDirs = undefined;
      this._enabled = undefined;
      this._hotReload = undefined;
      this._resources = undefined;
      this._scanKameletsImplicitLabelSecrets = undefined;
      this._volumes = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configs = value.configs;
      this._configuration = value.configuration;
      this._emptyDirs = value.emptyDirs;
      this._enabled = value.enabled;
      this._hotReload = value.hotReload;
      this._resources = value.resources;
      this._scanKameletsImplicitLabelSecrets = value.scanKameletsImplicitLabelSecrets;
      this._volumes = value.volumes;
    }
  }

  // configs - computed: false, optional: true, required: false
  private _configs?: string[]; 
  public get configs() {
    return this.getListAttribute('configs');
  }
  public set configs(value: string[]) {
    this._configs = value;
  }
  public resetConfigs() {
    this._configs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configsInput() {
    return this._configs;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // empty_dirs - computed: false, optional: true, required: false
  private _emptyDirs?: string[]; 
  public get emptyDirs() {
    return this.getListAttribute('empty_dirs');
  }
  public set emptyDirs(value: string[]) {
    this._emptyDirs = value;
  }
  public resetEmptyDirs() {
    this._emptyDirs = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get emptyDirsInput() {
    return this._emptyDirs;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // hot_reload - computed: false, optional: true, required: false
  private _hotReload?: boolean | cdktf.IResolvable; 
  public get hotReload() {
    return this.getBooleanAttribute('hot_reload');
  }
  public set hotReload(value: boolean | cdktf.IResolvable) {
    this._hotReload = value;
  }
  public resetHotReload() {
    this._hotReload = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hotReloadInput() {
    return this._hotReload;
  }

  // resources - computed: false, optional: true, required: false
  private _resources?: string[]; 
  public get resources() {
    return this.getListAttribute('resources');
  }
  public set resources(value: string[]) {
    this._resources = value;
  }
  public resetResources() {
    this._resources = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourcesInput() {
    return this._resources;
  }

  // scan_kamelets_implicit_label_secrets - computed: false, optional: true, required: false
  private _scanKameletsImplicitLabelSecrets?: boolean | cdktf.IResolvable; 
  public get scanKameletsImplicitLabelSecrets() {
    return this.getBooleanAttribute('scan_kamelets_implicit_label_secrets');
  }
  public set scanKameletsImplicitLabelSecrets(value: boolean | cdktf.IResolvable) {
    this._scanKameletsImplicitLabelSecrets = value;
  }
  public resetScanKameletsImplicitLabelSecrets() {
    this._scanKameletsImplicitLabelSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get scanKameletsImplicitLabelSecretsInput() {
    return this._scanKameletsImplicitLabelSecrets;
  }

  // volumes - computed: false, optional: true, required: false
  private _volumes?: string[]; 
  public get volumes() {
    return this.getListAttribute('volumes');
  }
  public set volumes(value: string[]) {
    this._volumes = value;
  }
  public resetVolumes() {
    this._volumes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumesInput() {
    return this._volumes;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapi {
  /**
  * The configmaps holding the spec of the OpenAPI (compatible with > 3.0 spec only).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configmaps DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configmaps}
  */
  readonly configmaps?: string[];
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapiToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configmaps: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.configmaps),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapiToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configmaps: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.configmaps),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configmaps !== undefined) {
      hasAnyValues = true;
      internalValueResult.configmaps = this._configmaps;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configmaps = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configmaps = value.configmaps;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
    }
  }

  // configmaps - computed: false, optional: true, required: false
  private _configmaps?: string[]; 
  public get configmaps() {
    return this.getListAttribute('configmaps');
  }
  public set configmaps(value: string[]) {
    this._configmaps = value;
  }
  public resetConfigmaps() {
    this._configmaps = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configmapsInput() {
    return this._configmaps;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwner {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * The set of annotations to be transferred
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#target_annotations DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#target_annotations}
  */
  readonly targetAnnotations?: string[];
  /**
  * The set of labels to be transferred
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#target_labels DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#target_labels}
  */
  readonly targetLabels?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwnerToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    target_annotations: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.targetAnnotations),
    target_labels: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.targetLabels),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwnerToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwner | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    target_annotations: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.targetAnnotations),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    target_labels: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.targetLabels),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwnerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwner | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._targetAnnotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetAnnotations = this._targetAnnotations;
    }
    if (this._targetLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetLabels = this._targetLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwner | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._targetAnnotations = undefined;
      this._targetLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._targetAnnotations = value.targetAnnotations;
      this._targetLabels = value.targetLabels;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // target_annotations - computed: false, optional: true, required: false
  private _targetAnnotations?: string[]; 
  public get targetAnnotations() {
    return this.getListAttribute('target_annotations');
  }
  public set targetAnnotations(value: string[]) {
    this._targetAnnotations = value;
  }
  public resetTargetAnnotations() {
    this._targetAnnotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetAnnotationsInput() {
    return this._targetAnnotations;
  }

  // target_labels - computed: false, optional: true, required: false
  private _targetLabels?: string[]; 
  public get targetLabels() {
    return this.getListAttribute('target_labels');
  }
  public set targetLabels(value: string[]) {
    this._targetLabels = value;
  }
  public resetTargetLabels() {
    this._targetLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetLabelsInput() {
    return this._targetLabels;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdb {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * The number of pods for the Integration that can be unavailable after an eviction. It can be either an absolute number or a percentage (default '1' if 'min-available' is also not set). Only one of 'max-unavailable' and 'min-available' can be specified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_unavailable DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_unavailable}
  */
  readonly maxUnavailable?: string;
  /**
  * The number of pods for the Integration that must still be available after an eviction. It can be either an absolute number or a percentage. Only one of 'min-available' and 'max-unavailable' can be specified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_available DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_available}
  */
  readonly minAvailable?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdbToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    max_unavailable: cdktf.stringToTerraform(struct!.maxUnavailable),
    min_available: cdktf.stringToTerraform(struct!.minAvailable),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdbToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdb | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    max_unavailable: {
      value: cdktf.stringToHclTerraform(struct!.maxUnavailable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    min_available: {
      value: cdktf.stringToHclTerraform(struct!.minAvailable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdbOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdb | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._maxUnavailable !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxUnavailable = this._maxUnavailable;
    }
    if (this._minAvailable !== undefined) {
      hasAnyValues = true;
      internalValueResult.minAvailable = this._minAvailable;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdb | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._maxUnavailable = undefined;
      this._minAvailable = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._maxUnavailable = value.maxUnavailable;
      this._minAvailable = value.minAvailable;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // max_unavailable - computed: false, optional: true, required: false
  private _maxUnavailable?: string; 
  public get maxUnavailable() {
    return this.getStringAttribute('max_unavailable');
  }
  public set maxUnavailable(value: string) {
    this._maxUnavailable = value;
  }
  public resetMaxUnavailable() {
    this._maxUnavailable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxUnavailableInput() {
    return this._maxUnavailable;
  }

  // min_available - computed: false, optional: true, required: false
  private _minAvailable?: string; 
  public get minAvailable() {
    return this.getStringAttribute('min_available');
  }
  public set minAvailable(value: string) {
    this._minAvailable = value;
  }
  public resetMinAvailable() {
    this._minAvailable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minAvailableInput() {
    return this._minAvailable;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatform {
  /**
  * To automatically detect from the environment if a default platform can be created (it will be created on OpenShift or when a registry address is set). Deprecated: Platform is auto generated by the operator install procedure - maintained for backward compatibility
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#auto DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#auto}
  */
  readonly auto?: boolean | cdktf.IResolvable;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * To create a default (empty) platform when the platform is missing. Deprecated: Platform is auto generated by the operator install procedure - maintained for backward compatibility
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#create_default DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#create_default}
  */
  readonly createDefault?: boolean | cdktf.IResolvable;
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Indicates if the platform should be created globally in the case of global operator (default true). Deprecated: Platform is auto generated by the operator install procedure - maintained for backward compatibility
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#global DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#global}
  */
  readonly global?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatformToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatform | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auto: cdktf.booleanToTerraform(struct!.auto),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    create_default: cdktf.booleanToTerraform(struct!.createDefault),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    global: cdktf.booleanToTerraform(struct!.global),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatformToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatform | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auto: {
      value: cdktf.booleanToHclTerraform(struct!.auto),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    create_default: {
      value: cdktf.booleanToHclTerraform(struct!.createDefault),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    global: {
      value: cdktf.booleanToHclTerraform(struct!.global),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatformOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatform | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._auto !== undefined) {
      hasAnyValues = true;
      internalValueResult.auto = this._auto;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._createDefault !== undefined) {
      hasAnyValues = true;
      internalValueResult.createDefault = this._createDefault;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._global !== undefined) {
      hasAnyValues = true;
      internalValueResult.global = this._global;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatform | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._auto = undefined;
      this._configuration = undefined;
      this._createDefault = undefined;
      this._enabled = undefined;
      this._global = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._auto = value.auto;
      this._configuration = value.configuration;
      this._createDefault = value.createDefault;
      this._enabled = value.enabled;
      this._global = value.global;
    }
  }

  // auto - computed: false, optional: true, required: false
  private _auto?: boolean | cdktf.IResolvable; 
  public get auto() {
    return this.getBooleanAttribute('auto');
  }
  public set auto(value: boolean | cdktf.IResolvable) {
    this._auto = value;
  }
  public resetAuto() {
    this._auto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoInput() {
    return this._auto;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // create_default - computed: false, optional: true, required: false
  private _createDefault?: boolean | cdktf.IResolvable; 
  public get createDefault() {
    return this.getBooleanAttribute('create_default');
  }
  public set createDefault(value: boolean | cdktf.IResolvable) {
    this._createDefault = value;
  }
  public resetCreateDefault() {
    this._createDefault = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get createDefaultInput() {
    return this._createDefault;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // global - computed: false, optional: true, required: false
  private _global?: boolean | cdktf.IResolvable; 
  public get global() {
    return this.getBooleanAttribute('global');
  }
  public set global(value: boolean | cdktf.IResolvable) {
    this._global = value;
  }
  public resetGlobal() {
    this._global = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get globalInput() {
    return this._global;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPod {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPodToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPod | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPodToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPod | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPodOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPod | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPod | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheus {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Whether a 'PodMonitor' resource is created (default 'true').
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pod_monitor DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pod_monitor}
  */
  readonly podMonitor?: boolean | cdktf.IResolvable;
  /**
  * The 'PodMonitor' resource labels, applicable when 'pod-monitor' is 'true'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pod_monitor_labels DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pod_monitor_labels}
  */
  readonly podMonitorLabels?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheusToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheus | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    pod_monitor: cdktf.booleanToTerraform(struct!.podMonitor),
    pod_monitor_labels: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podMonitorLabels),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheusToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheus | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    pod_monitor: {
      value: cdktf.booleanToHclTerraform(struct!.podMonitor),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    pod_monitor_labels: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podMonitorLabels),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheusOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheus | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._podMonitor !== undefined) {
      hasAnyValues = true;
      internalValueResult.podMonitor = this._podMonitor;
    }
    if (this._podMonitorLabels !== undefined) {
      hasAnyValues = true;
      internalValueResult.podMonitorLabels = this._podMonitorLabels;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheus | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._podMonitor = undefined;
      this._podMonitorLabels = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._podMonitor = value.podMonitor;
      this._podMonitorLabels = value.podMonitorLabels;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // pod_monitor - computed: false, optional: true, required: false
  private _podMonitor?: boolean | cdktf.IResolvable; 
  public get podMonitor() {
    return this.getBooleanAttribute('pod_monitor');
  }
  public set podMonitor(value: boolean | cdktf.IResolvable) {
    this._podMonitor = value;
  }
  public resetPodMonitor() {
    this._podMonitor = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podMonitorInput() {
    return this._podMonitor;
  }

  // pod_monitor_labels - computed: false, optional: true, required: false
  private _podMonitorLabels?: string[]; 
  public get podMonitorLabels() {
    return this.getListAttribute('pod_monitor_labels');
  }
  public set podMonitorLabels(value: string[]) {
    this._podMonitorLabels = value;
  }
  public resetPodMonitorLabels() {
    this._podMonitorLabels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podMonitorLabelsInput() {
    return this._podMonitorLabels;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecret {
  /**
  * Automatically configures the platform registry secret on the pod if it is of type 'kubernetes.io/dockerconfigjson'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#auto DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#auto}
  */
  readonly auto?: boolean | cdktf.IResolvable;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * When using a global operator with a shared platform, this enables delegation of the 'system:image-puller' cluster role on the operator namespace to the integration service account.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#image_puller_delegation DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#image_puller_delegation}
  */
  readonly imagePullerDelegation?: boolean | cdktf.IResolvable;
  /**
  * The pull secret name to set on the Pod. If left empty this is automatically taken from the 'IntegrationPlatform' registry configuration.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#secret_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecretToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auto: cdktf.booleanToTerraform(struct!.auto),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    image_puller_delegation: cdktf.booleanToTerraform(struct!.imagePullerDelegation),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecretToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecret | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auto: {
      value: cdktf.booleanToHclTerraform(struct!.auto),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    image_puller_delegation: {
      value: cdktf.booleanToHclTerraform(struct!.imagePullerDelegation),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecretOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecret | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._auto !== undefined) {
      hasAnyValues = true;
      internalValueResult.auto = this._auto;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._imagePullerDelegation !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullerDelegation = this._imagePullerDelegation;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecret | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._auto = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._imagePullerDelegation = undefined;
      this._secretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._auto = value.auto;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._imagePullerDelegation = value.imagePullerDelegation;
      this._secretName = value.secretName;
    }
  }

  // auto - computed: false, optional: true, required: false
  private _auto?: boolean | cdktf.IResolvable; 
  public get auto() {
    return this.getBooleanAttribute('auto');
  }
  public set auto(value: boolean | cdktf.IResolvable) {
    this._auto = value;
  }
  public resetAuto() {
    this._auto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoInput() {
    return this._auto;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // image_puller_delegation - computed: false, optional: true, required: false
  private _imagePullerDelegation?: boolean | cdktf.IResolvable; 
  public get imagePullerDelegation() {
    return this.getBooleanAttribute('image_puller_delegation');
  }
  public set imagePullerDelegation(value: boolean | cdktf.IResolvable) {
    this._imagePullerDelegation = value;
  }
  public resetImagePullerDelegation() {
    this._imagePullerDelegation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullerDelegationInput() {
    return this._imagePullerDelegation;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkus {
  /**
  * The Quarkus mode to run: either 'jvm' or 'native' (default 'jvm'). In case both 'jvm' and 'native' are specified, two 'IntegrationKit' resources are created, with the 'native' kit having precedence over the 'jvm' one once ready.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#build_mode DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#build_mode}
  */
  readonly buildMode?: string[];
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * The base image to use when running a native build (default 'quay.io/quarkus/quarkus-micro-image:2.0')
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#native_base_image DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#native_base_image}
  */
  readonly nativeBaseImage?: string;
  /**
  * The image containing the tooling required for a native build (by default it will use the one provided in the runtime catalog)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#native_builder_image DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#native_builder_image}
  */
  readonly nativeBuilderImage?: string;
  /**
  * The Quarkus package types, 'fast-jar' or 'native' (default 'fast-jar'). In case both 'fast-jar' and 'native' are specified, two 'IntegrationKit' resources are created, with the native kit having precedence over the 'fast-jar' one once ready. The order influences the resolution of the current kit for the integration. The kit corresponding to the first package type will be assigned to the integration in case no existing kit that matches the integration exists. Deprecated: use 'build-mode' instead.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#package_types DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#package_types}
  */
  readonly packageTypes?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkusToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkus | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    build_mode: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.buildMode),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    native_base_image: cdktf.stringToTerraform(struct!.nativeBaseImage),
    native_builder_image: cdktf.stringToTerraform(struct!.nativeBuilderImage),
    package_types: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.packageTypes),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkusToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkus | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    build_mode: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.buildMode),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    native_base_image: {
      value: cdktf.stringToHclTerraform(struct!.nativeBaseImage),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    native_builder_image: {
      value: cdktf.stringToHclTerraform(struct!.nativeBuilderImage),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    package_types: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.packageTypes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkusOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkus | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._buildMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.buildMode = this._buildMode;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._nativeBaseImage !== undefined) {
      hasAnyValues = true;
      internalValueResult.nativeBaseImage = this._nativeBaseImage;
    }
    if (this._nativeBuilderImage !== undefined) {
      hasAnyValues = true;
      internalValueResult.nativeBuilderImage = this._nativeBuilderImage;
    }
    if (this._packageTypes !== undefined) {
      hasAnyValues = true;
      internalValueResult.packageTypes = this._packageTypes;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkus | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._buildMode = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._nativeBaseImage = undefined;
      this._nativeBuilderImage = undefined;
      this._packageTypes = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._buildMode = value.buildMode;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._nativeBaseImage = value.nativeBaseImage;
      this._nativeBuilderImage = value.nativeBuilderImage;
      this._packageTypes = value.packageTypes;
    }
  }

  // build_mode - computed: false, optional: true, required: false
  private _buildMode?: string[]; 
  public get buildMode() {
    return this.getListAttribute('build_mode');
  }
  public set buildMode(value: string[]) {
    this._buildMode = value;
  }
  public resetBuildMode() {
    this._buildMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get buildModeInput() {
    return this._buildMode;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // native_base_image - computed: false, optional: true, required: false
  private _nativeBaseImage?: string; 
  public get nativeBaseImage() {
    return this.getStringAttribute('native_base_image');
  }
  public set nativeBaseImage(value: string) {
    this._nativeBaseImage = value;
  }
  public resetNativeBaseImage() {
    this._nativeBaseImage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nativeBaseImageInput() {
    return this._nativeBaseImage;
  }

  // native_builder_image - computed: false, optional: true, required: false
  private _nativeBuilderImage?: string; 
  public get nativeBuilderImage() {
    return this.getStringAttribute('native_builder_image');
  }
  public set nativeBuilderImage(value: string) {
    this._nativeBuilderImage = value;
  }
  public resetNativeBuilderImage() {
    this._nativeBuilderImage = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nativeBuilderImageInput() {
    return this._nativeBuilderImage;
  }

  // package_types - computed: false, optional: true, required: false
  private _packageTypes?: string[]; 
  public get packageTypes() {
    return this.getListAttribute('package_types');
  }
  public set packageTypes(value: string[]) {
    this._packageTypes = value;
  }
  public resetPackageTypes() {
    this._packageTypes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get packageTypesInput() {
    return this._packageTypes;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistry {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistryToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistry | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistryToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistry | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistryOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistry | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistry | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRoute {
  /**
  * The annotations added to route. This can be used to set route specific annotations For annotations options see https://docs.openshift.com/container-platform/3.11/architecture/networking/routes.html#route-specific-annotations CLI usage example: -t 'route.annotations.'haproxy.router.openshift.io/balance'=true'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#annotations DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * To configure the host exposed by the route.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#host DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * The TLS CA certificate contents. Refer to the OpenShift route documentation for additional information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_ca_certificate DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_ca_certificate}
  */
  readonly tlsCaCertificate?: string;
  /**
  * The secret name and key reference to the TLS CA certificate. The format is 'secret-name[/key-name]', the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a '/'. Refer to the OpenShift route documentation for additional information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_ca_certificate_secret DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_ca_certificate_secret}
  */
  readonly tlsCaCertificateSecret?: string;
  /**
  * The TLS certificate contents. Refer to the OpenShift route documentation for additional information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_certificate DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_certificate}
  */
  readonly tlsCertificate?: string;
  /**
  * The secret name and key reference to the TLS certificate. The format is 'secret-name[/key-name]', the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a '/'. Refer to the OpenShift route documentation for additional information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_certificate_secret DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_certificate_secret}
  */
  readonly tlsCertificateSecret?: string;
  /**
  * The destination CA certificate provides the contents of the ca certificate of the final destination. When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify. Refer to the OpenShift route documentation for additional information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_destination_ca_certificate DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_destination_ca_certificate}
  */
  readonly tlsDestinationCaCertificate?: string;
  /**
  * The secret name and key reference to the destination CA certificate. The format is 'secret-name[/key-name]', the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a '/'. Refer to the OpenShift route documentation for additional information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_destination_ca_certificate_secret DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_destination_ca_certificate_secret}
  */
  readonly tlsDestinationCaCertificateSecret?: string;
  /**
  * To configure how to deal with insecure traffic, e.g. 'Allow', 'Disable' or 'Redirect' traffic. Refer to the OpenShift route documentation for additional information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_insecure_edge_termination_policy DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_insecure_edge_termination_policy}
  */
  readonly tlsInsecureEdgeTerminationPolicy?: string;
  /**
  * The TLS certificate key contents. Refer to the OpenShift route documentation for additional information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_key DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_key}
  */
  readonly tlsKey?: string;
  /**
  * The secret name and key reference to the TLS certificate key. The format is 'secret-name[/key-name]', the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a '/'. Refer to the OpenShift route documentation for additional information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_key_secret DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_key_secret}
  */
  readonly tlsKeySecret?: string;
  /**
  * The TLS termination type, like 'edge', 'passthrough' or 'reencrypt'. Refer to the OpenShift route documentation for additional information.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tls_termination DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tls_termination}
  */
  readonly tlsTermination?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRouteToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRoute | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    host: cdktf.stringToTerraform(struct!.host),
    tls_ca_certificate: cdktf.stringToTerraform(struct!.tlsCaCertificate),
    tls_ca_certificate_secret: cdktf.stringToTerraform(struct!.tlsCaCertificateSecret),
    tls_certificate: cdktf.stringToTerraform(struct!.tlsCertificate),
    tls_certificate_secret: cdktf.stringToTerraform(struct!.tlsCertificateSecret),
    tls_destination_ca_certificate: cdktf.stringToTerraform(struct!.tlsDestinationCaCertificate),
    tls_destination_ca_certificate_secret: cdktf.stringToTerraform(struct!.tlsDestinationCaCertificateSecret),
    tls_insecure_edge_termination_policy: cdktf.stringToTerraform(struct!.tlsInsecureEdgeTerminationPolicy),
    tls_key: cdktf.stringToTerraform(struct!.tlsKey),
    tls_key_secret: cdktf.stringToTerraform(struct!.tlsKeySecret),
    tls_termination: cdktf.stringToTerraform(struct!.tlsTermination),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRouteToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRoute | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls_ca_certificate: {
      value: cdktf.stringToHclTerraform(struct!.tlsCaCertificate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls_ca_certificate_secret: {
      value: cdktf.stringToHclTerraform(struct!.tlsCaCertificateSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls_certificate: {
      value: cdktf.stringToHclTerraform(struct!.tlsCertificate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls_certificate_secret: {
      value: cdktf.stringToHclTerraform(struct!.tlsCertificateSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls_destination_ca_certificate: {
      value: cdktf.stringToHclTerraform(struct!.tlsDestinationCaCertificate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls_destination_ca_certificate_secret: {
      value: cdktf.stringToHclTerraform(struct!.tlsDestinationCaCertificateSecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls_insecure_edge_termination_policy: {
      value: cdktf.stringToHclTerraform(struct!.tlsInsecureEdgeTerminationPolicy),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls_key: {
      value: cdktf.stringToHclTerraform(struct!.tlsKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls_key_secret: {
      value: cdktf.stringToHclTerraform(struct!.tlsKeySecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls_termination: {
      value: cdktf.stringToHclTerraform(struct!.tlsTermination),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRouteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRoute | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._tlsCaCertificate !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsCaCertificate = this._tlsCaCertificate;
    }
    if (this._tlsCaCertificateSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsCaCertificateSecret = this._tlsCaCertificateSecret;
    }
    if (this._tlsCertificate !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsCertificate = this._tlsCertificate;
    }
    if (this._tlsCertificateSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsCertificateSecret = this._tlsCertificateSecret;
    }
    if (this._tlsDestinationCaCertificate !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsDestinationCaCertificate = this._tlsDestinationCaCertificate;
    }
    if (this._tlsDestinationCaCertificateSecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsDestinationCaCertificateSecret = this._tlsDestinationCaCertificateSecret;
    }
    if (this._tlsInsecureEdgeTerminationPolicy !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsInsecureEdgeTerminationPolicy = this._tlsInsecureEdgeTerminationPolicy;
    }
    if (this._tlsKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsKey = this._tlsKey;
    }
    if (this._tlsKeySecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsKeySecret = this._tlsKeySecret;
    }
    if (this._tlsTermination !== undefined) {
      hasAnyValues = true;
      internalValueResult.tlsTermination = this._tlsTermination;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRoute | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._host = undefined;
      this._tlsCaCertificate = undefined;
      this._tlsCaCertificateSecret = undefined;
      this._tlsCertificate = undefined;
      this._tlsCertificateSecret = undefined;
      this._tlsDestinationCaCertificate = undefined;
      this._tlsDestinationCaCertificateSecret = undefined;
      this._tlsInsecureEdgeTerminationPolicy = undefined;
      this._tlsKey = undefined;
      this._tlsKeySecret = undefined;
      this._tlsTermination = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._host = value.host;
      this._tlsCaCertificate = value.tlsCaCertificate;
      this._tlsCaCertificateSecret = value.tlsCaCertificateSecret;
      this._tlsCertificate = value.tlsCertificate;
      this._tlsCertificateSecret = value.tlsCertificateSecret;
      this._tlsDestinationCaCertificate = value.tlsDestinationCaCertificate;
      this._tlsDestinationCaCertificateSecret = value.tlsDestinationCaCertificateSecret;
      this._tlsInsecureEdgeTerminationPolicy = value.tlsInsecureEdgeTerminationPolicy;
      this._tlsKey = value.tlsKey;
      this._tlsKeySecret = value.tlsKeySecret;
      this._tlsTermination = value.tlsTermination;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // tls_ca_certificate - computed: false, optional: true, required: false
  private _tlsCaCertificate?: string; 
  public get tlsCaCertificate() {
    return this.getStringAttribute('tls_ca_certificate');
  }
  public set tlsCaCertificate(value: string) {
    this._tlsCaCertificate = value;
  }
  public resetTlsCaCertificate() {
    this._tlsCaCertificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsCaCertificateInput() {
    return this._tlsCaCertificate;
  }

  // tls_ca_certificate_secret - computed: false, optional: true, required: false
  private _tlsCaCertificateSecret?: string; 
  public get tlsCaCertificateSecret() {
    return this.getStringAttribute('tls_ca_certificate_secret');
  }
  public set tlsCaCertificateSecret(value: string) {
    this._tlsCaCertificateSecret = value;
  }
  public resetTlsCaCertificateSecret() {
    this._tlsCaCertificateSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsCaCertificateSecretInput() {
    return this._tlsCaCertificateSecret;
  }

  // tls_certificate - computed: false, optional: true, required: false
  private _tlsCertificate?: string; 
  public get tlsCertificate() {
    return this.getStringAttribute('tls_certificate');
  }
  public set tlsCertificate(value: string) {
    this._tlsCertificate = value;
  }
  public resetTlsCertificate() {
    this._tlsCertificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsCertificateInput() {
    return this._tlsCertificate;
  }

  // tls_certificate_secret - computed: false, optional: true, required: false
  private _tlsCertificateSecret?: string; 
  public get tlsCertificateSecret() {
    return this.getStringAttribute('tls_certificate_secret');
  }
  public set tlsCertificateSecret(value: string) {
    this._tlsCertificateSecret = value;
  }
  public resetTlsCertificateSecret() {
    this._tlsCertificateSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsCertificateSecretInput() {
    return this._tlsCertificateSecret;
  }

  // tls_destination_ca_certificate - computed: false, optional: true, required: false
  private _tlsDestinationCaCertificate?: string; 
  public get tlsDestinationCaCertificate() {
    return this.getStringAttribute('tls_destination_ca_certificate');
  }
  public set tlsDestinationCaCertificate(value: string) {
    this._tlsDestinationCaCertificate = value;
  }
  public resetTlsDestinationCaCertificate() {
    this._tlsDestinationCaCertificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsDestinationCaCertificateInput() {
    return this._tlsDestinationCaCertificate;
  }

  // tls_destination_ca_certificate_secret - computed: false, optional: true, required: false
  private _tlsDestinationCaCertificateSecret?: string; 
  public get tlsDestinationCaCertificateSecret() {
    return this.getStringAttribute('tls_destination_ca_certificate_secret');
  }
  public set tlsDestinationCaCertificateSecret(value: string) {
    this._tlsDestinationCaCertificateSecret = value;
  }
  public resetTlsDestinationCaCertificateSecret() {
    this._tlsDestinationCaCertificateSecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsDestinationCaCertificateSecretInput() {
    return this._tlsDestinationCaCertificateSecret;
  }

  // tls_insecure_edge_termination_policy - computed: false, optional: true, required: false
  private _tlsInsecureEdgeTerminationPolicy?: string; 
  public get tlsInsecureEdgeTerminationPolicy() {
    return this.getStringAttribute('tls_insecure_edge_termination_policy');
  }
  public set tlsInsecureEdgeTerminationPolicy(value: string) {
    this._tlsInsecureEdgeTerminationPolicy = value;
  }
  public resetTlsInsecureEdgeTerminationPolicy() {
    this._tlsInsecureEdgeTerminationPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsInsecureEdgeTerminationPolicyInput() {
    return this._tlsInsecureEdgeTerminationPolicy;
  }

  // tls_key - computed: false, optional: true, required: false
  private _tlsKey?: string; 
  public get tlsKey() {
    return this.getStringAttribute('tls_key');
  }
  public set tlsKey(value: string) {
    this._tlsKey = value;
  }
  public resetTlsKey() {
    this._tlsKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsKeyInput() {
    return this._tlsKey;
  }

  // tls_key_secret - computed: false, optional: true, required: false
  private _tlsKeySecret?: string; 
  public get tlsKeySecret() {
    return this.getStringAttribute('tls_key_secret');
  }
  public set tlsKeySecret(value: string) {
    this._tlsKeySecret = value;
  }
  public resetTlsKeySecret() {
    this._tlsKeySecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsKeySecretInput() {
    return this._tlsKeySecret;
  }

  // tls_termination - computed: false, optional: true, required: false
  private _tlsTermination?: string; 
  public get tlsTermination() {
    return this.getStringAttribute('tls_termination');
  }
  public set tlsTermination(value: string) {
    this._tlsTermination = value;
  }
  public resetTlsTermination() {
    this._tlsTermination = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsTerminationInput() {
    return this._tlsTermination;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContext {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Deprecated: no longer in use.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Security Context RunAsNonRoot configuration (default false).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#run_as_non_root DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#run_as_non_root}
  */
  readonly runAsNonRoot?: boolean | cdktf.IResolvable;
  /**
  * Security Context RunAsUser configuration (default none): this value is automatically retrieved in Openshift clusters when not explicitly set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#run_as_user DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#run_as_user}
  */
  readonly runAsUser?: number;
  /**
  * Security Context SeccompProfileType configuration (default RuntimeDefault).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#seccomp_profile_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#seccomp_profile_type}
  */
  readonly seccompProfileType?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContextToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    run_as_non_root: cdktf.booleanToTerraform(struct!.runAsNonRoot),
    run_as_user: cdktf.numberToTerraform(struct!.runAsUser),
    seccomp_profile_type: cdktf.stringToTerraform(struct!.seccompProfileType),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContextToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContext | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_non_root: {
      value: cdktf.booleanToHclTerraform(struct!.runAsNonRoot),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    run_as_user: {
      value: cdktf.numberToHclTerraform(struct!.runAsUser),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    seccomp_profile_type: {
      value: cdktf.stringToHclTerraform(struct!.seccompProfileType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContextOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContext | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._runAsNonRoot !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsNonRoot = this._runAsNonRoot;
    }
    if (this._runAsUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.runAsUser = this._runAsUser;
    }
    if (this._seccompProfileType !== undefined) {
      hasAnyValues = true;
      internalValueResult.seccompProfileType = this._seccompProfileType;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContext | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._runAsNonRoot = undefined;
      this._runAsUser = undefined;
      this._seccompProfileType = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._runAsNonRoot = value.runAsNonRoot;
      this._runAsUser = value.runAsUser;
      this._seccompProfileType = value.seccompProfileType;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // run_as_non_root - computed: false, optional: true, required: false
  private _runAsNonRoot?: boolean | cdktf.IResolvable; 
  public get runAsNonRoot() {
    return this.getBooleanAttribute('run_as_non_root');
  }
  public set runAsNonRoot(value: boolean | cdktf.IResolvable) {
    this._runAsNonRoot = value;
  }
  public resetRunAsNonRoot() {
    this._runAsNonRoot = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsNonRootInput() {
    return this._runAsNonRoot;
  }

  // run_as_user - computed: false, optional: true, required: false
  private _runAsUser?: number; 
  public get runAsUser() {
    return this.getNumberAttribute('run_as_user');
  }
  public set runAsUser(value: number) {
    this._runAsUser = value;
  }
  public resetRunAsUser() {
    this._runAsUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get runAsUserInput() {
    return this._runAsUser;
  }

  // seccomp_profile_type - computed: false, optional: true, required: false
  private _seccompProfileType?: string; 
  public get seccompProfileType() {
    return this.getStringAttribute('seccomp_profile_type');
  }
  public set seccompProfileType(value: string) {
    this._seccompProfileType = value;
  }
  public resetSeccompProfileType() {
    this._seccompProfileType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get seccompProfileTypeInput() {
    return this._seccompProfileType;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsService {
  /**
  * To automatically detect from the code if a Service needs to be created.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#auto DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#auto}
  */
  readonly auto?: boolean | cdktf.IResolvable;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Enable Service to be exposed as NodePort (default 'false'). Deprecated: Use service type instead.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#node_port DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#node_port}
  */
  readonly nodePort?: boolean | cdktf.IResolvable;
  /**
  * The type of service to be used, either 'ClusterIP', 'NodePort' or 'LoadBalancer'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsService | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auto: cdktf.booleanToTerraform(struct!.auto),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    node_port: cdktf.booleanToTerraform(struct!.nodePort),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsService | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auto: {
      value: cdktf.booleanToHclTerraform(struct!.auto),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    node_port: {
      value: cdktf.booleanToHclTerraform(struct!.nodePort),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsService | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._auto !== undefined) {
      hasAnyValues = true;
      internalValueResult.auto = this._auto;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._nodePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodePort = this._nodePort;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsService | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._auto = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._nodePort = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._auto = value.auto;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._nodePort = value.nodePort;
      this._type = value.type;
    }
  }

  // auto - computed: false, optional: true, required: false
  private _auto?: boolean | cdktf.IResolvable; 
  public get auto() {
    return this.getBooleanAttribute('auto');
  }
  public set auto(value: boolean | cdktf.IResolvable) {
    this._auto = value;
  }
  public resetAuto() {
    this._auto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoInput() {
    return this._auto;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // node_port - computed: false, optional: true, required: false
  private _nodePort?: boolean | cdktf.IResolvable; 
  public get nodePort() {
    return this.getBooleanAttribute('node_port');
  }
  public set nodePort(value: boolean | cdktf.IResolvable) {
    this._nodePort = value;
  }
  public resetNodePort() {
    this._nodePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodePortInput() {
    return this._nodePort;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBinding {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * List of Services in the form [[apigroup/]version:]kind:[namespace/]name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#services DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#services}
  */
  readonly services?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBindingToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBinding | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    services: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.services),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBindingToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBinding | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    services: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.services),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBindingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBinding | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._services !== undefined) {
      hasAnyValues = true;
      internalValueResult.services = this._services;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBinding | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._services = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._services = value.services;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // services - computed: false, optional: true, required: false
  private _services?: string[]; 
  public get services() {
    return this.getListAttribute('services');
  }
  public set services(value: string[]) {
    this._services = value;
  }
  public resetServices() {
    this._services = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get servicesInput() {
    return this._services;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimzi {
  /**
  * TraitConfiguration parameters configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration: { [key: string]: string };
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimziToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimzi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimziToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimzi | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimziOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimzi | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimzi | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
    }
  }

  // configuration - computed: false, optional: false, required: true
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetry {
  /**
  * Enables automatic configuration of the trait, including automatic discovery of the telemetry endpoint.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#auto DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#auto}
  */
  readonly auto?: boolean | cdktf.IResolvable;
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * The target endpoint of the Telemetry service (automatically discovered by default)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#endpoint DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * The sampler of the telemetry used for tracing (default 'on')
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#sampler DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#sampler}
  */
  readonly sampler?: string;
  /**
  * The sampler of the telemetry used for tracing is parent based (default 'true')
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#sampler_parent_based DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#sampler_parent_based}
  */
  readonly samplerParentBased?: boolean | cdktf.IResolvable;
  /**
  * The sampler ratio of the telemetry used for tracing
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#sampler_ratio DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#sampler_ratio}
  */
  readonly samplerRatio?: string;
  /**
  * The name of the service that publishes telemetry data (defaults to the integration name)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#service_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#service_name}
  */
  readonly serviceName?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetryToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetry | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auto: cdktf.booleanToTerraform(struct!.auto),
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    sampler: cdktf.stringToTerraform(struct!.sampler),
    sampler_parent_based: cdktf.booleanToTerraform(struct!.samplerParentBased),
    sampler_ratio: cdktf.stringToTerraform(struct!.samplerRatio),
    service_name: cdktf.stringToTerraform(struct!.serviceName),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetryToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetry | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auto: {
      value: cdktf.booleanToHclTerraform(struct!.auto),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sampler: {
      value: cdktf.stringToHclTerraform(struct!.sampler),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sampler_parent_based: {
      value: cdktf.booleanToHclTerraform(struct!.samplerParentBased),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    sampler_ratio: {
      value: cdktf.stringToHclTerraform(struct!.samplerRatio),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_name: {
      value: cdktf.stringToHclTerraform(struct!.serviceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetryOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetry | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._auto !== undefined) {
      hasAnyValues = true;
      internalValueResult.auto = this._auto;
    }
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._sampler !== undefined) {
      hasAnyValues = true;
      internalValueResult.sampler = this._sampler;
    }
    if (this._samplerParentBased !== undefined) {
      hasAnyValues = true;
      internalValueResult.samplerParentBased = this._samplerParentBased;
    }
    if (this._samplerRatio !== undefined) {
      hasAnyValues = true;
      internalValueResult.samplerRatio = this._samplerRatio;
    }
    if (this._serviceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceName = this._serviceName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetry | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._auto = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._endpoint = undefined;
      this._sampler = undefined;
      this._samplerParentBased = undefined;
      this._samplerRatio = undefined;
      this._serviceName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._auto = value.auto;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._endpoint = value.endpoint;
      this._sampler = value.sampler;
      this._samplerParentBased = value.samplerParentBased;
      this._samplerRatio = value.samplerRatio;
      this._serviceName = value.serviceName;
    }
  }

  // auto - computed: false, optional: true, required: false
  private _auto?: boolean | cdktf.IResolvable; 
  public get auto() {
    return this.getBooleanAttribute('auto');
  }
  public set auto(value: boolean | cdktf.IResolvable) {
    this._auto = value;
  }
  public resetAuto() {
    this._auto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoInput() {
    return this._auto;
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // sampler - computed: false, optional: true, required: false
  private _sampler?: string; 
  public get sampler() {
    return this.getStringAttribute('sampler');
  }
  public set sampler(value: string) {
    this._sampler = value;
  }
  public resetSampler() {
    this._sampler = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get samplerInput() {
    return this._sampler;
  }

  // sampler_parent_based - computed: false, optional: true, required: false
  private _samplerParentBased?: boolean | cdktf.IResolvable; 
  public get samplerParentBased() {
    return this.getBooleanAttribute('sampler_parent_based');
  }
  public set samplerParentBased(value: boolean | cdktf.IResolvable) {
    this._samplerParentBased = value;
  }
  public resetSamplerParentBased() {
    this._samplerParentBased = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get samplerParentBasedInput() {
    return this._samplerParentBased;
  }

  // sampler_ratio - computed: false, optional: true, required: false
  private _samplerRatio?: string; 
  public get samplerRatio() {
    return this.getStringAttribute('sampler_ratio');
  }
  public set samplerRatio(value: string) {
    this._samplerRatio = value;
  }
  public resetSamplerRatio() {
    this._samplerRatio = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get samplerRatioInput() {
    return this._samplerRatio;
  }

  // service_name - computed: false, optional: true, required: false
  private _serviceName?: string; 
  public get serviceName() {
    return this.getStringAttribute('service_name');
  }
  public set serviceName(value: string) {
    this._serviceName = value;
  }
  public resetServiceName() {
    this._serviceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceNameInput() {
    return this._serviceName;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescale {
  /**
  * TraitConfiguration parameters configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration: { [key: string]: string };
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescaleToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescale | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescaleToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescale | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescaleOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescale | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescale | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
    }
  }

  // configuration - computed: false, optional: false, required: true
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToleration {
  /**
  * Legacy trait configuration parameters. Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: { [key: string]: string };
  /**
  * Can be used to enable or disable a trait. All traits share this common property.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enabled DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * The list of taints to tolerate, in the form 'Key[=Value]:Effect[:Seconds]'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#taints DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#taints}
  */
  readonly taints?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTolerationToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToleration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
    enabled: cdktf.booleanToTerraform(struct!.enabled),
    taints: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.taints),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTolerationToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToleration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    enabled: {
      value: cdktf.booleanToHclTerraform(struct!.enabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    taints: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.taints),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTolerationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToleration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    if (this._enabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.enabled = this._enabled;
    }
    if (this._taints !== undefined) {
      hasAnyValues = true;
      internalValueResult.taints = this._taints;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToleration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
      this._enabled = undefined;
      this._taints = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
      this._enabled = value.enabled;
      this._taints = value.taints;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  public resetConfiguration() {
    this._configuration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }

  // enabled - computed: false, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // taints - computed: false, optional: true, required: false
  private _taints?: string[]; 
  public get taints() {
    return this.getListAttribute('taints');
  }
  public set taints(value: string[]) {
    this._taints = value;
  }
  public resetTaints() {
    this._taints = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get taintsInput() {
    return this._taints;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracing {
  /**
  * TraitConfiguration parameters configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration: { [key: string]: string };
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracingToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracing | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.configuration),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracingToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracing | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.configuration),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracingOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracing | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracing | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration = value.configuration;
    }
  }

  // configuration - computed: false, optional: false, required: true
  private _configuration?: { [key: string]: string }; 
  public get configuration() {
    return this.getStringMapAttribute('configuration');
  }
  public set configuration(value: { [key: string]: string }) {
    this._configuration = value;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraits {
  /**
  * The extension point with addon traits
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#addons DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#addons}
  */
  readonly addons?: { [key: string]: string };
  /**
  * The configuration of Affinity trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#affinity DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#affinity}
  */
  readonly affinity?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinity;
  /**
  * The configuration of Builder trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#builder DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#builder}
  */
  readonly builder?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilder;
  /**
  * The configuration of Camel trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#camel DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#camel}
  */
  readonly camel?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamel;
  /**
  * The configuration of Container trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#container DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#container}
  */
  readonly container?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainer;
  /**
  * The configuration of Cron trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#cron DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#cron}
  */
  readonly cron?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCron;
  /**
  * The configuration of Dependencies trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#dependencies DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#dependencies}
  */
  readonly dependencies?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependencies;
  /**
  * The configuration of Deployer trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#deployer DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#deployer}
  */
  readonly deployer?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployer;
  /**
  * The configuration of Deployment trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#deployment DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#deployment}
  */
  readonly deployment?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployment;
  /**
  * The configuration of Environment trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#environment DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#environment}
  */
  readonly environment?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironment;
  /**
  * The configuration of Error Handler trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#error_handler DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#error_handler}
  */
  readonly errorHandler?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandler;
  /**
  * The configuration of GC trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#gc DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#gc}
  */
  readonly gc?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGc;
  /**
  * The configuration of Health trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#health DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#health}
  */
  readonly health?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealth;
  /**
  * The configuration of Ingress trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#ingress DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#ingress}
  */
  readonly ingress?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngress;
  /**
  * The configuration of Istio trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#istio DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#istio}
  */
  readonly istio?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstio;
  /**
  * The configuration of Jolokia trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#jolokia DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#jolokia}
  */
  readonly jolokia?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokia;
  /**
  * The configuration of JVM trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#jvm DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#jvm}
  */
  readonly jvm?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvm;
  /**
  * The configuration of Kamelets trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#kamelets DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#kamelets}
  */
  readonly kamelets?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKamelets;
  /**
  * Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#keda DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#keda}
  */
  readonly keda?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKeda;
  /**
  * The configuration of Knative trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#knative DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#knative}
  */
  readonly knative?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnative;
  /**
  * The configuration of Knative Service trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#knative_service DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#knative_service}
  */
  readonly knativeService?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeService;
  /**
  * The configuration of Logging trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#logging DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#logging}
  */
  readonly logging?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLogging;
  /**
  * Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#master DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#master}
  */
  readonly master?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMaster;
  /**
  * The configuration of Mount trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#mount DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#mount}
  */
  readonly mount?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMount;
  /**
  * The configuration of OpenAPI trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#openapi DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#openapi}
  */
  readonly openapi?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapi;
  /**
  * The configuration of Owner trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#owner DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#owner}
  */
  readonly owner?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwner;
  /**
  * The configuration of PDB trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pdb DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pdb}
  */
  readonly pdb?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdb;
  /**
  * The configuration of Platform trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#platform DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#platform}
  */
  readonly platform?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatform;
  /**
  * The configuration of Pod trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pod DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pod}
  */
  readonly pod?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPod;
  /**
  * The configuration of Prometheus trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#prometheus DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#prometheus}
  */
  readonly prometheus?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheus;
  /**
  * The configuration of Pull Secret trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pull_secret DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pull_secret}
  */
  readonly pullSecret?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecret;
  /**
  * The configuration of Quarkus trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#quarkus DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#quarkus}
  */
  readonly quarkus?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkus;
  /**
  * The configuration of Registry trait (support removed since version 2.5.0). Deprecated: use jvm trait or read documentation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#registry DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#registry}
  */
  readonly registry?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistry;
  /**
  * The configuration of Route trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#route DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#route}
  */
  readonly route?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRoute;
  /**
  * The configuration of Security Context trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#security_context DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#security_context}
  */
  readonly securityContext?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContext;
  /**
  * The configuration of Service trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#service DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#service}
  */
  readonly service?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsService;
  /**
  * The configuration of Service Binding trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#service_binding DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#service_binding}
  */
  readonly serviceBinding?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBinding;
  /**
  * Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#strimzi DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#strimzi}
  */
  readonly strimzi?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimzi;
  /**
  * The configuration of Telemetry trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#telemetry DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#telemetry}
  */
  readonly telemetry?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetry;
  /**
  * Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#threescale DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#threescale}
  */
  readonly threescale?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescale;
  /**
  * The configuration of Toleration trait
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#toleration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#toleration}
  */
  readonly toleration?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToleration;
  /**
  * Deprecated: for backward compatibility.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#tracing DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#tracing}
  */
  readonly tracing?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracing;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    addons: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.addons),
    affinity: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinityToTerraform(struct!.affinity),
    builder: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilderToTerraform(struct!.builder),
    camel: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamelToTerraform(struct!.camel),
    container: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainerToTerraform(struct!.container),
    cron: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCronToTerraform(struct!.cron),
    dependencies: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependenciesToTerraform(struct!.dependencies),
    deployer: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployerToTerraform(struct!.deployer),
    deployment: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeploymentToTerraform(struct!.deployment),
    environment: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironmentToTerraform(struct!.environment),
    error_handler: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandlerToTerraform(struct!.errorHandler),
    gc: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGcToTerraform(struct!.gc),
    health: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealthToTerraform(struct!.health),
    ingress: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngressToTerraform(struct!.ingress),
    istio: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstioToTerraform(struct!.istio),
    jolokia: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokiaToTerraform(struct!.jolokia),
    jvm: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvmToTerraform(struct!.jvm),
    kamelets: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKameletsToTerraform(struct!.kamelets),
    keda: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKedaToTerraform(struct!.keda),
    knative: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeToTerraform(struct!.knative),
    knative_service: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeServiceToTerraform(struct!.knativeService),
    logging: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLoggingToTerraform(struct!.logging),
    master: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMasterToTerraform(struct!.master),
    mount: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMountToTerraform(struct!.mount),
    openapi: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapiToTerraform(struct!.openapi),
    owner: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwnerToTerraform(struct!.owner),
    pdb: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdbToTerraform(struct!.pdb),
    platform: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatformToTerraform(struct!.platform),
    pod: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPodToTerraform(struct!.pod),
    prometheus: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheusToTerraform(struct!.prometheus),
    pull_secret: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecretToTerraform(struct!.pullSecret),
    quarkus: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkusToTerraform(struct!.quarkus),
    registry: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistryToTerraform(struct!.registry),
    route: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRouteToTerraform(struct!.route),
    security_context: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContextToTerraform(struct!.securityContext),
    service: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceToTerraform(struct!.service),
    service_binding: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBindingToTerraform(struct!.serviceBinding),
    strimzi: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimziToTerraform(struct!.strimzi),
    telemetry: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetryToTerraform(struct!.telemetry),
    threescale: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescaleToTerraform(struct!.threescale),
    toleration: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTolerationToTerraform(struct!.toleration),
    tracing: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracingToTerraform(struct!.tracing),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraits | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    addons: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.addons),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    affinity: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinityToHclTerraform(struct!.affinity),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinity",
    },
    builder: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilderToHclTerraform(struct!.builder),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilder",
    },
    camel: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamelToHclTerraform(struct!.camel),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamel",
    },
    container: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainerToHclTerraform(struct!.container),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainer",
    },
    cron: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCronToHclTerraform(struct!.cron),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCron",
    },
    dependencies: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependenciesToHclTerraform(struct!.dependencies),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependencies",
    },
    deployer: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployerToHclTerraform(struct!.deployer),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployer",
    },
    deployment: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeploymentToHclTerraform(struct!.deployment),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployment",
    },
    environment: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironmentToHclTerraform(struct!.environment),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironment",
    },
    error_handler: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandlerToHclTerraform(struct!.errorHandler),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandler",
    },
    gc: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGcToHclTerraform(struct!.gc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGc",
    },
    health: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealthToHclTerraform(struct!.health),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealth",
    },
    ingress: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngressToHclTerraform(struct!.ingress),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngress",
    },
    istio: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstioToHclTerraform(struct!.istio),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstio",
    },
    jolokia: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokiaToHclTerraform(struct!.jolokia),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokia",
    },
    jvm: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvmToHclTerraform(struct!.jvm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvm",
    },
    kamelets: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKameletsToHclTerraform(struct!.kamelets),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKamelets",
    },
    keda: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKedaToHclTerraform(struct!.keda),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKeda",
    },
    knative: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeToHclTerraform(struct!.knative),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnative",
    },
    knative_service: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeServiceToHclTerraform(struct!.knativeService),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeService",
    },
    logging: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLoggingToHclTerraform(struct!.logging),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLogging",
    },
    master: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMasterToHclTerraform(struct!.master),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMaster",
    },
    mount: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMountToHclTerraform(struct!.mount),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMount",
    },
    openapi: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapiToHclTerraform(struct!.openapi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapi",
    },
    owner: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwnerToHclTerraform(struct!.owner),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwner",
    },
    pdb: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdbToHclTerraform(struct!.pdb),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdb",
    },
    platform: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatformToHclTerraform(struct!.platform),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatform",
    },
    pod: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPodToHclTerraform(struct!.pod),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPod",
    },
    prometheus: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheusToHclTerraform(struct!.prometheus),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheus",
    },
    pull_secret: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecretToHclTerraform(struct!.pullSecret),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecret",
    },
    quarkus: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkusToHclTerraform(struct!.quarkus),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkus",
    },
    registry: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistryToHclTerraform(struct!.registry),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistry",
    },
    route: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRouteToHclTerraform(struct!.route),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRoute",
    },
    security_context: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContextToHclTerraform(struct!.securityContext),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContext",
    },
    service: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceToHclTerraform(struct!.service),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsService",
    },
    service_binding: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBindingToHclTerraform(struct!.serviceBinding),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBinding",
    },
    strimzi: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimziToHclTerraform(struct!.strimzi),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimzi",
    },
    telemetry: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetryToHclTerraform(struct!.telemetry),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetry",
    },
    threescale: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescaleToHclTerraform(struct!.threescale),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescale",
    },
    toleration: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTolerationToHclTerraform(struct!.toleration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToleration",
    },
    tracing: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracingToHclTerraform(struct!.tracing),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracing",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraits | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addons !== undefined) {
      hasAnyValues = true;
      internalValueResult.addons = this._addons;
    }
    if (this._affinity?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.affinity = this._affinity?.internalValue;
    }
    if (this._builder?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.builder = this._builder?.internalValue;
    }
    if (this._camel?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.camel = this._camel?.internalValue;
    }
    if (this._container?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.container = this._container?.internalValue;
    }
    if (this._cron?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cron = this._cron?.internalValue;
    }
    if (this._dependencies?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dependencies = this._dependencies?.internalValue;
    }
    if (this._deployer?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.deployer = this._deployer?.internalValue;
    }
    if (this._deployment?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.deployment = this._deployment?.internalValue;
    }
    if (this._environment?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.environment = this._environment?.internalValue;
    }
    if (this._errorHandler?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.errorHandler = this._errorHandler?.internalValue;
    }
    if (this._gc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.gc = this._gc?.internalValue;
    }
    if (this._health?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.health = this._health?.internalValue;
    }
    if (this._ingress?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ingress = this._ingress?.internalValue;
    }
    if (this._istio?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.istio = this._istio?.internalValue;
    }
    if (this._jolokia?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jolokia = this._jolokia?.internalValue;
    }
    if (this._jvm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jvm = this._jvm?.internalValue;
    }
    if (this._kamelets?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kamelets = this._kamelets?.internalValue;
    }
    if (this._keda?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keda = this._keda?.internalValue;
    }
    if (this._knative?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.knative = this._knative?.internalValue;
    }
    if (this._knativeService?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.knativeService = this._knativeService?.internalValue;
    }
    if (this._logging?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.logging = this._logging?.internalValue;
    }
    if (this._master?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.master = this._master?.internalValue;
    }
    if (this._mount?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mount = this._mount?.internalValue;
    }
    if (this._openapi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.openapi = this._openapi?.internalValue;
    }
    if (this._owner?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.owner = this._owner?.internalValue;
    }
    if (this._pdb?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.pdb = this._pdb?.internalValue;
    }
    if (this._platform?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.platform = this._platform?.internalValue;
    }
    if (this._pod?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.pod = this._pod?.internalValue;
    }
    if (this._prometheus?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.prometheus = this._prometheus?.internalValue;
    }
    if (this._pullSecret?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.pullSecret = this._pullSecret?.internalValue;
    }
    if (this._quarkus?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.quarkus = this._quarkus?.internalValue;
    }
    if (this._registry?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.registry = this._registry?.internalValue;
    }
    if (this._route?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.route = this._route?.internalValue;
    }
    if (this._securityContext?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.securityContext = this._securityContext?.internalValue;
    }
    if (this._service?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.service = this._service?.internalValue;
    }
    if (this._serviceBinding?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceBinding = this._serviceBinding?.internalValue;
    }
    if (this._strimzi?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.strimzi = this._strimzi?.internalValue;
    }
    if (this._telemetry?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.telemetry = this._telemetry?.internalValue;
    }
    if (this._threescale?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.threescale = this._threescale?.internalValue;
    }
    if (this._toleration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.toleration = this._toleration?.internalValue;
    }
    if (this._tracing?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tracing = this._tracing?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraits | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addons = undefined;
      this._affinity.internalValue = undefined;
      this._builder.internalValue = undefined;
      this._camel.internalValue = undefined;
      this._container.internalValue = undefined;
      this._cron.internalValue = undefined;
      this._dependencies.internalValue = undefined;
      this._deployer.internalValue = undefined;
      this._deployment.internalValue = undefined;
      this._environment.internalValue = undefined;
      this._errorHandler.internalValue = undefined;
      this._gc.internalValue = undefined;
      this._health.internalValue = undefined;
      this._ingress.internalValue = undefined;
      this._istio.internalValue = undefined;
      this._jolokia.internalValue = undefined;
      this._jvm.internalValue = undefined;
      this._kamelets.internalValue = undefined;
      this._keda.internalValue = undefined;
      this._knative.internalValue = undefined;
      this._knativeService.internalValue = undefined;
      this._logging.internalValue = undefined;
      this._master.internalValue = undefined;
      this._mount.internalValue = undefined;
      this._openapi.internalValue = undefined;
      this._owner.internalValue = undefined;
      this._pdb.internalValue = undefined;
      this._platform.internalValue = undefined;
      this._pod.internalValue = undefined;
      this._prometheus.internalValue = undefined;
      this._pullSecret.internalValue = undefined;
      this._quarkus.internalValue = undefined;
      this._registry.internalValue = undefined;
      this._route.internalValue = undefined;
      this._securityContext.internalValue = undefined;
      this._service.internalValue = undefined;
      this._serviceBinding.internalValue = undefined;
      this._strimzi.internalValue = undefined;
      this._telemetry.internalValue = undefined;
      this._threescale.internalValue = undefined;
      this._toleration.internalValue = undefined;
      this._tracing.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addons = value.addons;
      this._affinity.internalValue = value.affinity;
      this._builder.internalValue = value.builder;
      this._camel.internalValue = value.camel;
      this._container.internalValue = value.container;
      this._cron.internalValue = value.cron;
      this._dependencies.internalValue = value.dependencies;
      this._deployer.internalValue = value.deployer;
      this._deployment.internalValue = value.deployment;
      this._environment.internalValue = value.environment;
      this._errorHandler.internalValue = value.errorHandler;
      this._gc.internalValue = value.gc;
      this._health.internalValue = value.health;
      this._ingress.internalValue = value.ingress;
      this._istio.internalValue = value.istio;
      this._jolokia.internalValue = value.jolokia;
      this._jvm.internalValue = value.jvm;
      this._kamelets.internalValue = value.kamelets;
      this._keda.internalValue = value.keda;
      this._knative.internalValue = value.knative;
      this._knativeService.internalValue = value.knativeService;
      this._logging.internalValue = value.logging;
      this._master.internalValue = value.master;
      this._mount.internalValue = value.mount;
      this._openapi.internalValue = value.openapi;
      this._owner.internalValue = value.owner;
      this._pdb.internalValue = value.pdb;
      this._platform.internalValue = value.platform;
      this._pod.internalValue = value.pod;
      this._prometheus.internalValue = value.prometheus;
      this._pullSecret.internalValue = value.pullSecret;
      this._quarkus.internalValue = value.quarkus;
      this._registry.internalValue = value.registry;
      this._route.internalValue = value.route;
      this._securityContext.internalValue = value.securityContext;
      this._service.internalValue = value.service;
      this._serviceBinding.internalValue = value.serviceBinding;
      this._strimzi.internalValue = value.strimzi;
      this._telemetry.internalValue = value.telemetry;
      this._threescale.internalValue = value.threescale;
      this._toleration.internalValue = value.toleration;
      this._tracing.internalValue = value.tracing;
    }
  }

  // addons - computed: false, optional: true, required: false
  private _addons?: { [key: string]: string }; 
  public get addons() {
    return this.getStringMapAttribute('addons');
  }
  public set addons(value: { [key: string]: string }) {
    this._addons = value;
  }
  public resetAddons() {
    this._addons = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addonsInput() {
    return this._addons;
  }

  // affinity - computed: false, optional: true, required: false
  private _affinity = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinityOutputReference(this, "affinity");
  public get affinity() {
    return this._affinity;
  }
  public putAffinity(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsAffinity) {
    this._affinity.internalValue = value;
  }
  public resetAffinity() {
    this._affinity.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get affinityInput() {
    return this._affinity.internalValue;
  }

  // builder - computed: false, optional: true, required: false
  private _builder = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilderOutputReference(this, "builder");
  public get builder() {
    return this._builder;
  }
  public putBuilder(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsBuilder) {
    this._builder.internalValue = value;
  }
  public resetBuilder() {
    this._builder.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get builderInput() {
    return this._builder.internalValue;
  }

  // camel - computed: false, optional: true, required: false
  private _camel = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamelOutputReference(this, "camel");
  public get camel() {
    return this._camel;
  }
  public putCamel(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCamel) {
    this._camel.internalValue = value;
  }
  public resetCamel() {
    this._camel.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get camelInput() {
    return this._camel.internalValue;
  }

  // container - computed: false, optional: true, required: false
  private _container = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainerOutputReference(this, "container");
  public get container() {
    return this._container;
  }
  public putContainer(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsContainer) {
    this._container.internalValue = value;
  }
  public resetContainer() {
    this._container.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerInput() {
    return this._container.internalValue;
  }

  // cron - computed: false, optional: true, required: false
  private _cron = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCronOutputReference(this, "cron");
  public get cron() {
    return this._cron;
  }
  public putCron(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsCron) {
    this._cron.internalValue = value;
  }
  public resetCron() {
    this._cron.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cronInput() {
    return this._cron.internalValue;
  }

  // dependencies - computed: false, optional: true, required: false
  private _dependencies = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependenciesOutputReference(this, "dependencies");
  public get dependencies() {
    return this._dependencies;
  }
  public putDependencies(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDependencies) {
    this._dependencies.internalValue = value;
  }
  public resetDependencies() {
    this._dependencies.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dependenciesInput() {
    return this._dependencies.internalValue;
  }

  // deployer - computed: false, optional: true, required: false
  private _deployer = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployerOutputReference(this, "deployer");
  public get deployer() {
    return this._deployer;
  }
  public putDeployer(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployer) {
    this._deployer.internalValue = value;
  }
  public resetDeployer() {
    this._deployer.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deployerInput() {
    return this._deployer.internalValue;
  }

  // deployment - computed: false, optional: true, required: false
  private _deployment = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeploymentOutputReference(this, "deployment");
  public get deployment() {
    return this._deployment;
  }
  public putDeployment(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsDeployment) {
    this._deployment.internalValue = value;
  }
  public resetDeployment() {
    this._deployment.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deploymentInput() {
    return this._deployment.internalValue;
  }

  // environment - computed: false, optional: true, required: false
  private _environment = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironmentOutputReference(this, "environment");
  public get environment() {
    return this._environment;
  }
  public putEnvironment(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsEnvironment) {
    this._environment.internalValue = value;
  }
  public resetEnvironment() {
    this._environment.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get environmentInput() {
    return this._environment.internalValue;
  }

  // error_handler - computed: false, optional: true, required: false
  private _errorHandler = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandlerOutputReference(this, "error_handler");
  public get errorHandler() {
    return this._errorHandler;
  }
  public putErrorHandler(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsErrorHandler) {
    this._errorHandler.internalValue = value;
  }
  public resetErrorHandler() {
    this._errorHandler.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get errorHandlerInput() {
    return this._errorHandler.internalValue;
  }

  // gc - computed: false, optional: true, required: false
  private _gc = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGcOutputReference(this, "gc");
  public get gc() {
    return this._gc;
  }
  public putGc(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsGc) {
    this._gc.internalValue = value;
  }
  public resetGc() {
    this._gc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gcInput() {
    return this._gc.internalValue;
  }

  // health - computed: false, optional: true, required: false
  private _health = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealthOutputReference(this, "health");
  public get health() {
    return this._health;
  }
  public putHealth(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsHealth) {
    this._health.internalValue = value;
  }
  public resetHealth() {
    this._health.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get healthInput() {
    return this._health.internalValue;
  }

  // ingress - computed: false, optional: true, required: false
  private _ingress = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngressOutputReference(this, "ingress");
  public get ingress() {
    return this._ingress;
  }
  public putIngress(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIngress) {
    this._ingress.internalValue = value;
  }
  public resetIngress() {
    this._ingress.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ingressInput() {
    return this._ingress.internalValue;
  }

  // istio - computed: false, optional: true, required: false
  private _istio = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstioOutputReference(this, "istio");
  public get istio() {
    return this._istio;
  }
  public putIstio(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsIstio) {
    this._istio.internalValue = value;
  }
  public resetIstio() {
    this._istio.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get istioInput() {
    return this._istio.internalValue;
  }

  // jolokia - computed: false, optional: true, required: false
  private _jolokia = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokiaOutputReference(this, "jolokia");
  public get jolokia() {
    return this._jolokia;
  }
  public putJolokia(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJolokia) {
    this._jolokia.internalValue = value;
  }
  public resetJolokia() {
    this._jolokia.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jolokiaInput() {
    return this._jolokia.internalValue;
  }

  // jvm - computed: false, optional: true, required: false
  private _jvm = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvmOutputReference(this, "jvm");
  public get jvm() {
    return this._jvm;
  }
  public putJvm(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsJvm) {
    this._jvm.internalValue = value;
  }
  public resetJvm() {
    this._jvm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jvmInput() {
    return this._jvm.internalValue;
  }

  // kamelets - computed: false, optional: true, required: false
  private _kamelets = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKameletsOutputReference(this, "kamelets");
  public get kamelets() {
    return this._kamelets;
  }
  public putKamelets(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKamelets) {
    this._kamelets.internalValue = value;
  }
  public resetKamelets() {
    this._kamelets.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kameletsInput() {
    return this._kamelets.internalValue;
  }

  // keda - computed: false, optional: true, required: false
  private _keda = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKedaOutputReference(this, "keda");
  public get keda() {
    return this._keda;
  }
  public putKeda(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKeda) {
    this._keda.internalValue = value;
  }
  public resetKeda() {
    this._keda.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kedaInput() {
    return this._keda.internalValue;
  }

  // knative - computed: false, optional: true, required: false
  private _knative = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeOutputReference(this, "knative");
  public get knative() {
    return this._knative;
  }
  public putKnative(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnative) {
    this._knative.internalValue = value;
  }
  public resetKnative() {
    this._knative.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get knativeInput() {
    return this._knative.internalValue;
  }

  // knative_service - computed: false, optional: true, required: false
  private _knativeService = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeServiceOutputReference(this, "knative_service");
  public get knativeService() {
    return this._knativeService;
  }
  public putKnativeService(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsKnativeService) {
    this._knativeService.internalValue = value;
  }
  public resetKnativeService() {
    this._knativeService.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get knativeServiceInput() {
    return this._knativeService.internalValue;
  }

  // logging - computed: false, optional: true, required: false
  private _logging = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLoggingOutputReference(this, "logging");
  public get logging() {
    return this._logging;
  }
  public putLogging(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsLogging) {
    this._logging.internalValue = value;
  }
  public resetLogging() {
    this._logging.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loggingInput() {
    return this._logging.internalValue;
  }

  // master - computed: false, optional: true, required: false
  private _master = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMasterOutputReference(this, "master");
  public get master() {
    return this._master;
  }
  public putMaster(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMaster) {
    this._master.internalValue = value;
  }
  public resetMaster() {
    this._master.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get masterInput() {
    return this._master.internalValue;
  }

  // mount - computed: false, optional: true, required: false
  private _mount = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMountOutputReference(this, "mount");
  public get mount() {
    return this._mount;
  }
  public putMount(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsMount) {
    this._mount.internalValue = value;
  }
  public resetMount() {
    this._mount.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mountInput() {
    return this._mount.internalValue;
  }

  // openapi - computed: false, optional: true, required: false
  private _openapi = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapiOutputReference(this, "openapi");
  public get openapi() {
    return this._openapi;
  }
  public putOpenapi(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOpenapi) {
    this._openapi.internalValue = value;
  }
  public resetOpenapi() {
    this._openapi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get openapiInput() {
    return this._openapi.internalValue;
  }

  // owner - computed: false, optional: true, required: false
  private _owner = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwnerOutputReference(this, "owner");
  public get owner() {
    return this._owner;
  }
  public putOwner(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOwner) {
    this._owner.internalValue = value;
  }
  public resetOwner() {
    this._owner.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ownerInput() {
    return this._owner.internalValue;
  }

  // pdb - computed: false, optional: true, required: false
  private _pdb = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdbOutputReference(this, "pdb");
  public get pdb() {
    return this._pdb;
  }
  public putPdb(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPdb) {
    this._pdb.internalValue = value;
  }
  public resetPdb() {
    this._pdb.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pdbInput() {
    return this._pdb.internalValue;
  }

  // platform - computed: false, optional: true, required: false
  private _platform = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatformOutputReference(this, "platform");
  public get platform() {
    return this._platform;
  }
  public putPlatform(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPlatform) {
    this._platform.internalValue = value;
  }
  public resetPlatform() {
    this._platform.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get platformInput() {
    return this._platform.internalValue;
  }

  // pod - computed: false, optional: true, required: false
  private _pod = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPodOutputReference(this, "pod");
  public get pod() {
    return this._pod;
  }
  public putPod(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPod) {
    this._pod.internalValue = value;
  }
  public resetPod() {
    this._pod.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podInput() {
    return this._pod.internalValue;
  }

  // prometheus - computed: false, optional: true, required: false
  private _prometheus = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheusOutputReference(this, "prometheus");
  public get prometheus() {
    return this._prometheus;
  }
  public putPrometheus(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPrometheus) {
    this._prometheus.internalValue = value;
  }
  public resetPrometheus() {
    this._prometheus.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prometheusInput() {
    return this._prometheus.internalValue;
  }

  // pull_secret - computed: false, optional: true, required: false
  private _pullSecret = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecretOutputReference(this, "pull_secret");
  public get pullSecret() {
    return this._pullSecret;
  }
  public putPullSecret(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsPullSecret) {
    this._pullSecret.internalValue = value;
  }
  public resetPullSecret() {
    this._pullSecret.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pullSecretInput() {
    return this._pullSecret.internalValue;
  }

  // quarkus - computed: false, optional: true, required: false
  private _quarkus = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkusOutputReference(this, "quarkus");
  public get quarkus() {
    return this._quarkus;
  }
  public putQuarkus(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsQuarkus) {
    this._quarkus.internalValue = value;
  }
  public resetQuarkus() {
    this._quarkus.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get quarkusInput() {
    return this._quarkus.internalValue;
  }

  // registry - computed: false, optional: true, required: false
  private _registry = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistryOutputReference(this, "registry");
  public get registry() {
    return this._registry;
  }
  public putRegistry(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRegistry) {
    this._registry.internalValue = value;
  }
  public resetRegistry() {
    this._registry.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get registryInput() {
    return this._registry.internalValue;
  }

  // route - computed: false, optional: true, required: false
  private _route = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRouteOutputReference(this, "route");
  public get route() {
    return this._route;
  }
  public putRoute(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsRoute) {
    this._route.internalValue = value;
  }
  public resetRoute() {
    this._route.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get routeInput() {
    return this._route.internalValue;
  }

  // security_context - computed: false, optional: true, required: false
  private _securityContext = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContextOutputReference(this, "security_context");
  public get securityContext() {
    return this._securityContext;
  }
  public putSecurityContext(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsSecurityContext) {
    this._securityContext.internalValue = value;
  }
  public resetSecurityContext() {
    this._securityContext.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get securityContextInput() {
    return this._securityContext.internalValue;
  }

  // service - computed: false, optional: true, required: false
  private _service = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceOutputReference(this, "service");
  public get service() {
    return this._service;
  }
  public putService(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsService) {
    this._service.internalValue = value;
  }
  public resetService() {
    this._service.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceInput() {
    return this._service.internalValue;
  }

  // service_binding - computed: false, optional: true, required: false
  private _serviceBinding = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBindingOutputReference(this, "service_binding");
  public get serviceBinding() {
    return this._serviceBinding;
  }
  public putServiceBinding(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsServiceBinding) {
    this._serviceBinding.internalValue = value;
  }
  public resetServiceBinding() {
    this._serviceBinding.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceBindingInput() {
    return this._serviceBinding.internalValue;
  }

  // strimzi - computed: false, optional: true, required: false
  private _strimzi = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimziOutputReference(this, "strimzi");
  public get strimzi() {
    return this._strimzi;
  }
  public putStrimzi(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsStrimzi) {
    this._strimzi.internalValue = value;
  }
  public resetStrimzi() {
    this._strimzi.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get strimziInput() {
    return this._strimzi.internalValue;
  }

  // telemetry - computed: false, optional: true, required: false
  private _telemetry = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetryOutputReference(this, "telemetry");
  public get telemetry() {
    return this._telemetry;
  }
  public putTelemetry(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTelemetry) {
    this._telemetry.internalValue = value;
  }
  public resetTelemetry() {
    this._telemetry.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get telemetryInput() {
    return this._telemetry.internalValue;
  }

  // threescale - computed: false, optional: true, required: false
  private _threescale = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescaleOutputReference(this, "threescale");
  public get threescale() {
    return this._threescale;
  }
  public putThreescale(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsThreescale) {
    this._threescale.internalValue = value;
  }
  public resetThreescale() {
    this._threescale.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get threescaleInput() {
    return this._threescale.internalValue;
  }

  // toleration - computed: false, optional: true, required: false
  private _toleration = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTolerationOutputReference(this, "toleration");
  public get toleration() {
    return this._toleration;
  }
  public putToleration(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToleration) {
    this._toleration.internalValue = value;
  }
  public resetToleration() {
    this._toleration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationInput() {
    return this._toleration.internalValue;
  }

  // tracing - computed: false, optional: true, required: false
  private _tracing = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracingOutputReference(this, "tracing");
  public get tracing() {
    return this._tracing;
  }
  public putTracing(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsTracing) {
    this._tracing.internalValue = value;
  }
  public resetTracing() {
    this._tracing.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tracingInput() {
    return this._tracing.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegration {
  /**
  * Deprecated: Use camel trait (camel.properties) to manage properties Use mount trait (mount.configs) to manage configs Use mount trait (mount.resources) to manage resources Use mount trait (mount.volumes) to manage volumes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#configuration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#configuration}
  */
  readonly configuration?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationConfiguration[] | cdktf.IResolvable;
  /**
  * the list of Camel or Maven dependencies required by the Integration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#dependencies DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#dependencies}
  */
  readonly dependencies?: string[];
  /**
  * a source in YAML DSL language which contain the routes to run
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#flows DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#flows}
  */
  readonly flows?: { [key: string]: string }[] | cdktf.IResolvable;
  /**
  * the reference of the 'IntegrationKit' which is used for this Integration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#integration_kit DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#integration_kit}
  */
  readonly integrationKit?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationIntegrationKit;
  /**
  * the profile needed to run this Integration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#profile DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#profile}
  */
  readonly profile?: string;
  /**
  * the number of 'Pods' needed for the running Integration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#replicas DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#replicas}
  */
  readonly replicas?: number;
  /**
  * additional Maven repositories to be used
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#repositories DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#repositories}
  */
  readonly repositories?: string[];
  /**
  * custom SA to use for the Integration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#service_account_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#service_account_name}
  */
  readonly serviceAccountName?: string;
  /**
  * the sources which contain the Camel routes to run
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#sources DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#sources}
  */
  readonly sources?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationSources[] | cdktf.IResolvable;
  /**
  * Pod template customization
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#template DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#template}
  */
  readonly template?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplate;
  /**
  * the traits needed to run this Integration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#traits DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#traits}
  */
  readonly traits?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraits;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    configuration: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationConfigurationToTerraform, false)(struct!.configuration),
    dependencies: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.dependencies),
    flows: cdktf.listMapper(cdktf.hashMapper(cdktf.stringToTerraform), false)(struct!.flows),
    integration_kit: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationIntegrationKitToTerraform(struct!.integrationKit),
    profile: cdktf.stringToTerraform(struct!.profile),
    replicas: cdktf.numberToTerraform(struct!.replicas),
    repositories: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.repositories),
    service_account_name: cdktf.stringToTerraform(struct!.serviceAccountName),
    sources: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationSourcesToTerraform, false)(struct!.sources),
    template: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateToTerraform(struct!.template),
    traits: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToTerraform(struct!.traits),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    configuration: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationConfigurationToHclTerraform, false)(struct!.configuration),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationConfigurationList",
    },
    dependencies: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.dependencies),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    flows: {
      value: cdktf.listMapperHcl(cdktf.hashMapperHcl(cdktf.stringToHclTerraform), false)(struct!.flows),
      isBlock: false,
      type: "list",
      storageClassType: "stringMapList",
    },
    integration_kit: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationIntegrationKitToHclTerraform(struct!.integrationKit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationIntegrationKit",
    },
    profile: {
      value: cdktf.stringToHclTerraform(struct!.profile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    replicas: {
      value: cdktf.numberToHclTerraform(struct!.replicas),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    repositories: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.repositories),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    service_account_name: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sources: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationSourcesToHclTerraform, false)(struct!.sources),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationSourcesList",
    },
    template: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateToHclTerraform(struct!.template),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplate",
    },
    traits: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsToHclTerraform(struct!.traits),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraits",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configuration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.configuration = this._configuration?.internalValue;
    }
    if (this._dependencies !== undefined) {
      hasAnyValues = true;
      internalValueResult.dependencies = this._dependencies;
    }
    if (this._flows !== undefined) {
      hasAnyValues = true;
      internalValueResult.flows = this._flows;
    }
    if (this._integrationKit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.integrationKit = this._integrationKit?.internalValue;
    }
    if (this._profile !== undefined) {
      hasAnyValues = true;
      internalValueResult.profile = this._profile;
    }
    if (this._replicas !== undefined) {
      hasAnyValues = true;
      internalValueResult.replicas = this._replicas;
    }
    if (this._repositories !== undefined) {
      hasAnyValues = true;
      internalValueResult.repositories = this._repositories;
    }
    if (this._serviceAccountName !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountName = this._serviceAccountName;
    }
    if (this._sources?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sources = this._sources?.internalValue;
    }
    if (this._template?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.template = this._template?.internalValue;
    }
    if (this._traits?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.traits = this._traits?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configuration.internalValue = undefined;
      this._dependencies = undefined;
      this._flows = undefined;
      this._integrationKit.internalValue = undefined;
      this._profile = undefined;
      this._replicas = undefined;
      this._repositories = undefined;
      this._serviceAccountName = undefined;
      this._sources.internalValue = undefined;
      this._template.internalValue = undefined;
      this._traits.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configuration.internalValue = value.configuration;
      this._dependencies = value.dependencies;
      this._flows = value.flows;
      this._integrationKit.internalValue = value.integrationKit;
      this._profile = value.profile;
      this._replicas = value.replicas;
      this._repositories = value.repositories;
      this._serviceAccountName = value.serviceAccountName;
      this._sources.internalValue = value.sources;
      this._template.internalValue = value.template;
      this._traits.internalValue = value.traits;
    }
  }

  // configuration - computed: false, optional: true, required: false
  private _configuration = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationConfigurationList(this, "configuration", false);
  public get configuration() {
    return this._configuration;
  }
  public putConfiguration(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationConfiguration[] | cdktf.IResolvable) {
    this._configuration.internalValue = value;
  }
  public resetConfiguration() {
    this._configuration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configurationInput() {
    return this._configuration.internalValue;
  }

  // dependencies - computed: false, optional: true, required: false
  private _dependencies?: string[]; 
  public get dependencies() {
    return this.getListAttribute('dependencies');
  }
  public set dependencies(value: string[]) {
    this._dependencies = value;
  }
  public resetDependencies() {
    this._dependencies = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dependenciesInput() {
    return this._dependencies;
  }

  // flows - computed: false, optional: true, required: false
  private _flows?: { [key: string]: string }[] | cdktf.IResolvable; 
  public get flows() {
    return this.interpolationForAttribute('flows');
  }
  public set flows(value: { [key: string]: string }[] | cdktf.IResolvable) {
    this._flows = value;
  }
  public resetFlows() {
    this._flows = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flowsInput() {
    return this._flows;
  }

  // integration_kit - computed: false, optional: true, required: false
  private _integrationKit = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationIntegrationKitOutputReference(this, "integration_kit");
  public get integrationKit() {
    return this._integrationKit;
  }
  public putIntegrationKit(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationIntegrationKit) {
    this._integrationKit.internalValue = value;
  }
  public resetIntegrationKit() {
    this._integrationKit.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get integrationKitInput() {
    return this._integrationKit.internalValue;
  }

  // profile - computed: false, optional: true, required: false
  private _profile?: string; 
  public get profile() {
    return this.getStringAttribute('profile');
  }
  public set profile(value: string) {
    this._profile = value;
  }
  public resetProfile() {
    this._profile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profileInput() {
    return this._profile;
  }

  // replicas - computed: false, optional: true, required: false
  private _replicas?: number; 
  public get replicas() {
    return this.getNumberAttribute('replicas');
  }
  public set replicas(value: number) {
    this._replicas = value;
  }
  public resetReplicas() {
    this._replicas = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replicasInput() {
    return this._replicas;
  }

  // repositories - computed: false, optional: true, required: false
  private _repositories?: string[]; 
  public get repositories() {
    return this.getListAttribute('repositories');
  }
  public set repositories(value: string[]) {
    this._repositories = value;
  }
  public resetRepositories() {
    this._repositories = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get repositoriesInput() {
    return this._repositories;
  }

  // service_account_name - computed: false, optional: true, required: false
  private _serviceAccountName?: string; 
  public get serviceAccountName() {
    return this.getStringAttribute('service_account_name');
  }
  public set serviceAccountName(value: string) {
    this._serviceAccountName = value;
  }
  public resetServiceAccountName() {
    this._serviceAccountName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNameInput() {
    return this._serviceAccountName;
  }

  // sources - computed: false, optional: true, required: false
  private _sources = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationSourcesList(this, "sources", false);
  public get sources() {
    return this._sources;
  }
  public putSources(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationSources[] | cdktf.IResolvable) {
    this._sources.internalValue = value;
  }
  public resetSources() {
    this._sources.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourcesInput() {
    return this._sources.internalValue;
  }

  // template - computed: false, optional: true, required: false
  private _template = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplateOutputReference(this, "template");
  public get template() {
    return this._template;
  }
  public putTemplate(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTemplate) {
    this._template.internalValue = value;
  }
  public resetTemplate() {
    this._template.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get templateInput() {
    return this._template.internalValue;
  }

  // traits - computed: false, optional: true, required: false
  private _traits = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraitsOutputReference(this, "traits");
  public get traits() {
    return this._traits;
  }
  public putTraits(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationTraits) {
    this._traits.internalValue = value;
  }
  public resetTraits() {
    this._traits.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get traitsInput() {
    return this._traits.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypes {
  /**
  * the data type format name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#format DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#format}
  */
  readonly format?: string;
  /**
  * the data type component scheme
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#scheme DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    format: cdktf.stringToTerraform(struct!.format),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._format = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._format = value.format;
      this._scheme = value.scheme;
    }
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRef {
  /**
  * API version of the referent.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#api_version DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: 'spec.containers{name}' (where 'name' refers to the name of the container that triggered the event) or if no container name is specified 'spec.containers[2]' (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#field_path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#field_path}
  */
  readonly fieldPath?: string;
  /**
  * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#kind DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#namespace DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#namespace}
  */
  readonly namespace?: string;
  /**
  * Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#resource_version DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#resource_version}
  */
  readonly resourceVersion?: string;
  /**
  * UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#uid DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#uid}
  */
  readonly uid?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    resource_version: cdktf.stringToTerraform(struct!.resourceVersion),
    uid: cdktf.stringToTerraform(struct!.uid),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_version: {
      value: cdktf.stringToHclTerraform(struct!.resourceVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uid: {
      value: cdktf.stringToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._resourceVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceVersion = this._resourceVersion;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._namespace = undefined;
      this._resourceVersion = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
      this._kind = value.kind;
      this._name = value.name;
      this._namespace = value.namespace;
      this._resourceVersion = value.resourceVersion;
      this._uid = value.uid;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // resource_version - computed: false, optional: true, required: false
  private _resourceVersion?: string; 
  public get resourceVersion() {
    return this.getStringAttribute('resource_version');
  }
  public set resourceVersion(value: string) {
    this._resourceVersion = value;
  }
  public resetResourceVersion() {
    this._resourceVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceVersionInput() {
    return this._resourceVersion;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: string; 
  public get uid() {
    return this.getStringAttribute('uid');
  }
  public set uid(value: string) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#description DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#url DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#url}
  */
  readonly url?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    description: cdktf.stringToTerraform(struct!.description),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._description = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._description = value.description;
      this._url = value.url;
    }
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // url - computed: false, optional: true, required: false
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  public resetUrl() {
    this._url = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaProperties {
  /**
  * default is a default value for undefined object fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#default DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#default}
  */
  readonly default?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#deprecated DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#deprecated}
  */
  readonly deprecated?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#description DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enum}
  */
  readonly enum?: string[];
  /**
  * JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#example DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#example}
  */
  readonly example?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#exclusive_maximum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#exclusive_maximum}
  */
  readonly exclusiveMaximum?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#exclusive_minimum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#exclusive_minimum}
  */
  readonly exclusiveMinimum?: boolean | cdktf.IResolvable;
  /**
  * format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated: - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like '0321751043' or '978-0321751041' - isbn10: an ISBN10 number string like '0321751043' - isbn13: an ISBN13 number string like '978-0321751041' - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35d{3})d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^d{3}[- ]?d{2}[- ]?d{4}$ - hexcolor: an hexadecimal color code like '#FFFFFF' following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like 'rgb(255,255,255)' - byte: base64 encoded binary data - password: any kind of string - date: a date string like '2006-01-02' as defined by full-date in RFC3339 - duration: a duration string like '22 ns' as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like '2014-12-15T19:30:20.000Z' as defined by date-time in RFC3339.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#format DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#format}
  */
  readonly format?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#id DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_items}
  */
  readonly maxItems?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_length DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_length}
  */
  readonly maxLength?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_properties}
  */
  readonly maxProperties?: number;
  /**
  * A Number represents a JSON number literal.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#maximum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#maximum}
  */
  readonly maximum?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_items}
  */
  readonly minItems?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_length DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_length}
  */
  readonly minLength?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_properties}
  */
  readonly minProperties?: number;
  /**
  * A Number represents a JSON number literal.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#minimum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#minimum}
  */
  readonly minimum?: string;
  /**
  * A Number represents a JSON number literal.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#multiple_of DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#multiple_of}
  */
  readonly multipleOf?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#nullable DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#nullable}
  */
  readonly nullable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pattern DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pattern}
  */
  readonly pattern?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#title DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#title}
  */
  readonly title?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#unique_items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#unique_items}
  */
  readonly uniqueItems?: boolean | cdktf.IResolvable;
  /**
  * XDescriptors is a list of extended properties that trigger a custom behavior in external systems
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#x_descriptors DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#x_descriptors}
  */
  readonly xDescriptors?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaPropertiesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaProperties | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.default),
    deprecated: cdktf.booleanToTerraform(struct!.deprecated),
    description: cdktf.stringToTerraform(struct!.description),
    enum: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.enum),
    example: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.example),
    exclusive_maximum: cdktf.booleanToTerraform(struct!.exclusiveMaximum),
    exclusive_minimum: cdktf.booleanToTerraform(struct!.exclusiveMinimum),
    format: cdktf.stringToTerraform(struct!.format),
    id: cdktf.stringToTerraform(struct!.id),
    max_items: cdktf.numberToTerraform(struct!.maxItems),
    max_length: cdktf.numberToTerraform(struct!.maxLength),
    max_properties: cdktf.numberToTerraform(struct!.maxProperties),
    maximum: cdktf.stringToTerraform(struct!.maximum),
    min_items: cdktf.numberToTerraform(struct!.minItems),
    min_length: cdktf.numberToTerraform(struct!.minLength),
    min_properties: cdktf.numberToTerraform(struct!.minProperties),
    minimum: cdktf.stringToTerraform(struct!.minimum),
    multiple_of: cdktf.stringToTerraform(struct!.multipleOf),
    nullable: cdktf.booleanToTerraform(struct!.nullable),
    pattern: cdktf.stringToTerraform(struct!.pattern),
    title: cdktf.stringToTerraform(struct!.title),
    type: cdktf.stringToTerraform(struct!.type),
    unique_items: cdktf.booleanToTerraform(struct!.uniqueItems),
    x_descriptors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.xDescriptors),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaPropertiesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaProperties | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.default),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    deprecated: {
      value: cdktf.booleanToHclTerraform(struct!.deprecated),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enum: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.enum),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    example: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.example),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    exclusive_maximum: {
      value: cdktf.booleanToHclTerraform(struct!.exclusiveMaximum),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    exclusive_minimum: {
      value: cdktf.booleanToHclTerraform(struct!.exclusiveMinimum),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_items: {
      value: cdktf.numberToHclTerraform(struct!.maxItems),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_length: {
      value: cdktf.numberToHclTerraform(struct!.maxLength),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_properties: {
      value: cdktf.numberToHclTerraform(struct!.maxProperties),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    maximum: {
      value: cdktf.stringToHclTerraform(struct!.maximum),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    min_items: {
      value: cdktf.numberToHclTerraform(struct!.minItems),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    min_length: {
      value: cdktf.numberToHclTerraform(struct!.minLength),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    min_properties: {
      value: cdktf.numberToHclTerraform(struct!.minProperties),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    minimum: {
      value: cdktf.stringToHclTerraform(struct!.minimum),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    multiple_of: {
      value: cdktf.stringToHclTerraform(struct!.multipleOf),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    nullable: {
      value: cdktf.booleanToHclTerraform(struct!.nullable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    pattern: {
      value: cdktf.stringToHclTerraform(struct!.pattern),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    title: {
      value: cdktf.stringToHclTerraform(struct!.title),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    unique_items: {
      value: cdktf.booleanToHclTerraform(struct!.uniqueItems),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    x_descriptors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.xDescriptors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaPropertiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaProperties | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._default !== undefined) {
      hasAnyValues = true;
      internalValueResult.default = this._default;
    }
    if (this._deprecated !== undefined) {
      hasAnyValues = true;
      internalValueResult.deprecated = this._deprecated;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._enum !== undefined) {
      hasAnyValues = true;
      internalValueResult.enum = this._enum;
    }
    if (this._example !== undefined) {
      hasAnyValues = true;
      internalValueResult.example = this._example;
    }
    if (this._exclusiveMaximum !== undefined) {
      hasAnyValues = true;
      internalValueResult.exclusiveMaximum = this._exclusiveMaximum;
    }
    if (this._exclusiveMinimum !== undefined) {
      hasAnyValues = true;
      internalValueResult.exclusiveMinimum = this._exclusiveMinimum;
    }
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._maxItems !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxItems = this._maxItems;
    }
    if (this._maxLength !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxLength = this._maxLength;
    }
    if (this._maxProperties !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxProperties = this._maxProperties;
    }
    if (this._maximum !== undefined) {
      hasAnyValues = true;
      internalValueResult.maximum = this._maximum;
    }
    if (this._minItems !== undefined) {
      hasAnyValues = true;
      internalValueResult.minItems = this._minItems;
    }
    if (this._minLength !== undefined) {
      hasAnyValues = true;
      internalValueResult.minLength = this._minLength;
    }
    if (this._minProperties !== undefined) {
      hasAnyValues = true;
      internalValueResult.minProperties = this._minProperties;
    }
    if (this._minimum !== undefined) {
      hasAnyValues = true;
      internalValueResult.minimum = this._minimum;
    }
    if (this._multipleOf !== undefined) {
      hasAnyValues = true;
      internalValueResult.multipleOf = this._multipleOf;
    }
    if (this._nullable !== undefined) {
      hasAnyValues = true;
      internalValueResult.nullable = this._nullable;
    }
    if (this._pattern !== undefined) {
      hasAnyValues = true;
      internalValueResult.pattern = this._pattern;
    }
    if (this._title !== undefined) {
      hasAnyValues = true;
      internalValueResult.title = this._title;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._uniqueItems !== undefined) {
      hasAnyValues = true;
      internalValueResult.uniqueItems = this._uniqueItems;
    }
    if (this._xDescriptors !== undefined) {
      hasAnyValues = true;
      internalValueResult.xDescriptors = this._xDescriptors;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaProperties | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._default = undefined;
      this._deprecated = undefined;
      this._description = undefined;
      this._enum = undefined;
      this._example = undefined;
      this._exclusiveMaximum = undefined;
      this._exclusiveMinimum = undefined;
      this._format = undefined;
      this._id = undefined;
      this._maxItems = undefined;
      this._maxLength = undefined;
      this._maxProperties = undefined;
      this._maximum = undefined;
      this._minItems = undefined;
      this._minLength = undefined;
      this._minProperties = undefined;
      this._minimum = undefined;
      this._multipleOf = undefined;
      this._nullable = undefined;
      this._pattern = undefined;
      this._title = undefined;
      this._type = undefined;
      this._uniqueItems = undefined;
      this._xDescriptors = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._default = value.default;
      this._deprecated = value.deprecated;
      this._description = value.description;
      this._enum = value.enum;
      this._example = value.example;
      this._exclusiveMaximum = value.exclusiveMaximum;
      this._exclusiveMinimum = value.exclusiveMinimum;
      this._format = value.format;
      this._id = value.id;
      this._maxItems = value.maxItems;
      this._maxLength = value.maxLength;
      this._maxProperties = value.maxProperties;
      this._maximum = value.maximum;
      this._minItems = value.minItems;
      this._minLength = value.minLength;
      this._minProperties = value.minProperties;
      this._minimum = value.minimum;
      this._multipleOf = value.multipleOf;
      this._nullable = value.nullable;
      this._pattern = value.pattern;
      this._title = value.title;
      this._type = value.type;
      this._uniqueItems = value.uniqueItems;
      this._xDescriptors = value.xDescriptors;
    }
  }

  // default - computed: false, optional: true, required: false
  private _default?: { [key: string]: string }; 
  public get default() {
    return this.getStringMapAttribute('default');
  }
  public set default(value: { [key: string]: string }) {
    this._default = value;
  }
  public resetDefault() {
    this._default = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultInput() {
    return this._default;
  }

  // deprecated - computed: false, optional: true, required: false
  private _deprecated?: boolean | cdktf.IResolvable; 
  public get deprecated() {
    return this.getBooleanAttribute('deprecated');
  }
  public set deprecated(value: boolean | cdktf.IResolvable) {
    this._deprecated = value;
  }
  public resetDeprecated() {
    this._deprecated = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deprecatedInput() {
    return this._deprecated;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // enum - computed: false, optional: true, required: false
  private _enum?: string[]; 
  public get enum() {
    return this.getListAttribute('enum');
  }
  public set enum(value: string[]) {
    this._enum = value;
  }
  public resetEnum() {
    this._enum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enumInput() {
    return this._enum;
  }

  // example - computed: false, optional: true, required: false
  private _example?: { [key: string]: string }; 
  public get example() {
    return this.getStringMapAttribute('example');
  }
  public set example(value: { [key: string]: string }) {
    this._example = value;
  }
  public resetExample() {
    this._example = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exampleInput() {
    return this._example;
  }

  // exclusive_maximum - computed: false, optional: true, required: false
  private _exclusiveMaximum?: boolean | cdktf.IResolvable; 
  public get exclusiveMaximum() {
    return this.getBooleanAttribute('exclusive_maximum');
  }
  public set exclusiveMaximum(value: boolean | cdktf.IResolvable) {
    this._exclusiveMaximum = value;
  }
  public resetExclusiveMaximum() {
    this._exclusiveMaximum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exclusiveMaximumInput() {
    return this._exclusiveMaximum;
  }

  // exclusive_minimum - computed: false, optional: true, required: false
  private _exclusiveMinimum?: boolean | cdktf.IResolvable; 
  public get exclusiveMinimum() {
    return this.getBooleanAttribute('exclusive_minimum');
  }
  public set exclusiveMinimum(value: boolean | cdktf.IResolvable) {
    this._exclusiveMinimum = value;
  }
  public resetExclusiveMinimum() {
    this._exclusiveMinimum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exclusiveMinimumInput() {
    return this._exclusiveMinimum;
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // max_items - computed: false, optional: true, required: false
  private _maxItems?: number; 
  public get maxItems() {
    return this.getNumberAttribute('max_items');
  }
  public set maxItems(value: number) {
    this._maxItems = value;
  }
  public resetMaxItems() {
    this._maxItems = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxItemsInput() {
    return this._maxItems;
  }

  // max_length - computed: false, optional: true, required: false
  private _maxLength?: number; 
  public get maxLength() {
    return this.getNumberAttribute('max_length');
  }
  public set maxLength(value: number) {
    this._maxLength = value;
  }
  public resetMaxLength() {
    this._maxLength = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxLengthInput() {
    return this._maxLength;
  }

  // max_properties - computed: false, optional: true, required: false
  private _maxProperties?: number; 
  public get maxProperties() {
    return this.getNumberAttribute('max_properties');
  }
  public set maxProperties(value: number) {
    this._maxProperties = value;
  }
  public resetMaxProperties() {
    this._maxProperties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxPropertiesInput() {
    return this._maxProperties;
  }

  // maximum - computed: false, optional: true, required: false
  private _maximum?: string; 
  public get maximum() {
    return this.getStringAttribute('maximum');
  }
  public set maximum(value: string) {
    this._maximum = value;
  }
  public resetMaximum() {
    this._maximum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maximumInput() {
    return this._maximum;
  }

  // min_items - computed: false, optional: true, required: false
  private _minItems?: number; 
  public get minItems() {
    return this.getNumberAttribute('min_items');
  }
  public set minItems(value: number) {
    this._minItems = value;
  }
  public resetMinItems() {
    this._minItems = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minItemsInput() {
    return this._minItems;
  }

  // min_length - computed: false, optional: true, required: false
  private _minLength?: number; 
  public get minLength() {
    return this.getNumberAttribute('min_length');
  }
  public set minLength(value: number) {
    this._minLength = value;
  }
  public resetMinLength() {
    this._minLength = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minLengthInput() {
    return this._minLength;
  }

  // min_properties - computed: false, optional: true, required: false
  private _minProperties?: number; 
  public get minProperties() {
    return this.getNumberAttribute('min_properties');
  }
  public set minProperties(value: number) {
    this._minProperties = value;
  }
  public resetMinProperties() {
    this._minProperties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minPropertiesInput() {
    return this._minProperties;
  }

  // minimum - computed: false, optional: true, required: false
  private _minimum?: string; 
  public get minimum() {
    return this.getStringAttribute('minimum');
  }
  public set minimum(value: string) {
    this._minimum = value;
  }
  public resetMinimum() {
    this._minimum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minimumInput() {
    return this._minimum;
  }

  // multiple_of - computed: false, optional: true, required: false
  private _multipleOf?: string; 
  public get multipleOf() {
    return this.getStringAttribute('multiple_of');
  }
  public set multipleOf(value: string) {
    this._multipleOf = value;
  }
  public resetMultipleOf() {
    this._multipleOf = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get multipleOfInput() {
    return this._multipleOf;
  }

  // nullable - computed: false, optional: true, required: false
  private _nullable?: boolean | cdktf.IResolvable; 
  public get nullable() {
    return this.getBooleanAttribute('nullable');
  }
  public set nullable(value: boolean | cdktf.IResolvable) {
    this._nullable = value;
  }
  public resetNullable() {
    this._nullable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nullableInput() {
    return this._nullable;
  }

  // pattern - computed: false, optional: true, required: false
  private _pattern?: string; 
  public get pattern() {
    return this.getStringAttribute('pattern');
  }
  public set pattern(value: string) {
    this._pattern = value;
  }
  public resetPattern() {
    this._pattern = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternInput() {
    return this._pattern;
  }

  // title - computed: false, optional: true, required: false
  private _title?: string; 
  public get title() {
    return this.getStringAttribute('title');
  }
  public set title(value: string) {
    this._title = value;
  }
  public resetTitle() {
    this._title = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get titleInput() {
    return this._title;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // unique_items - computed: false, optional: true, required: false
  private _uniqueItems?: boolean | cdktf.IResolvable; 
  public get uniqueItems() {
    return this.getBooleanAttribute('unique_items');
  }
  public set uniqueItems(value: boolean | cdktf.IResolvable) {
    this._uniqueItems = value;
  }
  public resetUniqueItems() {
    this._uniqueItems = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uniqueItemsInput() {
    return this._uniqueItems;
  }

  // x_descriptors - computed: false, optional: true, required: false
  private _xDescriptors?: string[]; 
  public get xDescriptors() {
    return this.getListAttribute('x_descriptors');
  }
  public set xDescriptors(value: string[]) {
    this._xDescriptors = value;
  }
  public resetXDescriptors() {
    this._xDescriptors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xDescriptorsInput() {
    return this._xDescriptors;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchema {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#description DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * JSONSchemaURL represents a schema url.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#dollarschema DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#dollarschema}
  */
  readonly dollarschema?: string;
  /**
  * JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#example DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#example}
  */
  readonly example?: { [key: string]: string };
  /**
  * ExternalDocumentation allows referencing an external resource for extended documentation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#external_docs DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#external_docs}
  */
  readonly externalDocs?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocs;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#id DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#properties}
  */
  readonly properties?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaProperties;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#required DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#required}
  */
  readonly required?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#title DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#title}
  */
  readonly title?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    description: cdktf.stringToTerraform(struct!.description),
    dollarschema: cdktf.stringToTerraform(struct!.dollarschema),
    example: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.example),
    external_docs: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocsToTerraform(struct!.externalDocs),
    id: cdktf.stringToTerraform(struct!.id),
    properties: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaPropertiesToTerraform(struct!.properties),
    required: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.required),
    title: cdktf.stringToTerraform(struct!.title),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dollarschema: {
      value: cdktf.stringToHclTerraform(struct!.dollarschema),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    example: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.example),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    external_docs: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocsToHclTerraform(struct!.externalDocs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocs",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    properties: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaPropertiesToHclTerraform(struct!.properties),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaProperties",
    },
    required: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.required),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    title: {
      value: cdktf.stringToHclTerraform(struct!.title),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchema | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._dollarschema !== undefined) {
      hasAnyValues = true;
      internalValueResult.dollarschema = this._dollarschema;
    }
    if (this._example !== undefined) {
      hasAnyValues = true;
      internalValueResult.example = this._example;
    }
    if (this._externalDocs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalDocs = this._externalDocs?.internalValue;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._properties?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.properties = this._properties?.internalValue;
    }
    if (this._required !== undefined) {
      hasAnyValues = true;
      internalValueResult.required = this._required;
    }
    if (this._title !== undefined) {
      hasAnyValues = true;
      internalValueResult.title = this._title;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchema | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._description = undefined;
      this._dollarschema = undefined;
      this._example = undefined;
      this._externalDocs.internalValue = undefined;
      this._id = undefined;
      this._properties.internalValue = undefined;
      this._required = undefined;
      this._title = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._description = value.description;
      this._dollarschema = value.dollarschema;
      this._example = value.example;
      this._externalDocs.internalValue = value.externalDocs;
      this._id = value.id;
      this._properties.internalValue = value.properties;
      this._required = value.required;
      this._title = value.title;
      this._type = value.type;
    }
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // dollarschema - computed: false, optional: true, required: false
  private _dollarschema?: string; 
  public get dollarschema() {
    return this.getStringAttribute('dollarschema');
  }
  public set dollarschema(value: string) {
    this._dollarschema = value;
  }
  public resetDollarschema() {
    this._dollarschema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dollarschemaInput() {
    return this._dollarschema;
  }

  // example - computed: false, optional: true, required: false
  private _example?: { [key: string]: string }; 
  public get example() {
    return this.getStringMapAttribute('example');
  }
  public set example(value: { [key: string]: string }) {
    this._example = value;
  }
  public resetExample() {
    this._example = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exampleInput() {
    return this._example;
  }

  // external_docs - computed: false, optional: true, required: false
  private _externalDocs = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocsOutputReference(this, "external_docs");
  public get externalDocs() {
    return this._externalDocs;
  }
  public putExternalDocs(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaExternalDocs) {
    this._externalDocs.internalValue = value;
  }
  public resetExternalDocs() {
    this._externalDocs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalDocsInput() {
    return this._externalDocs.internalValue;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // properties - computed: false, optional: true, required: false
  private _properties = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaPropertiesOutputReference(this, "properties");
  public get properties() {
    return this._properties;
  }
  public putProperties(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaProperties) {
    this._properties.internalValue = value;
  }
  public resetProperties() {
    this._properties.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get propertiesInput() {
    return this._properties.internalValue;
  }

  // required - computed: false, optional: true, required: false
  private _required?: string[]; 
  public get required() {
    return this.getListAttribute('required');
  }
  public set required(value: string[]) {
    this._required = value;
  }
  public resetRequired() {
    this._required = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredInput() {
    return this._required;
  }

  // title - computed: false, optional: true, required: false
  private _title?: string; 
  public get title() {
    return this.getStringAttribute('title');
  }
  public set title(value: string) {
    this._title = value;
  }
  public resetTitle() {
    this._title = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get titleInput() {
    return this._title;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypes {
  /**
  * media type as expected for HTTP media types (ie, application/json)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#media_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#media_type}
  */
  readonly mediaType?: string;
  /**
  * the expected schema for the event
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#schema DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#schema}
  */
  readonly schema?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchema;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    media_type: cdktf.stringToTerraform(struct!.mediaType),
    schema: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaToTerraform(struct!.schema),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    media_type: {
      value: cdktf.stringToHclTerraform(struct!.mediaType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    schema: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaToHclTerraform(struct!.schema),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchema",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mediaType !== undefined) {
      hasAnyValues = true;
      internalValueResult.mediaType = this._mediaType;
    }
    if (this._schema?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.schema = this._schema?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mediaType = undefined;
      this._schema.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mediaType = value.mediaType;
      this._schema.internalValue = value.schema;
    }
  }

  // media_type - computed: false, optional: true, required: false
  private _mediaType?: string; 
  public get mediaType() {
    return this.getStringAttribute('media_type');
  }
  public set mediaType(value: string) {
    this._mediaType = value;
  }
  public resetMediaType() {
    this._mediaType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mediaTypeInput() {
    return this._mediaType;
  }

  // schema - computed: false, optional: true, required: false
  private _schema = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchemaOutputReference(this, "schema");
  public get schema() {
    return this._schema;
  }
  public putSchema(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesSchema) {
    this._schema.internalValue = value;
  }
  public resetSchema() {
    this._schema.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaInput() {
    return this._schema.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSink {
  /**
  * DataTypes defines the data type of the data produced/consumed by the endpoint and references a given data type specification.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#data_types DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#data_types}
  */
  readonly dataTypes?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypes;
  /**
  * Properties are a key value representation of endpoint properties
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#properties}
  */
  readonly properties?: { [key: string]: string };
  /**
  * Ref can be used to declare a Kubernetes resource as source/sink endpoint
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#ref}
  */
  readonly ref?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRef;
  /**
  * Types defines the data type of the data produced/consumed by the endpoint and references a given data type specification. Deprecated: In favor of using DataTypes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#types DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#types}
  */
  readonly types?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypes;
  /**
  * URI can be used to specify the (Camel) endpoint explicitly
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#uri DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSink | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    data_types: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypesToTerraform(struct!.dataTypes),
    properties: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.properties),
    ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRefToTerraform(struct!.ref),
    types: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesToTerraform(struct!.types),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSink | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    data_types: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypesToHclTerraform(struct!.dataTypes),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypes",
    },
    properties: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.properties),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRefToHclTerraform(struct!.ref),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRef",
    },
    types: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesToHclTerraform(struct!.types),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypes",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSink | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dataTypes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTypes = this._dataTypes?.internalValue;
    }
    if (this._properties !== undefined) {
      hasAnyValues = true;
      internalValueResult.properties = this._properties;
    }
    if (this._ref?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ref = this._ref?.internalValue;
    }
    if (this._types?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.types = this._types?.internalValue;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSink | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dataTypes.internalValue = undefined;
      this._properties = undefined;
      this._ref.internalValue = undefined;
      this._types.internalValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dataTypes.internalValue = value.dataTypes;
      this._properties = value.properties;
      this._ref.internalValue = value.ref;
      this._types.internalValue = value.types;
      this._uri = value.uri;
    }
  }

  // data_types - computed: false, optional: true, required: false
  private _dataTypes = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypesOutputReference(this, "data_types");
  public get dataTypes() {
    return this._dataTypes;
  }
  public putDataTypes(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkDataTypes) {
    this._dataTypes.internalValue = value;
  }
  public resetDataTypes() {
    this._dataTypes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTypesInput() {
    return this._dataTypes.internalValue;
  }

  // properties - computed: false, optional: true, required: false
  private _properties?: { [key: string]: string }; 
  public get properties() {
    return this.getStringMapAttribute('properties');
  }
  public set properties(value: { [key: string]: string }) {
    this._properties = value;
  }
  public resetProperties() {
    this._properties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get propertiesInput() {
    return this._properties;
  }

  // ref - computed: false, optional: true, required: false
  private _ref = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRefOutputReference(this, "ref");
  public get ref() {
    return this._ref;
  }
  public putRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkRef) {
    this._ref.internalValue = value;
  }
  public resetRef() {
    this._ref.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get refInput() {
    return this._ref.internalValue;
  }

  // types - computed: false, optional: true, required: false
  private _types = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypesOutputReference(this, "types");
  public get types() {
    return this._types;
  }
  public putTypes(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkTypes) {
    this._types.internalValue = value;
  }
  public resetTypes() {
    this._types.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typesInput() {
    return this._types.internalValue;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypes {
  /**
  * the data type format name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#format DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#format}
  */
  readonly format?: string;
  /**
  * the data type component scheme
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#scheme DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    format: cdktf.stringToTerraform(struct!.format),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._format = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._format = value.format;
      this._scheme = value.scheme;
    }
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRef {
  /**
  * API version of the referent.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#api_version DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: 'spec.containers{name}' (where 'name' refers to the name of the container that triggered the event) or if no container name is specified 'spec.containers[2]' (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#field_path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#field_path}
  */
  readonly fieldPath?: string;
  /**
  * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#kind DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#namespace DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#namespace}
  */
  readonly namespace?: string;
  /**
  * Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#resource_version DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#resource_version}
  */
  readonly resourceVersion?: string;
  /**
  * UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#uid DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#uid}
  */
  readonly uid?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    resource_version: cdktf.stringToTerraform(struct!.resourceVersion),
    uid: cdktf.stringToTerraform(struct!.uid),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_version: {
      value: cdktf.stringToHclTerraform(struct!.resourceVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uid: {
      value: cdktf.stringToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._resourceVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceVersion = this._resourceVersion;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._namespace = undefined;
      this._resourceVersion = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
      this._kind = value.kind;
      this._name = value.name;
      this._namespace = value.namespace;
      this._resourceVersion = value.resourceVersion;
      this._uid = value.uid;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // resource_version - computed: false, optional: true, required: false
  private _resourceVersion?: string; 
  public get resourceVersion() {
    return this.getStringAttribute('resource_version');
  }
  public set resourceVersion(value: string) {
    this._resourceVersion = value;
  }
  public resetResourceVersion() {
    this._resourceVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceVersionInput() {
    return this._resourceVersion;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: string; 
  public get uid() {
    return this.getStringAttribute('uid');
  }
  public set uid(value: string) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#description DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#url DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#url}
  */
  readonly url?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    description: cdktf.stringToTerraform(struct!.description),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._description = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._description = value.description;
      this._url = value.url;
    }
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // url - computed: false, optional: true, required: false
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  public resetUrl() {
    this._url = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaProperties {
  /**
  * default is a default value for undefined object fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#default DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#default}
  */
  readonly default?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#deprecated DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#deprecated}
  */
  readonly deprecated?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#description DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enum}
  */
  readonly enum?: string[];
  /**
  * JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#example DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#example}
  */
  readonly example?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#exclusive_maximum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#exclusive_maximum}
  */
  readonly exclusiveMaximum?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#exclusive_minimum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#exclusive_minimum}
  */
  readonly exclusiveMinimum?: boolean | cdktf.IResolvable;
  /**
  * format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated: - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like '0321751043' or '978-0321751041' - isbn10: an ISBN10 number string like '0321751043' - isbn13: an ISBN13 number string like '978-0321751041' - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35d{3})d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^d{3}[- ]?d{2}[- ]?d{4}$ - hexcolor: an hexadecimal color code like '#FFFFFF' following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like 'rgb(255,255,255)' - byte: base64 encoded binary data - password: any kind of string - date: a date string like '2006-01-02' as defined by full-date in RFC3339 - duration: a duration string like '22 ns' as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like '2014-12-15T19:30:20.000Z' as defined by date-time in RFC3339.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#format DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#format}
  */
  readonly format?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#id DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_items}
  */
  readonly maxItems?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_length DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_length}
  */
  readonly maxLength?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_properties}
  */
  readonly maxProperties?: number;
  /**
  * A Number represents a JSON number literal.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#maximum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#maximum}
  */
  readonly maximum?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_items}
  */
  readonly minItems?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_length DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_length}
  */
  readonly minLength?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_properties}
  */
  readonly minProperties?: number;
  /**
  * A Number represents a JSON number literal.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#minimum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#minimum}
  */
  readonly minimum?: string;
  /**
  * A Number represents a JSON number literal.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#multiple_of DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#multiple_of}
  */
  readonly multipleOf?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#nullable DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#nullable}
  */
  readonly nullable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pattern DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pattern}
  */
  readonly pattern?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#title DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#title}
  */
  readonly title?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#unique_items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#unique_items}
  */
  readonly uniqueItems?: boolean | cdktf.IResolvable;
  /**
  * XDescriptors is a list of extended properties that trigger a custom behavior in external systems
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#x_descriptors DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#x_descriptors}
  */
  readonly xDescriptors?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaPropertiesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaProperties | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.default),
    deprecated: cdktf.booleanToTerraform(struct!.deprecated),
    description: cdktf.stringToTerraform(struct!.description),
    enum: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.enum),
    example: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.example),
    exclusive_maximum: cdktf.booleanToTerraform(struct!.exclusiveMaximum),
    exclusive_minimum: cdktf.booleanToTerraform(struct!.exclusiveMinimum),
    format: cdktf.stringToTerraform(struct!.format),
    id: cdktf.stringToTerraform(struct!.id),
    max_items: cdktf.numberToTerraform(struct!.maxItems),
    max_length: cdktf.numberToTerraform(struct!.maxLength),
    max_properties: cdktf.numberToTerraform(struct!.maxProperties),
    maximum: cdktf.stringToTerraform(struct!.maximum),
    min_items: cdktf.numberToTerraform(struct!.minItems),
    min_length: cdktf.numberToTerraform(struct!.minLength),
    min_properties: cdktf.numberToTerraform(struct!.minProperties),
    minimum: cdktf.stringToTerraform(struct!.minimum),
    multiple_of: cdktf.stringToTerraform(struct!.multipleOf),
    nullable: cdktf.booleanToTerraform(struct!.nullable),
    pattern: cdktf.stringToTerraform(struct!.pattern),
    title: cdktf.stringToTerraform(struct!.title),
    type: cdktf.stringToTerraform(struct!.type),
    unique_items: cdktf.booleanToTerraform(struct!.uniqueItems),
    x_descriptors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.xDescriptors),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaPropertiesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaProperties | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.default),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    deprecated: {
      value: cdktf.booleanToHclTerraform(struct!.deprecated),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enum: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.enum),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    example: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.example),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    exclusive_maximum: {
      value: cdktf.booleanToHclTerraform(struct!.exclusiveMaximum),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    exclusive_minimum: {
      value: cdktf.booleanToHclTerraform(struct!.exclusiveMinimum),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_items: {
      value: cdktf.numberToHclTerraform(struct!.maxItems),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_length: {
      value: cdktf.numberToHclTerraform(struct!.maxLength),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_properties: {
      value: cdktf.numberToHclTerraform(struct!.maxProperties),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    maximum: {
      value: cdktf.stringToHclTerraform(struct!.maximum),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    min_items: {
      value: cdktf.numberToHclTerraform(struct!.minItems),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    min_length: {
      value: cdktf.numberToHclTerraform(struct!.minLength),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    min_properties: {
      value: cdktf.numberToHclTerraform(struct!.minProperties),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    minimum: {
      value: cdktf.stringToHclTerraform(struct!.minimum),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    multiple_of: {
      value: cdktf.stringToHclTerraform(struct!.multipleOf),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    nullable: {
      value: cdktf.booleanToHclTerraform(struct!.nullable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    pattern: {
      value: cdktf.stringToHclTerraform(struct!.pattern),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    title: {
      value: cdktf.stringToHclTerraform(struct!.title),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    unique_items: {
      value: cdktf.booleanToHclTerraform(struct!.uniqueItems),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    x_descriptors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.xDescriptors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaPropertiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaProperties | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._default !== undefined) {
      hasAnyValues = true;
      internalValueResult.default = this._default;
    }
    if (this._deprecated !== undefined) {
      hasAnyValues = true;
      internalValueResult.deprecated = this._deprecated;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._enum !== undefined) {
      hasAnyValues = true;
      internalValueResult.enum = this._enum;
    }
    if (this._example !== undefined) {
      hasAnyValues = true;
      internalValueResult.example = this._example;
    }
    if (this._exclusiveMaximum !== undefined) {
      hasAnyValues = true;
      internalValueResult.exclusiveMaximum = this._exclusiveMaximum;
    }
    if (this._exclusiveMinimum !== undefined) {
      hasAnyValues = true;
      internalValueResult.exclusiveMinimum = this._exclusiveMinimum;
    }
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._maxItems !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxItems = this._maxItems;
    }
    if (this._maxLength !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxLength = this._maxLength;
    }
    if (this._maxProperties !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxProperties = this._maxProperties;
    }
    if (this._maximum !== undefined) {
      hasAnyValues = true;
      internalValueResult.maximum = this._maximum;
    }
    if (this._minItems !== undefined) {
      hasAnyValues = true;
      internalValueResult.minItems = this._minItems;
    }
    if (this._minLength !== undefined) {
      hasAnyValues = true;
      internalValueResult.minLength = this._minLength;
    }
    if (this._minProperties !== undefined) {
      hasAnyValues = true;
      internalValueResult.minProperties = this._minProperties;
    }
    if (this._minimum !== undefined) {
      hasAnyValues = true;
      internalValueResult.minimum = this._minimum;
    }
    if (this._multipleOf !== undefined) {
      hasAnyValues = true;
      internalValueResult.multipleOf = this._multipleOf;
    }
    if (this._nullable !== undefined) {
      hasAnyValues = true;
      internalValueResult.nullable = this._nullable;
    }
    if (this._pattern !== undefined) {
      hasAnyValues = true;
      internalValueResult.pattern = this._pattern;
    }
    if (this._title !== undefined) {
      hasAnyValues = true;
      internalValueResult.title = this._title;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._uniqueItems !== undefined) {
      hasAnyValues = true;
      internalValueResult.uniqueItems = this._uniqueItems;
    }
    if (this._xDescriptors !== undefined) {
      hasAnyValues = true;
      internalValueResult.xDescriptors = this._xDescriptors;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaProperties | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._default = undefined;
      this._deprecated = undefined;
      this._description = undefined;
      this._enum = undefined;
      this._example = undefined;
      this._exclusiveMaximum = undefined;
      this._exclusiveMinimum = undefined;
      this._format = undefined;
      this._id = undefined;
      this._maxItems = undefined;
      this._maxLength = undefined;
      this._maxProperties = undefined;
      this._maximum = undefined;
      this._minItems = undefined;
      this._minLength = undefined;
      this._minProperties = undefined;
      this._minimum = undefined;
      this._multipleOf = undefined;
      this._nullable = undefined;
      this._pattern = undefined;
      this._title = undefined;
      this._type = undefined;
      this._uniqueItems = undefined;
      this._xDescriptors = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._default = value.default;
      this._deprecated = value.deprecated;
      this._description = value.description;
      this._enum = value.enum;
      this._example = value.example;
      this._exclusiveMaximum = value.exclusiveMaximum;
      this._exclusiveMinimum = value.exclusiveMinimum;
      this._format = value.format;
      this._id = value.id;
      this._maxItems = value.maxItems;
      this._maxLength = value.maxLength;
      this._maxProperties = value.maxProperties;
      this._maximum = value.maximum;
      this._minItems = value.minItems;
      this._minLength = value.minLength;
      this._minProperties = value.minProperties;
      this._minimum = value.minimum;
      this._multipleOf = value.multipleOf;
      this._nullable = value.nullable;
      this._pattern = value.pattern;
      this._title = value.title;
      this._type = value.type;
      this._uniqueItems = value.uniqueItems;
      this._xDescriptors = value.xDescriptors;
    }
  }

  // default - computed: false, optional: true, required: false
  private _default?: { [key: string]: string }; 
  public get default() {
    return this.getStringMapAttribute('default');
  }
  public set default(value: { [key: string]: string }) {
    this._default = value;
  }
  public resetDefault() {
    this._default = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultInput() {
    return this._default;
  }

  // deprecated - computed: false, optional: true, required: false
  private _deprecated?: boolean | cdktf.IResolvable; 
  public get deprecated() {
    return this.getBooleanAttribute('deprecated');
  }
  public set deprecated(value: boolean | cdktf.IResolvable) {
    this._deprecated = value;
  }
  public resetDeprecated() {
    this._deprecated = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deprecatedInput() {
    return this._deprecated;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // enum - computed: false, optional: true, required: false
  private _enum?: string[]; 
  public get enum() {
    return this.getListAttribute('enum');
  }
  public set enum(value: string[]) {
    this._enum = value;
  }
  public resetEnum() {
    this._enum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enumInput() {
    return this._enum;
  }

  // example - computed: false, optional: true, required: false
  private _example?: { [key: string]: string }; 
  public get example() {
    return this.getStringMapAttribute('example');
  }
  public set example(value: { [key: string]: string }) {
    this._example = value;
  }
  public resetExample() {
    this._example = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exampleInput() {
    return this._example;
  }

  // exclusive_maximum - computed: false, optional: true, required: false
  private _exclusiveMaximum?: boolean | cdktf.IResolvable; 
  public get exclusiveMaximum() {
    return this.getBooleanAttribute('exclusive_maximum');
  }
  public set exclusiveMaximum(value: boolean | cdktf.IResolvable) {
    this._exclusiveMaximum = value;
  }
  public resetExclusiveMaximum() {
    this._exclusiveMaximum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exclusiveMaximumInput() {
    return this._exclusiveMaximum;
  }

  // exclusive_minimum - computed: false, optional: true, required: false
  private _exclusiveMinimum?: boolean | cdktf.IResolvable; 
  public get exclusiveMinimum() {
    return this.getBooleanAttribute('exclusive_minimum');
  }
  public set exclusiveMinimum(value: boolean | cdktf.IResolvable) {
    this._exclusiveMinimum = value;
  }
  public resetExclusiveMinimum() {
    this._exclusiveMinimum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exclusiveMinimumInput() {
    return this._exclusiveMinimum;
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // max_items - computed: false, optional: true, required: false
  private _maxItems?: number; 
  public get maxItems() {
    return this.getNumberAttribute('max_items');
  }
  public set maxItems(value: number) {
    this._maxItems = value;
  }
  public resetMaxItems() {
    this._maxItems = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxItemsInput() {
    return this._maxItems;
  }

  // max_length - computed: false, optional: true, required: false
  private _maxLength?: number; 
  public get maxLength() {
    return this.getNumberAttribute('max_length');
  }
  public set maxLength(value: number) {
    this._maxLength = value;
  }
  public resetMaxLength() {
    this._maxLength = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxLengthInput() {
    return this._maxLength;
  }

  // max_properties - computed: false, optional: true, required: false
  private _maxProperties?: number; 
  public get maxProperties() {
    return this.getNumberAttribute('max_properties');
  }
  public set maxProperties(value: number) {
    this._maxProperties = value;
  }
  public resetMaxProperties() {
    this._maxProperties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxPropertiesInput() {
    return this._maxProperties;
  }

  // maximum - computed: false, optional: true, required: false
  private _maximum?: string; 
  public get maximum() {
    return this.getStringAttribute('maximum');
  }
  public set maximum(value: string) {
    this._maximum = value;
  }
  public resetMaximum() {
    this._maximum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maximumInput() {
    return this._maximum;
  }

  // min_items - computed: false, optional: true, required: false
  private _minItems?: number; 
  public get minItems() {
    return this.getNumberAttribute('min_items');
  }
  public set minItems(value: number) {
    this._minItems = value;
  }
  public resetMinItems() {
    this._minItems = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minItemsInput() {
    return this._minItems;
  }

  // min_length - computed: false, optional: true, required: false
  private _minLength?: number; 
  public get minLength() {
    return this.getNumberAttribute('min_length');
  }
  public set minLength(value: number) {
    this._minLength = value;
  }
  public resetMinLength() {
    this._minLength = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minLengthInput() {
    return this._minLength;
  }

  // min_properties - computed: false, optional: true, required: false
  private _minProperties?: number; 
  public get minProperties() {
    return this.getNumberAttribute('min_properties');
  }
  public set minProperties(value: number) {
    this._minProperties = value;
  }
  public resetMinProperties() {
    this._minProperties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minPropertiesInput() {
    return this._minProperties;
  }

  // minimum - computed: false, optional: true, required: false
  private _minimum?: string; 
  public get minimum() {
    return this.getStringAttribute('minimum');
  }
  public set minimum(value: string) {
    this._minimum = value;
  }
  public resetMinimum() {
    this._minimum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minimumInput() {
    return this._minimum;
  }

  // multiple_of - computed: false, optional: true, required: false
  private _multipleOf?: string; 
  public get multipleOf() {
    return this.getStringAttribute('multiple_of');
  }
  public set multipleOf(value: string) {
    this._multipleOf = value;
  }
  public resetMultipleOf() {
    this._multipleOf = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get multipleOfInput() {
    return this._multipleOf;
  }

  // nullable - computed: false, optional: true, required: false
  private _nullable?: boolean | cdktf.IResolvable; 
  public get nullable() {
    return this.getBooleanAttribute('nullable');
  }
  public set nullable(value: boolean | cdktf.IResolvable) {
    this._nullable = value;
  }
  public resetNullable() {
    this._nullable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nullableInput() {
    return this._nullable;
  }

  // pattern - computed: false, optional: true, required: false
  private _pattern?: string; 
  public get pattern() {
    return this.getStringAttribute('pattern');
  }
  public set pattern(value: string) {
    this._pattern = value;
  }
  public resetPattern() {
    this._pattern = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternInput() {
    return this._pattern;
  }

  // title - computed: false, optional: true, required: false
  private _title?: string; 
  public get title() {
    return this.getStringAttribute('title');
  }
  public set title(value: string) {
    this._title = value;
  }
  public resetTitle() {
    this._title = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get titleInput() {
    return this._title;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // unique_items - computed: false, optional: true, required: false
  private _uniqueItems?: boolean | cdktf.IResolvable; 
  public get uniqueItems() {
    return this.getBooleanAttribute('unique_items');
  }
  public set uniqueItems(value: boolean | cdktf.IResolvable) {
    this._uniqueItems = value;
  }
  public resetUniqueItems() {
    this._uniqueItems = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uniqueItemsInput() {
    return this._uniqueItems;
  }

  // x_descriptors - computed: false, optional: true, required: false
  private _xDescriptors?: string[]; 
  public get xDescriptors() {
    return this.getListAttribute('x_descriptors');
  }
  public set xDescriptors(value: string[]) {
    this._xDescriptors = value;
  }
  public resetXDescriptors() {
    this._xDescriptors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xDescriptorsInput() {
    return this._xDescriptors;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchema {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#description DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * JSONSchemaURL represents a schema url.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#dollarschema DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#dollarschema}
  */
  readonly dollarschema?: string;
  /**
  * JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#example DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#example}
  */
  readonly example?: { [key: string]: string };
  /**
  * ExternalDocumentation allows referencing an external resource for extended documentation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#external_docs DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#external_docs}
  */
  readonly externalDocs?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocs;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#id DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#properties}
  */
  readonly properties?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaProperties;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#required DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#required}
  */
  readonly required?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#title DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#title}
  */
  readonly title?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    description: cdktf.stringToTerraform(struct!.description),
    dollarschema: cdktf.stringToTerraform(struct!.dollarschema),
    example: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.example),
    external_docs: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocsToTerraform(struct!.externalDocs),
    id: cdktf.stringToTerraform(struct!.id),
    properties: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaPropertiesToTerraform(struct!.properties),
    required: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.required),
    title: cdktf.stringToTerraform(struct!.title),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dollarschema: {
      value: cdktf.stringToHclTerraform(struct!.dollarschema),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    example: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.example),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    external_docs: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocsToHclTerraform(struct!.externalDocs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocs",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    properties: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaPropertiesToHclTerraform(struct!.properties),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaProperties",
    },
    required: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.required),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    title: {
      value: cdktf.stringToHclTerraform(struct!.title),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchema | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._dollarschema !== undefined) {
      hasAnyValues = true;
      internalValueResult.dollarschema = this._dollarschema;
    }
    if (this._example !== undefined) {
      hasAnyValues = true;
      internalValueResult.example = this._example;
    }
    if (this._externalDocs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalDocs = this._externalDocs?.internalValue;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._properties?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.properties = this._properties?.internalValue;
    }
    if (this._required !== undefined) {
      hasAnyValues = true;
      internalValueResult.required = this._required;
    }
    if (this._title !== undefined) {
      hasAnyValues = true;
      internalValueResult.title = this._title;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchema | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._description = undefined;
      this._dollarschema = undefined;
      this._example = undefined;
      this._externalDocs.internalValue = undefined;
      this._id = undefined;
      this._properties.internalValue = undefined;
      this._required = undefined;
      this._title = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._description = value.description;
      this._dollarschema = value.dollarschema;
      this._example = value.example;
      this._externalDocs.internalValue = value.externalDocs;
      this._id = value.id;
      this._properties.internalValue = value.properties;
      this._required = value.required;
      this._title = value.title;
      this._type = value.type;
    }
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // dollarschema - computed: false, optional: true, required: false
  private _dollarschema?: string; 
  public get dollarschema() {
    return this.getStringAttribute('dollarschema');
  }
  public set dollarschema(value: string) {
    this._dollarschema = value;
  }
  public resetDollarschema() {
    this._dollarschema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dollarschemaInput() {
    return this._dollarschema;
  }

  // example - computed: false, optional: true, required: false
  private _example?: { [key: string]: string }; 
  public get example() {
    return this.getStringMapAttribute('example');
  }
  public set example(value: { [key: string]: string }) {
    this._example = value;
  }
  public resetExample() {
    this._example = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exampleInput() {
    return this._example;
  }

  // external_docs - computed: false, optional: true, required: false
  private _externalDocs = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocsOutputReference(this, "external_docs");
  public get externalDocs() {
    return this._externalDocs;
  }
  public putExternalDocs(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaExternalDocs) {
    this._externalDocs.internalValue = value;
  }
  public resetExternalDocs() {
    this._externalDocs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalDocsInput() {
    return this._externalDocs.internalValue;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // properties - computed: false, optional: true, required: false
  private _properties = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaPropertiesOutputReference(this, "properties");
  public get properties() {
    return this._properties;
  }
  public putProperties(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaProperties) {
    this._properties.internalValue = value;
  }
  public resetProperties() {
    this._properties.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get propertiesInput() {
    return this._properties.internalValue;
  }

  // required - computed: false, optional: true, required: false
  private _required?: string[]; 
  public get required() {
    return this.getListAttribute('required');
  }
  public set required(value: string[]) {
    this._required = value;
  }
  public resetRequired() {
    this._required = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredInput() {
    return this._required;
  }

  // title - computed: false, optional: true, required: false
  private _title?: string; 
  public get title() {
    return this.getStringAttribute('title');
  }
  public set title(value: string) {
    this._title = value;
  }
  public resetTitle() {
    this._title = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get titleInput() {
    return this._title;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypes {
  /**
  * media type as expected for HTTP media types (ie, application/json)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#media_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#media_type}
  */
  readonly mediaType?: string;
  /**
  * the expected schema for the event
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#schema DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#schema}
  */
  readonly schema?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchema;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    media_type: cdktf.stringToTerraform(struct!.mediaType),
    schema: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaToTerraform(struct!.schema),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    media_type: {
      value: cdktf.stringToHclTerraform(struct!.mediaType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    schema: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaToHclTerraform(struct!.schema),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchema",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mediaType !== undefined) {
      hasAnyValues = true;
      internalValueResult.mediaType = this._mediaType;
    }
    if (this._schema?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.schema = this._schema?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mediaType = undefined;
      this._schema.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mediaType = value.mediaType;
      this._schema.internalValue = value.schema;
    }
  }

  // media_type - computed: false, optional: true, required: false
  private _mediaType?: string; 
  public get mediaType() {
    return this.getStringAttribute('media_type');
  }
  public set mediaType(value: string) {
    this._mediaType = value;
  }
  public resetMediaType() {
    this._mediaType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mediaTypeInput() {
    return this._mediaType;
  }

  // schema - computed: false, optional: true, required: false
  private _schema = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchemaOutputReference(this, "schema");
  public get schema() {
    return this._schema;
  }
  public putSchema(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesSchema) {
    this._schema.internalValue = value;
  }
  public resetSchema() {
    this._schema.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaInput() {
    return this._schema.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSource {
  /**
  * DataTypes defines the data type of the data produced/consumed by the endpoint and references a given data type specification.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#data_types DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#data_types}
  */
  readonly dataTypes?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypes;
  /**
  * Properties are a key value representation of endpoint properties
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#properties}
  */
  readonly properties?: { [key: string]: string };
  /**
  * Ref can be used to declare a Kubernetes resource as source/sink endpoint
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#ref}
  */
  readonly ref?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRef;
  /**
  * Types defines the data type of the data produced/consumed by the endpoint and references a given data type specification. Deprecated: In favor of using DataTypes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#types DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#types}
  */
  readonly types?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypes;
  /**
  * URI can be used to specify the (Camel) endpoint explicitly
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#uri DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    data_types: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypesToTerraform(struct!.dataTypes),
    properties: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.properties),
    ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRefToTerraform(struct!.ref),
    types: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesToTerraform(struct!.types),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSource | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    data_types: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypesToHclTerraform(struct!.dataTypes),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypes",
    },
    properties: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.properties),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRefToHclTerraform(struct!.ref),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRef",
    },
    types: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesToHclTerraform(struct!.types),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypes",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSource | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dataTypes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTypes = this._dataTypes?.internalValue;
    }
    if (this._properties !== undefined) {
      hasAnyValues = true;
      internalValueResult.properties = this._properties;
    }
    if (this._ref?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ref = this._ref?.internalValue;
    }
    if (this._types?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.types = this._types?.internalValue;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSource | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dataTypes.internalValue = undefined;
      this._properties = undefined;
      this._ref.internalValue = undefined;
      this._types.internalValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dataTypes.internalValue = value.dataTypes;
      this._properties = value.properties;
      this._ref.internalValue = value.ref;
      this._types.internalValue = value.types;
      this._uri = value.uri;
    }
  }

  // data_types - computed: false, optional: true, required: false
  private _dataTypes = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypesOutputReference(this, "data_types");
  public get dataTypes() {
    return this._dataTypes;
  }
  public putDataTypes(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceDataTypes) {
    this._dataTypes.internalValue = value;
  }
  public resetDataTypes() {
    this._dataTypes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTypesInput() {
    return this._dataTypes.internalValue;
  }

  // properties - computed: false, optional: true, required: false
  private _properties?: { [key: string]: string }; 
  public get properties() {
    return this.getStringMapAttribute('properties');
  }
  public set properties(value: { [key: string]: string }) {
    this._properties = value;
  }
  public resetProperties() {
    this._properties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get propertiesInput() {
    return this._properties;
  }

  // ref - computed: false, optional: true, required: false
  private _ref = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRefOutputReference(this, "ref");
  public get ref() {
    return this._ref;
  }
  public putRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceRef) {
    this._ref.internalValue = value;
  }
  public resetRef() {
    this._ref.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get refInput() {
    return this._ref.internalValue;
  }

  // types - computed: false, optional: true, required: false
  private _types = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypesOutputReference(this, "types");
  public get types() {
    return this._types;
  }
  public putTypes(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceTypes) {
    this._types.internalValue = value;
  }
  public resetTypes() {
    this._types.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typesInput() {
    return this._types.internalValue;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypes {
  /**
  * the data type format name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#format DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#format}
  */
  readonly format?: string;
  /**
  * the data type component scheme
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#scheme DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#scheme}
  */
  readonly scheme?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    format: cdktf.stringToTerraform(struct!.format),
    scheme: cdktf.stringToTerraform(struct!.scheme),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    scheme: {
      value: cdktf.stringToHclTerraform(struct!.scheme),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._scheme !== undefined) {
      hasAnyValues = true;
      internalValueResult.scheme = this._scheme;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._format = undefined;
      this._scheme = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._format = value.format;
      this._scheme = value.scheme;
    }
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // scheme - computed: false, optional: true, required: false
  private _scheme?: string; 
  public get scheme() {
    return this.getStringAttribute('scheme');
  }
  public set scheme(value: string) {
    this._scheme = value;
  }
  public resetScheme() {
    this._scheme = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemeInput() {
    return this._scheme;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRef {
  /**
  * API version of the referent.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#api_version DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#api_version}
  */
  readonly apiVersion?: string;
  /**
  * If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: 'spec.containers{name}' (where 'name' refers to the name of the container that triggered the event) or if no container name is specified 'spec.containers[2]' (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#field_path DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#field_path}
  */
  readonly fieldPath?: string;
  /**
  * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#kind DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#namespace DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#namespace}
  */
  readonly namespace?: string;
  /**
  * Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#resource_version DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#resource_version}
  */
  readonly resourceVersion?: string;
  /**
  * UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#uid DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#uid}
  */
  readonly uid?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRefToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    api_version: cdktf.stringToTerraform(struct!.apiVersion),
    field_path: cdktf.stringToTerraform(struct!.fieldPath),
    kind: cdktf.stringToTerraform(struct!.kind),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
    resource_version: cdktf.stringToTerraform(struct!.resourceVersion),
    uid: cdktf.stringToTerraform(struct!.uid),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRefToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRef | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    api_version: {
      value: cdktf.stringToHclTerraform(struct!.apiVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    field_path: {
      value: cdktf.stringToHclTerraform(struct!.fieldPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_version: {
      value: cdktf.stringToHclTerraform(struct!.resourceVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    uid: {
      value: cdktf.stringToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRefOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRef | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._apiVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiVersion = this._apiVersion;
    }
    if (this._fieldPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldPath = this._fieldPath;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    if (this._resourceVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceVersion = this._resourceVersion;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRef | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._apiVersion = undefined;
      this._fieldPath = undefined;
      this._kind = undefined;
      this._name = undefined;
      this._namespace = undefined;
      this._resourceVersion = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._apiVersion = value.apiVersion;
      this._fieldPath = value.fieldPath;
      this._kind = value.kind;
      this._name = value.name;
      this._namespace = value.namespace;
      this._resourceVersion = value.resourceVersion;
      this._uid = value.uid;
    }
  }

  // api_version - computed: false, optional: true, required: false
  private _apiVersion?: string; 
  public get apiVersion() {
    return this.getStringAttribute('api_version');
  }
  public set apiVersion(value: string) {
    this._apiVersion = value;
  }
  public resetApiVersion() {
    this._apiVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiVersionInput() {
    return this._apiVersion;
  }

  // field_path - computed: false, optional: true, required: false
  private _fieldPath?: string; 
  public get fieldPath() {
    return this.getStringAttribute('field_path');
  }
  public set fieldPath(value: string) {
    this._fieldPath = value;
  }
  public resetFieldPath() {
    this._fieldPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldPathInput() {
    return this._fieldPath;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: true, required: false
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  public resetNamespace() {
    this._namespace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }

  // resource_version - computed: false, optional: true, required: false
  private _resourceVersion?: string; 
  public get resourceVersion() {
    return this.getStringAttribute('resource_version');
  }
  public set resourceVersion(value: string) {
    this._resourceVersion = value;
  }
  public resetResourceVersion() {
    this._resourceVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceVersionInput() {
    return this._resourceVersion;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: string; 
  public get uid() {
    return this.getStringAttribute('uid');
  }
  public set uid(value: string) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocs {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#description DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#url DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#url}
  */
  readonly url?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    description: cdktf.stringToTerraform(struct!.description),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocs | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocs | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocs | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._description = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._description = value.description;
      this._url = value.url;
    }
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // url - computed: false, optional: true, required: false
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  public resetUrl() {
    this._url = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaProperties {
  /**
  * default is a default value for undefined object fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#default DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#default}
  */
  readonly default?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#deprecated DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#deprecated}
  */
  readonly deprecated?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#description DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#enum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#enum}
  */
  readonly enum?: string[];
  /**
  * JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#example DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#example}
  */
  readonly example?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#exclusive_maximum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#exclusive_maximum}
  */
  readonly exclusiveMaximum?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#exclusive_minimum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#exclusive_minimum}
  */
  readonly exclusiveMinimum?: boolean | cdktf.IResolvable;
  /**
  * format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated: - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like '0321751043' or '978-0321751041' - isbn10: an ISBN10 number string like '0321751043' - isbn13: an ISBN13 number string like '978-0321751041' - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35d{3})d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^d{3}[- ]?d{2}[- ]?d{4}$ - hexcolor: an hexadecimal color code like '#FFFFFF' following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like 'rgb(255,255,255)' - byte: base64 encoded binary data - password: any kind of string - date: a date string like '2006-01-02' as defined by full-date in RFC3339 - duration: a duration string like '22 ns' as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like '2014-12-15T19:30:20.000Z' as defined by date-time in RFC3339.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#format DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#format}
  */
  readonly format?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#id DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_items}
  */
  readonly maxItems?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_length DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_length}
  */
  readonly maxLength?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#max_properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#max_properties}
  */
  readonly maxProperties?: number;
  /**
  * A Number represents a JSON number literal.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#maximum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#maximum}
  */
  readonly maximum?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_items}
  */
  readonly minItems?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_length DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_length}
  */
  readonly minLength?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#min_properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#min_properties}
  */
  readonly minProperties?: number;
  /**
  * A Number represents a JSON number literal.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#minimum DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#minimum}
  */
  readonly minimum?: string;
  /**
  * A Number represents a JSON number literal.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#multiple_of DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#multiple_of}
  */
  readonly multipleOf?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#nullable DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#nullable}
  */
  readonly nullable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#pattern DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#pattern}
  */
  readonly pattern?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#title DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#title}
  */
  readonly title?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#unique_items DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#unique_items}
  */
  readonly uniqueItems?: boolean | cdktf.IResolvable;
  /**
  * XDescriptors is a list of extended properties that trigger a custom behavior in external systems
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#x_descriptors DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#x_descriptors}
  */
  readonly xDescriptors?: string[];
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaPropertiesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaProperties | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    default: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.default),
    deprecated: cdktf.booleanToTerraform(struct!.deprecated),
    description: cdktf.stringToTerraform(struct!.description),
    enum: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.enum),
    example: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.example),
    exclusive_maximum: cdktf.booleanToTerraform(struct!.exclusiveMaximum),
    exclusive_minimum: cdktf.booleanToTerraform(struct!.exclusiveMinimum),
    format: cdktf.stringToTerraform(struct!.format),
    id: cdktf.stringToTerraform(struct!.id),
    max_items: cdktf.numberToTerraform(struct!.maxItems),
    max_length: cdktf.numberToTerraform(struct!.maxLength),
    max_properties: cdktf.numberToTerraform(struct!.maxProperties),
    maximum: cdktf.stringToTerraform(struct!.maximum),
    min_items: cdktf.numberToTerraform(struct!.minItems),
    min_length: cdktf.numberToTerraform(struct!.minLength),
    min_properties: cdktf.numberToTerraform(struct!.minProperties),
    minimum: cdktf.stringToTerraform(struct!.minimum),
    multiple_of: cdktf.stringToTerraform(struct!.multipleOf),
    nullable: cdktf.booleanToTerraform(struct!.nullable),
    pattern: cdktf.stringToTerraform(struct!.pattern),
    title: cdktf.stringToTerraform(struct!.title),
    type: cdktf.stringToTerraform(struct!.type),
    unique_items: cdktf.booleanToTerraform(struct!.uniqueItems),
    x_descriptors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.xDescriptors),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaPropertiesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaProperties | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    default: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.default),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    deprecated: {
      value: cdktf.booleanToHclTerraform(struct!.deprecated),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    enum: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.enum),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    example: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.example),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    exclusive_maximum: {
      value: cdktf.booleanToHclTerraform(struct!.exclusiveMaximum),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    exclusive_minimum: {
      value: cdktf.booleanToHclTerraform(struct!.exclusiveMinimum),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    format: {
      value: cdktf.stringToHclTerraform(struct!.format),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_items: {
      value: cdktf.numberToHclTerraform(struct!.maxItems),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_length: {
      value: cdktf.numberToHclTerraform(struct!.maxLength),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_properties: {
      value: cdktf.numberToHclTerraform(struct!.maxProperties),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    maximum: {
      value: cdktf.stringToHclTerraform(struct!.maximum),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    min_items: {
      value: cdktf.numberToHclTerraform(struct!.minItems),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    min_length: {
      value: cdktf.numberToHclTerraform(struct!.minLength),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    min_properties: {
      value: cdktf.numberToHclTerraform(struct!.minProperties),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    minimum: {
      value: cdktf.stringToHclTerraform(struct!.minimum),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    multiple_of: {
      value: cdktf.stringToHclTerraform(struct!.multipleOf),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    nullable: {
      value: cdktf.booleanToHclTerraform(struct!.nullable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    pattern: {
      value: cdktf.stringToHclTerraform(struct!.pattern),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    title: {
      value: cdktf.stringToHclTerraform(struct!.title),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    unique_items: {
      value: cdktf.booleanToHclTerraform(struct!.uniqueItems),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    x_descriptors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.xDescriptors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaPropertiesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaProperties | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._default !== undefined) {
      hasAnyValues = true;
      internalValueResult.default = this._default;
    }
    if (this._deprecated !== undefined) {
      hasAnyValues = true;
      internalValueResult.deprecated = this._deprecated;
    }
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._enum !== undefined) {
      hasAnyValues = true;
      internalValueResult.enum = this._enum;
    }
    if (this._example !== undefined) {
      hasAnyValues = true;
      internalValueResult.example = this._example;
    }
    if (this._exclusiveMaximum !== undefined) {
      hasAnyValues = true;
      internalValueResult.exclusiveMaximum = this._exclusiveMaximum;
    }
    if (this._exclusiveMinimum !== undefined) {
      hasAnyValues = true;
      internalValueResult.exclusiveMinimum = this._exclusiveMinimum;
    }
    if (this._format !== undefined) {
      hasAnyValues = true;
      internalValueResult.format = this._format;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._maxItems !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxItems = this._maxItems;
    }
    if (this._maxLength !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxLength = this._maxLength;
    }
    if (this._maxProperties !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxProperties = this._maxProperties;
    }
    if (this._maximum !== undefined) {
      hasAnyValues = true;
      internalValueResult.maximum = this._maximum;
    }
    if (this._minItems !== undefined) {
      hasAnyValues = true;
      internalValueResult.minItems = this._minItems;
    }
    if (this._minLength !== undefined) {
      hasAnyValues = true;
      internalValueResult.minLength = this._minLength;
    }
    if (this._minProperties !== undefined) {
      hasAnyValues = true;
      internalValueResult.minProperties = this._minProperties;
    }
    if (this._minimum !== undefined) {
      hasAnyValues = true;
      internalValueResult.minimum = this._minimum;
    }
    if (this._multipleOf !== undefined) {
      hasAnyValues = true;
      internalValueResult.multipleOf = this._multipleOf;
    }
    if (this._nullable !== undefined) {
      hasAnyValues = true;
      internalValueResult.nullable = this._nullable;
    }
    if (this._pattern !== undefined) {
      hasAnyValues = true;
      internalValueResult.pattern = this._pattern;
    }
    if (this._title !== undefined) {
      hasAnyValues = true;
      internalValueResult.title = this._title;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._uniqueItems !== undefined) {
      hasAnyValues = true;
      internalValueResult.uniqueItems = this._uniqueItems;
    }
    if (this._xDescriptors !== undefined) {
      hasAnyValues = true;
      internalValueResult.xDescriptors = this._xDescriptors;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaProperties | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._default = undefined;
      this._deprecated = undefined;
      this._description = undefined;
      this._enum = undefined;
      this._example = undefined;
      this._exclusiveMaximum = undefined;
      this._exclusiveMinimum = undefined;
      this._format = undefined;
      this._id = undefined;
      this._maxItems = undefined;
      this._maxLength = undefined;
      this._maxProperties = undefined;
      this._maximum = undefined;
      this._minItems = undefined;
      this._minLength = undefined;
      this._minProperties = undefined;
      this._minimum = undefined;
      this._multipleOf = undefined;
      this._nullable = undefined;
      this._pattern = undefined;
      this._title = undefined;
      this._type = undefined;
      this._uniqueItems = undefined;
      this._xDescriptors = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._default = value.default;
      this._deprecated = value.deprecated;
      this._description = value.description;
      this._enum = value.enum;
      this._example = value.example;
      this._exclusiveMaximum = value.exclusiveMaximum;
      this._exclusiveMinimum = value.exclusiveMinimum;
      this._format = value.format;
      this._id = value.id;
      this._maxItems = value.maxItems;
      this._maxLength = value.maxLength;
      this._maxProperties = value.maxProperties;
      this._maximum = value.maximum;
      this._minItems = value.minItems;
      this._minLength = value.minLength;
      this._minProperties = value.minProperties;
      this._minimum = value.minimum;
      this._multipleOf = value.multipleOf;
      this._nullable = value.nullable;
      this._pattern = value.pattern;
      this._title = value.title;
      this._type = value.type;
      this._uniqueItems = value.uniqueItems;
      this._xDescriptors = value.xDescriptors;
    }
  }

  // default - computed: false, optional: true, required: false
  private _default?: { [key: string]: string }; 
  public get default() {
    return this.getStringMapAttribute('default');
  }
  public set default(value: { [key: string]: string }) {
    this._default = value;
  }
  public resetDefault() {
    this._default = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultInput() {
    return this._default;
  }

  // deprecated - computed: false, optional: true, required: false
  private _deprecated?: boolean | cdktf.IResolvable; 
  public get deprecated() {
    return this.getBooleanAttribute('deprecated');
  }
  public set deprecated(value: boolean | cdktf.IResolvable) {
    this._deprecated = value;
  }
  public resetDeprecated() {
    this._deprecated = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deprecatedInput() {
    return this._deprecated;
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // enum - computed: false, optional: true, required: false
  private _enum?: string[]; 
  public get enum() {
    return this.getListAttribute('enum');
  }
  public set enum(value: string[]) {
    this._enum = value;
  }
  public resetEnum() {
    this._enum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enumInput() {
    return this._enum;
  }

  // example - computed: false, optional: true, required: false
  private _example?: { [key: string]: string }; 
  public get example() {
    return this.getStringMapAttribute('example');
  }
  public set example(value: { [key: string]: string }) {
    this._example = value;
  }
  public resetExample() {
    this._example = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exampleInput() {
    return this._example;
  }

  // exclusive_maximum - computed: false, optional: true, required: false
  private _exclusiveMaximum?: boolean | cdktf.IResolvable; 
  public get exclusiveMaximum() {
    return this.getBooleanAttribute('exclusive_maximum');
  }
  public set exclusiveMaximum(value: boolean | cdktf.IResolvable) {
    this._exclusiveMaximum = value;
  }
  public resetExclusiveMaximum() {
    this._exclusiveMaximum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exclusiveMaximumInput() {
    return this._exclusiveMaximum;
  }

  // exclusive_minimum - computed: false, optional: true, required: false
  private _exclusiveMinimum?: boolean | cdktf.IResolvable; 
  public get exclusiveMinimum() {
    return this.getBooleanAttribute('exclusive_minimum');
  }
  public set exclusiveMinimum(value: boolean | cdktf.IResolvable) {
    this._exclusiveMinimum = value;
  }
  public resetExclusiveMinimum() {
    this._exclusiveMinimum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exclusiveMinimumInput() {
    return this._exclusiveMinimum;
  }

  // format - computed: false, optional: true, required: false
  private _format?: string; 
  public get format() {
    return this.getStringAttribute('format');
  }
  public set format(value: string) {
    this._format = value;
  }
  public resetFormat() {
    this._format = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get formatInput() {
    return this._format;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // max_items - computed: false, optional: true, required: false
  private _maxItems?: number; 
  public get maxItems() {
    return this.getNumberAttribute('max_items');
  }
  public set maxItems(value: number) {
    this._maxItems = value;
  }
  public resetMaxItems() {
    this._maxItems = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxItemsInput() {
    return this._maxItems;
  }

  // max_length - computed: false, optional: true, required: false
  private _maxLength?: number; 
  public get maxLength() {
    return this.getNumberAttribute('max_length');
  }
  public set maxLength(value: number) {
    this._maxLength = value;
  }
  public resetMaxLength() {
    this._maxLength = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxLengthInput() {
    return this._maxLength;
  }

  // max_properties - computed: false, optional: true, required: false
  private _maxProperties?: number; 
  public get maxProperties() {
    return this.getNumberAttribute('max_properties');
  }
  public set maxProperties(value: number) {
    this._maxProperties = value;
  }
  public resetMaxProperties() {
    this._maxProperties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxPropertiesInput() {
    return this._maxProperties;
  }

  // maximum - computed: false, optional: true, required: false
  private _maximum?: string; 
  public get maximum() {
    return this.getStringAttribute('maximum');
  }
  public set maximum(value: string) {
    this._maximum = value;
  }
  public resetMaximum() {
    this._maximum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maximumInput() {
    return this._maximum;
  }

  // min_items - computed: false, optional: true, required: false
  private _minItems?: number; 
  public get minItems() {
    return this.getNumberAttribute('min_items');
  }
  public set minItems(value: number) {
    this._minItems = value;
  }
  public resetMinItems() {
    this._minItems = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minItemsInput() {
    return this._minItems;
  }

  // min_length - computed: false, optional: true, required: false
  private _minLength?: number; 
  public get minLength() {
    return this.getNumberAttribute('min_length');
  }
  public set minLength(value: number) {
    this._minLength = value;
  }
  public resetMinLength() {
    this._minLength = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minLengthInput() {
    return this._minLength;
  }

  // min_properties - computed: false, optional: true, required: false
  private _minProperties?: number; 
  public get minProperties() {
    return this.getNumberAttribute('min_properties');
  }
  public set minProperties(value: number) {
    this._minProperties = value;
  }
  public resetMinProperties() {
    this._minProperties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minPropertiesInput() {
    return this._minProperties;
  }

  // minimum - computed: false, optional: true, required: false
  private _minimum?: string; 
  public get minimum() {
    return this.getStringAttribute('minimum');
  }
  public set minimum(value: string) {
    this._minimum = value;
  }
  public resetMinimum() {
    this._minimum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minimumInput() {
    return this._minimum;
  }

  // multiple_of - computed: false, optional: true, required: false
  private _multipleOf?: string; 
  public get multipleOf() {
    return this.getStringAttribute('multiple_of');
  }
  public set multipleOf(value: string) {
    this._multipleOf = value;
  }
  public resetMultipleOf() {
    this._multipleOf = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get multipleOfInput() {
    return this._multipleOf;
  }

  // nullable - computed: false, optional: true, required: false
  private _nullable?: boolean | cdktf.IResolvable; 
  public get nullable() {
    return this.getBooleanAttribute('nullable');
  }
  public set nullable(value: boolean | cdktf.IResolvable) {
    this._nullable = value;
  }
  public resetNullable() {
    this._nullable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nullableInput() {
    return this._nullable;
  }

  // pattern - computed: false, optional: true, required: false
  private _pattern?: string; 
  public get pattern() {
    return this.getStringAttribute('pattern');
  }
  public set pattern(value: string) {
    this._pattern = value;
  }
  public resetPattern() {
    this._pattern = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternInput() {
    return this._pattern;
  }

  // title - computed: false, optional: true, required: false
  private _title?: string; 
  public get title() {
    return this.getStringAttribute('title');
  }
  public set title(value: string) {
    this._title = value;
  }
  public resetTitle() {
    this._title = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get titleInput() {
    return this._title;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // unique_items - computed: false, optional: true, required: false
  private _uniqueItems?: boolean | cdktf.IResolvable; 
  public get uniqueItems() {
    return this.getBooleanAttribute('unique_items');
  }
  public set uniqueItems(value: boolean | cdktf.IResolvable) {
    this._uniqueItems = value;
  }
  public resetUniqueItems() {
    this._uniqueItems = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uniqueItemsInput() {
    return this._uniqueItems;
  }

  // x_descriptors - computed: false, optional: true, required: false
  private _xDescriptors?: string[]; 
  public get xDescriptors() {
    return this.getListAttribute('x_descriptors');
  }
  public set xDescriptors(value: string[]) {
    this._xDescriptors = value;
  }
  public resetXDescriptors() {
    this._xDescriptors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xDescriptorsInput() {
    return this._xDescriptors;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchema {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#description DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#description}
  */
  readonly description?: string;
  /**
  * JSONSchemaURL represents a schema url.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#dollarschema DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#dollarschema}
  */
  readonly dollarschema?: string;
  /**
  * JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#example DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#example}
  */
  readonly example?: { [key: string]: string };
  /**
  * ExternalDocumentation allows referencing an external resource for extended documentation.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#external_docs DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#external_docs}
  */
  readonly externalDocs?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocs;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#id DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#properties}
  */
  readonly properties?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaProperties;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#required DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#required}
  */
  readonly required?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#title DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#title}
  */
  readonly title?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#type}
  */
  readonly type?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    description: cdktf.stringToTerraform(struct!.description),
    dollarschema: cdktf.stringToTerraform(struct!.dollarschema),
    example: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.example),
    external_docs: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocsToTerraform(struct!.externalDocs),
    id: cdktf.stringToTerraform(struct!.id),
    properties: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaPropertiesToTerraform(struct!.properties),
    required: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.required),
    title: cdktf.stringToTerraform(struct!.title),
    type: cdktf.stringToTerraform(struct!.type),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchema | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    description: {
      value: cdktf.stringToHclTerraform(struct!.description),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dollarschema: {
      value: cdktf.stringToHclTerraform(struct!.dollarschema),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    example: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.example),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    external_docs: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocsToHclTerraform(struct!.externalDocs),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocs",
    },
    id: {
      value: cdktf.stringToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    properties: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaPropertiesToHclTerraform(struct!.properties),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaProperties",
    },
    required: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.required),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    title: {
      value: cdktf.stringToHclTerraform(struct!.title),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchema | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._description !== undefined) {
      hasAnyValues = true;
      internalValueResult.description = this._description;
    }
    if (this._dollarschema !== undefined) {
      hasAnyValues = true;
      internalValueResult.dollarschema = this._dollarschema;
    }
    if (this._example !== undefined) {
      hasAnyValues = true;
      internalValueResult.example = this._example;
    }
    if (this._externalDocs?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalDocs = this._externalDocs?.internalValue;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._properties?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.properties = this._properties?.internalValue;
    }
    if (this._required !== undefined) {
      hasAnyValues = true;
      internalValueResult.required = this._required;
    }
    if (this._title !== undefined) {
      hasAnyValues = true;
      internalValueResult.title = this._title;
    }
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchema | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._description = undefined;
      this._dollarschema = undefined;
      this._example = undefined;
      this._externalDocs.internalValue = undefined;
      this._id = undefined;
      this._properties.internalValue = undefined;
      this._required = undefined;
      this._title = undefined;
      this._type = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._description = value.description;
      this._dollarschema = value.dollarschema;
      this._example = value.example;
      this._externalDocs.internalValue = value.externalDocs;
      this._id = value.id;
      this._properties.internalValue = value.properties;
      this._required = value.required;
      this._title = value.title;
      this._type = value.type;
    }
  }

  // description - computed: false, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // dollarschema - computed: false, optional: true, required: false
  private _dollarschema?: string; 
  public get dollarschema() {
    return this.getStringAttribute('dollarschema');
  }
  public set dollarschema(value: string) {
    this._dollarschema = value;
  }
  public resetDollarschema() {
    this._dollarschema = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dollarschemaInput() {
    return this._dollarschema;
  }

  // example - computed: false, optional: true, required: false
  private _example?: { [key: string]: string }; 
  public get example() {
    return this.getStringMapAttribute('example');
  }
  public set example(value: { [key: string]: string }) {
    this._example = value;
  }
  public resetExample() {
    this._example = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exampleInput() {
    return this._example;
  }

  // external_docs - computed: false, optional: true, required: false
  private _externalDocs = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocsOutputReference(this, "external_docs");
  public get externalDocs() {
    return this._externalDocs;
  }
  public putExternalDocs(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaExternalDocs) {
    this._externalDocs.internalValue = value;
  }
  public resetExternalDocs() {
    this._externalDocs.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalDocsInput() {
    return this._externalDocs.internalValue;
  }

  // id - computed: false, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // properties - computed: false, optional: true, required: false
  private _properties = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaPropertiesOutputReference(this, "properties");
  public get properties() {
    return this._properties;
  }
  public putProperties(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaProperties) {
    this._properties.internalValue = value;
  }
  public resetProperties() {
    this._properties.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get propertiesInput() {
    return this._properties.internalValue;
  }

  // required - computed: false, optional: true, required: false
  private _required?: string[]; 
  public get required() {
    return this.getListAttribute('required');
  }
  public set required(value: string[]) {
    this._required = value;
  }
  public resetRequired() {
    this._required = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredInput() {
    return this._required;
  }

  // title - computed: false, optional: true, required: false
  private _title?: string; 
  public get title() {
    return this.getStringAttribute('title');
  }
  public set title(value: string) {
    this._title = value;
  }
  public resetTitle() {
    this._title = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get titleInput() {
    return this._title;
  }

  // type - computed: false, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypes {
  /**
  * media type as expected for HTTP media types (ie, application/json)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#media_type DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#media_type}
  */
  readonly mediaType?: string;
  /**
  * the expected schema for the event
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#schema DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#schema}
  */
  readonly schema?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchema;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    media_type: cdktf.stringToTerraform(struct!.mediaType),
    schema: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaToTerraform(struct!.schema),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypes | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    media_type: {
      value: cdktf.stringToHclTerraform(struct!.mediaType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    schema: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaToHclTerraform(struct!.schema),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchema",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypes | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mediaType !== undefined) {
      hasAnyValues = true;
      internalValueResult.mediaType = this._mediaType;
    }
    if (this._schema?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.schema = this._schema?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypes | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mediaType = undefined;
      this._schema.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mediaType = value.mediaType;
      this._schema.internalValue = value.schema;
    }
  }

  // media_type - computed: false, optional: true, required: false
  private _mediaType?: string; 
  public get mediaType() {
    return this.getStringAttribute('media_type');
  }
  public set mediaType(value: string) {
    this._mediaType = value;
  }
  public resetMediaType() {
    this._mediaType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mediaTypeInput() {
    return this._mediaType;
  }

  // schema - computed: false, optional: true, required: false
  private _schema = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchemaOutputReference(this, "schema");
  public get schema() {
    return this._schema;
  }
  public putSchema(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesSchema) {
    this._schema.internalValue = value;
  }
  public resetSchema() {
    this._schema.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaInput() {
    return this._schema.internalValue;
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSteps {
  /**
  * DataTypes defines the data type of the data produced/consumed by the endpoint and references a given data type specification.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#data_types DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#data_types}
  */
  readonly dataTypes?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypes;
  /**
  * Properties are a key value representation of endpoint properties
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#properties DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#properties}
  */
  readonly properties?: { [key: string]: string };
  /**
  * Ref can be used to declare a Kubernetes resource as source/sink endpoint
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#ref DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#ref}
  */
  readonly ref?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRef;
  /**
  * Types defines the data type of the data produced/consumed by the endpoint and references a given data type specification. Deprecated: In favor of using DataTypes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#types DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#types}
  */
  readonly types?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypes;
  /**
  * URI can be used to specify the (Camel) endpoint explicitly
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#uri DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#uri}
  */
  readonly uri?: string;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSteps | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    data_types: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypesToTerraform(struct!.dataTypes),
    properties: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.properties),
    ref: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRefToTerraform(struct!.ref),
    types: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesToTerraform(struct!.types),
    uri: cdktf.stringToTerraform(struct!.uri),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSteps | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    data_types: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypesToHclTerraform(struct!.dataTypes),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypes",
    },
    properties: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.properties),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    ref: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRefToHclTerraform(struct!.ref),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRef",
    },
    types: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesToHclTerraform(struct!.types),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypes",
    },
    uri: {
      value: cdktf.stringToHclTerraform(struct!.uri),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSteps | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dataTypes?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataTypes = this._dataTypes?.internalValue;
    }
    if (this._properties !== undefined) {
      hasAnyValues = true;
      internalValueResult.properties = this._properties;
    }
    if (this._ref?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ref = this._ref?.internalValue;
    }
    if (this._types?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.types = this._types?.internalValue;
    }
    if (this._uri !== undefined) {
      hasAnyValues = true;
      internalValueResult.uri = this._uri;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSteps | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dataTypes.internalValue = undefined;
      this._properties = undefined;
      this._ref.internalValue = undefined;
      this._types.internalValue = undefined;
      this._uri = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dataTypes.internalValue = value.dataTypes;
      this._properties = value.properties;
      this._ref.internalValue = value.ref;
      this._types.internalValue = value.types;
      this._uri = value.uri;
    }
  }

  // data_types - computed: false, optional: true, required: false
  private _dataTypes = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypesOutputReference(this, "data_types");
  public get dataTypes() {
    return this._dataTypes;
  }
  public putDataTypes(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsDataTypes) {
    this._dataTypes.internalValue = value;
  }
  public resetDataTypes() {
    this._dataTypes.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataTypesInput() {
    return this._dataTypes.internalValue;
  }

  // properties - computed: false, optional: true, required: false
  private _properties?: { [key: string]: string }; 
  public get properties() {
    return this.getStringMapAttribute('properties');
  }
  public set properties(value: { [key: string]: string }) {
    this._properties = value;
  }
  public resetProperties() {
    this._properties = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get propertiesInput() {
    return this._properties;
  }

  // ref - computed: false, optional: true, required: false
  private _ref = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRefOutputReference(this, "ref");
  public get ref() {
    return this._ref;
  }
  public putRef(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsRef) {
    this._ref.internalValue = value;
  }
  public resetRef() {
    this._ref.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get refInput() {
    return this._ref.internalValue;
  }

  // types - computed: false, optional: true, required: false
  private _types = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypesOutputReference(this, "types");
  public get types() {
    return this._types;
  }
  public putTypes(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsTypes) {
    this._types.internalValue = value;
  }
  public resetTypes() {
    this._types.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typesInput() {
    return this._types.internalValue;
  }

  // uri - computed: false, optional: true, required: false
  private _uri?: string; 
  public get uri() {
    return this.getStringAttribute('uri');
  }
  public set uri(value: string) {
    this._uri = value;
  }
  public resetUri() {
    this._uri = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uriInput() {
    return this._uri;
  }
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsList extends cdktf.ComplexList {
  public internalValue? : DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSteps[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsOutputReference {
    return new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpec {
  /**
  * ErrorHandler is an optional handler called upon an error occurring in the integration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#error_handler DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#error_handler}
  */
  readonly errorHandler?: { [key: string]: string };
  /**
  * Integration is an optional integration used to specify custom parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#integration DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#integration}
  */
  readonly integration?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegration;
  /**
  * Replicas is the number of desired replicas for the binding
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#replicas DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#replicas}
  */
  readonly replicas?: number;
  /**
  * Custom SA to use for the binding
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#service_account_name DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#service_account_name}
  */
  readonly serviceAccountName?: string;
  /**
  * Sink is the destination of the integration defined by this binding
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#sink DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#sink}
  */
  readonly sink?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSink;
  /**
  * Source is the starting point of the integration defined by this binding
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#source DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#source}
  */
  readonly source?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSource;
  /**
  * Steps contains an optional list of intermediate steps that are executed between the Source and the Sink
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/camel_apache_org_kamelet_binding_v1alpha1_manifest#steps DataK8SCamelApacheOrgKameletBindingV1Alpha1Manifest#steps}
  */
  readonly steps?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSteps[] | cdktf.IResolvable;
}

export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecToTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    error_handler: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.errorHandler),
    integration: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationToTerraform(struct!.integration),
    replicas: cdktf.numberToTerraform(struct!.replicas),
    service_account_name: cdktf.stringToTerraform(struct!.serviceAccountName),
    sink: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkToTerraform(struct!.sink),
    source: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceToTerraform(struct!.source),
    steps: cdktf.listMapper(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsToTerraform, false)(struct!.steps),
  }
}


export function dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecToHclTerraform(struct?: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    error_handler: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.errorHandler),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    integration: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationToHclTerraform(struct!.integration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegration",
    },
    replicas: {
      value: cdktf.numberToHclTerraform(struct!.replicas),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    service_account_name: {
      value: cdktf.stringToHclTerraform(struct!.serviceAccountName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sink: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkToHclTerraform(struct!.sink),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSink",
    },
    source: {
      value: dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceToHclTerraform(struct!.source),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSource",
    },
    steps: {
      value: cdktf.listMapperHcl(dataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsToHclTerraform, false)(struct!.steps),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._errorHandler !== undefined) {
      hasAnyValues = true;
      internalValueResult.errorHandler = this._errorHandler;
    }
    if (this._integration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.integration = this._integration?.internalValue;
    }
    if (this._replicas !== undefined) {
      hasAnyValues = true;
      internalValueResult.replicas = this._replicas;
    }
    if (this._serviceAccountName !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceAccountName = this._serviceAccountName;
    }
    if (this._sink?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.sink = this._sink?.internalValue;
    }
    if (this._source?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.source = this._source?.internalValue;
    }
    if (this._steps?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.steps = this._steps?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._errorHandler = undefined;
      this._integration.internalValue = undefined;
      this._replicas = undefined;
      this._serviceAccountName = undefined;
      this._sink.internalValue = undefined;
      this._source.internalValue = undefined;
      this._steps.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._errorHandler = value.errorHandler;
      this._integration.internalValue = value.integration;
      this._replicas = value.replicas;
      this._serviceAccountName = value.serviceAccountName;
      this._sink.internalValue = value.sink;
      this._source.internalValue = value.source;
      this._steps.internalValue = value.steps;
    }
  }

  // error_handler - computed: false, optional: true, required: false
  private _errorHandler?: { [key: string]: string }; 
  public get errorHandler() {
    return this.getStringMapAttribute('error_handler');
  }
  public set errorHandler(value: { [key: string]: string }) {
    this._errorHandler = value;
  }
  public resetErrorHandler() {
    this._errorHandler = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get errorHandlerInput() {
    return this._errorHandler;
  }

  // integration - computed: false, optional: true, required: false
  private _integration = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegrationOutputReference(this, "integration");
  public get integration() {
    return this._integration;
  }
  public putIntegration(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecIntegration) {
    this._integration.internalValue = value;
  }
  public resetIntegration() {
    this._integration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get integrationInput() {
    return this._integration.internalValue;
  }

  // replicas - computed: false, optional: true, required: false
  private _replicas?: number; 
  public get replicas() {
    return this.getNumberAttribute('replicas');
  }
  public set replicas(value: number) {
    this._replicas = value;
  }
  public resetReplicas() {
    this._replicas = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replicasInput() {
    return this._replicas;
  }

  // service_account_name - computed: false, optional: true, required: false
  private _serviceAccountName?: string; 
  public get serviceAccountName() {
    return this.getStringAttribute('service_account_name');
  }
  public set serviceAccountName(value: string) {
    this._serviceAccountName = value;
  }
  public resetServiceAccountName() {
    this._serviceAccountName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceAccountNameInput() {
    return this._serviceAccountName;
  }

  // sink - computed: false, optional: true, required: false
  private _sink = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSinkOutputReference(this, "sink");
  public get sink() {
    return this._sink;
  }
  public putSink(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSink) {
    this._sink.internalValue = value;
  }
  public resetSink() {
    this._sink.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sinkInput() {
    return this._sink.internalValue;
  }

  // source - computed: false, optional: true, required: false
  private _source = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSourceOutputReference(this, "source");
  public get source() {
    return this._source;
  }
  public putSource(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSource) {
    this._source.internalValue = value;
  }
  public resetSource() {
    this._source.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceInput() {
    return this._source.internalValue;
  }

  // steps - computed: false, optional: true, required: false
  private _steps = new DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecStepsList(this, "steps", false);
  public get steps() {
    return this._steps;
  }
  public putSteps(value: DataK8SCamelApacheOrgKameletBindingV1Alpha1ManifestSpecSteps[] | cdktf.IResolvable) {
    this._steps.internalValue = value;
  }
  public resetSteps() {
    this._steps.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stepsInput() {
    return this._steps.internalValue;
  }
}
