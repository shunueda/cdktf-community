// https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface DataK8STfTungstenIoManagerV1Alpha1ManifestConfig extends cdktf.TerraformMetaArguments {
  /**
  * Data that helps uniquely identify this object. See https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata: DataK8STfTungstenIoManagerV1Alpha1ManifestMetadata;
  /**
  * ManagerSpec defines the desired state of Manager.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpec;
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestMetadata {
  /**
  * Keys and values that can be used by external tooling to store and retrieve arbitrary metadata about this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#annotations DataK8STfTungstenIoManagerV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Keys and values that can be used to organize and categorize objects. See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Unique identifier for this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Namespaces provides a mechanism for isolating groups of resources within a single cluster. See https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#namespace DataK8STfTungstenIoManagerV1Alpha1Manifest#namespace}
  */
  readonly namespace: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._labels = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._labels = value.labels;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: false, required: true
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParameters;
  /**
  * Certificate private key length
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#cert_key_length DataK8STfTungstenIoManagerV1Alpha1Manifest#cert_key_length}
  */
  readonly certKeyLength?: number;
  /**
  * Certificate signer
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#cert_signer DataK8STfTungstenIoManagerV1Alpha1Manifest#cert_signer}
  */
  readonly certSigner?: string;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    cert_key_length: cdktf.numberToTerraform(struct!.certKeyLength),
    cert_signer: cdktf.stringToTerraform(struct!.certSigner),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParameters",
    },
    cert_key_length: {
      value: cdktf.numberToHclTerraform(struct!.certKeyLength),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    cert_signer: {
      value: cdktf.stringToHclTerraform(struct!.certSigner),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._certKeyLength !== undefined) {
      hasAnyValues = true;
      internalValueResult.certKeyLength = this._certKeyLength;
    }
    if (this._certSigner !== undefined) {
      hasAnyValues = true;
      internalValueResult.certSigner = this._certSigner;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._certKeyLength = undefined;
      this._certSigner = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._certKeyLength = value.certKeyLength;
      this._certSigner = value.certSigner;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // cert_key_length - computed: false, optional: true, required: false
  private _certKeyLength?: number; 
  public get certKeyLength() {
    return this.getNumberAttribute('cert_key_length');
  }
  public set certKeyLength(value: number) {
    this._certKeyLength = value;
  }
  public resetCertKeyLength() {
    this._certKeyLength = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get certKeyLengthInput() {
    return this._certKeyLength;
  }

  // cert_signer - computed: false, optional: true, required: false
  private _certSigner?: string; 
  public get certSigner() {
    return this.getStringAttribute('cert_signer');
  }
  public set certSigner(value: string) {
    this._certSigner = value;
  }
  public resetCertSigner() {
    this._certSigner = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get certSignerInput() {
    return this._certSigner;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfiguration {
  /**
  * AAAMode aaa mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#aaa_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#aaa_mode}
  */
  readonly aaaMode?: string;
  /**
  * Time (in hours) the analytics config data entering the collector stays in the Cassandra database. Defaults to 2160 hours.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#analytics_config_audit_ttl DataK8STfTungstenIoManagerV1Alpha1Manifest#analytics_config_audit_ttl}
  */
  readonly analyticsConfigAuditTtl?: number;
  /**
  * Time (in hours) that the analytics object and log data stays in the Cassandra database. Defaults to 48 hours.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#analytics_data_ttl DataK8STfTungstenIoManagerV1Alpha1Manifest#analytics_data_ttl}
  */
  readonly analyticsDataTtl?: number;
  /**
  * Time to live (TTL) for flow data in hours. Defaults to 2 hours.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#analytics_flow_ttl DataK8STfTungstenIoManagerV1Alpha1Manifest#analytics_flow_ttl}
  */
  readonly analyticsFlowTtl?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#analytics_introspect_port DataK8STfTungstenIoManagerV1Alpha1Manifest#analytics_introspect_port}
  */
  readonly analyticsIntrospectPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#analytics_port DataK8STfTungstenIoManagerV1Alpha1Manifest#analytics_port}
  */
  readonly analyticsPort?: number;
  /**
  * Time to live (TTL) for statistics data in hours. Defaults to 4 hours.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#analytics_statistics_ttl DataK8STfTungstenIoManagerV1Alpha1Manifest#analytics_statistics_ttl}
  */
  readonly analyticsStatisticsTtl?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#collector_introspect_port DataK8STfTungstenIoManagerV1Alpha1Manifest#collector_introspect_port}
  */
  readonly collectorIntrospectPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#collector_port DataK8STfTungstenIoManagerV1Alpha1Manifest#collector_port}
  */
  readonly collectorPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainers[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aaa_mode: cdktf.stringToTerraform(struct!.aaaMode),
    analytics_config_audit_ttl: cdktf.numberToTerraform(struct!.analyticsConfigAuditTtl),
    analytics_data_ttl: cdktf.numberToTerraform(struct!.analyticsDataTtl),
    analytics_flow_ttl: cdktf.numberToTerraform(struct!.analyticsFlowTtl),
    analytics_introspect_port: cdktf.numberToTerraform(struct!.analyticsIntrospectPort),
    analytics_port: cdktf.numberToTerraform(struct!.analyticsPort),
    analytics_statistics_ttl: cdktf.numberToTerraform(struct!.analyticsStatisticsTtl),
    collector_introspect_port: cdktf.numberToTerraform(struct!.collectorIntrospectPort),
    collector_port: cdktf.numberToTerraform(struct!.collectorPort),
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aaa_mode: {
      value: cdktf.stringToHclTerraform(struct!.aaaMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    analytics_config_audit_ttl: {
      value: cdktf.numberToHclTerraform(struct!.analyticsConfigAuditTtl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    analytics_data_ttl: {
      value: cdktf.numberToHclTerraform(struct!.analyticsDataTtl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    analytics_flow_ttl: {
      value: cdktf.numberToHclTerraform(struct!.analyticsFlowTtl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    analytics_introspect_port: {
      value: cdktf.numberToHclTerraform(struct!.analyticsIntrospectPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    analytics_port: {
      value: cdktf.numberToHclTerraform(struct!.analyticsPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    analytics_statistics_ttl: {
      value: cdktf.numberToHclTerraform(struct!.analyticsStatisticsTtl),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_introspect_port: {
      value: cdktf.numberToHclTerraform(struct!.collectorIntrospectPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_port: {
      value: cdktf.numberToHclTerraform(struct!.collectorPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainersList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._aaaMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.aaaMode = this._aaaMode;
    }
    if (this._analyticsConfigAuditTtl !== undefined) {
      hasAnyValues = true;
      internalValueResult.analyticsConfigAuditTtl = this._analyticsConfigAuditTtl;
    }
    if (this._analyticsDataTtl !== undefined) {
      hasAnyValues = true;
      internalValueResult.analyticsDataTtl = this._analyticsDataTtl;
    }
    if (this._analyticsFlowTtl !== undefined) {
      hasAnyValues = true;
      internalValueResult.analyticsFlowTtl = this._analyticsFlowTtl;
    }
    if (this._analyticsIntrospectPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.analyticsIntrospectPort = this._analyticsIntrospectPort;
    }
    if (this._analyticsPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.analyticsPort = this._analyticsPort;
    }
    if (this._analyticsStatisticsTtl !== undefined) {
      hasAnyValues = true;
      internalValueResult.analyticsStatisticsTtl = this._analyticsStatisticsTtl;
    }
    if (this._collectorIntrospectPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorIntrospectPort = this._collectorIntrospectPort;
    }
    if (this._collectorPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorPort = this._collectorPort;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._aaaMode = undefined;
      this._analyticsConfigAuditTtl = undefined;
      this._analyticsDataTtl = undefined;
      this._analyticsFlowTtl = undefined;
      this._analyticsIntrospectPort = undefined;
      this._analyticsPort = undefined;
      this._analyticsStatisticsTtl = undefined;
      this._collectorIntrospectPort = undefined;
      this._collectorPort = undefined;
      this._containers.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._aaaMode = value.aaaMode;
      this._analyticsConfigAuditTtl = value.analyticsConfigAuditTtl;
      this._analyticsDataTtl = value.analyticsDataTtl;
      this._analyticsFlowTtl = value.analyticsFlowTtl;
      this._analyticsIntrospectPort = value.analyticsIntrospectPort;
      this._analyticsPort = value.analyticsPort;
      this._analyticsStatisticsTtl = value.analyticsStatisticsTtl;
      this._collectorIntrospectPort = value.collectorIntrospectPort;
      this._collectorPort = value.collectorPort;
      this._containers.internalValue = value.containers;
    }
  }

  // aaa_mode - computed: false, optional: true, required: false
  private _aaaMode?: string; 
  public get aaaMode() {
    return this.getStringAttribute('aaa_mode');
  }
  public set aaaMode(value: string) {
    this._aaaMode = value;
  }
  public resetAaaMode() {
    this._aaaMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aaaModeInput() {
    return this._aaaMode;
  }

  // analytics_config_audit_ttl - computed: false, optional: true, required: false
  private _analyticsConfigAuditTtl?: number; 
  public get analyticsConfigAuditTtl() {
    return this.getNumberAttribute('analytics_config_audit_ttl');
  }
  public set analyticsConfigAuditTtl(value: number) {
    this._analyticsConfigAuditTtl = value;
  }
  public resetAnalyticsConfigAuditTtl() {
    this._analyticsConfigAuditTtl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyticsConfigAuditTtlInput() {
    return this._analyticsConfigAuditTtl;
  }

  // analytics_data_ttl - computed: false, optional: true, required: false
  private _analyticsDataTtl?: number; 
  public get analyticsDataTtl() {
    return this.getNumberAttribute('analytics_data_ttl');
  }
  public set analyticsDataTtl(value: number) {
    this._analyticsDataTtl = value;
  }
  public resetAnalyticsDataTtl() {
    this._analyticsDataTtl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyticsDataTtlInput() {
    return this._analyticsDataTtl;
  }

  // analytics_flow_ttl - computed: false, optional: true, required: false
  private _analyticsFlowTtl?: number; 
  public get analyticsFlowTtl() {
    return this.getNumberAttribute('analytics_flow_ttl');
  }
  public set analyticsFlowTtl(value: number) {
    this._analyticsFlowTtl = value;
  }
  public resetAnalyticsFlowTtl() {
    this._analyticsFlowTtl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyticsFlowTtlInput() {
    return this._analyticsFlowTtl;
  }

  // analytics_introspect_port - computed: false, optional: true, required: false
  private _analyticsIntrospectPort?: number; 
  public get analyticsIntrospectPort() {
    return this.getNumberAttribute('analytics_introspect_port');
  }
  public set analyticsIntrospectPort(value: number) {
    this._analyticsIntrospectPort = value;
  }
  public resetAnalyticsIntrospectPort() {
    this._analyticsIntrospectPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyticsIntrospectPortInput() {
    return this._analyticsIntrospectPort;
  }

  // analytics_port - computed: false, optional: true, required: false
  private _analyticsPort?: number; 
  public get analyticsPort() {
    return this.getNumberAttribute('analytics_port');
  }
  public set analyticsPort(value: number) {
    this._analyticsPort = value;
  }
  public resetAnalyticsPort() {
    this._analyticsPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyticsPortInput() {
    return this._analyticsPort;
  }

  // analytics_statistics_ttl - computed: false, optional: true, required: false
  private _analyticsStatisticsTtl?: number; 
  public get analyticsStatisticsTtl() {
    return this.getNumberAttribute('analytics_statistics_ttl');
  }
  public set analyticsStatisticsTtl(value: number) {
    this._analyticsStatisticsTtl = value;
  }
  public resetAnalyticsStatisticsTtl() {
    this._analyticsStatisticsTtl = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyticsStatisticsTtlInput() {
    return this._analyticsStatisticsTtl;
  }

  // collector_introspect_port - computed: false, optional: true, required: false
  private _collectorIntrospectPort?: number; 
  public get collectorIntrospectPort() {
    return this.getNumberAttribute('collector_introspect_port');
  }
  public set collectorIntrospectPort(value: number) {
    this._collectorIntrospectPort = value;
  }
  public resetCollectorIntrospectPort() {
    this._collectorIntrospectPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorIntrospectPortInput() {
    return this._collectorIntrospectPort;
  }

  // collector_port - computed: false, optional: true, required: false
  private _collectorPort?: number; 
  public get collectorPort() {
    return this.getNumberAttribute('collector_port');
  }
  public set collectorPort(value: number) {
    this._collectorPort = value;
  }
  public resetCollectorPort() {
    this._collectorPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorPortInput() {
    return this._collectorPort;
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfiguration;
  /**
  * AnalyticsConfiguration is the Spec for the Analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalytics {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadata;
  /**
  * AnalyticsSpec is the Spec for the Analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalytics | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalytics | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalytics | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalytics | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfiguration {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#alarmgen_introspect_listen_port DataK8STfTungstenIoManagerV1Alpha1Manifest#alarmgen_introspect_listen_port}
  */
  readonly alarmgenIntrospectListenPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#alarmgen_log_file_name DataK8STfTungstenIoManagerV1Alpha1Manifest#alarmgen_log_file_name}
  */
  readonly alarmgenLogFileName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#alarmgen_partitions DataK8STfTungstenIoManagerV1Alpha1Manifest#alarmgen_partitions}
  */
  readonly alarmgenPartitions?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#alarmgen_redis_aggregate_db_offset DataK8STfTungstenIoManagerV1Alpha1Manifest#alarmgen_redis_aggregate_db_offset}
  */
  readonly alarmgenRedisAggregateDbOffset?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_file_path DataK8STfTungstenIoManagerV1Alpha1Manifest#log_file_path}
  */
  readonly logFilePath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_local DataK8STfTungstenIoManagerV1Alpha1Manifest#log_local}
  */
  readonly logLocal?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    alarmgen_introspect_listen_port: cdktf.numberToTerraform(struct!.alarmgenIntrospectListenPort),
    alarmgen_log_file_name: cdktf.stringToTerraform(struct!.alarmgenLogFileName),
    alarmgen_partitions: cdktf.numberToTerraform(struct!.alarmgenPartitions),
    alarmgen_redis_aggregate_db_offset: cdktf.numberToTerraform(struct!.alarmgenRedisAggregateDbOffset),
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
    log_file_path: cdktf.stringToTerraform(struct!.logFilePath),
    log_local: cdktf.stringToTerraform(struct!.logLocal),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    alarmgen_introspect_listen_port: {
      value: cdktf.numberToHclTerraform(struct!.alarmgenIntrospectListenPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    alarmgen_log_file_name: {
      value: cdktf.stringToHclTerraform(struct!.alarmgenLogFileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    alarmgen_partitions: {
      value: cdktf.numberToHclTerraform(struct!.alarmgenPartitions),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    alarmgen_redis_aggregate_db_offset: {
      value: cdktf.numberToHclTerraform(struct!.alarmgenRedisAggregateDbOffset),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainersList",
    },
    log_file_path: {
      value: cdktf.stringToHclTerraform(struct!.logFilePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    log_local: {
      value: cdktf.stringToHclTerraform(struct!.logLocal),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._alarmgenIntrospectListenPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.alarmgenIntrospectListenPort = this._alarmgenIntrospectListenPort;
    }
    if (this._alarmgenLogFileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.alarmgenLogFileName = this._alarmgenLogFileName;
    }
    if (this._alarmgenPartitions !== undefined) {
      hasAnyValues = true;
      internalValueResult.alarmgenPartitions = this._alarmgenPartitions;
    }
    if (this._alarmgenRedisAggregateDbOffset !== undefined) {
      hasAnyValues = true;
      internalValueResult.alarmgenRedisAggregateDbOffset = this._alarmgenRedisAggregateDbOffset;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._logFilePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.logFilePath = this._logFilePath;
    }
    if (this._logLocal !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLocal = this._logLocal;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._alarmgenIntrospectListenPort = undefined;
      this._alarmgenLogFileName = undefined;
      this._alarmgenPartitions = undefined;
      this._alarmgenRedisAggregateDbOffset = undefined;
      this._containers.internalValue = undefined;
      this._logFilePath = undefined;
      this._logLocal = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._alarmgenIntrospectListenPort = value.alarmgenIntrospectListenPort;
      this._alarmgenLogFileName = value.alarmgenLogFileName;
      this._alarmgenPartitions = value.alarmgenPartitions;
      this._alarmgenRedisAggregateDbOffset = value.alarmgenRedisAggregateDbOffset;
      this._containers.internalValue = value.containers;
      this._logFilePath = value.logFilePath;
      this._logLocal = value.logLocal;
    }
  }

  // alarmgen_introspect_listen_port - computed: false, optional: true, required: false
  private _alarmgenIntrospectListenPort?: number; 
  public get alarmgenIntrospectListenPort() {
    return this.getNumberAttribute('alarmgen_introspect_listen_port');
  }
  public set alarmgenIntrospectListenPort(value: number) {
    this._alarmgenIntrospectListenPort = value;
  }
  public resetAlarmgenIntrospectListenPort() {
    this._alarmgenIntrospectListenPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get alarmgenIntrospectListenPortInput() {
    return this._alarmgenIntrospectListenPort;
  }

  // alarmgen_log_file_name - computed: false, optional: true, required: false
  private _alarmgenLogFileName?: string; 
  public get alarmgenLogFileName() {
    return this.getStringAttribute('alarmgen_log_file_name');
  }
  public set alarmgenLogFileName(value: string) {
    this._alarmgenLogFileName = value;
  }
  public resetAlarmgenLogFileName() {
    this._alarmgenLogFileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get alarmgenLogFileNameInput() {
    return this._alarmgenLogFileName;
  }

  // alarmgen_partitions - computed: false, optional: true, required: false
  private _alarmgenPartitions?: number; 
  public get alarmgenPartitions() {
    return this.getNumberAttribute('alarmgen_partitions');
  }
  public set alarmgenPartitions(value: number) {
    this._alarmgenPartitions = value;
  }
  public resetAlarmgenPartitions() {
    this._alarmgenPartitions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get alarmgenPartitionsInput() {
    return this._alarmgenPartitions;
  }

  // alarmgen_redis_aggregate_db_offset - computed: false, optional: true, required: false
  private _alarmgenRedisAggregateDbOffset?: number; 
  public get alarmgenRedisAggregateDbOffset() {
    return this.getNumberAttribute('alarmgen_redis_aggregate_db_offset');
  }
  public set alarmgenRedisAggregateDbOffset(value: number) {
    this._alarmgenRedisAggregateDbOffset = value;
  }
  public resetAlarmgenRedisAggregateDbOffset() {
    this._alarmgenRedisAggregateDbOffset = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get alarmgenRedisAggregateDbOffsetInput() {
    return this._alarmgenRedisAggregateDbOffset;
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // log_file_path - computed: false, optional: true, required: false
  private _logFilePath?: string; 
  public get logFilePath() {
    return this.getStringAttribute('log_file_path');
  }
  public set logFilePath(value: string) {
    this._logFilePath = value;
  }
  public resetLogFilePath() {
    this._logFilePath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logFilePathInput() {
    return this._logFilePath;
  }

  // log_local - computed: false, optional: true, required: false
  private _logLocal?: string; 
  public get logLocal() {
    return this.getStringAttribute('log_local');
  }
  public set logLocal(value: string) {
    this._logLocal = value;
  }
  public resetLogLocal() {
    this._logLocal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLocalInput() {
    return this._logLocal;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfiguration;
  /**
  * AnalyticsAlarmConfiguration is the Spec for the Analytics Alarm API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarm {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadata;
  /**
  * AnalyticsAlarmSpec is the Spec for the Analytics Alarm API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfiguration {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_file_path DataK8STfTungstenIoManagerV1Alpha1Manifest#log_file_path}
  */
  readonly logFilePath?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_local DataK8STfTungstenIoManagerV1Alpha1Manifest#log_local}
  */
  readonly logLocal?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#snmp_collector_fast_scan_frequency DataK8STfTungstenIoManagerV1Alpha1Manifest#snmp_collector_fast_scan_frequency}
  */
  readonly snmpCollectorFastScanFrequency?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#snmp_collector_introspect_listen_port DataK8STfTungstenIoManagerV1Alpha1Manifest#snmp_collector_introspect_listen_port}
  */
  readonly snmpCollectorIntrospectListenPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#snmp_collector_log_file_name DataK8STfTungstenIoManagerV1Alpha1Manifest#snmp_collector_log_file_name}
  */
  readonly snmpCollectorLogFileName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#snmp_collector_scan_frequency DataK8STfTungstenIoManagerV1Alpha1Manifest#snmp_collector_scan_frequency}
  */
  readonly snmpCollectorScanFrequency?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#topology_introspect_listen_port DataK8STfTungstenIoManagerV1Alpha1Manifest#topology_introspect_listen_port}
  */
  readonly topologyIntrospectListenPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#topology_log_file_name DataK8STfTungstenIoManagerV1Alpha1Manifest#topology_log_file_name}
  */
  readonly topologyLogFileName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#topology_snmp_frequency DataK8STfTungstenIoManagerV1Alpha1Manifest#topology_snmp_frequency}
  */
  readonly topologySnmpFrequency?: number;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
    log_file_path: cdktf.stringToTerraform(struct!.logFilePath),
    log_local: cdktf.stringToTerraform(struct!.logLocal),
    snmp_collector_fast_scan_frequency: cdktf.numberToTerraform(struct!.snmpCollectorFastScanFrequency),
    snmp_collector_introspect_listen_port: cdktf.numberToTerraform(struct!.snmpCollectorIntrospectListenPort),
    snmp_collector_log_file_name: cdktf.stringToTerraform(struct!.snmpCollectorLogFileName),
    snmp_collector_scan_frequency: cdktf.numberToTerraform(struct!.snmpCollectorScanFrequency),
    topology_introspect_listen_port: cdktf.numberToTerraform(struct!.topologyIntrospectListenPort),
    topology_log_file_name: cdktf.stringToTerraform(struct!.topologyLogFileName),
    topology_snmp_frequency: cdktf.numberToTerraform(struct!.topologySnmpFrequency),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainersList",
    },
    log_file_path: {
      value: cdktf.stringToHclTerraform(struct!.logFilePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    log_local: {
      value: cdktf.stringToHclTerraform(struct!.logLocal),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snmp_collector_fast_scan_frequency: {
      value: cdktf.numberToHclTerraform(struct!.snmpCollectorFastScanFrequency),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    snmp_collector_introspect_listen_port: {
      value: cdktf.numberToHclTerraform(struct!.snmpCollectorIntrospectListenPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    snmp_collector_log_file_name: {
      value: cdktf.stringToHclTerraform(struct!.snmpCollectorLogFileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    snmp_collector_scan_frequency: {
      value: cdktf.numberToHclTerraform(struct!.snmpCollectorScanFrequency),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topology_introspect_listen_port: {
      value: cdktf.numberToHclTerraform(struct!.topologyIntrospectListenPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topology_log_file_name: {
      value: cdktf.stringToHclTerraform(struct!.topologyLogFileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topology_snmp_frequency: {
      value: cdktf.numberToHclTerraform(struct!.topologySnmpFrequency),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._logFilePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.logFilePath = this._logFilePath;
    }
    if (this._logLocal !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLocal = this._logLocal;
    }
    if (this._snmpCollectorFastScanFrequency !== undefined) {
      hasAnyValues = true;
      internalValueResult.snmpCollectorFastScanFrequency = this._snmpCollectorFastScanFrequency;
    }
    if (this._snmpCollectorIntrospectListenPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.snmpCollectorIntrospectListenPort = this._snmpCollectorIntrospectListenPort;
    }
    if (this._snmpCollectorLogFileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.snmpCollectorLogFileName = this._snmpCollectorLogFileName;
    }
    if (this._snmpCollectorScanFrequency !== undefined) {
      hasAnyValues = true;
      internalValueResult.snmpCollectorScanFrequency = this._snmpCollectorScanFrequency;
    }
    if (this._topologyIntrospectListenPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyIntrospectListenPort = this._topologyIntrospectListenPort;
    }
    if (this._topologyLogFileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologyLogFileName = this._topologyLogFileName;
    }
    if (this._topologySnmpFrequency !== undefined) {
      hasAnyValues = true;
      internalValueResult.topologySnmpFrequency = this._topologySnmpFrequency;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containers.internalValue = undefined;
      this._logFilePath = undefined;
      this._logLocal = undefined;
      this._snmpCollectorFastScanFrequency = undefined;
      this._snmpCollectorIntrospectListenPort = undefined;
      this._snmpCollectorLogFileName = undefined;
      this._snmpCollectorScanFrequency = undefined;
      this._topologyIntrospectListenPort = undefined;
      this._topologyLogFileName = undefined;
      this._topologySnmpFrequency = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containers.internalValue = value.containers;
      this._logFilePath = value.logFilePath;
      this._logLocal = value.logLocal;
      this._snmpCollectorFastScanFrequency = value.snmpCollectorFastScanFrequency;
      this._snmpCollectorIntrospectListenPort = value.snmpCollectorIntrospectListenPort;
      this._snmpCollectorLogFileName = value.snmpCollectorLogFileName;
      this._snmpCollectorScanFrequency = value.snmpCollectorScanFrequency;
      this._topologyIntrospectListenPort = value.topologyIntrospectListenPort;
      this._topologyLogFileName = value.topologyLogFileName;
      this._topologySnmpFrequency = value.topologySnmpFrequency;
    }
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // log_file_path - computed: false, optional: true, required: false
  private _logFilePath?: string; 
  public get logFilePath() {
    return this.getStringAttribute('log_file_path');
  }
  public set logFilePath(value: string) {
    this._logFilePath = value;
  }
  public resetLogFilePath() {
    this._logFilePath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logFilePathInput() {
    return this._logFilePath;
  }

  // log_local - computed: false, optional: true, required: false
  private _logLocal?: string; 
  public get logLocal() {
    return this.getStringAttribute('log_local');
  }
  public set logLocal(value: string) {
    this._logLocal = value;
  }
  public resetLogLocal() {
    this._logLocal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLocalInput() {
    return this._logLocal;
  }

  // snmp_collector_fast_scan_frequency - computed: false, optional: true, required: false
  private _snmpCollectorFastScanFrequency?: number; 
  public get snmpCollectorFastScanFrequency() {
    return this.getNumberAttribute('snmp_collector_fast_scan_frequency');
  }
  public set snmpCollectorFastScanFrequency(value: number) {
    this._snmpCollectorFastScanFrequency = value;
  }
  public resetSnmpCollectorFastScanFrequency() {
    this._snmpCollectorFastScanFrequency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snmpCollectorFastScanFrequencyInput() {
    return this._snmpCollectorFastScanFrequency;
  }

  // snmp_collector_introspect_listen_port - computed: false, optional: true, required: false
  private _snmpCollectorIntrospectListenPort?: number; 
  public get snmpCollectorIntrospectListenPort() {
    return this.getNumberAttribute('snmp_collector_introspect_listen_port');
  }
  public set snmpCollectorIntrospectListenPort(value: number) {
    this._snmpCollectorIntrospectListenPort = value;
  }
  public resetSnmpCollectorIntrospectListenPort() {
    this._snmpCollectorIntrospectListenPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snmpCollectorIntrospectListenPortInput() {
    return this._snmpCollectorIntrospectListenPort;
  }

  // snmp_collector_log_file_name - computed: false, optional: true, required: false
  private _snmpCollectorLogFileName?: string; 
  public get snmpCollectorLogFileName() {
    return this.getStringAttribute('snmp_collector_log_file_name');
  }
  public set snmpCollectorLogFileName(value: string) {
    this._snmpCollectorLogFileName = value;
  }
  public resetSnmpCollectorLogFileName() {
    this._snmpCollectorLogFileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snmpCollectorLogFileNameInput() {
    return this._snmpCollectorLogFileName;
  }

  // snmp_collector_scan_frequency - computed: false, optional: true, required: false
  private _snmpCollectorScanFrequency?: number; 
  public get snmpCollectorScanFrequency() {
    return this.getNumberAttribute('snmp_collector_scan_frequency');
  }
  public set snmpCollectorScanFrequency(value: number) {
    this._snmpCollectorScanFrequency = value;
  }
  public resetSnmpCollectorScanFrequency() {
    this._snmpCollectorScanFrequency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snmpCollectorScanFrequencyInput() {
    return this._snmpCollectorScanFrequency;
  }

  // topology_introspect_listen_port - computed: false, optional: true, required: false
  private _topologyIntrospectListenPort?: number; 
  public get topologyIntrospectListenPort() {
    return this.getNumberAttribute('topology_introspect_listen_port');
  }
  public set topologyIntrospectListenPort(value: number) {
    this._topologyIntrospectListenPort = value;
  }
  public resetTopologyIntrospectListenPort() {
    this._topologyIntrospectListenPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyIntrospectListenPortInput() {
    return this._topologyIntrospectListenPort;
  }

  // topology_log_file_name - computed: false, optional: true, required: false
  private _topologyLogFileName?: string; 
  public get topologyLogFileName() {
    return this.getStringAttribute('topology_log_file_name');
  }
  public set topologyLogFileName(value: string) {
    this._topologyLogFileName = value;
  }
  public resetTopologyLogFileName() {
    this._topologyLogFileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologyLogFileNameInput() {
    return this._topologyLogFileName;
  }

  // topology_snmp_frequency - computed: false, optional: true, required: false
  private _topologySnmpFrequency?: number; 
  public get topologySnmpFrequency() {
    return this.getNumberAttribute('topology_snmp_frequency');
  }
  public set topologySnmpFrequency(value: number) {
    this._topologySnmpFrequency = value;
  }
  public resetTopologySnmpFrequency() {
    this._topologySnmpFrequency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topologySnmpFrequencyInput() {
    return this._topologySnmpFrequency;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfiguration;
  /**
  * AnalyticsSnmpConfiguration is the Spec for the Analytics SNMP API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmp {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadata;
  /**
  * AnalyticsSnmpSpec is the Spec for the Analytics SNMP API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#compaction_throughput_mb_per_sec DataK8STfTungstenIoManagerV1Alpha1Manifest#compaction_throughput_mb_per_sec}
  */
  readonly compactionThroughputMbPerSec?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#concurrent_compactors DataK8STfTungstenIoManagerV1Alpha1Manifest#concurrent_compactors}
  */
  readonly concurrentCompactors?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#concurrent_counter_writes DataK8STfTungstenIoManagerV1Alpha1Manifest#concurrent_counter_writes}
  */
  readonly concurrentCounterWrites?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#concurrent_materialized_view_writes DataK8STfTungstenIoManagerV1Alpha1Manifest#concurrent_materialized_view_writes}
  */
  readonly concurrentMaterializedViewWrites?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#concurrent_reads DataK8STfTungstenIoManagerV1Alpha1Manifest#concurrent_reads}
  */
  readonly concurrentReads?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#concurrent_writes DataK8STfTungstenIoManagerV1Alpha1Manifest#concurrent_writes}
  */
  readonly concurrentWrites?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#memtable_allocation_type DataK8STfTungstenIoManagerV1Alpha1Manifest#memtable_allocation_type}
  */
  readonly memtableAllocationType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#memtable_flush_writers DataK8STfTungstenIoManagerV1Alpha1Manifest#memtable_flush_writers}
  */
  readonly memtableFlushWriters?: number;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    compaction_throughput_mb_per_sec: cdktf.numberToTerraform(struct!.compactionThroughputMbPerSec),
    concurrent_compactors: cdktf.numberToTerraform(struct!.concurrentCompactors),
    concurrent_counter_writes: cdktf.numberToTerraform(struct!.concurrentCounterWrites),
    concurrent_materialized_view_writes: cdktf.numberToTerraform(struct!.concurrentMaterializedViewWrites),
    concurrent_reads: cdktf.numberToTerraform(struct!.concurrentReads),
    concurrent_writes: cdktf.numberToTerraform(struct!.concurrentWrites),
    memtable_allocation_type: cdktf.stringToTerraform(struct!.memtableAllocationType),
    memtable_flush_writers: cdktf.numberToTerraform(struct!.memtableFlushWriters),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    compaction_throughput_mb_per_sec: {
      value: cdktf.numberToHclTerraform(struct!.compactionThroughputMbPerSec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    concurrent_compactors: {
      value: cdktf.numberToHclTerraform(struct!.concurrentCompactors),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    concurrent_counter_writes: {
      value: cdktf.numberToHclTerraform(struct!.concurrentCounterWrites),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    concurrent_materialized_view_writes: {
      value: cdktf.numberToHclTerraform(struct!.concurrentMaterializedViewWrites),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    concurrent_reads: {
      value: cdktf.numberToHclTerraform(struct!.concurrentReads),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    concurrent_writes: {
      value: cdktf.numberToHclTerraform(struct!.concurrentWrites),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    memtable_allocation_type: {
      value: cdktf.stringToHclTerraform(struct!.memtableAllocationType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    memtable_flush_writers: {
      value: cdktf.numberToHclTerraform(struct!.memtableFlushWriters),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._compactionThroughputMbPerSec !== undefined) {
      hasAnyValues = true;
      internalValueResult.compactionThroughputMbPerSec = this._compactionThroughputMbPerSec;
    }
    if (this._concurrentCompactors !== undefined) {
      hasAnyValues = true;
      internalValueResult.concurrentCompactors = this._concurrentCompactors;
    }
    if (this._concurrentCounterWrites !== undefined) {
      hasAnyValues = true;
      internalValueResult.concurrentCounterWrites = this._concurrentCounterWrites;
    }
    if (this._concurrentMaterializedViewWrites !== undefined) {
      hasAnyValues = true;
      internalValueResult.concurrentMaterializedViewWrites = this._concurrentMaterializedViewWrites;
    }
    if (this._concurrentReads !== undefined) {
      hasAnyValues = true;
      internalValueResult.concurrentReads = this._concurrentReads;
    }
    if (this._concurrentWrites !== undefined) {
      hasAnyValues = true;
      internalValueResult.concurrentWrites = this._concurrentWrites;
    }
    if (this._memtableAllocationType !== undefined) {
      hasAnyValues = true;
      internalValueResult.memtableAllocationType = this._memtableAllocationType;
    }
    if (this._memtableFlushWriters !== undefined) {
      hasAnyValues = true;
      internalValueResult.memtableFlushWriters = this._memtableFlushWriters;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._compactionThroughputMbPerSec = undefined;
      this._concurrentCompactors = undefined;
      this._concurrentCounterWrites = undefined;
      this._concurrentMaterializedViewWrites = undefined;
      this._concurrentReads = undefined;
      this._concurrentWrites = undefined;
      this._memtableAllocationType = undefined;
      this._memtableFlushWriters = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._compactionThroughputMbPerSec = value.compactionThroughputMbPerSec;
      this._concurrentCompactors = value.concurrentCompactors;
      this._concurrentCounterWrites = value.concurrentCounterWrites;
      this._concurrentMaterializedViewWrites = value.concurrentMaterializedViewWrites;
      this._concurrentReads = value.concurrentReads;
      this._concurrentWrites = value.concurrentWrites;
      this._memtableAllocationType = value.memtableAllocationType;
      this._memtableFlushWriters = value.memtableFlushWriters;
    }
  }

  // compaction_throughput_mb_per_sec - computed: false, optional: true, required: false
  private _compactionThroughputMbPerSec?: number; 
  public get compactionThroughputMbPerSec() {
    return this.getNumberAttribute('compaction_throughput_mb_per_sec');
  }
  public set compactionThroughputMbPerSec(value: number) {
    this._compactionThroughputMbPerSec = value;
  }
  public resetCompactionThroughputMbPerSec() {
    this._compactionThroughputMbPerSec = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compactionThroughputMbPerSecInput() {
    return this._compactionThroughputMbPerSec;
  }

  // concurrent_compactors - computed: false, optional: true, required: false
  private _concurrentCompactors?: number; 
  public get concurrentCompactors() {
    return this.getNumberAttribute('concurrent_compactors');
  }
  public set concurrentCompactors(value: number) {
    this._concurrentCompactors = value;
  }
  public resetConcurrentCompactors() {
    this._concurrentCompactors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get concurrentCompactorsInput() {
    return this._concurrentCompactors;
  }

  // concurrent_counter_writes - computed: false, optional: true, required: false
  private _concurrentCounterWrites?: number; 
  public get concurrentCounterWrites() {
    return this.getNumberAttribute('concurrent_counter_writes');
  }
  public set concurrentCounterWrites(value: number) {
    this._concurrentCounterWrites = value;
  }
  public resetConcurrentCounterWrites() {
    this._concurrentCounterWrites = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get concurrentCounterWritesInput() {
    return this._concurrentCounterWrites;
  }

  // concurrent_materialized_view_writes - computed: false, optional: true, required: false
  private _concurrentMaterializedViewWrites?: number; 
  public get concurrentMaterializedViewWrites() {
    return this.getNumberAttribute('concurrent_materialized_view_writes');
  }
  public set concurrentMaterializedViewWrites(value: number) {
    this._concurrentMaterializedViewWrites = value;
  }
  public resetConcurrentMaterializedViewWrites() {
    this._concurrentMaterializedViewWrites = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get concurrentMaterializedViewWritesInput() {
    return this._concurrentMaterializedViewWrites;
  }

  // concurrent_reads - computed: false, optional: true, required: false
  private _concurrentReads?: number; 
  public get concurrentReads() {
    return this.getNumberAttribute('concurrent_reads');
  }
  public set concurrentReads(value: number) {
    this._concurrentReads = value;
  }
  public resetConcurrentReads() {
    this._concurrentReads = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get concurrentReadsInput() {
    return this._concurrentReads;
  }

  // concurrent_writes - computed: false, optional: true, required: false
  private _concurrentWrites?: number; 
  public get concurrentWrites() {
    return this.getNumberAttribute('concurrent_writes');
  }
  public set concurrentWrites(value: number) {
    this._concurrentWrites = value;
  }
  public resetConcurrentWrites() {
    this._concurrentWrites = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get concurrentWritesInput() {
    return this._concurrentWrites;
  }

  // memtable_allocation_type - computed: false, optional: true, required: false
  private _memtableAllocationType?: string; 
  public get memtableAllocationType() {
    return this.getStringAttribute('memtable_allocation_type');
  }
  public set memtableAllocationType(value: string) {
    this._memtableAllocationType = value;
  }
  public resetMemtableAllocationType() {
    this._memtableAllocationType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get memtableAllocationTypeInput() {
    return this._memtableAllocationType;
  }

  // memtable_flush_writers - computed: false, optional: true, required: false
  private _memtableFlushWriters?: number; 
  public get memtableFlushWriters() {
    return this.getNumberAttribute('memtable_flush_writers');
  }
  public set memtableFlushWriters(value: number) {
    this._memtableFlushWriters = value;
  }
  public resetMemtableFlushWriters() {
    this._memtableFlushWriters = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get memtableFlushWritersInput() {
    return this._memtableFlushWriters;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfiguration {
  /**
  * CassandraConfigParameters defines additional parameters for Cassandra confgiuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#cassandra_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#cassandra_parameters}
  */
  readonly cassandraParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#cql_port DataK8STfTungstenIoManagerV1Alpha1Manifest#cql_port}
  */
  readonly cqlPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#jmx_local_port DataK8STfTungstenIoManagerV1Alpha1Manifest#jmx_local_port}
  */
  readonly jmxLocalPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#listen_address DataK8STfTungstenIoManagerV1Alpha1Manifest#listen_address}
  */
  readonly listenAddress?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#max_heap_size DataK8STfTungstenIoManagerV1Alpha1Manifest#max_heap_size}
  */
  readonly maxHeapSize?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#min_heap_size DataK8STfTungstenIoManagerV1Alpha1Manifest#min_heap_size}
  */
  readonly minHeapSize?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#minimum_disk_gb DataK8STfTungstenIoManagerV1Alpha1Manifest#minimum_disk_gb}
  */
  readonly minimumDiskGb?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#reaper_adm_port DataK8STfTungstenIoManagerV1Alpha1Manifest#reaper_adm_port}
  */
  readonly reaperAdmPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#reaper_app_port DataK8STfTungstenIoManagerV1Alpha1Manifest#reaper_app_port}
  */
  readonly reaperAppPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#reaper_enabled DataK8STfTungstenIoManagerV1Alpha1Manifest#reaper_enabled}
  */
  readonly reaperEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#ssl_storage_port DataK8STfTungstenIoManagerV1Alpha1Manifest#ssl_storage_port}
  */
  readonly sslStoragePort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#start_rpc DataK8STfTungstenIoManagerV1Alpha1Manifest#start_rpc}
  */
  readonly startRpc?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#storage_port DataK8STfTungstenIoManagerV1Alpha1Manifest#storage_port}
  */
  readonly storagePort?: number;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cassandra_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParametersToTerraform(struct!.cassandraParameters),
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
    cql_port: cdktf.numberToTerraform(struct!.cqlPort),
    jmx_local_port: cdktf.numberToTerraform(struct!.jmxLocalPort),
    listen_address: cdktf.stringToTerraform(struct!.listenAddress),
    max_heap_size: cdktf.stringToTerraform(struct!.maxHeapSize),
    min_heap_size: cdktf.stringToTerraform(struct!.minHeapSize),
    minimum_disk_gb: cdktf.numberToTerraform(struct!.minimumDiskGb),
    port: cdktf.numberToTerraform(struct!.port),
    reaper_adm_port: cdktf.numberToTerraform(struct!.reaperAdmPort),
    reaper_app_port: cdktf.numberToTerraform(struct!.reaperAppPort),
    reaper_enabled: cdktf.booleanToTerraform(struct!.reaperEnabled),
    ssl_storage_port: cdktf.numberToTerraform(struct!.sslStoragePort),
    start_rpc: cdktf.booleanToTerraform(struct!.startRpc),
    storage_port: cdktf.numberToTerraform(struct!.storagePort),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cassandra_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParametersToHclTerraform(struct!.cassandraParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParameters",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainersList",
    },
    cql_port: {
      value: cdktf.numberToHclTerraform(struct!.cqlPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    jmx_local_port: {
      value: cdktf.numberToHclTerraform(struct!.jmxLocalPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    listen_address: {
      value: cdktf.stringToHclTerraform(struct!.listenAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_heap_size: {
      value: cdktf.stringToHclTerraform(struct!.maxHeapSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    min_heap_size: {
      value: cdktf.stringToHclTerraform(struct!.minHeapSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    minimum_disk_gb: {
      value: cdktf.numberToHclTerraform(struct!.minimumDiskGb),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    reaper_adm_port: {
      value: cdktf.numberToHclTerraform(struct!.reaperAdmPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    reaper_app_port: {
      value: cdktf.numberToHclTerraform(struct!.reaperAppPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    reaper_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.reaperEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    ssl_storage_port: {
      value: cdktf.numberToHclTerraform(struct!.sslStoragePort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start_rpc: {
      value: cdktf.booleanToHclTerraform(struct!.startRpc),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    storage_port: {
      value: cdktf.numberToHclTerraform(struct!.storagePort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cassandraParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cassandraParameters = this._cassandraParameters?.internalValue;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._cqlPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.cqlPort = this._cqlPort;
    }
    if (this._jmxLocalPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.jmxLocalPort = this._jmxLocalPort;
    }
    if (this._listenAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.listenAddress = this._listenAddress;
    }
    if (this._maxHeapSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxHeapSize = this._maxHeapSize;
    }
    if (this._minHeapSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.minHeapSize = this._minHeapSize;
    }
    if (this._minimumDiskGb !== undefined) {
      hasAnyValues = true;
      internalValueResult.minimumDiskGb = this._minimumDiskGb;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._reaperAdmPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.reaperAdmPort = this._reaperAdmPort;
    }
    if (this._reaperAppPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.reaperAppPort = this._reaperAppPort;
    }
    if (this._reaperEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.reaperEnabled = this._reaperEnabled;
    }
    if (this._sslStoragePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.sslStoragePort = this._sslStoragePort;
    }
    if (this._startRpc !== undefined) {
      hasAnyValues = true;
      internalValueResult.startRpc = this._startRpc;
    }
    if (this._storagePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.storagePort = this._storagePort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cassandraParameters.internalValue = undefined;
      this._containers.internalValue = undefined;
      this._cqlPort = undefined;
      this._jmxLocalPort = undefined;
      this._listenAddress = undefined;
      this._maxHeapSize = undefined;
      this._minHeapSize = undefined;
      this._minimumDiskGb = undefined;
      this._port = undefined;
      this._reaperAdmPort = undefined;
      this._reaperAppPort = undefined;
      this._reaperEnabled = undefined;
      this._sslStoragePort = undefined;
      this._startRpc = undefined;
      this._storagePort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cassandraParameters.internalValue = value.cassandraParameters;
      this._containers.internalValue = value.containers;
      this._cqlPort = value.cqlPort;
      this._jmxLocalPort = value.jmxLocalPort;
      this._listenAddress = value.listenAddress;
      this._maxHeapSize = value.maxHeapSize;
      this._minHeapSize = value.minHeapSize;
      this._minimumDiskGb = value.minimumDiskGb;
      this._port = value.port;
      this._reaperAdmPort = value.reaperAdmPort;
      this._reaperAppPort = value.reaperAppPort;
      this._reaperEnabled = value.reaperEnabled;
      this._sslStoragePort = value.sslStoragePort;
      this._startRpc = value.startRpc;
      this._storagePort = value.storagePort;
    }
  }

  // cassandra_parameters - computed: false, optional: true, required: false
  private _cassandraParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParametersOutputReference(this, "cassandra_parameters");
  public get cassandraParameters() {
    return this._cassandraParameters;
  }
  public putCassandraParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationCassandraParameters) {
    this._cassandraParameters.internalValue = value;
  }
  public resetCassandraParameters() {
    this._cassandraParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cassandraParametersInput() {
    return this._cassandraParameters.internalValue;
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // cql_port - computed: false, optional: true, required: false
  private _cqlPort?: number; 
  public get cqlPort() {
    return this.getNumberAttribute('cql_port');
  }
  public set cqlPort(value: number) {
    this._cqlPort = value;
  }
  public resetCqlPort() {
    this._cqlPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cqlPortInput() {
    return this._cqlPort;
  }

  // jmx_local_port - computed: false, optional: true, required: false
  private _jmxLocalPort?: number; 
  public get jmxLocalPort() {
    return this.getNumberAttribute('jmx_local_port');
  }
  public set jmxLocalPort(value: number) {
    this._jmxLocalPort = value;
  }
  public resetJmxLocalPort() {
    this._jmxLocalPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jmxLocalPortInput() {
    return this._jmxLocalPort;
  }

  // listen_address - computed: false, optional: true, required: false
  private _listenAddress?: string; 
  public get listenAddress() {
    return this.getStringAttribute('listen_address');
  }
  public set listenAddress(value: string) {
    this._listenAddress = value;
  }
  public resetListenAddress() {
    this._listenAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get listenAddressInput() {
    return this._listenAddress;
  }

  // max_heap_size - computed: false, optional: true, required: false
  private _maxHeapSize?: string; 
  public get maxHeapSize() {
    return this.getStringAttribute('max_heap_size');
  }
  public set maxHeapSize(value: string) {
    this._maxHeapSize = value;
  }
  public resetMaxHeapSize() {
    this._maxHeapSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxHeapSizeInput() {
    return this._maxHeapSize;
  }

  // min_heap_size - computed: false, optional: true, required: false
  private _minHeapSize?: string; 
  public get minHeapSize() {
    return this.getStringAttribute('min_heap_size');
  }
  public set minHeapSize(value: string) {
    this._minHeapSize = value;
  }
  public resetMinHeapSize() {
    this._minHeapSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minHeapSizeInput() {
    return this._minHeapSize;
  }

  // minimum_disk_gb - computed: false, optional: true, required: false
  private _minimumDiskGb?: number; 
  public get minimumDiskGb() {
    return this.getNumberAttribute('minimum_disk_gb');
  }
  public set minimumDiskGb(value: number) {
    this._minimumDiskGb = value;
  }
  public resetMinimumDiskGb() {
    this._minimumDiskGb = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minimumDiskGbInput() {
    return this._minimumDiskGb;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // reaper_adm_port - computed: false, optional: true, required: false
  private _reaperAdmPort?: number; 
  public get reaperAdmPort() {
    return this.getNumberAttribute('reaper_adm_port');
  }
  public set reaperAdmPort(value: number) {
    this._reaperAdmPort = value;
  }
  public resetReaperAdmPort() {
    this._reaperAdmPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reaperAdmPortInput() {
    return this._reaperAdmPort;
  }

  // reaper_app_port - computed: false, optional: true, required: false
  private _reaperAppPort?: number; 
  public get reaperAppPort() {
    return this.getNumberAttribute('reaper_app_port');
  }
  public set reaperAppPort(value: number) {
    this._reaperAppPort = value;
  }
  public resetReaperAppPort() {
    this._reaperAppPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reaperAppPortInput() {
    return this._reaperAppPort;
  }

  // reaper_enabled - computed: false, optional: true, required: false
  private _reaperEnabled?: boolean | cdktf.IResolvable; 
  public get reaperEnabled() {
    return this.getBooleanAttribute('reaper_enabled');
  }
  public set reaperEnabled(value: boolean | cdktf.IResolvable) {
    this._reaperEnabled = value;
  }
  public resetReaperEnabled() {
    this._reaperEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reaperEnabledInput() {
    return this._reaperEnabled;
  }

  // ssl_storage_port - computed: false, optional: true, required: false
  private _sslStoragePort?: number; 
  public get sslStoragePort() {
    return this.getNumberAttribute('ssl_storage_port');
  }
  public set sslStoragePort(value: number) {
    this._sslStoragePort = value;
  }
  public resetSslStoragePort() {
    this._sslStoragePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sslStoragePortInput() {
    return this._sslStoragePort;
  }

  // start_rpc - computed: false, optional: true, required: false
  private _startRpc?: boolean | cdktf.IResolvable; 
  public get startRpc() {
    return this.getBooleanAttribute('start_rpc');
  }
  public set startRpc(value: boolean | cdktf.IResolvable) {
    this._startRpc = value;
  }
  public resetStartRpc() {
    this._startRpc = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startRpcInput() {
    return this._startRpc;
  }

  // storage_port - computed: false, optional: true, required: false
  private _storagePort?: number; 
  public get storagePort() {
    return this.getNumberAttribute('storage_port');
  }
  public set storagePort(value: number) {
    this._storagePort = value;
  }
  public resetStoragePort() {
    this._storagePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get storagePortInput() {
    return this._storagePort;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfiguration;
  /**
  * CassandraConfiguration is the Spec for the cassandras API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandras {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadata;
  /**
  * CassandraSpec is the Spec for the cassandras API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandras | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandras | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandras | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandras | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandras[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfig {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#ip DataK8STfTungstenIoManagerV1Alpha1Manifest#ip}
  */
  readonly ip?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#ip_fabric_service_host DataK8STfTungstenIoManagerV1Alpha1Manifest#ip_fabric_service_host}
  */
  readonly ipFabricServiceHost?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#ip_fabric_service_port DataK8STfTungstenIoManagerV1Alpha1Manifest#ip_fabric_service_port}
  */
  readonly ipFabricServicePort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfigToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ip: cdktf.stringToTerraform(struct!.ip),
    ip_fabric_service_host: cdktf.stringToTerraform(struct!.ipFabricServiceHost),
    ip_fabric_service_port: cdktf.numberToTerraform(struct!.ipFabricServicePort),
    name: cdktf.stringToTerraform(struct!.name),
    port: cdktf.numberToTerraform(struct!.port),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfigToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_fabric_service_host: {
      value: cdktf.stringToHclTerraform(struct!.ipFabricServiceHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_fabric_service_port: {
      value: cdktf.numberToHclTerraform(struct!.ipFabricServicePort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    if (this._ipFabricServiceHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipFabricServiceHost = this._ipFabricServiceHost;
    }
    if (this._ipFabricServicePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipFabricServicePort = this._ipFabricServicePort;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._ip = undefined;
      this._ipFabricServiceHost = undefined;
      this._ipFabricServicePort = undefined;
      this._name = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._ip = value.ip;
      this._ipFabricServiceHost = value.ipFabricServiceHost;
      this._ipFabricServicePort = value.ipFabricServicePort;
      this._name = value.name;
      this._port = value.port;
    }
  }

  // ip - computed: false, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }

  // ip_fabric_service_host - computed: false, optional: true, required: false
  private _ipFabricServiceHost?: string; 
  public get ipFabricServiceHost() {
    return this.getStringAttribute('ip_fabric_service_host');
  }
  public set ipFabricServiceHost(value: string) {
    this._ipFabricServiceHost = value;
  }
  public resetIpFabricServiceHost() {
    this._ipFabricServiceHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipFabricServiceHostInput() {
    return this._ipFabricServiceHost;
  }

  // ip_fabric_service_port - computed: false, optional: true, required: false
  private _ipFabricServicePort?: number; 
  public get ipFabricServicePort() {
    return this.getNumberAttribute('ip_fabric_service_port');
  }
  public set ipFabricServicePort(value: number) {
    this._ipFabricServicePort = value;
  }
  public resetIpFabricServicePort() {
    this._ipFabricServicePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipFabricServicePortInput() {
    return this._ipFabricServicePort;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfiguration {
  /**
  * AAAMode aaa mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#aaa_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#aaa_mode}
  */
  readonly aaaMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#api_admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#api_admin_port}
  */
  readonly apiAdminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#api_introspect_port DataK8STfTungstenIoManagerV1Alpha1Manifest#api_introspect_port}
  */
  readonly apiIntrospectPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#api_port DataK8STfTungstenIoManagerV1Alpha1Manifest#api_port}
  */
  readonly apiPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#api_worker_count DataK8STfTungstenIoManagerV1Alpha1Manifest#api_worker_count}
  */
  readonly apiWorkerCount?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#bgp_auto_mesh DataK8STfTungstenIoManagerV1Alpha1Manifest#bgp_auto_mesh}
  */
  readonly bgpAutoMesh?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#bgp_enable4_byte DataK8STfTungstenIoManagerV1Alpha1Manifest#bgp_enable4_byte}
  */
  readonly bgpEnable4Byte?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#device_manager_introspect_port DataK8STfTungstenIoManagerV1Alpha1Manifest#device_manager_introspect_port}
  */
  readonly deviceManagerIntrospectPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#fabric_mgmt_ip DataK8STfTungstenIoManagerV1Alpha1Manifest#fabric_mgmt_ip}
  */
  readonly fabricMgmtIp?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#global_asn_number DataK8STfTungstenIoManagerV1Alpha1Manifest#global_asn_number}
  */
  readonly globalAsnNumber?: number;
  /**
  * LinklocalServiceConfig is the Spec for link local coniguration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#linklocal_service_config DataK8STfTungstenIoManagerV1Alpha1Manifest#linklocal_service_config}
  */
  readonly linklocalServiceConfig?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfig;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#schema_introspect_port DataK8STfTungstenIoManagerV1Alpha1Manifest#schema_introspect_port}
  */
  readonly schemaIntrospectPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#svc_monitor_introspect_port DataK8STfTungstenIoManagerV1Alpha1Manifest#svc_monitor_introspect_port}
  */
  readonly svcMonitorIntrospectPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#use_external_tftp DataK8STfTungstenIoManagerV1Alpha1Manifest#use_external_tftp}
  */
  readonly useExternalTftp?: boolean | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    aaa_mode: cdktf.stringToTerraform(struct!.aaaMode),
    api_admin_port: cdktf.numberToTerraform(struct!.apiAdminPort),
    api_introspect_port: cdktf.numberToTerraform(struct!.apiIntrospectPort),
    api_port: cdktf.numberToTerraform(struct!.apiPort),
    api_worker_count: cdktf.numberToTerraform(struct!.apiWorkerCount),
    bgp_auto_mesh: cdktf.booleanToTerraform(struct!.bgpAutoMesh),
    bgp_enable4_byte: cdktf.booleanToTerraform(struct!.bgpEnable4Byte),
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
    device_manager_introspect_port: cdktf.numberToTerraform(struct!.deviceManagerIntrospectPort),
    fabric_mgmt_ip: cdktf.stringToTerraform(struct!.fabricMgmtIp),
    global_asn_number: cdktf.numberToTerraform(struct!.globalAsnNumber),
    linklocal_service_config: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfigToTerraform(struct!.linklocalServiceConfig),
    schema_introspect_port: cdktf.numberToTerraform(struct!.schemaIntrospectPort),
    svc_monitor_introspect_port: cdktf.numberToTerraform(struct!.svcMonitorIntrospectPort),
    use_external_tftp: cdktf.booleanToTerraform(struct!.useExternalTftp),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    aaa_mode: {
      value: cdktf.stringToHclTerraform(struct!.aaaMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    api_admin_port: {
      value: cdktf.numberToHclTerraform(struct!.apiAdminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    api_introspect_port: {
      value: cdktf.numberToHclTerraform(struct!.apiIntrospectPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    api_port: {
      value: cdktf.numberToHclTerraform(struct!.apiPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    api_worker_count: {
      value: cdktf.numberToHclTerraform(struct!.apiWorkerCount),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    bgp_auto_mesh: {
      value: cdktf.booleanToHclTerraform(struct!.bgpAutoMesh),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    bgp_enable4_byte: {
      value: cdktf.booleanToHclTerraform(struct!.bgpEnable4Byte),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainersList",
    },
    device_manager_introspect_port: {
      value: cdktf.numberToHclTerraform(struct!.deviceManagerIntrospectPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    fabric_mgmt_ip: {
      value: cdktf.stringToHclTerraform(struct!.fabricMgmtIp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    global_asn_number: {
      value: cdktf.numberToHclTerraform(struct!.globalAsnNumber),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    linklocal_service_config: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfigToHclTerraform(struct!.linklocalServiceConfig),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfig",
    },
    schema_introspect_port: {
      value: cdktf.numberToHclTerraform(struct!.schemaIntrospectPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    svc_monitor_introspect_port: {
      value: cdktf.numberToHclTerraform(struct!.svcMonitorIntrospectPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    use_external_tftp: {
      value: cdktf.booleanToHclTerraform(struct!.useExternalTftp),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._aaaMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.aaaMode = this._aaaMode;
    }
    if (this._apiAdminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiAdminPort = this._apiAdminPort;
    }
    if (this._apiIntrospectPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiIntrospectPort = this._apiIntrospectPort;
    }
    if (this._apiPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiPort = this._apiPort;
    }
    if (this._apiWorkerCount !== undefined) {
      hasAnyValues = true;
      internalValueResult.apiWorkerCount = this._apiWorkerCount;
    }
    if (this._bgpAutoMesh !== undefined) {
      hasAnyValues = true;
      internalValueResult.bgpAutoMesh = this._bgpAutoMesh;
    }
    if (this._bgpEnable4Byte !== undefined) {
      hasAnyValues = true;
      internalValueResult.bgpEnable4Byte = this._bgpEnable4Byte;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._deviceManagerIntrospectPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceManagerIntrospectPort = this._deviceManagerIntrospectPort;
    }
    if (this._fabricMgmtIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.fabricMgmtIp = this._fabricMgmtIp;
    }
    if (this._globalAsnNumber !== undefined) {
      hasAnyValues = true;
      internalValueResult.globalAsnNumber = this._globalAsnNumber;
    }
    if (this._linklocalServiceConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.linklocalServiceConfig = this._linklocalServiceConfig?.internalValue;
    }
    if (this._schemaIntrospectPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.schemaIntrospectPort = this._schemaIntrospectPort;
    }
    if (this._svcMonitorIntrospectPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.svcMonitorIntrospectPort = this._svcMonitorIntrospectPort;
    }
    if (this._useExternalTftp !== undefined) {
      hasAnyValues = true;
      internalValueResult.useExternalTftp = this._useExternalTftp;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._aaaMode = undefined;
      this._apiAdminPort = undefined;
      this._apiIntrospectPort = undefined;
      this._apiPort = undefined;
      this._apiWorkerCount = undefined;
      this._bgpAutoMesh = undefined;
      this._bgpEnable4Byte = undefined;
      this._containers.internalValue = undefined;
      this._deviceManagerIntrospectPort = undefined;
      this._fabricMgmtIp = undefined;
      this._globalAsnNumber = undefined;
      this._linklocalServiceConfig.internalValue = undefined;
      this._schemaIntrospectPort = undefined;
      this._svcMonitorIntrospectPort = undefined;
      this._useExternalTftp = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._aaaMode = value.aaaMode;
      this._apiAdminPort = value.apiAdminPort;
      this._apiIntrospectPort = value.apiIntrospectPort;
      this._apiPort = value.apiPort;
      this._apiWorkerCount = value.apiWorkerCount;
      this._bgpAutoMesh = value.bgpAutoMesh;
      this._bgpEnable4Byte = value.bgpEnable4Byte;
      this._containers.internalValue = value.containers;
      this._deviceManagerIntrospectPort = value.deviceManagerIntrospectPort;
      this._fabricMgmtIp = value.fabricMgmtIp;
      this._globalAsnNumber = value.globalAsnNumber;
      this._linklocalServiceConfig.internalValue = value.linklocalServiceConfig;
      this._schemaIntrospectPort = value.schemaIntrospectPort;
      this._svcMonitorIntrospectPort = value.svcMonitorIntrospectPort;
      this._useExternalTftp = value.useExternalTftp;
    }
  }

  // aaa_mode - computed: false, optional: true, required: false
  private _aaaMode?: string; 
  public get aaaMode() {
    return this.getStringAttribute('aaa_mode');
  }
  public set aaaMode(value: string) {
    this._aaaMode = value;
  }
  public resetAaaMode() {
    this._aaaMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aaaModeInput() {
    return this._aaaMode;
  }

  // api_admin_port - computed: false, optional: true, required: false
  private _apiAdminPort?: number; 
  public get apiAdminPort() {
    return this.getNumberAttribute('api_admin_port');
  }
  public set apiAdminPort(value: number) {
    this._apiAdminPort = value;
  }
  public resetApiAdminPort() {
    this._apiAdminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiAdminPortInput() {
    return this._apiAdminPort;
  }

  // api_introspect_port - computed: false, optional: true, required: false
  private _apiIntrospectPort?: number; 
  public get apiIntrospectPort() {
    return this.getNumberAttribute('api_introspect_port');
  }
  public set apiIntrospectPort(value: number) {
    this._apiIntrospectPort = value;
  }
  public resetApiIntrospectPort() {
    this._apiIntrospectPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiIntrospectPortInput() {
    return this._apiIntrospectPort;
  }

  // api_port - computed: false, optional: true, required: false
  private _apiPort?: number; 
  public get apiPort() {
    return this.getNumberAttribute('api_port');
  }
  public set apiPort(value: number) {
    this._apiPort = value;
  }
  public resetApiPort() {
    this._apiPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiPortInput() {
    return this._apiPort;
  }

  // api_worker_count - computed: false, optional: true, required: false
  private _apiWorkerCount?: number; 
  public get apiWorkerCount() {
    return this.getNumberAttribute('api_worker_count');
  }
  public set apiWorkerCount(value: number) {
    this._apiWorkerCount = value;
  }
  public resetApiWorkerCount() {
    this._apiWorkerCount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiWorkerCountInput() {
    return this._apiWorkerCount;
  }

  // bgp_auto_mesh - computed: false, optional: true, required: false
  private _bgpAutoMesh?: boolean | cdktf.IResolvable; 
  public get bgpAutoMesh() {
    return this.getBooleanAttribute('bgp_auto_mesh');
  }
  public set bgpAutoMesh(value: boolean | cdktf.IResolvable) {
    this._bgpAutoMesh = value;
  }
  public resetBgpAutoMesh() {
    this._bgpAutoMesh = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bgpAutoMeshInput() {
    return this._bgpAutoMesh;
  }

  // bgp_enable4_byte - computed: false, optional: true, required: false
  private _bgpEnable4Byte?: boolean | cdktf.IResolvable; 
  public get bgpEnable4Byte() {
    return this.getBooleanAttribute('bgp_enable4_byte');
  }
  public set bgpEnable4Byte(value: boolean | cdktf.IResolvable) {
    this._bgpEnable4Byte = value;
  }
  public resetBgpEnable4Byte() {
    this._bgpEnable4Byte = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bgpEnable4ByteInput() {
    return this._bgpEnable4Byte;
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // device_manager_introspect_port - computed: false, optional: true, required: false
  private _deviceManagerIntrospectPort?: number; 
  public get deviceManagerIntrospectPort() {
    return this.getNumberAttribute('device_manager_introspect_port');
  }
  public set deviceManagerIntrospectPort(value: number) {
    this._deviceManagerIntrospectPort = value;
  }
  public resetDeviceManagerIntrospectPort() {
    this._deviceManagerIntrospectPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceManagerIntrospectPortInput() {
    return this._deviceManagerIntrospectPort;
  }

  // fabric_mgmt_ip - computed: false, optional: true, required: false
  private _fabricMgmtIp?: string; 
  public get fabricMgmtIp() {
    return this.getStringAttribute('fabric_mgmt_ip');
  }
  public set fabricMgmtIp(value: string) {
    this._fabricMgmtIp = value;
  }
  public resetFabricMgmtIp() {
    this._fabricMgmtIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fabricMgmtIpInput() {
    return this._fabricMgmtIp;
  }

  // global_asn_number - computed: false, optional: true, required: false
  private _globalAsnNumber?: number; 
  public get globalAsnNumber() {
    return this.getNumberAttribute('global_asn_number');
  }
  public set globalAsnNumber(value: number) {
    this._globalAsnNumber = value;
  }
  public resetGlobalAsnNumber() {
    this._globalAsnNumber = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get globalAsnNumberInput() {
    return this._globalAsnNumber;
  }

  // linklocal_service_config - computed: false, optional: true, required: false
  private _linklocalServiceConfig = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfigOutputReference(this, "linklocal_service_config");
  public get linklocalServiceConfig() {
    return this._linklocalServiceConfig;
  }
  public putLinklocalServiceConfig(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationLinklocalServiceConfig) {
    this._linklocalServiceConfig.internalValue = value;
  }
  public resetLinklocalServiceConfig() {
    this._linklocalServiceConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get linklocalServiceConfigInput() {
    return this._linklocalServiceConfig.internalValue;
  }

  // schema_introspect_port - computed: false, optional: true, required: false
  private _schemaIntrospectPort?: number; 
  public get schemaIntrospectPort() {
    return this.getNumberAttribute('schema_introspect_port');
  }
  public set schemaIntrospectPort(value: number) {
    this._schemaIntrospectPort = value;
  }
  public resetSchemaIntrospectPort() {
    this._schemaIntrospectPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get schemaIntrospectPortInput() {
    return this._schemaIntrospectPort;
  }

  // svc_monitor_introspect_port - computed: false, optional: true, required: false
  private _svcMonitorIntrospectPort?: number; 
  public get svcMonitorIntrospectPort() {
    return this.getNumberAttribute('svc_monitor_introspect_port');
  }
  public set svcMonitorIntrospectPort(value: number) {
    this._svcMonitorIntrospectPort = value;
  }
  public resetSvcMonitorIntrospectPort() {
    this._svcMonitorIntrospectPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get svcMonitorIntrospectPortInput() {
    return this._svcMonitorIntrospectPort;
  }

  // use_external_tftp - computed: false, optional: true, required: false
  private _useExternalTftp?: boolean | cdktf.IResolvable; 
  public get useExternalTftp() {
    return this.getBooleanAttribute('use_external_tftp');
  }
  public set useExternalTftp(value: boolean | cdktf.IResolvable) {
    this._useExternalTftp = value;
  }
  public resetUseExternalTftp() {
    this._useExternalTftp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get useExternalTftpInput() {
    return this._useExternalTftp;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfiguration;
  /**
  * ConfigConfiguration is the Spec for the Config API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfig {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadata;
  /**
  * ConfigSpec is the Spec for the Config API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfiguration {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#asn_number DataK8STfTungstenIoManagerV1Alpha1Manifest#asn_number}
  */
  readonly asnNumber?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#bgp_port DataK8STfTungstenIoManagerV1Alpha1Manifest#bgp_port}
  */
  readonly bgpPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainers[] | cdktf.IResolvable;
  /**
  * DataSubnet allow to set alternative network in which control, nodemanager and dns services will listen. Local pod address from this subnet will be discovered and used both in configuration for hostip directive and provision script.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#data_subnet DataK8STfTungstenIoManagerV1Alpha1Manifest#data_subnet}
  */
  readonly dataSubnet?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#dns_introspect_port DataK8STfTungstenIoManagerV1Alpha1Manifest#dns_introspect_port}
  */
  readonly dnsIntrospectPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#dns_port DataK8STfTungstenIoManagerV1Alpha1Manifest#dns_port}
  */
  readonly dnsPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#rndckey DataK8STfTungstenIoManagerV1Alpha1Manifest#rndckey}
  */
  readonly rndckey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#subcluster DataK8STfTungstenIoManagerV1Alpha1Manifest#subcluster}
  */
  readonly subcluster?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#xmpp_port DataK8STfTungstenIoManagerV1Alpha1Manifest#xmpp_port}
  */
  readonly xmppPort?: number;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    asn_number: cdktf.numberToTerraform(struct!.asnNumber),
    bgp_port: cdktf.numberToTerraform(struct!.bgpPort),
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
    data_subnet: cdktf.stringToTerraform(struct!.dataSubnet),
    dns_introspect_port: cdktf.numberToTerraform(struct!.dnsIntrospectPort),
    dns_port: cdktf.numberToTerraform(struct!.dnsPort),
    rndckey: cdktf.stringToTerraform(struct!.rndckey),
    subcluster: cdktf.stringToTerraform(struct!.subcluster),
    xmpp_port: cdktf.numberToTerraform(struct!.xmppPort),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    asn_number: {
      value: cdktf.numberToHclTerraform(struct!.asnNumber),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    bgp_port: {
      value: cdktf.numberToHclTerraform(struct!.bgpPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainersList",
    },
    data_subnet: {
      value: cdktf.stringToHclTerraform(struct!.dataSubnet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dns_introspect_port: {
      value: cdktf.numberToHclTerraform(struct!.dnsIntrospectPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    dns_port: {
      value: cdktf.numberToHclTerraform(struct!.dnsPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rndckey: {
      value: cdktf.stringToHclTerraform(struct!.rndckey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subcluster: {
      value: cdktf.stringToHclTerraform(struct!.subcluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    xmpp_port: {
      value: cdktf.numberToHclTerraform(struct!.xmppPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._asnNumber !== undefined) {
      hasAnyValues = true;
      internalValueResult.asnNumber = this._asnNumber;
    }
    if (this._bgpPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.bgpPort = this._bgpPort;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._dataSubnet !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSubnet = this._dataSubnet;
    }
    if (this._dnsIntrospectPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.dnsIntrospectPort = this._dnsIntrospectPort;
    }
    if (this._dnsPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.dnsPort = this._dnsPort;
    }
    if (this._rndckey !== undefined) {
      hasAnyValues = true;
      internalValueResult.rndckey = this._rndckey;
    }
    if (this._subcluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.subcluster = this._subcluster;
    }
    if (this._xmppPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.xmppPort = this._xmppPort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._asnNumber = undefined;
      this._bgpPort = undefined;
      this._containers.internalValue = undefined;
      this._dataSubnet = undefined;
      this._dnsIntrospectPort = undefined;
      this._dnsPort = undefined;
      this._rndckey = undefined;
      this._subcluster = undefined;
      this._xmppPort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._asnNumber = value.asnNumber;
      this._bgpPort = value.bgpPort;
      this._containers.internalValue = value.containers;
      this._dataSubnet = value.dataSubnet;
      this._dnsIntrospectPort = value.dnsIntrospectPort;
      this._dnsPort = value.dnsPort;
      this._rndckey = value.rndckey;
      this._subcluster = value.subcluster;
      this._xmppPort = value.xmppPort;
    }
  }

  // asn_number - computed: false, optional: true, required: false
  private _asnNumber?: number; 
  public get asnNumber() {
    return this.getNumberAttribute('asn_number');
  }
  public set asnNumber(value: number) {
    this._asnNumber = value;
  }
  public resetAsnNumber() {
    this._asnNumber = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asnNumberInput() {
    return this._asnNumber;
  }

  // bgp_port - computed: false, optional: true, required: false
  private _bgpPort?: number; 
  public get bgpPort() {
    return this.getNumberAttribute('bgp_port');
  }
  public set bgpPort(value: number) {
    this._bgpPort = value;
  }
  public resetBgpPort() {
    this._bgpPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bgpPortInput() {
    return this._bgpPort;
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // data_subnet - computed: false, optional: true, required: false
  private _dataSubnet?: string; 
  public get dataSubnet() {
    return this.getStringAttribute('data_subnet');
  }
  public set dataSubnet(value: string) {
    this._dataSubnet = value;
  }
  public resetDataSubnet() {
    this._dataSubnet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSubnetInput() {
    return this._dataSubnet;
  }

  // dns_introspect_port - computed: false, optional: true, required: false
  private _dnsIntrospectPort?: number; 
  public get dnsIntrospectPort() {
    return this.getNumberAttribute('dns_introspect_port');
  }
  public set dnsIntrospectPort(value: number) {
    this._dnsIntrospectPort = value;
  }
  public resetDnsIntrospectPort() {
    this._dnsIntrospectPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dnsIntrospectPortInput() {
    return this._dnsIntrospectPort;
  }

  // dns_port - computed: false, optional: true, required: false
  private _dnsPort?: number; 
  public get dnsPort() {
    return this.getNumberAttribute('dns_port');
  }
  public set dnsPort(value: number) {
    this._dnsPort = value;
  }
  public resetDnsPort() {
    this._dnsPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dnsPortInput() {
    return this._dnsPort;
  }

  // rndckey - computed: false, optional: true, required: false
  private _rndckey?: string; 
  public get rndckey() {
    return this.getStringAttribute('rndckey');
  }
  public set rndckey(value: string) {
    this._rndckey = value;
  }
  public resetRndckey() {
    this._rndckey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rndckeyInput() {
    return this._rndckey;
  }

  // subcluster - computed: false, optional: true, required: false
  private _subcluster?: string; 
  public get subcluster() {
    return this.getStringAttribute('subcluster');
  }
  public set subcluster(value: string) {
    this._subcluster = value;
  }
  public resetSubcluster() {
    this._subcluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subclusterInput() {
    return this._subcluster;
  }

  // xmpp_port - computed: false, optional: true, required: false
  private _xmppPort?: number; 
  public get xmppPort() {
    return this.getNumberAttribute('xmpp_port');
  }
  public set xmppPort(value: number) {
    this._xmppPort = value;
  }
  public resetXmppPort() {
    this._xmppPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xmppPortInput() {
    return this._xmppPort;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfiguration;
  /**
  * ControlConfiguration is the Spec for the controls API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControls {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadata;
  /**
  * ControlSpec is the Spec for the controls API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControls | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControls | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControls | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControls | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControls[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfiguration {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#cloud_orchestrator DataK8STfTungstenIoManagerV1Alpha1Manifest#cloud_orchestrator}
  */
  readonly cloudOrchestrator?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#host_network_service DataK8STfTungstenIoManagerV1Alpha1Manifest#host_network_service}
  */
  readonly hostNetworkService?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#ip_fabric_forwarding DataK8STfTungstenIoManagerV1Alpha1Manifest#ip_fabric_forwarding}
  */
  readonly ipFabricForwarding?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#ip_fabric_snat DataK8STfTungstenIoManagerV1Alpha1Manifest#ip_fabric_snat}
  */
  readonly ipFabricSnat?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#ip_fabric_subnets DataK8STfTungstenIoManagerV1Alpha1Manifest#ip_fabric_subnets}
  */
  readonly ipFabricSubnets?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#kubernetes_api_port DataK8STfTungstenIoManagerV1Alpha1Manifest#kubernetes_api_port}
  */
  readonly kubernetesApiPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#kubernetes_api_server DataK8STfTungstenIoManagerV1Alpha1Manifest#kubernetes_api_server}
  */
  readonly kubernetesApiServer?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#kubernetes_apissl_port DataK8STfTungstenIoManagerV1Alpha1Manifest#kubernetes_apissl_port}
  */
  readonly kubernetesApisslPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#kubernetes_token_file DataK8STfTungstenIoManagerV1Alpha1Manifest#kubernetes_token_file}
  */
  readonly kubernetesTokenFile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#pod_subnet DataK8STfTungstenIoManagerV1Alpha1Manifest#pod_subnet}
  */
  readonly podSubnet?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#public_fip_pool DataK8STfTungstenIoManagerV1Alpha1Manifest#public_fip_pool}
  */
  readonly publicFipPool?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_subnet DataK8STfTungstenIoManagerV1Alpha1Manifest#service_subnet}
  */
  readonly serviceSubnet?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cloud_orchestrator: cdktf.stringToTerraform(struct!.cloudOrchestrator),
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
    host_network_service: cdktf.booleanToTerraform(struct!.hostNetworkService),
    ip_fabric_forwarding: cdktf.booleanToTerraform(struct!.ipFabricForwarding),
    ip_fabric_snat: cdktf.booleanToTerraform(struct!.ipFabricSnat),
    ip_fabric_subnets: cdktf.stringToTerraform(struct!.ipFabricSubnets),
    kubernetes_api_port: cdktf.numberToTerraform(struct!.kubernetesApiPort),
    kubernetes_api_server: cdktf.stringToTerraform(struct!.kubernetesApiServer),
    kubernetes_apissl_port: cdktf.numberToTerraform(struct!.kubernetesApisslPort),
    kubernetes_token_file: cdktf.stringToTerraform(struct!.kubernetesTokenFile),
    pod_subnet: cdktf.stringToTerraform(struct!.podSubnet),
    public_fip_pool: cdktf.stringToTerraform(struct!.publicFipPool),
    service_subnet: cdktf.stringToTerraform(struct!.serviceSubnet),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cloud_orchestrator: {
      value: cdktf.stringToHclTerraform(struct!.cloudOrchestrator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainersList",
    },
    host_network_service: {
      value: cdktf.booleanToHclTerraform(struct!.hostNetworkService),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    ip_fabric_forwarding: {
      value: cdktf.booleanToHclTerraform(struct!.ipFabricForwarding),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    ip_fabric_snat: {
      value: cdktf.booleanToHclTerraform(struct!.ipFabricSnat),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    ip_fabric_subnets: {
      value: cdktf.stringToHclTerraform(struct!.ipFabricSubnets),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_api_port: {
      value: cdktf.numberToHclTerraform(struct!.kubernetesApiPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    kubernetes_api_server: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesApiServer),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_apissl_port: {
      value: cdktf.numberToHclTerraform(struct!.kubernetesApisslPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    kubernetes_token_file: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesTokenFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pod_subnet: {
      value: cdktf.stringToHclTerraform(struct!.podSubnet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    public_fip_pool: {
      value: cdktf.stringToHclTerraform(struct!.publicFipPool),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    service_subnet: {
      value: cdktf.stringToHclTerraform(struct!.serviceSubnet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cloudOrchestrator !== undefined) {
      hasAnyValues = true;
      internalValueResult.cloudOrchestrator = this._cloudOrchestrator;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._hostNetworkService !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostNetworkService = this._hostNetworkService;
    }
    if (this._ipFabricForwarding !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipFabricForwarding = this._ipFabricForwarding;
    }
    if (this._ipFabricSnat !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipFabricSnat = this._ipFabricSnat;
    }
    if (this._ipFabricSubnets !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipFabricSubnets = this._ipFabricSubnets;
    }
    if (this._kubernetesApiPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesApiPort = this._kubernetesApiPort;
    }
    if (this._kubernetesApiServer !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesApiServer = this._kubernetesApiServer;
    }
    if (this._kubernetesApisslPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesApisslPort = this._kubernetesApisslPort;
    }
    if (this._kubernetesTokenFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesTokenFile = this._kubernetesTokenFile;
    }
    if (this._podSubnet !== undefined) {
      hasAnyValues = true;
      internalValueResult.podSubnet = this._podSubnet;
    }
    if (this._publicFipPool !== undefined) {
      hasAnyValues = true;
      internalValueResult.publicFipPool = this._publicFipPool;
    }
    if (this._serviceSubnet !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceSubnet = this._serviceSubnet;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cloudOrchestrator = undefined;
      this._containers.internalValue = undefined;
      this._hostNetworkService = undefined;
      this._ipFabricForwarding = undefined;
      this._ipFabricSnat = undefined;
      this._ipFabricSubnets = undefined;
      this._kubernetesApiPort = undefined;
      this._kubernetesApiServer = undefined;
      this._kubernetesApisslPort = undefined;
      this._kubernetesTokenFile = undefined;
      this._podSubnet = undefined;
      this._publicFipPool = undefined;
      this._serviceSubnet = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cloudOrchestrator = value.cloudOrchestrator;
      this._containers.internalValue = value.containers;
      this._hostNetworkService = value.hostNetworkService;
      this._ipFabricForwarding = value.ipFabricForwarding;
      this._ipFabricSnat = value.ipFabricSnat;
      this._ipFabricSubnets = value.ipFabricSubnets;
      this._kubernetesApiPort = value.kubernetesApiPort;
      this._kubernetesApiServer = value.kubernetesApiServer;
      this._kubernetesApisslPort = value.kubernetesApisslPort;
      this._kubernetesTokenFile = value.kubernetesTokenFile;
      this._podSubnet = value.podSubnet;
      this._publicFipPool = value.publicFipPool;
      this._serviceSubnet = value.serviceSubnet;
    }
  }

  // cloud_orchestrator - computed: false, optional: true, required: false
  private _cloudOrchestrator?: string; 
  public get cloudOrchestrator() {
    return this.getStringAttribute('cloud_orchestrator');
  }
  public set cloudOrchestrator(value: string) {
    this._cloudOrchestrator = value;
  }
  public resetCloudOrchestrator() {
    this._cloudOrchestrator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cloudOrchestratorInput() {
    return this._cloudOrchestrator;
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // host_network_service - computed: false, optional: true, required: false
  private _hostNetworkService?: boolean | cdktf.IResolvable; 
  public get hostNetworkService() {
    return this.getBooleanAttribute('host_network_service');
  }
  public set hostNetworkService(value: boolean | cdktf.IResolvable) {
    this._hostNetworkService = value;
  }
  public resetHostNetworkService() {
    this._hostNetworkService = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostNetworkServiceInput() {
    return this._hostNetworkService;
  }

  // ip_fabric_forwarding - computed: false, optional: true, required: false
  private _ipFabricForwarding?: boolean | cdktf.IResolvable; 
  public get ipFabricForwarding() {
    return this.getBooleanAttribute('ip_fabric_forwarding');
  }
  public set ipFabricForwarding(value: boolean | cdktf.IResolvable) {
    this._ipFabricForwarding = value;
  }
  public resetIpFabricForwarding() {
    this._ipFabricForwarding = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipFabricForwardingInput() {
    return this._ipFabricForwarding;
  }

  // ip_fabric_snat - computed: false, optional: true, required: false
  private _ipFabricSnat?: boolean | cdktf.IResolvable; 
  public get ipFabricSnat() {
    return this.getBooleanAttribute('ip_fabric_snat');
  }
  public set ipFabricSnat(value: boolean | cdktf.IResolvable) {
    this._ipFabricSnat = value;
  }
  public resetIpFabricSnat() {
    this._ipFabricSnat = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipFabricSnatInput() {
    return this._ipFabricSnat;
  }

  // ip_fabric_subnets - computed: false, optional: true, required: false
  private _ipFabricSubnets?: string; 
  public get ipFabricSubnets() {
    return this.getStringAttribute('ip_fabric_subnets');
  }
  public set ipFabricSubnets(value: string) {
    this._ipFabricSubnets = value;
  }
  public resetIpFabricSubnets() {
    this._ipFabricSubnets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipFabricSubnetsInput() {
    return this._ipFabricSubnets;
  }

  // kubernetes_api_port - computed: false, optional: true, required: false
  private _kubernetesApiPort?: number; 
  public get kubernetesApiPort() {
    return this.getNumberAttribute('kubernetes_api_port');
  }
  public set kubernetesApiPort(value: number) {
    this._kubernetesApiPort = value;
  }
  public resetKubernetesApiPort() {
    this._kubernetesApiPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesApiPortInput() {
    return this._kubernetesApiPort;
  }

  // kubernetes_api_server - computed: false, optional: true, required: false
  private _kubernetesApiServer?: string; 
  public get kubernetesApiServer() {
    return this.getStringAttribute('kubernetes_api_server');
  }
  public set kubernetesApiServer(value: string) {
    this._kubernetesApiServer = value;
  }
  public resetKubernetesApiServer() {
    this._kubernetesApiServer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesApiServerInput() {
    return this._kubernetesApiServer;
  }

  // kubernetes_apissl_port - computed: false, optional: true, required: false
  private _kubernetesApisslPort?: number; 
  public get kubernetesApisslPort() {
    return this.getNumberAttribute('kubernetes_apissl_port');
  }
  public set kubernetesApisslPort(value: number) {
    this._kubernetesApisslPort = value;
  }
  public resetKubernetesApisslPort() {
    this._kubernetesApisslPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesApisslPortInput() {
    return this._kubernetesApisslPort;
  }

  // kubernetes_token_file - computed: false, optional: true, required: false
  private _kubernetesTokenFile?: string; 
  public get kubernetesTokenFile() {
    return this.getStringAttribute('kubernetes_token_file');
  }
  public set kubernetesTokenFile(value: string) {
    this._kubernetesTokenFile = value;
  }
  public resetKubernetesTokenFile() {
    this._kubernetesTokenFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesTokenFileInput() {
    return this._kubernetesTokenFile;
  }

  // pod_subnet - computed: false, optional: true, required: false
  private _podSubnet?: string; 
  public get podSubnet() {
    return this.getStringAttribute('pod_subnet');
  }
  public set podSubnet(value: string) {
    this._podSubnet = value;
  }
  public resetPodSubnet() {
    this._podSubnet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podSubnetInput() {
    return this._podSubnet;
  }

  // public_fip_pool - computed: false, optional: true, required: false
  private _publicFipPool?: string; 
  public get publicFipPool() {
    return this.getStringAttribute('public_fip_pool');
  }
  public set publicFipPool(value: string) {
    this._publicFipPool = value;
  }
  public resetPublicFipPool() {
    this._publicFipPool = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get publicFipPoolInput() {
    return this._publicFipPool;
  }

  // service_subnet - computed: false, optional: true, required: false
  private _serviceSubnet?: string; 
  public get serviceSubnet() {
    return this.getStringAttribute('service_subnet');
  }
  public set serviceSubnet(value: string) {
    this._serviceSubnet = value;
  }
  public resetServiceSubnet() {
    this._serviceSubnet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceSubnetInput() {
    return this._serviceSubnet;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfiguration;
  /**
  * KubemanagerConfiguration is the configuration for the kubemanager API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanager {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadata;
  /**
  * KubemanagerSpec is the Spec for the kubemanager API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanager | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanager | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanager | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanager | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfiguration {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#analyticsdb_introspect_port DataK8STfTungstenIoManagerV1Alpha1Manifest#analyticsdb_introspect_port}
  */
  readonly analyticsdbIntrospectPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#analyticsdb_port DataK8STfTungstenIoManagerV1Alpha1Manifest#analyticsdb_port}
  */
  readonly analyticsdbPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainers[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    analyticsdb_introspect_port: cdktf.numberToTerraform(struct!.analyticsdbIntrospectPort),
    analyticsdb_port: cdktf.numberToTerraform(struct!.analyticsdbPort),
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    analyticsdb_introspect_port: {
      value: cdktf.numberToHclTerraform(struct!.analyticsdbIntrospectPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    analyticsdb_port: {
      value: cdktf.numberToHclTerraform(struct!.analyticsdbPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainersList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._analyticsdbIntrospectPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.analyticsdbIntrospectPort = this._analyticsdbIntrospectPort;
    }
    if (this._analyticsdbPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.analyticsdbPort = this._analyticsdbPort;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._analyticsdbIntrospectPort = undefined;
      this._analyticsdbPort = undefined;
      this._containers.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._analyticsdbIntrospectPort = value.analyticsdbIntrospectPort;
      this._analyticsdbPort = value.analyticsdbPort;
      this._containers.internalValue = value.containers;
    }
  }

  // analyticsdb_introspect_port - computed: false, optional: true, required: false
  private _analyticsdbIntrospectPort?: number; 
  public get analyticsdbIntrospectPort() {
    return this.getNumberAttribute('analyticsdb_introspect_port');
  }
  public set analyticsdbIntrospectPort(value: number) {
    this._analyticsdbIntrospectPort = value;
  }
  public resetAnalyticsdbIntrospectPort() {
    this._analyticsdbIntrospectPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyticsdbIntrospectPortInput() {
    return this._analyticsdbIntrospectPort;
  }

  // analyticsdb_port - computed: false, optional: true, required: false
  private _analyticsdbPort?: number; 
  public get analyticsdbPort() {
    return this.getNumberAttribute('analyticsdb_port');
  }
  public set analyticsdbPort(value: number) {
    this._analyticsdbPort = value;
  }
  public resetAnalyticsdbPort() {
    this._analyticsdbPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyticsdbPortInput() {
    return this._analyticsdbPort;
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfiguration;
  /**
  * QueryEngineConfiguration is the Spec for the AnalyticsDB query engine.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengine {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadata;
  /**
  * QueryEngineSpec is the Spec for the AnalyticsDB query engine.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengine | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengine | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengine | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengine | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptions {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#backlog DataK8STfTungstenIoManagerV1Alpha1Manifest#backlog}
  */
  readonly backlog?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#exit_on_close DataK8STfTungstenIoManagerV1Alpha1Manifest#exit_on_close}
  */
  readonly exitOnClose?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#linger_on DataK8STfTungstenIoManagerV1Alpha1Manifest#linger_on}
  */
  readonly lingerOn?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#linger_timeout DataK8STfTungstenIoManagerV1Alpha1Manifest#linger_timeout}
  */
  readonly lingerTimeout?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#nodelay DataK8STfTungstenIoManagerV1Alpha1Manifest#nodelay}
  */
  readonly nodelay?: boolean | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptionsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    backlog: cdktf.numberToTerraform(struct!.backlog),
    exit_on_close: cdktf.booleanToTerraform(struct!.exitOnClose),
    linger_on: cdktf.booleanToTerraform(struct!.lingerOn),
    linger_timeout: cdktf.numberToTerraform(struct!.lingerTimeout),
    nodelay: cdktf.booleanToTerraform(struct!.nodelay),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptionsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptions | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    backlog: {
      value: cdktf.numberToHclTerraform(struct!.backlog),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    exit_on_close: {
      value: cdktf.booleanToHclTerraform(struct!.exitOnClose),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    linger_on: {
      value: cdktf.booleanToHclTerraform(struct!.lingerOn),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    linger_timeout: {
      value: cdktf.numberToHclTerraform(struct!.lingerTimeout),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    nodelay: {
      value: cdktf.booleanToHclTerraform(struct!.nodelay),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptions | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._backlog !== undefined) {
      hasAnyValues = true;
      internalValueResult.backlog = this._backlog;
    }
    if (this._exitOnClose !== undefined) {
      hasAnyValues = true;
      internalValueResult.exitOnClose = this._exitOnClose;
    }
    if (this._lingerOn !== undefined) {
      hasAnyValues = true;
      internalValueResult.lingerOn = this._lingerOn;
    }
    if (this._lingerTimeout !== undefined) {
      hasAnyValues = true;
      internalValueResult.lingerTimeout = this._lingerTimeout;
    }
    if (this._nodelay !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodelay = this._nodelay;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptions | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._backlog = undefined;
      this._exitOnClose = undefined;
      this._lingerOn = undefined;
      this._lingerTimeout = undefined;
      this._nodelay = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._backlog = value.backlog;
      this._exitOnClose = value.exitOnClose;
      this._lingerOn = value.lingerOn;
      this._lingerTimeout = value.lingerTimeout;
      this._nodelay = value.nodelay;
    }
  }

  // backlog - computed: false, optional: true, required: false
  private _backlog?: number; 
  public get backlog() {
    return this.getNumberAttribute('backlog');
  }
  public set backlog(value: number) {
    this._backlog = value;
  }
  public resetBacklog() {
    this._backlog = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get backlogInput() {
    return this._backlog;
  }

  // exit_on_close - computed: false, optional: true, required: false
  private _exitOnClose?: boolean | cdktf.IResolvable; 
  public get exitOnClose() {
    return this.getBooleanAttribute('exit_on_close');
  }
  public set exitOnClose(value: boolean | cdktf.IResolvable) {
    this._exitOnClose = value;
  }
  public resetExitOnClose() {
    this._exitOnClose = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exitOnCloseInput() {
    return this._exitOnClose;
  }

  // linger_on - computed: false, optional: true, required: false
  private _lingerOn?: boolean | cdktf.IResolvable; 
  public get lingerOn() {
    return this.getBooleanAttribute('linger_on');
  }
  public set lingerOn(value: boolean | cdktf.IResolvable) {
    this._lingerOn = value;
  }
  public resetLingerOn() {
    this._lingerOn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lingerOnInput() {
    return this._lingerOn;
  }

  // linger_timeout - computed: false, optional: true, required: false
  private _lingerTimeout?: number; 
  public get lingerTimeout() {
    return this.getNumberAttribute('linger_timeout');
  }
  public set lingerTimeout(value: number) {
    this._lingerTimeout = value;
  }
  public resetLingerTimeout() {
    this._lingerTimeout = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lingerTimeoutInput() {
    return this._lingerTimeout;
  }

  // nodelay - computed: false, optional: true, required: false
  private _nodelay?: boolean | cdktf.IResolvable; 
  public get nodelay() {
    return this.getBooleanAttribute('nodelay');
  }
  public set nodelay(value: boolean | cdktf.IResolvable) {
    this._nodelay = value;
  }
  public resetNodelay() {
    this._nodelay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodelayInput() {
    return this._nodelay;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfiguration {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#cluster_partition_handling DataK8STfTungstenIoManagerV1Alpha1Manifest#cluster_partition_handling}
  */
  readonly clusterPartitionHandling?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#erl_epmd_port DataK8STfTungstenIoManagerV1Alpha1Manifest#erl_epmd_port}
  */
  readonly erlEpmdPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#erlang_cookie DataK8STfTungstenIoManagerV1Alpha1Manifest#erlang_cookie}
  */
  readonly erlangCookie?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#mirrored_queue_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#mirrored_queue_mode}
  */
  readonly mirroredQueueMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#password DataK8STfTungstenIoManagerV1Alpha1Manifest#password}
  */
  readonly password?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#secret DataK8STfTungstenIoManagerV1Alpha1Manifest#secret}
  */
  readonly secret?: string;
  /**
  * TCPListenOptionsConfig is configuration for RabbitMQ TCP listen
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tcp_listen_options DataK8STfTungstenIoManagerV1Alpha1Manifest#tcp_listen_options}
  */
  readonly tcpListenOptions?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptions;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user DataK8STfTungstenIoManagerV1Alpha1Manifest#user}
  */
  readonly user?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#vhost DataK8STfTungstenIoManagerV1Alpha1Manifest#vhost}
  */
  readonly vhost?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster_partition_handling: cdktf.stringToTerraform(struct!.clusterPartitionHandling),
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
    erl_epmd_port: cdktf.numberToTerraform(struct!.erlEpmdPort),
    erlang_cookie: cdktf.stringToTerraform(struct!.erlangCookie),
    mirrored_queue_mode: cdktf.stringToTerraform(struct!.mirroredQueueMode),
    password: cdktf.stringToTerraform(struct!.password),
    port: cdktf.numberToTerraform(struct!.port),
    secret: cdktf.stringToTerraform(struct!.secret),
    tcp_listen_options: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptionsToTerraform(struct!.tcpListenOptions),
    user: cdktf.stringToTerraform(struct!.user),
    vhost: cdktf.stringToTerraform(struct!.vhost),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster_partition_handling: {
      value: cdktf.stringToHclTerraform(struct!.clusterPartitionHandling),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainersList",
    },
    erl_epmd_port: {
      value: cdktf.numberToHclTerraform(struct!.erlEpmdPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    erlang_cookie: {
      value: cdktf.stringToHclTerraform(struct!.erlangCookie),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mirrored_queue_mode: {
      value: cdktf.stringToHclTerraform(struct!.mirroredQueueMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    secret: {
      value: cdktf.stringToHclTerraform(struct!.secret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tcp_listen_options: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptionsToHclTerraform(struct!.tcpListenOptions),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptions",
    },
    user: {
      value: cdktf.stringToHclTerraform(struct!.user),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vhost: {
      value: cdktf.stringToHclTerraform(struct!.vhost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clusterPartitionHandling !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterPartitionHandling = this._clusterPartitionHandling;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._erlEpmdPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.erlEpmdPort = this._erlEpmdPort;
    }
    if (this._erlangCookie !== undefined) {
      hasAnyValues = true;
      internalValueResult.erlangCookie = this._erlangCookie;
    }
    if (this._mirroredQueueMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mirroredQueueMode = this._mirroredQueueMode;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._secret !== undefined) {
      hasAnyValues = true;
      internalValueResult.secret = this._secret;
    }
    if (this._tcpListenOptions?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tcpListenOptions = this._tcpListenOptions?.internalValue;
    }
    if (this._user !== undefined) {
      hasAnyValues = true;
      internalValueResult.user = this._user;
    }
    if (this._vhost !== undefined) {
      hasAnyValues = true;
      internalValueResult.vhost = this._vhost;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clusterPartitionHandling = undefined;
      this._containers.internalValue = undefined;
      this._erlEpmdPort = undefined;
      this._erlangCookie = undefined;
      this._mirroredQueueMode = undefined;
      this._password = undefined;
      this._port = undefined;
      this._secret = undefined;
      this._tcpListenOptions.internalValue = undefined;
      this._user = undefined;
      this._vhost = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clusterPartitionHandling = value.clusterPartitionHandling;
      this._containers.internalValue = value.containers;
      this._erlEpmdPort = value.erlEpmdPort;
      this._erlangCookie = value.erlangCookie;
      this._mirroredQueueMode = value.mirroredQueueMode;
      this._password = value.password;
      this._port = value.port;
      this._secret = value.secret;
      this._tcpListenOptions.internalValue = value.tcpListenOptions;
      this._user = value.user;
      this._vhost = value.vhost;
    }
  }

  // cluster_partition_handling - computed: false, optional: true, required: false
  private _clusterPartitionHandling?: string; 
  public get clusterPartitionHandling() {
    return this.getStringAttribute('cluster_partition_handling');
  }
  public set clusterPartitionHandling(value: string) {
    this._clusterPartitionHandling = value;
  }
  public resetClusterPartitionHandling() {
    this._clusterPartitionHandling = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterPartitionHandlingInput() {
    return this._clusterPartitionHandling;
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // erl_epmd_port - computed: false, optional: true, required: false
  private _erlEpmdPort?: number; 
  public get erlEpmdPort() {
    return this.getNumberAttribute('erl_epmd_port');
  }
  public set erlEpmdPort(value: number) {
    this._erlEpmdPort = value;
  }
  public resetErlEpmdPort() {
    this._erlEpmdPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get erlEpmdPortInput() {
    return this._erlEpmdPort;
  }

  // erlang_cookie - computed: false, optional: true, required: false
  private _erlangCookie?: string; 
  public get erlangCookie() {
    return this.getStringAttribute('erlang_cookie');
  }
  public set erlangCookie(value: string) {
    this._erlangCookie = value;
  }
  public resetErlangCookie() {
    this._erlangCookie = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get erlangCookieInput() {
    return this._erlangCookie;
  }

  // mirrored_queue_mode - computed: false, optional: true, required: false
  private _mirroredQueueMode?: string; 
  public get mirroredQueueMode() {
    return this.getStringAttribute('mirrored_queue_mode');
  }
  public set mirroredQueueMode(value: string) {
    this._mirroredQueueMode = value;
  }
  public resetMirroredQueueMode() {
    this._mirroredQueueMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mirroredQueueModeInput() {
    return this._mirroredQueueMode;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // secret - computed: false, optional: true, required: false
  private _secret?: string; 
  public get secret() {
    return this.getStringAttribute('secret');
  }
  public set secret(value: string) {
    this._secret = value;
  }
  public resetSecret() {
    this._secret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretInput() {
    return this._secret;
  }

  // tcp_listen_options - computed: false, optional: true, required: false
  private _tcpListenOptions = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptionsOutputReference(this, "tcp_listen_options");
  public get tcpListenOptions() {
    return this._tcpListenOptions;
  }
  public putTcpListenOptions(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationTcpListenOptions) {
    this._tcpListenOptions.internalValue = value;
  }
  public resetTcpListenOptions() {
    this._tcpListenOptions.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tcpListenOptionsInput() {
    return this._tcpListenOptions.internalValue;
  }

  // user - computed: false, optional: true, required: false
  private _user?: string; 
  public get user() {
    return this.getStringAttribute('user');
  }
  public set user(value: string) {
    this._user = value;
  }
  public resetUser() {
    this._user = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userInput() {
    return this._user;
  }

  // vhost - computed: false, optional: true, required: false
  private _vhost?: string; 
  public get vhost() {
    return this.getStringAttribute('vhost');
  }
  public set vhost(value: string) {
    this._vhost = value;
  }
  public resetVhost() {
    this._vhost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vhostInput() {
    return this._vhost;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfiguration;
  /**
  * RabbitmqConfiguration is the Spec for the cassandras API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmq {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadata;
  /**
  * RabbitmqSpec is the Spec for the cassandras API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmq | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmq | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmq | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmq | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfiguration {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#cluster_name DataK8STfTungstenIoManagerV1Alpha1Manifest#cluster_name}
  */
  readonly clusterName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#redis_port DataK8STfTungstenIoManagerV1Alpha1Manifest#redis_port}
  */
  readonly redisPort?: number;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cluster_name: cdktf.stringToTerraform(struct!.clusterName),
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
    redis_port: cdktf.numberToTerraform(struct!.redisPort),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cluster_name: {
      value: cdktf.stringToHclTerraform(struct!.clusterName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainersList",
    },
    redis_port: {
      value: cdktf.numberToHclTerraform(struct!.redisPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clusterName !== undefined) {
      hasAnyValues = true;
      internalValueResult.clusterName = this._clusterName;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._redisPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.redisPort = this._redisPort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clusterName = undefined;
      this._containers.internalValue = undefined;
      this._redisPort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clusterName = value.clusterName;
      this._containers.internalValue = value.containers;
      this._redisPort = value.redisPort;
    }
  }

  // cluster_name - computed: false, optional: true, required: false
  private _clusterName?: string; 
  public get clusterName() {
    return this.getStringAttribute('cluster_name');
  }
  public set clusterName(value: string) {
    this._clusterName = value;
  }
  public resetClusterName() {
    this._clusterName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clusterNameInput() {
    return this._clusterName;
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // redis_port - computed: false, optional: true, required: false
  private _redisPort?: number; 
  public get redisPort() {
    return this.getNumberAttribute('redis_port');
  }
  public set redisPort(value: number) {
    this._redisPort = value;
  }
  public resetRedisPort() {
    this._redisPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redisPortInput() {
    return this._redisPort;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfiguration;
  /**
  * RedisConfiguration is the Spec for the redis API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedis {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadata;
  /**
  * RedisSpec is the Spec for the redis API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedis | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedis | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedis | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedis | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedis[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfiguration {
  /**
  * vRouter
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#agent_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#agent_mode}
  */
  readonly agentMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#barbican_password DataK8STfTungstenIoManagerV1Alpha1Manifest#barbican_password}
  */
  readonly barbicanPassword?: string;
  /**
  * Openstack
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#barbican_tenant_name DataK8STfTungstenIoManagerV1Alpha1Manifest#barbican_tenant_name}
  */
  readonly barbicanTenantName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#barbican_user DataK8STfTungstenIoManagerV1Alpha1Manifest#barbican_user}
  */
  readonly barbicanUser?: string;
  /**
  * New params for vrouter configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#cloud_orchestrator DataK8STfTungstenIoManagerV1Alpha1Manifest#cloud_orchestrator}
  */
  readonly cloudOrchestrator?: string;
  /**
  * CniMTU - mtu for virtual tap devices
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#cni_mtu DataK8STfTungstenIoManagerV1Alpha1Manifest#cni_mtu}
  */
  readonly cniMtu?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#collector_port DataK8STfTungstenIoManagerV1Alpha1Manifest#collector_port}
  */
  readonly collectorPort?: string;
  /**
  * Config
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#config_api_port DataK8STfTungstenIoManagerV1Alpha1Manifest#config_api_port}
  */
  readonly configApiPort?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#config_api_server_ca_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#config_api_server_ca_certfile}
  */
  readonly configApiServerCaCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#config_api_ssl_enable DataK8STfTungstenIoManagerV1Alpha1Manifest#config_api_ssl_enable}
  */
  readonly configApiSslEnable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#control_instance DataK8STfTungstenIoManagerV1Alpha1Manifest#control_instance}
  */
  readonly controlInstance?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#data_subnet DataK8STfTungstenIoManagerV1Alpha1Manifest#data_subnet}
  */
  readonly dataSubnet?: string;
  /**
  * DNS
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#dns_server_port DataK8STfTungstenIoManagerV1Alpha1Manifest#dns_server_port}
  */
  readonly dnsServerPort?: string;
  /**
  * Host
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#dpdk_uio_driver DataK8STfTungstenIoManagerV1Alpha1Manifest#dpdk_uio_driver}
  */
  readonly dpdkUioDriver?: string;
  /**
  * What is it doing? VrouterEncryption bool 'json:'vrouterEncryption,omitempty'' What is it doing? What is it doing?
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#env_variables_config DataK8STfTungstenIoManagerV1Alpha1Manifest#env_variables_config}
  */
  readonly envVariablesConfig?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#fabric_snt_hash_table_size DataK8STfTungstenIoManagerV1Alpha1Manifest#fabric_snt_hash_table_size}
  */
  readonly fabricSntHashTableSize?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#huge_pages1_g DataK8STfTungstenIoManagerV1Alpha1Manifest#huge_pages1_g}
  */
  readonly hugePages1G?: number;
  /**
  * HugePages
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#huge_pages2_m DataK8STfTungstenIoManagerV1Alpha1Manifest#huge_pages2_m}
  */
  readonly hugePages2M?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#hypervisor_type DataK8STfTungstenIoManagerV1Alpha1Manifest#hypervisor_type}
  */
  readonly hypervisorType?: string;
  /**
  * Introspect
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#introspect_ssl_enable DataK8STfTungstenIoManagerV1Alpha1Manifest#introspect_ssl_enable}
  */
  readonly introspectSslEnable?: boolean | cdktf.IResolvable;
  /**
  * Kubernetes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#k8s_token DataK8STfTungstenIoManagerV1Alpha1Manifest#k8s_token}
  */
  readonly k8SToken?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#k8s_token_file DataK8STfTungstenIoManagerV1Alpha1Manifest#k8s_token_file}
  */
  readonly k8STokenFile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_admin_password}
  */
  readonly keystoneAuthAdminPassword?: string;
  /**
  * Keystone authentication
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_admin_port}
  */
  readonly keystoneAuthAdminPort?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_ca_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_ca_certfile}
  */
  readonly keystoneAuthCaCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_certfile}
  */
  readonly keystoneAuthCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_host DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_host}
  */
  readonly keystoneAuthHost?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_insecure}
  */
  readonly keystoneAuthInsecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_keyfile DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_keyfile}
  */
  readonly keystoneAuthKeyfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_project_domain_name}
  */
  readonly keystoneAuthProjectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_proto DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_proto}
  */
  readonly keystoneAuthProto?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_region_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_region_name}
  */
  readonly keystoneAuthRegionName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_url_tokens DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_url_tokens}
  */
  readonly keystoneAuthUrlTokens?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_url_version DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_url_version}
  */
  readonly keystoneAuthUrlVersion?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_user_domain_name}
  */
  readonly keystoneAuthUserDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#kubernetes_api_port DataK8STfTungstenIoManagerV1Alpha1Manifest#kubernetes_api_port}
  */
  readonly kubernetesApiPort?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#kubernetes_api_secure_port DataK8STfTungstenIoManagerV1Alpha1Manifest#kubernetes_api_secure_port}
  */
  readonly kubernetesApiSecurePort?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#kubernetes_pod_subnet DataK8STfTungstenIoManagerV1Alpha1Manifest#kubernetes_pod_subnet}
  */
  readonly kubernetesPodSubnet?: string;
  /**
  * L3MH
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#l3mh_cidr DataK8STfTungstenIoManagerV1Alpha1Manifest#l3mh_cidr}
  */
  readonly l3MhCidr?: string;
  /**
  * Logging
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_dir DataK8STfTungstenIoManagerV1Alpha1Manifest#log_dir}
  */
  readonly logDir?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_local DataK8STfTungstenIoManagerV1Alpha1Manifest#log_local}
  */
  readonly logLocal?: number;
  /**
  * Metadata
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata_proxy_secret DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata_proxy_secret}
  */
  readonly metadataProxySecret?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata_ssl_ca_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata_ssl_ca_certfile}
  */
  readonly metadataSslCaCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata_ssl_cert_type DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata_ssl_cert_type}
  */
  readonly metadataSslCertType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata_ssl_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata_ssl_certfile}
  */
  readonly metadataSslCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata_ssl_enable DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata_ssl_enable}
  */
  readonly metadataSslEnable?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata_ssl_keyfile DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata_ssl_keyfile}
  */
  readonly metadataSslKeyfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#physical_interface DataK8STfTungstenIoManagerV1Alpha1Manifest#physical_interface}
  */
  readonly physicalInterface?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#priority_bandwidth DataK8STfTungstenIoManagerV1Alpha1Manifest#priority_bandwidth}
  */
  readonly priorityBandwidth?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#priority_id DataK8STfTungstenIoManagerV1Alpha1Manifest#priority_id}
  */
  readonly priorityId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#priority_scheduling DataK8STfTungstenIoManagerV1Alpha1Manifest#priority_scheduling}
  */
  readonly priorityScheduling?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#priority_tagging DataK8STfTungstenIoManagerV1Alpha1Manifest#priority_tagging}
  */
  readonly priorityTagging?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#qos_def_hw_queue DataK8STfTungstenIoManagerV1Alpha1Manifest#qos_def_hw_queue}
  */
  readonly qosDefHwQueue?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#qos_logical_queues DataK8STfTungstenIoManagerV1Alpha1Manifest#qos_logical_queues}
  */
  readonly qosLogicalQueues?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#qos_queue_id DataK8STfTungstenIoManagerV1Alpha1Manifest#qos_queue_id}
  */
  readonly qosQueueId?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#required_kernel_vrouter_encryption DataK8STfTungstenIoManagerV1Alpha1Manifest#required_kernel_vrouter_encryption}
  */
  readonly requiredKernelVrouterEncryption?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#sample_destination DataK8STfTungstenIoManagerV1Alpha1Manifest#sample_destination}
  */
  readonly sampleDestination?: string;
  /**
  * Sandesh
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#sandesh_ca_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#sandesh_ca_certfile}
  */
  readonly sandeshCaCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#sandesh_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#sandesh_certfile}
  */
  readonly sandeshCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#sandesh_keyfile DataK8STfTungstenIoManagerV1Alpha1Manifest#sandesh_keyfile}
  */
  readonly sandeshKeyfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#sandesh_server_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#sandesh_server_certfile}
  */
  readonly sandeshServerCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#sandesh_server_keyfile DataK8STfTungstenIoManagerV1Alpha1Manifest#sandesh_server_keyfile}
  */
  readonly sandeshServerKeyfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#sandesh_ssl_enable DataK8STfTungstenIoManagerV1Alpha1Manifest#sandesh_ssl_enable}
  */
  readonly sandeshSslEnable?: boolean | cdktf.IResolvable;
  /**
  * Server SSL
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#server_ca_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#server_ca_certfile}
  */
  readonly serverCaCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#server_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#server_certfile}
  */
  readonly serverCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#server_keyfile DataK8STfTungstenIoManagerV1Alpha1Manifest#server_keyfile}
  */
  readonly serverKeyfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#slo_destination DataK8STfTungstenIoManagerV1Alpha1Manifest#slo_destination}
  */
  readonly sloDestination?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#sriov_physical_interface DataK8STfTungstenIoManagerV1Alpha1Manifest#sriov_physical_interface}
  */
  readonly sriovPhysicalInterface?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#sriov_physical_network DataK8STfTungstenIoManagerV1Alpha1Manifest#sriov_physical_network}
  */
  readonly sriovPhysicalNetwork?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#sriov_vf DataK8STfTungstenIoManagerV1Alpha1Manifest#sriov_vf}
  */
  readonly sriovVf?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#ssl_enable DataK8STfTungstenIoManagerV1Alpha1Manifest#ssl_enable}
  */
  readonly sslEnable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#ssl_insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#ssl_insecure}
  */
  readonly sslInsecure?: boolean | cdktf.IResolvable;
  /**
  * Collector
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#stats_collector_destination_path DataK8STfTungstenIoManagerV1Alpha1Manifest#stats_collector_destination_path}
  */
  readonly statsCollectorDestinationPath?: string;
  /**
  * XMPP
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#subcluster DataK8STfTungstenIoManagerV1Alpha1Manifest#subcluster}
  */
  readonly subcluster?: string;
  /**
  * TSN
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tsn_agent_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#tsn_agent_mode}
  */
  readonly tsnAgentMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#vrouter_crypt_interface DataK8STfTungstenIoManagerV1Alpha1Manifest#vrouter_crypt_interface}
  */
  readonly vrouterCryptInterface?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#vrouter_decrypt_interface DataK8STfTungstenIoManagerV1Alpha1Manifest#vrouter_decrypt_interface}
  */
  readonly vrouterDecryptInterface?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#vrouter_decrypt_key DataK8STfTungstenIoManagerV1Alpha1Manifest#vrouter_decrypt_key}
  */
  readonly vrouterDecryptKey?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#vrouter_encryption DataK8STfTungstenIoManagerV1Alpha1Manifest#vrouter_encryption}
  */
  readonly vrouterEncryption?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#vrouter_gateway DataK8STfTungstenIoManagerV1Alpha1Manifest#vrouter_gateway}
  */
  readonly vrouterGateway?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#xmmp_ssl_enable DataK8STfTungstenIoManagerV1Alpha1Manifest#xmmp_ssl_enable}
  */
  readonly xmmpSslEnable?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#xmpp_server_ca_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#xmpp_server_ca_certfile}
  */
  readonly xmppServerCaCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#xmpp_server_certfile DataK8STfTungstenIoManagerV1Alpha1Manifest#xmpp_server_certfile}
  */
  readonly xmppServerCertfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#xmpp_server_keyfile DataK8STfTungstenIoManagerV1Alpha1Manifest#xmpp_server_keyfile}
  */
  readonly xmppServerKeyfile?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#xmpp_server_port DataK8STfTungstenIoManagerV1Alpha1Manifest#xmpp_server_port}
  */
  readonly xmppServerPort?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    agent_mode: cdktf.stringToTerraform(struct!.agentMode),
    barbican_password: cdktf.stringToTerraform(struct!.barbicanPassword),
    barbican_tenant_name: cdktf.stringToTerraform(struct!.barbicanTenantName),
    barbican_user: cdktf.stringToTerraform(struct!.barbicanUser),
    cloud_orchestrator: cdktf.stringToTerraform(struct!.cloudOrchestrator),
    cni_mtu: cdktf.numberToTerraform(struct!.cniMtu),
    collector_port: cdktf.stringToTerraform(struct!.collectorPort),
    config_api_port: cdktf.stringToTerraform(struct!.configApiPort),
    config_api_server_ca_certfile: cdktf.stringToTerraform(struct!.configApiServerCaCertfile),
    config_api_ssl_enable: cdktf.booleanToTerraform(struct!.configApiSslEnable),
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
    control_instance: cdktf.stringToTerraform(struct!.controlInstance),
    data_subnet: cdktf.stringToTerraform(struct!.dataSubnet),
    dns_server_port: cdktf.stringToTerraform(struct!.dnsServerPort),
    dpdk_uio_driver: cdktf.stringToTerraform(struct!.dpdkUioDriver),
    env_variables_config: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.envVariablesConfig),
    fabric_snt_hash_table_size: cdktf.stringToTerraform(struct!.fabricSntHashTableSize),
    huge_pages1_g: cdktf.numberToTerraform(struct!.hugePages1G),
    huge_pages2_m: cdktf.numberToTerraform(struct!.hugePages2M),
    hypervisor_type: cdktf.stringToTerraform(struct!.hypervisorType),
    introspect_ssl_enable: cdktf.booleanToTerraform(struct!.introspectSslEnable),
    k8s_token: cdktf.stringToTerraform(struct!.k8SToken),
    k8s_token_file: cdktf.stringToTerraform(struct!.k8STokenFile),
    keystone_auth_admin_password: cdktf.stringToTerraform(struct!.keystoneAuthAdminPassword),
    keystone_auth_admin_port: cdktf.stringToTerraform(struct!.keystoneAuthAdminPort),
    keystone_auth_ca_certfile: cdktf.stringToTerraform(struct!.keystoneAuthCaCertfile),
    keystone_auth_certfile: cdktf.stringToTerraform(struct!.keystoneAuthCertfile),
    keystone_auth_host: cdktf.stringToTerraform(struct!.keystoneAuthHost),
    keystone_auth_insecure: cdktf.booleanToTerraform(struct!.keystoneAuthInsecure),
    keystone_auth_keyfile: cdktf.stringToTerraform(struct!.keystoneAuthKeyfile),
    keystone_auth_project_domain_name: cdktf.stringToTerraform(struct!.keystoneAuthProjectDomainName),
    keystone_auth_proto: cdktf.stringToTerraform(struct!.keystoneAuthProto),
    keystone_auth_region_name: cdktf.stringToTerraform(struct!.keystoneAuthRegionName),
    keystone_auth_url_tokens: cdktf.stringToTerraform(struct!.keystoneAuthUrlTokens),
    keystone_auth_url_version: cdktf.stringToTerraform(struct!.keystoneAuthUrlVersion),
    keystone_auth_user_domain_name: cdktf.stringToTerraform(struct!.keystoneAuthUserDomainName),
    kubernetes_api_port: cdktf.stringToTerraform(struct!.kubernetesApiPort),
    kubernetes_api_secure_port: cdktf.stringToTerraform(struct!.kubernetesApiSecurePort),
    kubernetes_pod_subnet: cdktf.stringToTerraform(struct!.kubernetesPodSubnet),
    l3mh_cidr: cdktf.stringToTerraform(struct!.l3MhCidr),
    log_dir: cdktf.stringToTerraform(struct!.logDir),
    log_local: cdktf.numberToTerraform(struct!.logLocal),
    metadata_proxy_secret: cdktf.stringToTerraform(struct!.metadataProxySecret),
    metadata_ssl_ca_certfile: cdktf.stringToTerraform(struct!.metadataSslCaCertfile),
    metadata_ssl_cert_type: cdktf.stringToTerraform(struct!.metadataSslCertType),
    metadata_ssl_certfile: cdktf.stringToTerraform(struct!.metadataSslCertfile),
    metadata_ssl_enable: cdktf.stringToTerraform(struct!.metadataSslEnable),
    metadata_ssl_keyfile: cdktf.stringToTerraform(struct!.metadataSslKeyfile),
    physical_interface: cdktf.stringToTerraform(struct!.physicalInterface),
    priority_bandwidth: cdktf.stringToTerraform(struct!.priorityBandwidth),
    priority_id: cdktf.stringToTerraform(struct!.priorityId),
    priority_scheduling: cdktf.stringToTerraform(struct!.priorityScheduling),
    priority_tagging: cdktf.booleanToTerraform(struct!.priorityTagging),
    qos_def_hw_queue: cdktf.booleanToTerraform(struct!.qosDefHwQueue),
    qos_logical_queues: cdktf.stringToTerraform(struct!.qosLogicalQueues),
    qos_queue_id: cdktf.stringToTerraform(struct!.qosQueueId),
    required_kernel_vrouter_encryption: cdktf.stringToTerraform(struct!.requiredKernelVrouterEncryption),
    sample_destination: cdktf.stringToTerraform(struct!.sampleDestination),
    sandesh_ca_certfile: cdktf.stringToTerraform(struct!.sandeshCaCertfile),
    sandesh_certfile: cdktf.stringToTerraform(struct!.sandeshCertfile),
    sandesh_keyfile: cdktf.stringToTerraform(struct!.sandeshKeyfile),
    sandesh_server_certfile: cdktf.stringToTerraform(struct!.sandeshServerCertfile),
    sandesh_server_keyfile: cdktf.stringToTerraform(struct!.sandeshServerKeyfile),
    sandesh_ssl_enable: cdktf.booleanToTerraform(struct!.sandeshSslEnable),
    server_ca_certfile: cdktf.stringToTerraform(struct!.serverCaCertfile),
    server_certfile: cdktf.stringToTerraform(struct!.serverCertfile),
    server_keyfile: cdktf.stringToTerraform(struct!.serverKeyfile),
    slo_destination: cdktf.stringToTerraform(struct!.sloDestination),
    sriov_physical_interface: cdktf.stringToTerraform(struct!.sriovPhysicalInterface),
    sriov_physical_network: cdktf.stringToTerraform(struct!.sriovPhysicalNetwork),
    sriov_vf: cdktf.stringToTerraform(struct!.sriovVf),
    ssl_enable: cdktf.booleanToTerraform(struct!.sslEnable),
    ssl_insecure: cdktf.booleanToTerraform(struct!.sslInsecure),
    stats_collector_destination_path: cdktf.stringToTerraform(struct!.statsCollectorDestinationPath),
    subcluster: cdktf.stringToTerraform(struct!.subcluster),
    tsn_agent_mode: cdktf.stringToTerraform(struct!.tsnAgentMode),
    vrouter_crypt_interface: cdktf.stringToTerraform(struct!.vrouterCryptInterface),
    vrouter_decrypt_interface: cdktf.stringToTerraform(struct!.vrouterDecryptInterface),
    vrouter_decrypt_key: cdktf.stringToTerraform(struct!.vrouterDecryptKey),
    vrouter_encryption: cdktf.booleanToTerraform(struct!.vrouterEncryption),
    vrouter_gateway: cdktf.stringToTerraform(struct!.vrouterGateway),
    xmmp_ssl_enable: cdktf.booleanToTerraform(struct!.xmmpSslEnable),
    xmpp_server_ca_certfile: cdktf.stringToTerraform(struct!.xmppServerCaCertfile),
    xmpp_server_certfile: cdktf.stringToTerraform(struct!.xmppServerCertfile),
    xmpp_server_keyfile: cdktf.stringToTerraform(struct!.xmppServerKeyfile),
    xmpp_server_port: cdktf.stringToTerraform(struct!.xmppServerPort),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    agent_mode: {
      value: cdktf.stringToHclTerraform(struct!.agentMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    barbican_password: {
      value: cdktf.stringToHclTerraform(struct!.barbicanPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    barbican_tenant_name: {
      value: cdktf.stringToHclTerraform(struct!.barbicanTenantName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    barbican_user: {
      value: cdktf.stringToHclTerraform(struct!.barbicanUser),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    cloud_orchestrator: {
      value: cdktf.stringToHclTerraform(struct!.cloudOrchestrator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    cni_mtu: {
      value: cdktf.numberToHclTerraform(struct!.cniMtu),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    collector_port: {
      value: cdktf.stringToHclTerraform(struct!.collectorPort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config_api_port: {
      value: cdktf.stringToHclTerraform(struct!.configApiPort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config_api_server_ca_certfile: {
      value: cdktf.stringToHclTerraform(struct!.configApiServerCaCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    config_api_ssl_enable: {
      value: cdktf.booleanToHclTerraform(struct!.configApiSslEnable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainersList",
    },
    control_instance: {
      value: cdktf.stringToHclTerraform(struct!.controlInstance),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    data_subnet: {
      value: cdktf.stringToHclTerraform(struct!.dataSubnet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dns_server_port: {
      value: cdktf.stringToHclTerraform(struct!.dnsServerPort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dpdk_uio_driver: {
      value: cdktf.stringToHclTerraform(struct!.dpdkUioDriver),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    env_variables_config: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.envVariablesConfig),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    fabric_snt_hash_table_size: {
      value: cdktf.stringToHclTerraform(struct!.fabricSntHashTableSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    huge_pages1_g: {
      value: cdktf.numberToHclTerraform(struct!.hugePages1G),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    huge_pages2_m: {
      value: cdktf.numberToHclTerraform(struct!.hugePages2M),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    hypervisor_type: {
      value: cdktf.stringToHclTerraform(struct!.hypervisorType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    introspect_ssl_enable: {
      value: cdktf.booleanToHclTerraform(struct!.introspectSslEnable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    k8s_token: {
      value: cdktf.stringToHclTerraform(struct!.k8SToken),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    k8s_token_file: {
      value: cdktf.stringToHclTerraform(struct!.k8STokenFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_admin_password: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthAdminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_admin_port: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthAdminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_ca_certfile: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthCaCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_certfile: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_host: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthHost),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_insecure: {
      value: cdktf.booleanToHclTerraform(struct!.keystoneAuthInsecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    keystone_auth_keyfile: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthKeyfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthProjectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_proto: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthProto),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_region_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthRegionName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_url_tokens: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthUrlTokens),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_url_version: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthUrlVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneAuthUserDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_api_port: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesApiPort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_api_secure_port: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesApiSecurePort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    kubernetes_pod_subnet: {
      value: cdktf.stringToHclTerraform(struct!.kubernetesPodSubnet),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    l3mh_cidr: {
      value: cdktf.stringToHclTerraform(struct!.l3MhCidr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    log_dir: {
      value: cdktf.stringToHclTerraform(struct!.logDir),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    log_local: {
      value: cdktf.numberToHclTerraform(struct!.logLocal),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    metadata_proxy_secret: {
      value: cdktf.stringToHclTerraform(struct!.metadataProxySecret),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata_ssl_ca_certfile: {
      value: cdktf.stringToHclTerraform(struct!.metadataSslCaCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata_ssl_cert_type: {
      value: cdktf.stringToHclTerraform(struct!.metadataSslCertType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata_ssl_certfile: {
      value: cdktf.stringToHclTerraform(struct!.metadataSslCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata_ssl_enable: {
      value: cdktf.stringToHclTerraform(struct!.metadataSslEnable),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    metadata_ssl_keyfile: {
      value: cdktf.stringToHclTerraform(struct!.metadataSslKeyfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    physical_interface: {
      value: cdktf.stringToHclTerraform(struct!.physicalInterface),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    priority_bandwidth: {
      value: cdktf.stringToHclTerraform(struct!.priorityBandwidth),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    priority_id: {
      value: cdktf.stringToHclTerraform(struct!.priorityId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    priority_scheduling: {
      value: cdktf.stringToHclTerraform(struct!.priorityScheduling),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    priority_tagging: {
      value: cdktf.booleanToHclTerraform(struct!.priorityTagging),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    qos_def_hw_queue: {
      value: cdktf.booleanToHclTerraform(struct!.qosDefHwQueue),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    qos_logical_queues: {
      value: cdktf.stringToHclTerraform(struct!.qosLogicalQueues),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    qos_queue_id: {
      value: cdktf.stringToHclTerraform(struct!.qosQueueId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    required_kernel_vrouter_encryption: {
      value: cdktf.stringToHclTerraform(struct!.requiredKernelVrouterEncryption),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sample_destination: {
      value: cdktf.stringToHclTerraform(struct!.sampleDestination),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sandesh_ca_certfile: {
      value: cdktf.stringToHclTerraform(struct!.sandeshCaCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sandesh_certfile: {
      value: cdktf.stringToHclTerraform(struct!.sandeshCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sandesh_keyfile: {
      value: cdktf.stringToHclTerraform(struct!.sandeshKeyfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sandesh_server_certfile: {
      value: cdktf.stringToHclTerraform(struct!.sandeshServerCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sandesh_server_keyfile: {
      value: cdktf.stringToHclTerraform(struct!.sandeshServerKeyfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sandesh_ssl_enable: {
      value: cdktf.booleanToHclTerraform(struct!.sandeshSslEnable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    server_ca_certfile: {
      value: cdktf.stringToHclTerraform(struct!.serverCaCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    server_certfile: {
      value: cdktf.stringToHclTerraform(struct!.serverCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    server_keyfile: {
      value: cdktf.stringToHclTerraform(struct!.serverKeyfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    slo_destination: {
      value: cdktf.stringToHclTerraform(struct!.sloDestination),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sriov_physical_interface: {
      value: cdktf.stringToHclTerraform(struct!.sriovPhysicalInterface),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sriov_physical_network: {
      value: cdktf.stringToHclTerraform(struct!.sriovPhysicalNetwork),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    sriov_vf: {
      value: cdktf.stringToHclTerraform(struct!.sriovVf),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ssl_enable: {
      value: cdktf.booleanToHclTerraform(struct!.sslEnable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    ssl_insecure: {
      value: cdktf.booleanToHclTerraform(struct!.sslInsecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    stats_collector_destination_path: {
      value: cdktf.stringToHclTerraform(struct!.statsCollectorDestinationPath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subcluster: {
      value: cdktf.stringToHclTerraform(struct!.subcluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tsn_agent_mode: {
      value: cdktf.stringToHclTerraform(struct!.tsnAgentMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vrouter_crypt_interface: {
      value: cdktf.stringToHclTerraform(struct!.vrouterCryptInterface),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vrouter_decrypt_interface: {
      value: cdktf.stringToHclTerraform(struct!.vrouterDecryptInterface),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vrouter_decrypt_key: {
      value: cdktf.stringToHclTerraform(struct!.vrouterDecryptKey),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vrouter_encryption: {
      value: cdktf.booleanToHclTerraform(struct!.vrouterEncryption),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    vrouter_gateway: {
      value: cdktf.stringToHclTerraform(struct!.vrouterGateway),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    xmmp_ssl_enable: {
      value: cdktf.booleanToHclTerraform(struct!.xmmpSslEnable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    xmpp_server_ca_certfile: {
      value: cdktf.stringToHclTerraform(struct!.xmppServerCaCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    xmpp_server_certfile: {
      value: cdktf.stringToHclTerraform(struct!.xmppServerCertfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    xmpp_server_keyfile: {
      value: cdktf.stringToHclTerraform(struct!.xmppServerKeyfile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    xmpp_server_port: {
      value: cdktf.stringToHclTerraform(struct!.xmppServerPort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._agentMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.agentMode = this._agentMode;
    }
    if (this._barbicanPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.barbicanPassword = this._barbicanPassword;
    }
    if (this._barbicanTenantName !== undefined) {
      hasAnyValues = true;
      internalValueResult.barbicanTenantName = this._barbicanTenantName;
    }
    if (this._barbicanUser !== undefined) {
      hasAnyValues = true;
      internalValueResult.barbicanUser = this._barbicanUser;
    }
    if (this._cloudOrchestrator !== undefined) {
      hasAnyValues = true;
      internalValueResult.cloudOrchestrator = this._cloudOrchestrator;
    }
    if (this._cniMtu !== undefined) {
      hasAnyValues = true;
      internalValueResult.cniMtu = this._cniMtu;
    }
    if (this._collectorPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.collectorPort = this._collectorPort;
    }
    if (this._configApiPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.configApiPort = this._configApiPort;
    }
    if (this._configApiServerCaCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.configApiServerCaCertfile = this._configApiServerCaCertfile;
    }
    if (this._configApiSslEnable !== undefined) {
      hasAnyValues = true;
      internalValueResult.configApiSslEnable = this._configApiSslEnable;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._controlInstance !== undefined) {
      hasAnyValues = true;
      internalValueResult.controlInstance = this._controlInstance;
    }
    if (this._dataSubnet !== undefined) {
      hasAnyValues = true;
      internalValueResult.dataSubnet = this._dataSubnet;
    }
    if (this._dnsServerPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.dnsServerPort = this._dnsServerPort;
    }
    if (this._dpdkUioDriver !== undefined) {
      hasAnyValues = true;
      internalValueResult.dpdkUioDriver = this._dpdkUioDriver;
    }
    if (this._envVariablesConfig !== undefined) {
      hasAnyValues = true;
      internalValueResult.envVariablesConfig = this._envVariablesConfig;
    }
    if (this._fabricSntHashTableSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.fabricSntHashTableSize = this._fabricSntHashTableSize;
    }
    if (this._hugePages1G !== undefined) {
      hasAnyValues = true;
      internalValueResult.hugePages1G = this._hugePages1G;
    }
    if (this._hugePages2M !== undefined) {
      hasAnyValues = true;
      internalValueResult.hugePages2M = this._hugePages2M;
    }
    if (this._hypervisorType !== undefined) {
      hasAnyValues = true;
      internalValueResult.hypervisorType = this._hypervisorType;
    }
    if (this._introspectSslEnable !== undefined) {
      hasAnyValues = true;
      internalValueResult.introspectSslEnable = this._introspectSslEnable;
    }
    if (this._k8SToken !== undefined) {
      hasAnyValues = true;
      internalValueResult.k8SToken = this._k8SToken;
    }
    if (this._k8STokenFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.k8STokenFile = this._k8STokenFile;
    }
    if (this._keystoneAuthAdminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthAdminPassword = this._keystoneAuthAdminPassword;
    }
    if (this._keystoneAuthAdminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthAdminPort = this._keystoneAuthAdminPort;
    }
    if (this._keystoneAuthCaCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthCaCertfile = this._keystoneAuthCaCertfile;
    }
    if (this._keystoneAuthCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthCertfile = this._keystoneAuthCertfile;
    }
    if (this._keystoneAuthHost !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthHost = this._keystoneAuthHost;
    }
    if (this._keystoneAuthInsecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthInsecure = this._keystoneAuthInsecure;
    }
    if (this._keystoneAuthKeyfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthKeyfile = this._keystoneAuthKeyfile;
    }
    if (this._keystoneAuthProjectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthProjectDomainName = this._keystoneAuthProjectDomainName;
    }
    if (this._keystoneAuthProto !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthProto = this._keystoneAuthProto;
    }
    if (this._keystoneAuthRegionName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthRegionName = this._keystoneAuthRegionName;
    }
    if (this._keystoneAuthUrlTokens !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthUrlTokens = this._keystoneAuthUrlTokens;
    }
    if (this._keystoneAuthUrlVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthUrlVersion = this._keystoneAuthUrlVersion;
    }
    if (this._keystoneAuthUserDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthUserDomainName = this._keystoneAuthUserDomainName;
    }
    if (this._kubernetesApiPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesApiPort = this._kubernetesApiPort;
    }
    if (this._kubernetesApiSecurePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesApiSecurePort = this._kubernetesApiSecurePort;
    }
    if (this._kubernetesPodSubnet !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubernetesPodSubnet = this._kubernetesPodSubnet;
    }
    if (this._l3MhCidr !== undefined) {
      hasAnyValues = true;
      internalValueResult.l3MhCidr = this._l3MhCidr;
    }
    if (this._logDir !== undefined) {
      hasAnyValues = true;
      internalValueResult.logDir = this._logDir;
    }
    if (this._logLocal !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLocal = this._logLocal;
    }
    if (this._metadataProxySecret !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataProxySecret = this._metadataProxySecret;
    }
    if (this._metadataSslCaCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataSslCaCertfile = this._metadataSslCaCertfile;
    }
    if (this._metadataSslCertType !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataSslCertType = this._metadataSslCertType;
    }
    if (this._metadataSslCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataSslCertfile = this._metadataSslCertfile;
    }
    if (this._metadataSslEnable !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataSslEnable = this._metadataSslEnable;
    }
    if (this._metadataSslKeyfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadataSslKeyfile = this._metadataSslKeyfile;
    }
    if (this._physicalInterface !== undefined) {
      hasAnyValues = true;
      internalValueResult.physicalInterface = this._physicalInterface;
    }
    if (this._priorityBandwidth !== undefined) {
      hasAnyValues = true;
      internalValueResult.priorityBandwidth = this._priorityBandwidth;
    }
    if (this._priorityId !== undefined) {
      hasAnyValues = true;
      internalValueResult.priorityId = this._priorityId;
    }
    if (this._priorityScheduling !== undefined) {
      hasAnyValues = true;
      internalValueResult.priorityScheduling = this._priorityScheduling;
    }
    if (this._priorityTagging !== undefined) {
      hasAnyValues = true;
      internalValueResult.priorityTagging = this._priorityTagging;
    }
    if (this._qosDefHwQueue !== undefined) {
      hasAnyValues = true;
      internalValueResult.qosDefHwQueue = this._qosDefHwQueue;
    }
    if (this._qosLogicalQueues !== undefined) {
      hasAnyValues = true;
      internalValueResult.qosLogicalQueues = this._qosLogicalQueues;
    }
    if (this._qosQueueId !== undefined) {
      hasAnyValues = true;
      internalValueResult.qosQueueId = this._qosQueueId;
    }
    if (this._requiredKernelVrouterEncryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.requiredKernelVrouterEncryption = this._requiredKernelVrouterEncryption;
    }
    if (this._sampleDestination !== undefined) {
      hasAnyValues = true;
      internalValueResult.sampleDestination = this._sampleDestination;
    }
    if (this._sandeshCaCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.sandeshCaCertfile = this._sandeshCaCertfile;
    }
    if (this._sandeshCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.sandeshCertfile = this._sandeshCertfile;
    }
    if (this._sandeshKeyfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.sandeshKeyfile = this._sandeshKeyfile;
    }
    if (this._sandeshServerCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.sandeshServerCertfile = this._sandeshServerCertfile;
    }
    if (this._sandeshServerKeyfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.sandeshServerKeyfile = this._sandeshServerKeyfile;
    }
    if (this._sandeshSslEnable !== undefined) {
      hasAnyValues = true;
      internalValueResult.sandeshSslEnable = this._sandeshSslEnable;
    }
    if (this._serverCaCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.serverCaCertfile = this._serverCaCertfile;
    }
    if (this._serverCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.serverCertfile = this._serverCertfile;
    }
    if (this._serverKeyfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.serverKeyfile = this._serverKeyfile;
    }
    if (this._sloDestination !== undefined) {
      hasAnyValues = true;
      internalValueResult.sloDestination = this._sloDestination;
    }
    if (this._sriovPhysicalInterface !== undefined) {
      hasAnyValues = true;
      internalValueResult.sriovPhysicalInterface = this._sriovPhysicalInterface;
    }
    if (this._sriovPhysicalNetwork !== undefined) {
      hasAnyValues = true;
      internalValueResult.sriovPhysicalNetwork = this._sriovPhysicalNetwork;
    }
    if (this._sriovVf !== undefined) {
      hasAnyValues = true;
      internalValueResult.sriovVf = this._sriovVf;
    }
    if (this._sslEnable !== undefined) {
      hasAnyValues = true;
      internalValueResult.sslEnable = this._sslEnable;
    }
    if (this._sslInsecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.sslInsecure = this._sslInsecure;
    }
    if (this._statsCollectorDestinationPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.statsCollectorDestinationPath = this._statsCollectorDestinationPath;
    }
    if (this._subcluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.subcluster = this._subcluster;
    }
    if (this._tsnAgentMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.tsnAgentMode = this._tsnAgentMode;
    }
    if (this._vrouterCryptInterface !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrouterCryptInterface = this._vrouterCryptInterface;
    }
    if (this._vrouterDecryptInterface !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrouterDecryptInterface = this._vrouterDecryptInterface;
    }
    if (this._vrouterDecryptKey !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrouterDecryptKey = this._vrouterDecryptKey;
    }
    if (this._vrouterEncryption !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrouterEncryption = this._vrouterEncryption;
    }
    if (this._vrouterGateway !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrouterGateway = this._vrouterGateway;
    }
    if (this._xmmpSslEnable !== undefined) {
      hasAnyValues = true;
      internalValueResult.xmmpSslEnable = this._xmmpSslEnable;
    }
    if (this._xmppServerCaCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.xmppServerCaCertfile = this._xmppServerCaCertfile;
    }
    if (this._xmppServerCertfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.xmppServerCertfile = this._xmppServerCertfile;
    }
    if (this._xmppServerKeyfile !== undefined) {
      hasAnyValues = true;
      internalValueResult.xmppServerKeyfile = this._xmppServerKeyfile;
    }
    if (this._xmppServerPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.xmppServerPort = this._xmppServerPort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._agentMode = undefined;
      this._barbicanPassword = undefined;
      this._barbicanTenantName = undefined;
      this._barbicanUser = undefined;
      this._cloudOrchestrator = undefined;
      this._cniMtu = undefined;
      this._collectorPort = undefined;
      this._configApiPort = undefined;
      this._configApiServerCaCertfile = undefined;
      this._configApiSslEnable = undefined;
      this._containers.internalValue = undefined;
      this._controlInstance = undefined;
      this._dataSubnet = undefined;
      this._dnsServerPort = undefined;
      this._dpdkUioDriver = undefined;
      this._envVariablesConfig = undefined;
      this._fabricSntHashTableSize = undefined;
      this._hugePages1G = undefined;
      this._hugePages2M = undefined;
      this._hypervisorType = undefined;
      this._introspectSslEnable = undefined;
      this._k8SToken = undefined;
      this._k8STokenFile = undefined;
      this._keystoneAuthAdminPassword = undefined;
      this._keystoneAuthAdminPort = undefined;
      this._keystoneAuthCaCertfile = undefined;
      this._keystoneAuthCertfile = undefined;
      this._keystoneAuthHost = undefined;
      this._keystoneAuthInsecure = undefined;
      this._keystoneAuthKeyfile = undefined;
      this._keystoneAuthProjectDomainName = undefined;
      this._keystoneAuthProto = undefined;
      this._keystoneAuthRegionName = undefined;
      this._keystoneAuthUrlTokens = undefined;
      this._keystoneAuthUrlVersion = undefined;
      this._keystoneAuthUserDomainName = undefined;
      this._kubernetesApiPort = undefined;
      this._kubernetesApiSecurePort = undefined;
      this._kubernetesPodSubnet = undefined;
      this._l3MhCidr = undefined;
      this._logDir = undefined;
      this._logLocal = undefined;
      this._metadataProxySecret = undefined;
      this._metadataSslCaCertfile = undefined;
      this._metadataSslCertType = undefined;
      this._metadataSslCertfile = undefined;
      this._metadataSslEnable = undefined;
      this._metadataSslKeyfile = undefined;
      this._physicalInterface = undefined;
      this._priorityBandwidth = undefined;
      this._priorityId = undefined;
      this._priorityScheduling = undefined;
      this._priorityTagging = undefined;
      this._qosDefHwQueue = undefined;
      this._qosLogicalQueues = undefined;
      this._qosQueueId = undefined;
      this._requiredKernelVrouterEncryption = undefined;
      this._sampleDestination = undefined;
      this._sandeshCaCertfile = undefined;
      this._sandeshCertfile = undefined;
      this._sandeshKeyfile = undefined;
      this._sandeshServerCertfile = undefined;
      this._sandeshServerKeyfile = undefined;
      this._sandeshSslEnable = undefined;
      this._serverCaCertfile = undefined;
      this._serverCertfile = undefined;
      this._serverKeyfile = undefined;
      this._sloDestination = undefined;
      this._sriovPhysicalInterface = undefined;
      this._sriovPhysicalNetwork = undefined;
      this._sriovVf = undefined;
      this._sslEnable = undefined;
      this._sslInsecure = undefined;
      this._statsCollectorDestinationPath = undefined;
      this._subcluster = undefined;
      this._tsnAgentMode = undefined;
      this._vrouterCryptInterface = undefined;
      this._vrouterDecryptInterface = undefined;
      this._vrouterDecryptKey = undefined;
      this._vrouterEncryption = undefined;
      this._vrouterGateway = undefined;
      this._xmmpSslEnable = undefined;
      this._xmppServerCaCertfile = undefined;
      this._xmppServerCertfile = undefined;
      this._xmppServerKeyfile = undefined;
      this._xmppServerPort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._agentMode = value.agentMode;
      this._barbicanPassword = value.barbicanPassword;
      this._barbicanTenantName = value.barbicanTenantName;
      this._barbicanUser = value.barbicanUser;
      this._cloudOrchestrator = value.cloudOrchestrator;
      this._cniMtu = value.cniMtu;
      this._collectorPort = value.collectorPort;
      this._configApiPort = value.configApiPort;
      this._configApiServerCaCertfile = value.configApiServerCaCertfile;
      this._configApiSslEnable = value.configApiSslEnable;
      this._containers.internalValue = value.containers;
      this._controlInstance = value.controlInstance;
      this._dataSubnet = value.dataSubnet;
      this._dnsServerPort = value.dnsServerPort;
      this._dpdkUioDriver = value.dpdkUioDriver;
      this._envVariablesConfig = value.envVariablesConfig;
      this._fabricSntHashTableSize = value.fabricSntHashTableSize;
      this._hugePages1G = value.hugePages1G;
      this._hugePages2M = value.hugePages2M;
      this._hypervisorType = value.hypervisorType;
      this._introspectSslEnable = value.introspectSslEnable;
      this._k8SToken = value.k8SToken;
      this._k8STokenFile = value.k8STokenFile;
      this._keystoneAuthAdminPassword = value.keystoneAuthAdminPassword;
      this._keystoneAuthAdminPort = value.keystoneAuthAdminPort;
      this._keystoneAuthCaCertfile = value.keystoneAuthCaCertfile;
      this._keystoneAuthCertfile = value.keystoneAuthCertfile;
      this._keystoneAuthHost = value.keystoneAuthHost;
      this._keystoneAuthInsecure = value.keystoneAuthInsecure;
      this._keystoneAuthKeyfile = value.keystoneAuthKeyfile;
      this._keystoneAuthProjectDomainName = value.keystoneAuthProjectDomainName;
      this._keystoneAuthProto = value.keystoneAuthProto;
      this._keystoneAuthRegionName = value.keystoneAuthRegionName;
      this._keystoneAuthUrlTokens = value.keystoneAuthUrlTokens;
      this._keystoneAuthUrlVersion = value.keystoneAuthUrlVersion;
      this._keystoneAuthUserDomainName = value.keystoneAuthUserDomainName;
      this._kubernetesApiPort = value.kubernetesApiPort;
      this._kubernetesApiSecurePort = value.kubernetesApiSecurePort;
      this._kubernetesPodSubnet = value.kubernetesPodSubnet;
      this._l3MhCidr = value.l3MhCidr;
      this._logDir = value.logDir;
      this._logLocal = value.logLocal;
      this._metadataProxySecret = value.metadataProxySecret;
      this._metadataSslCaCertfile = value.metadataSslCaCertfile;
      this._metadataSslCertType = value.metadataSslCertType;
      this._metadataSslCertfile = value.metadataSslCertfile;
      this._metadataSslEnable = value.metadataSslEnable;
      this._metadataSslKeyfile = value.metadataSslKeyfile;
      this._physicalInterface = value.physicalInterface;
      this._priorityBandwidth = value.priorityBandwidth;
      this._priorityId = value.priorityId;
      this._priorityScheduling = value.priorityScheduling;
      this._priorityTagging = value.priorityTagging;
      this._qosDefHwQueue = value.qosDefHwQueue;
      this._qosLogicalQueues = value.qosLogicalQueues;
      this._qosQueueId = value.qosQueueId;
      this._requiredKernelVrouterEncryption = value.requiredKernelVrouterEncryption;
      this._sampleDestination = value.sampleDestination;
      this._sandeshCaCertfile = value.sandeshCaCertfile;
      this._sandeshCertfile = value.sandeshCertfile;
      this._sandeshKeyfile = value.sandeshKeyfile;
      this._sandeshServerCertfile = value.sandeshServerCertfile;
      this._sandeshServerKeyfile = value.sandeshServerKeyfile;
      this._sandeshSslEnable = value.sandeshSslEnable;
      this._serverCaCertfile = value.serverCaCertfile;
      this._serverCertfile = value.serverCertfile;
      this._serverKeyfile = value.serverKeyfile;
      this._sloDestination = value.sloDestination;
      this._sriovPhysicalInterface = value.sriovPhysicalInterface;
      this._sriovPhysicalNetwork = value.sriovPhysicalNetwork;
      this._sriovVf = value.sriovVf;
      this._sslEnable = value.sslEnable;
      this._sslInsecure = value.sslInsecure;
      this._statsCollectorDestinationPath = value.statsCollectorDestinationPath;
      this._subcluster = value.subcluster;
      this._tsnAgentMode = value.tsnAgentMode;
      this._vrouterCryptInterface = value.vrouterCryptInterface;
      this._vrouterDecryptInterface = value.vrouterDecryptInterface;
      this._vrouterDecryptKey = value.vrouterDecryptKey;
      this._vrouterEncryption = value.vrouterEncryption;
      this._vrouterGateway = value.vrouterGateway;
      this._xmmpSslEnable = value.xmmpSslEnable;
      this._xmppServerCaCertfile = value.xmppServerCaCertfile;
      this._xmppServerCertfile = value.xmppServerCertfile;
      this._xmppServerKeyfile = value.xmppServerKeyfile;
      this._xmppServerPort = value.xmppServerPort;
    }
  }

  // agent_mode - computed: false, optional: true, required: false
  private _agentMode?: string; 
  public get agentMode() {
    return this.getStringAttribute('agent_mode');
  }
  public set agentMode(value: string) {
    this._agentMode = value;
  }
  public resetAgentMode() {
    this._agentMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get agentModeInput() {
    return this._agentMode;
  }

  // barbican_password - computed: false, optional: true, required: false
  private _barbicanPassword?: string; 
  public get barbicanPassword() {
    return this.getStringAttribute('barbican_password');
  }
  public set barbicanPassword(value: string) {
    this._barbicanPassword = value;
  }
  public resetBarbicanPassword() {
    this._barbicanPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get barbicanPasswordInput() {
    return this._barbicanPassword;
  }

  // barbican_tenant_name - computed: false, optional: true, required: false
  private _barbicanTenantName?: string; 
  public get barbicanTenantName() {
    return this.getStringAttribute('barbican_tenant_name');
  }
  public set barbicanTenantName(value: string) {
    this._barbicanTenantName = value;
  }
  public resetBarbicanTenantName() {
    this._barbicanTenantName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get barbicanTenantNameInput() {
    return this._barbicanTenantName;
  }

  // barbican_user - computed: false, optional: true, required: false
  private _barbicanUser?: string; 
  public get barbicanUser() {
    return this.getStringAttribute('barbican_user');
  }
  public set barbicanUser(value: string) {
    this._barbicanUser = value;
  }
  public resetBarbicanUser() {
    this._barbicanUser = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get barbicanUserInput() {
    return this._barbicanUser;
  }

  // cloud_orchestrator - computed: false, optional: true, required: false
  private _cloudOrchestrator?: string; 
  public get cloudOrchestrator() {
    return this.getStringAttribute('cloud_orchestrator');
  }
  public set cloudOrchestrator(value: string) {
    this._cloudOrchestrator = value;
  }
  public resetCloudOrchestrator() {
    this._cloudOrchestrator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cloudOrchestratorInput() {
    return this._cloudOrchestrator;
  }

  // cni_mtu - computed: false, optional: true, required: false
  private _cniMtu?: number; 
  public get cniMtu() {
    return this.getNumberAttribute('cni_mtu');
  }
  public set cniMtu(value: number) {
    this._cniMtu = value;
  }
  public resetCniMtu() {
    this._cniMtu = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cniMtuInput() {
    return this._cniMtu;
  }

  // collector_port - computed: false, optional: true, required: false
  private _collectorPort?: string; 
  public get collectorPort() {
    return this.getStringAttribute('collector_port');
  }
  public set collectorPort(value: string) {
    this._collectorPort = value;
  }
  public resetCollectorPort() {
    this._collectorPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get collectorPortInput() {
    return this._collectorPort;
  }

  // config_api_port - computed: false, optional: true, required: false
  private _configApiPort?: string; 
  public get configApiPort() {
    return this.getStringAttribute('config_api_port');
  }
  public set configApiPort(value: string) {
    this._configApiPort = value;
  }
  public resetConfigApiPort() {
    this._configApiPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configApiPortInput() {
    return this._configApiPort;
  }

  // config_api_server_ca_certfile - computed: false, optional: true, required: false
  private _configApiServerCaCertfile?: string; 
  public get configApiServerCaCertfile() {
    return this.getStringAttribute('config_api_server_ca_certfile');
  }
  public set configApiServerCaCertfile(value: string) {
    this._configApiServerCaCertfile = value;
  }
  public resetConfigApiServerCaCertfile() {
    this._configApiServerCaCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configApiServerCaCertfileInput() {
    return this._configApiServerCaCertfile;
  }

  // config_api_ssl_enable - computed: false, optional: true, required: false
  private _configApiSslEnable?: boolean | cdktf.IResolvable; 
  public get configApiSslEnable() {
    return this.getBooleanAttribute('config_api_ssl_enable');
  }
  public set configApiSslEnable(value: boolean | cdktf.IResolvable) {
    this._configApiSslEnable = value;
  }
  public resetConfigApiSslEnable() {
    this._configApiSslEnable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configApiSslEnableInput() {
    return this._configApiSslEnable;
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // control_instance - computed: false, optional: true, required: false
  private _controlInstance?: string; 
  public get controlInstance() {
    return this.getStringAttribute('control_instance');
  }
  public set controlInstance(value: string) {
    this._controlInstance = value;
  }
  public resetControlInstance() {
    this._controlInstance = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get controlInstanceInput() {
    return this._controlInstance;
  }

  // data_subnet - computed: false, optional: true, required: false
  private _dataSubnet?: string; 
  public get dataSubnet() {
    return this.getStringAttribute('data_subnet');
  }
  public set dataSubnet(value: string) {
    this._dataSubnet = value;
  }
  public resetDataSubnet() {
    this._dataSubnet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataSubnetInput() {
    return this._dataSubnet;
  }

  // dns_server_port - computed: false, optional: true, required: false
  private _dnsServerPort?: string; 
  public get dnsServerPort() {
    return this.getStringAttribute('dns_server_port');
  }
  public set dnsServerPort(value: string) {
    this._dnsServerPort = value;
  }
  public resetDnsServerPort() {
    this._dnsServerPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dnsServerPortInput() {
    return this._dnsServerPort;
  }

  // dpdk_uio_driver - computed: false, optional: true, required: false
  private _dpdkUioDriver?: string; 
  public get dpdkUioDriver() {
    return this.getStringAttribute('dpdk_uio_driver');
  }
  public set dpdkUioDriver(value: string) {
    this._dpdkUioDriver = value;
  }
  public resetDpdkUioDriver() {
    this._dpdkUioDriver = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dpdkUioDriverInput() {
    return this._dpdkUioDriver;
  }

  // env_variables_config - computed: false, optional: true, required: false
  private _envVariablesConfig?: { [key: string]: string }; 
  public get envVariablesConfig() {
    return this.getStringMapAttribute('env_variables_config');
  }
  public set envVariablesConfig(value: { [key: string]: string }) {
    this._envVariablesConfig = value;
  }
  public resetEnvVariablesConfig() {
    this._envVariablesConfig = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get envVariablesConfigInput() {
    return this._envVariablesConfig;
  }

  // fabric_snt_hash_table_size - computed: false, optional: true, required: false
  private _fabricSntHashTableSize?: string; 
  public get fabricSntHashTableSize() {
    return this.getStringAttribute('fabric_snt_hash_table_size');
  }
  public set fabricSntHashTableSize(value: string) {
    this._fabricSntHashTableSize = value;
  }
  public resetFabricSntHashTableSize() {
    this._fabricSntHashTableSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fabricSntHashTableSizeInput() {
    return this._fabricSntHashTableSize;
  }

  // huge_pages1_g - computed: false, optional: true, required: false
  private _hugePages1G?: number; 
  public get hugePages1G() {
    return this.getNumberAttribute('huge_pages1_g');
  }
  public set hugePages1G(value: number) {
    this._hugePages1G = value;
  }
  public resetHugePages1G() {
    this._hugePages1G = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hugePages1GInput() {
    return this._hugePages1G;
  }

  // huge_pages2_m - computed: false, optional: true, required: false
  private _hugePages2M?: number; 
  public get hugePages2M() {
    return this.getNumberAttribute('huge_pages2_m');
  }
  public set hugePages2M(value: number) {
    this._hugePages2M = value;
  }
  public resetHugePages2M() {
    this._hugePages2M = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hugePages2MInput() {
    return this._hugePages2M;
  }

  // hypervisor_type - computed: false, optional: true, required: false
  private _hypervisorType?: string; 
  public get hypervisorType() {
    return this.getStringAttribute('hypervisor_type');
  }
  public set hypervisorType(value: string) {
    this._hypervisorType = value;
  }
  public resetHypervisorType() {
    this._hypervisorType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hypervisorTypeInput() {
    return this._hypervisorType;
  }

  // introspect_ssl_enable - computed: false, optional: true, required: false
  private _introspectSslEnable?: boolean | cdktf.IResolvable; 
  public get introspectSslEnable() {
    return this.getBooleanAttribute('introspect_ssl_enable');
  }
  public set introspectSslEnable(value: boolean | cdktf.IResolvable) {
    this._introspectSslEnable = value;
  }
  public resetIntrospectSslEnable() {
    this._introspectSslEnable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get introspectSslEnableInput() {
    return this._introspectSslEnable;
  }

  // k8s_token - computed: false, optional: true, required: false
  private _k8SToken?: string; 
  public get k8SToken() {
    return this.getStringAttribute('k8s_token');
  }
  public set k8SToken(value: string) {
    this._k8SToken = value;
  }
  public resetK8SToken() {
    this._k8SToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get k8STokenInput() {
    return this._k8SToken;
  }

  // k8s_token_file - computed: false, optional: true, required: false
  private _k8STokenFile?: string; 
  public get k8STokenFile() {
    return this.getStringAttribute('k8s_token_file');
  }
  public set k8STokenFile(value: string) {
    this._k8STokenFile = value;
  }
  public resetK8STokenFile() {
    this._k8STokenFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get k8STokenFileInput() {
    return this._k8STokenFile;
  }

  // keystone_auth_admin_password - computed: false, optional: true, required: false
  private _keystoneAuthAdminPassword?: string; 
  public get keystoneAuthAdminPassword() {
    return this.getStringAttribute('keystone_auth_admin_password');
  }
  public set keystoneAuthAdminPassword(value: string) {
    this._keystoneAuthAdminPassword = value;
  }
  public resetKeystoneAuthAdminPassword() {
    this._keystoneAuthAdminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthAdminPasswordInput() {
    return this._keystoneAuthAdminPassword;
  }

  // keystone_auth_admin_port - computed: false, optional: true, required: false
  private _keystoneAuthAdminPort?: string; 
  public get keystoneAuthAdminPort() {
    return this.getStringAttribute('keystone_auth_admin_port');
  }
  public set keystoneAuthAdminPort(value: string) {
    this._keystoneAuthAdminPort = value;
  }
  public resetKeystoneAuthAdminPort() {
    this._keystoneAuthAdminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthAdminPortInput() {
    return this._keystoneAuthAdminPort;
  }

  // keystone_auth_ca_certfile - computed: false, optional: true, required: false
  private _keystoneAuthCaCertfile?: string; 
  public get keystoneAuthCaCertfile() {
    return this.getStringAttribute('keystone_auth_ca_certfile');
  }
  public set keystoneAuthCaCertfile(value: string) {
    this._keystoneAuthCaCertfile = value;
  }
  public resetKeystoneAuthCaCertfile() {
    this._keystoneAuthCaCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthCaCertfileInput() {
    return this._keystoneAuthCaCertfile;
  }

  // keystone_auth_certfile - computed: false, optional: true, required: false
  private _keystoneAuthCertfile?: string; 
  public get keystoneAuthCertfile() {
    return this.getStringAttribute('keystone_auth_certfile');
  }
  public set keystoneAuthCertfile(value: string) {
    this._keystoneAuthCertfile = value;
  }
  public resetKeystoneAuthCertfile() {
    this._keystoneAuthCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthCertfileInput() {
    return this._keystoneAuthCertfile;
  }

  // keystone_auth_host - computed: false, optional: true, required: false
  private _keystoneAuthHost?: string; 
  public get keystoneAuthHost() {
    return this.getStringAttribute('keystone_auth_host');
  }
  public set keystoneAuthHost(value: string) {
    this._keystoneAuthHost = value;
  }
  public resetKeystoneAuthHost() {
    this._keystoneAuthHost = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthHostInput() {
    return this._keystoneAuthHost;
  }

  // keystone_auth_insecure - computed: false, optional: true, required: false
  private _keystoneAuthInsecure?: boolean | cdktf.IResolvable; 
  public get keystoneAuthInsecure() {
    return this.getBooleanAttribute('keystone_auth_insecure');
  }
  public set keystoneAuthInsecure(value: boolean | cdktf.IResolvable) {
    this._keystoneAuthInsecure = value;
  }
  public resetKeystoneAuthInsecure() {
    this._keystoneAuthInsecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthInsecureInput() {
    return this._keystoneAuthInsecure;
  }

  // keystone_auth_keyfile - computed: false, optional: true, required: false
  private _keystoneAuthKeyfile?: string; 
  public get keystoneAuthKeyfile() {
    return this.getStringAttribute('keystone_auth_keyfile');
  }
  public set keystoneAuthKeyfile(value: string) {
    this._keystoneAuthKeyfile = value;
  }
  public resetKeystoneAuthKeyfile() {
    this._keystoneAuthKeyfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthKeyfileInput() {
    return this._keystoneAuthKeyfile;
  }

  // keystone_auth_project_domain_name - computed: false, optional: true, required: false
  private _keystoneAuthProjectDomainName?: string; 
  public get keystoneAuthProjectDomainName() {
    return this.getStringAttribute('keystone_auth_project_domain_name');
  }
  public set keystoneAuthProjectDomainName(value: string) {
    this._keystoneAuthProjectDomainName = value;
  }
  public resetKeystoneAuthProjectDomainName() {
    this._keystoneAuthProjectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthProjectDomainNameInput() {
    return this._keystoneAuthProjectDomainName;
  }

  // keystone_auth_proto - computed: false, optional: true, required: false
  private _keystoneAuthProto?: string; 
  public get keystoneAuthProto() {
    return this.getStringAttribute('keystone_auth_proto');
  }
  public set keystoneAuthProto(value: string) {
    this._keystoneAuthProto = value;
  }
  public resetKeystoneAuthProto() {
    this._keystoneAuthProto = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthProtoInput() {
    return this._keystoneAuthProto;
  }

  // keystone_auth_region_name - computed: false, optional: true, required: false
  private _keystoneAuthRegionName?: string; 
  public get keystoneAuthRegionName() {
    return this.getStringAttribute('keystone_auth_region_name');
  }
  public set keystoneAuthRegionName(value: string) {
    this._keystoneAuthRegionName = value;
  }
  public resetKeystoneAuthRegionName() {
    this._keystoneAuthRegionName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthRegionNameInput() {
    return this._keystoneAuthRegionName;
  }

  // keystone_auth_url_tokens - computed: false, optional: true, required: false
  private _keystoneAuthUrlTokens?: string; 
  public get keystoneAuthUrlTokens() {
    return this.getStringAttribute('keystone_auth_url_tokens');
  }
  public set keystoneAuthUrlTokens(value: string) {
    this._keystoneAuthUrlTokens = value;
  }
  public resetKeystoneAuthUrlTokens() {
    this._keystoneAuthUrlTokens = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthUrlTokensInput() {
    return this._keystoneAuthUrlTokens;
  }

  // keystone_auth_url_version - computed: false, optional: true, required: false
  private _keystoneAuthUrlVersion?: string; 
  public get keystoneAuthUrlVersion() {
    return this.getStringAttribute('keystone_auth_url_version');
  }
  public set keystoneAuthUrlVersion(value: string) {
    this._keystoneAuthUrlVersion = value;
  }
  public resetKeystoneAuthUrlVersion() {
    this._keystoneAuthUrlVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthUrlVersionInput() {
    return this._keystoneAuthUrlVersion;
  }

  // keystone_auth_user_domain_name - computed: false, optional: true, required: false
  private _keystoneAuthUserDomainName?: string; 
  public get keystoneAuthUserDomainName() {
    return this.getStringAttribute('keystone_auth_user_domain_name');
  }
  public set keystoneAuthUserDomainName(value: string) {
    this._keystoneAuthUserDomainName = value;
  }
  public resetKeystoneAuthUserDomainName() {
    this._keystoneAuthUserDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthUserDomainNameInput() {
    return this._keystoneAuthUserDomainName;
  }

  // kubernetes_api_port - computed: false, optional: true, required: false
  private _kubernetesApiPort?: string; 
  public get kubernetesApiPort() {
    return this.getStringAttribute('kubernetes_api_port');
  }
  public set kubernetesApiPort(value: string) {
    this._kubernetesApiPort = value;
  }
  public resetKubernetesApiPort() {
    this._kubernetesApiPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesApiPortInput() {
    return this._kubernetesApiPort;
  }

  // kubernetes_api_secure_port - computed: false, optional: true, required: false
  private _kubernetesApiSecurePort?: string; 
  public get kubernetesApiSecurePort() {
    return this.getStringAttribute('kubernetes_api_secure_port');
  }
  public set kubernetesApiSecurePort(value: string) {
    this._kubernetesApiSecurePort = value;
  }
  public resetKubernetesApiSecurePort() {
    this._kubernetesApiSecurePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesApiSecurePortInput() {
    return this._kubernetesApiSecurePort;
  }

  // kubernetes_pod_subnet - computed: false, optional: true, required: false
  private _kubernetesPodSubnet?: string; 
  public get kubernetesPodSubnet() {
    return this.getStringAttribute('kubernetes_pod_subnet');
  }
  public set kubernetesPodSubnet(value: string) {
    this._kubernetesPodSubnet = value;
  }
  public resetKubernetesPodSubnet() {
    this._kubernetesPodSubnet = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubernetesPodSubnetInput() {
    return this._kubernetesPodSubnet;
  }

  // l3mh_cidr - computed: false, optional: true, required: false
  private _l3MhCidr?: string; 
  public get l3MhCidr() {
    return this.getStringAttribute('l3mh_cidr');
  }
  public set l3MhCidr(value: string) {
    this._l3MhCidr = value;
  }
  public resetL3MhCidr() {
    this._l3MhCidr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get l3MhCidrInput() {
    return this._l3MhCidr;
  }

  // log_dir - computed: false, optional: true, required: false
  private _logDir?: string; 
  public get logDir() {
    return this.getStringAttribute('log_dir');
  }
  public set logDir(value: string) {
    this._logDir = value;
  }
  public resetLogDir() {
    this._logDir = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logDirInput() {
    return this._logDir;
  }

  // log_local - computed: false, optional: true, required: false
  private _logLocal?: number; 
  public get logLocal() {
    return this.getNumberAttribute('log_local');
  }
  public set logLocal(value: number) {
    this._logLocal = value;
  }
  public resetLogLocal() {
    this._logLocal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLocalInput() {
    return this._logLocal;
  }

  // metadata_proxy_secret - computed: false, optional: true, required: false
  private _metadataProxySecret?: string; 
  public get metadataProxySecret() {
    return this.getStringAttribute('metadata_proxy_secret');
  }
  public set metadataProxySecret(value: string) {
    this._metadataProxySecret = value;
  }
  public resetMetadataProxySecret() {
    this._metadataProxySecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataProxySecretInput() {
    return this._metadataProxySecret;
  }

  // metadata_ssl_ca_certfile - computed: false, optional: true, required: false
  private _metadataSslCaCertfile?: string; 
  public get metadataSslCaCertfile() {
    return this.getStringAttribute('metadata_ssl_ca_certfile');
  }
  public set metadataSslCaCertfile(value: string) {
    this._metadataSslCaCertfile = value;
  }
  public resetMetadataSslCaCertfile() {
    this._metadataSslCaCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataSslCaCertfileInput() {
    return this._metadataSslCaCertfile;
  }

  // metadata_ssl_cert_type - computed: false, optional: true, required: false
  private _metadataSslCertType?: string; 
  public get metadataSslCertType() {
    return this.getStringAttribute('metadata_ssl_cert_type');
  }
  public set metadataSslCertType(value: string) {
    this._metadataSslCertType = value;
  }
  public resetMetadataSslCertType() {
    this._metadataSslCertType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataSslCertTypeInput() {
    return this._metadataSslCertType;
  }

  // metadata_ssl_certfile - computed: false, optional: true, required: false
  private _metadataSslCertfile?: string; 
  public get metadataSslCertfile() {
    return this.getStringAttribute('metadata_ssl_certfile');
  }
  public set metadataSslCertfile(value: string) {
    this._metadataSslCertfile = value;
  }
  public resetMetadataSslCertfile() {
    this._metadataSslCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataSslCertfileInput() {
    return this._metadataSslCertfile;
  }

  // metadata_ssl_enable - computed: false, optional: true, required: false
  private _metadataSslEnable?: string; 
  public get metadataSslEnable() {
    return this.getStringAttribute('metadata_ssl_enable');
  }
  public set metadataSslEnable(value: string) {
    this._metadataSslEnable = value;
  }
  public resetMetadataSslEnable() {
    this._metadataSslEnable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataSslEnableInput() {
    return this._metadataSslEnable;
  }

  // metadata_ssl_keyfile - computed: false, optional: true, required: false
  private _metadataSslKeyfile?: string; 
  public get metadataSslKeyfile() {
    return this.getStringAttribute('metadata_ssl_keyfile');
  }
  public set metadataSslKeyfile(value: string) {
    this._metadataSslKeyfile = value;
  }
  public resetMetadataSslKeyfile() {
    this._metadataSslKeyfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataSslKeyfileInput() {
    return this._metadataSslKeyfile;
  }

  // physical_interface - computed: false, optional: true, required: false
  private _physicalInterface?: string; 
  public get physicalInterface() {
    return this.getStringAttribute('physical_interface');
  }
  public set physicalInterface(value: string) {
    this._physicalInterface = value;
  }
  public resetPhysicalInterface() {
    this._physicalInterface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get physicalInterfaceInput() {
    return this._physicalInterface;
  }

  // priority_bandwidth - computed: false, optional: true, required: false
  private _priorityBandwidth?: string; 
  public get priorityBandwidth() {
    return this.getStringAttribute('priority_bandwidth');
  }
  public set priorityBandwidth(value: string) {
    this._priorityBandwidth = value;
  }
  public resetPriorityBandwidth() {
    this._priorityBandwidth = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityBandwidthInput() {
    return this._priorityBandwidth;
  }

  // priority_id - computed: false, optional: true, required: false
  private _priorityId?: string; 
  public get priorityId() {
    return this.getStringAttribute('priority_id');
  }
  public set priorityId(value: string) {
    this._priorityId = value;
  }
  public resetPriorityId() {
    this._priorityId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityIdInput() {
    return this._priorityId;
  }

  // priority_scheduling - computed: false, optional: true, required: false
  private _priorityScheduling?: string; 
  public get priorityScheduling() {
    return this.getStringAttribute('priority_scheduling');
  }
  public set priorityScheduling(value: string) {
    this._priorityScheduling = value;
  }
  public resetPriorityScheduling() {
    this._priorityScheduling = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prioritySchedulingInput() {
    return this._priorityScheduling;
  }

  // priority_tagging - computed: false, optional: true, required: false
  private _priorityTagging?: boolean | cdktf.IResolvable; 
  public get priorityTagging() {
    return this.getBooleanAttribute('priority_tagging');
  }
  public set priorityTagging(value: boolean | cdktf.IResolvable) {
    this._priorityTagging = value;
  }
  public resetPriorityTagging() {
    this._priorityTagging = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityTaggingInput() {
    return this._priorityTagging;
  }

  // qos_def_hw_queue - computed: false, optional: true, required: false
  private _qosDefHwQueue?: boolean | cdktf.IResolvable; 
  public get qosDefHwQueue() {
    return this.getBooleanAttribute('qos_def_hw_queue');
  }
  public set qosDefHwQueue(value: boolean | cdktf.IResolvable) {
    this._qosDefHwQueue = value;
  }
  public resetQosDefHwQueue() {
    this._qosDefHwQueue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qosDefHwQueueInput() {
    return this._qosDefHwQueue;
  }

  // qos_logical_queues - computed: false, optional: true, required: false
  private _qosLogicalQueues?: string; 
  public get qosLogicalQueues() {
    return this.getStringAttribute('qos_logical_queues');
  }
  public set qosLogicalQueues(value: string) {
    this._qosLogicalQueues = value;
  }
  public resetQosLogicalQueues() {
    this._qosLogicalQueues = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qosLogicalQueuesInput() {
    return this._qosLogicalQueues;
  }

  // qos_queue_id - computed: false, optional: true, required: false
  private _qosQueueId?: string; 
  public get qosQueueId() {
    return this.getStringAttribute('qos_queue_id');
  }
  public set qosQueueId(value: string) {
    this._qosQueueId = value;
  }
  public resetQosQueueId() {
    this._qosQueueId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get qosQueueIdInput() {
    return this._qosQueueId;
  }

  // required_kernel_vrouter_encryption - computed: false, optional: true, required: false
  private _requiredKernelVrouterEncryption?: string; 
  public get requiredKernelVrouterEncryption() {
    return this.getStringAttribute('required_kernel_vrouter_encryption');
  }
  public set requiredKernelVrouterEncryption(value: string) {
    this._requiredKernelVrouterEncryption = value;
  }
  public resetRequiredKernelVrouterEncryption() {
    this._requiredKernelVrouterEncryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requiredKernelVrouterEncryptionInput() {
    return this._requiredKernelVrouterEncryption;
  }

  // sample_destination - computed: false, optional: true, required: false
  private _sampleDestination?: string; 
  public get sampleDestination() {
    return this.getStringAttribute('sample_destination');
  }
  public set sampleDestination(value: string) {
    this._sampleDestination = value;
  }
  public resetSampleDestination() {
    this._sampleDestination = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sampleDestinationInput() {
    return this._sampleDestination;
  }

  // sandesh_ca_certfile - computed: false, optional: true, required: false
  private _sandeshCaCertfile?: string; 
  public get sandeshCaCertfile() {
    return this.getStringAttribute('sandesh_ca_certfile');
  }
  public set sandeshCaCertfile(value: string) {
    this._sandeshCaCertfile = value;
  }
  public resetSandeshCaCertfile() {
    this._sandeshCaCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sandeshCaCertfileInput() {
    return this._sandeshCaCertfile;
  }

  // sandesh_certfile - computed: false, optional: true, required: false
  private _sandeshCertfile?: string; 
  public get sandeshCertfile() {
    return this.getStringAttribute('sandesh_certfile');
  }
  public set sandeshCertfile(value: string) {
    this._sandeshCertfile = value;
  }
  public resetSandeshCertfile() {
    this._sandeshCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sandeshCertfileInput() {
    return this._sandeshCertfile;
  }

  // sandesh_keyfile - computed: false, optional: true, required: false
  private _sandeshKeyfile?: string; 
  public get sandeshKeyfile() {
    return this.getStringAttribute('sandesh_keyfile');
  }
  public set sandeshKeyfile(value: string) {
    this._sandeshKeyfile = value;
  }
  public resetSandeshKeyfile() {
    this._sandeshKeyfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sandeshKeyfileInput() {
    return this._sandeshKeyfile;
  }

  // sandesh_server_certfile - computed: false, optional: true, required: false
  private _sandeshServerCertfile?: string; 
  public get sandeshServerCertfile() {
    return this.getStringAttribute('sandesh_server_certfile');
  }
  public set sandeshServerCertfile(value: string) {
    this._sandeshServerCertfile = value;
  }
  public resetSandeshServerCertfile() {
    this._sandeshServerCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sandeshServerCertfileInput() {
    return this._sandeshServerCertfile;
  }

  // sandesh_server_keyfile - computed: false, optional: true, required: false
  private _sandeshServerKeyfile?: string; 
  public get sandeshServerKeyfile() {
    return this.getStringAttribute('sandesh_server_keyfile');
  }
  public set sandeshServerKeyfile(value: string) {
    this._sandeshServerKeyfile = value;
  }
  public resetSandeshServerKeyfile() {
    this._sandeshServerKeyfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sandeshServerKeyfileInput() {
    return this._sandeshServerKeyfile;
  }

  // sandesh_ssl_enable - computed: false, optional: true, required: false
  private _sandeshSslEnable?: boolean | cdktf.IResolvable; 
  public get sandeshSslEnable() {
    return this.getBooleanAttribute('sandesh_ssl_enable');
  }
  public set sandeshSslEnable(value: boolean | cdktf.IResolvable) {
    this._sandeshSslEnable = value;
  }
  public resetSandeshSslEnable() {
    this._sandeshSslEnable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sandeshSslEnableInput() {
    return this._sandeshSslEnable;
  }

  // server_ca_certfile - computed: false, optional: true, required: false
  private _serverCaCertfile?: string; 
  public get serverCaCertfile() {
    return this.getStringAttribute('server_ca_certfile');
  }
  public set serverCaCertfile(value: string) {
    this._serverCaCertfile = value;
  }
  public resetServerCaCertfile() {
    this._serverCaCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serverCaCertfileInput() {
    return this._serverCaCertfile;
  }

  // server_certfile - computed: false, optional: true, required: false
  private _serverCertfile?: string; 
  public get serverCertfile() {
    return this.getStringAttribute('server_certfile');
  }
  public set serverCertfile(value: string) {
    this._serverCertfile = value;
  }
  public resetServerCertfile() {
    this._serverCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serverCertfileInput() {
    return this._serverCertfile;
  }

  // server_keyfile - computed: false, optional: true, required: false
  private _serverKeyfile?: string; 
  public get serverKeyfile() {
    return this.getStringAttribute('server_keyfile');
  }
  public set serverKeyfile(value: string) {
    this._serverKeyfile = value;
  }
  public resetServerKeyfile() {
    this._serverKeyfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serverKeyfileInput() {
    return this._serverKeyfile;
  }

  // slo_destination - computed: false, optional: true, required: false
  private _sloDestination?: string; 
  public get sloDestination() {
    return this.getStringAttribute('slo_destination');
  }
  public set sloDestination(value: string) {
    this._sloDestination = value;
  }
  public resetSloDestination() {
    this._sloDestination = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sloDestinationInput() {
    return this._sloDestination;
  }

  // sriov_physical_interface - computed: false, optional: true, required: false
  private _sriovPhysicalInterface?: string; 
  public get sriovPhysicalInterface() {
    return this.getStringAttribute('sriov_physical_interface');
  }
  public set sriovPhysicalInterface(value: string) {
    this._sriovPhysicalInterface = value;
  }
  public resetSriovPhysicalInterface() {
    this._sriovPhysicalInterface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sriovPhysicalInterfaceInput() {
    return this._sriovPhysicalInterface;
  }

  // sriov_physical_network - computed: false, optional: true, required: false
  private _sriovPhysicalNetwork?: string; 
  public get sriovPhysicalNetwork() {
    return this.getStringAttribute('sriov_physical_network');
  }
  public set sriovPhysicalNetwork(value: string) {
    this._sriovPhysicalNetwork = value;
  }
  public resetSriovPhysicalNetwork() {
    this._sriovPhysicalNetwork = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sriovPhysicalNetworkInput() {
    return this._sriovPhysicalNetwork;
  }

  // sriov_vf - computed: false, optional: true, required: false
  private _sriovVf?: string; 
  public get sriovVf() {
    return this.getStringAttribute('sriov_vf');
  }
  public set sriovVf(value: string) {
    this._sriovVf = value;
  }
  public resetSriovVf() {
    this._sriovVf = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sriovVfInput() {
    return this._sriovVf;
  }

  // ssl_enable - computed: false, optional: true, required: false
  private _sslEnable?: boolean | cdktf.IResolvable; 
  public get sslEnable() {
    return this.getBooleanAttribute('ssl_enable');
  }
  public set sslEnable(value: boolean | cdktf.IResolvable) {
    this._sslEnable = value;
  }
  public resetSslEnable() {
    this._sslEnable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sslEnableInput() {
    return this._sslEnable;
  }

  // ssl_insecure - computed: false, optional: true, required: false
  private _sslInsecure?: boolean | cdktf.IResolvable; 
  public get sslInsecure() {
    return this.getBooleanAttribute('ssl_insecure');
  }
  public set sslInsecure(value: boolean | cdktf.IResolvable) {
    this._sslInsecure = value;
  }
  public resetSslInsecure() {
    this._sslInsecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sslInsecureInput() {
    return this._sslInsecure;
  }

  // stats_collector_destination_path - computed: false, optional: true, required: false
  private _statsCollectorDestinationPath?: string; 
  public get statsCollectorDestinationPath() {
    return this.getStringAttribute('stats_collector_destination_path');
  }
  public set statsCollectorDestinationPath(value: string) {
    this._statsCollectorDestinationPath = value;
  }
  public resetStatsCollectorDestinationPath() {
    this._statsCollectorDestinationPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get statsCollectorDestinationPathInput() {
    return this._statsCollectorDestinationPath;
  }

  // subcluster - computed: false, optional: true, required: false
  private _subcluster?: string; 
  public get subcluster() {
    return this.getStringAttribute('subcluster');
  }
  public set subcluster(value: string) {
    this._subcluster = value;
  }
  public resetSubcluster() {
    this._subcluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get subclusterInput() {
    return this._subcluster;
  }

  // tsn_agent_mode - computed: false, optional: true, required: false
  private _tsnAgentMode?: string; 
  public get tsnAgentMode() {
    return this.getStringAttribute('tsn_agent_mode');
  }
  public set tsnAgentMode(value: string) {
    this._tsnAgentMode = value;
  }
  public resetTsnAgentMode() {
    this._tsnAgentMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tsnAgentModeInput() {
    return this._tsnAgentMode;
  }

  // vrouter_crypt_interface - computed: false, optional: true, required: false
  private _vrouterCryptInterface?: string; 
  public get vrouterCryptInterface() {
    return this.getStringAttribute('vrouter_crypt_interface');
  }
  public set vrouterCryptInterface(value: string) {
    this._vrouterCryptInterface = value;
  }
  public resetVrouterCryptInterface() {
    this._vrouterCryptInterface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrouterCryptInterfaceInput() {
    return this._vrouterCryptInterface;
  }

  // vrouter_decrypt_interface - computed: false, optional: true, required: false
  private _vrouterDecryptInterface?: string; 
  public get vrouterDecryptInterface() {
    return this.getStringAttribute('vrouter_decrypt_interface');
  }
  public set vrouterDecryptInterface(value: string) {
    this._vrouterDecryptInterface = value;
  }
  public resetVrouterDecryptInterface() {
    this._vrouterDecryptInterface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrouterDecryptInterfaceInput() {
    return this._vrouterDecryptInterface;
  }

  // vrouter_decrypt_key - computed: false, optional: true, required: false
  private _vrouterDecryptKey?: string; 
  public get vrouterDecryptKey() {
    return this.getStringAttribute('vrouter_decrypt_key');
  }
  public set vrouterDecryptKey(value: string) {
    this._vrouterDecryptKey = value;
  }
  public resetVrouterDecryptKey() {
    this._vrouterDecryptKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrouterDecryptKeyInput() {
    return this._vrouterDecryptKey;
  }

  // vrouter_encryption - computed: false, optional: true, required: false
  private _vrouterEncryption?: boolean | cdktf.IResolvable; 
  public get vrouterEncryption() {
    return this.getBooleanAttribute('vrouter_encryption');
  }
  public set vrouterEncryption(value: boolean | cdktf.IResolvable) {
    this._vrouterEncryption = value;
  }
  public resetVrouterEncryption() {
    this._vrouterEncryption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrouterEncryptionInput() {
    return this._vrouterEncryption;
  }

  // vrouter_gateway - computed: false, optional: true, required: false
  private _vrouterGateway?: string; 
  public get vrouterGateway() {
    return this.getStringAttribute('vrouter_gateway');
  }
  public set vrouterGateway(value: string) {
    this._vrouterGateway = value;
  }
  public resetVrouterGateway() {
    this._vrouterGateway = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrouterGatewayInput() {
    return this._vrouterGateway;
  }

  // xmmp_ssl_enable - computed: false, optional: true, required: false
  private _xmmpSslEnable?: boolean | cdktf.IResolvable; 
  public get xmmpSslEnable() {
    return this.getBooleanAttribute('xmmp_ssl_enable');
  }
  public set xmmpSslEnable(value: boolean | cdktf.IResolvable) {
    this._xmmpSslEnable = value;
  }
  public resetXmmpSslEnable() {
    this._xmmpSslEnable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xmmpSslEnableInput() {
    return this._xmmpSslEnable;
  }

  // xmpp_server_ca_certfile - computed: false, optional: true, required: false
  private _xmppServerCaCertfile?: string; 
  public get xmppServerCaCertfile() {
    return this.getStringAttribute('xmpp_server_ca_certfile');
  }
  public set xmppServerCaCertfile(value: string) {
    this._xmppServerCaCertfile = value;
  }
  public resetXmppServerCaCertfile() {
    this._xmppServerCaCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xmppServerCaCertfileInput() {
    return this._xmppServerCaCertfile;
  }

  // xmpp_server_certfile - computed: false, optional: true, required: false
  private _xmppServerCertfile?: string; 
  public get xmppServerCertfile() {
    return this.getStringAttribute('xmpp_server_certfile');
  }
  public set xmppServerCertfile(value: string) {
    this._xmppServerCertfile = value;
  }
  public resetXmppServerCertfile() {
    this._xmppServerCertfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xmppServerCertfileInput() {
    return this._xmppServerCertfile;
  }

  // xmpp_server_keyfile - computed: false, optional: true, required: false
  private _xmppServerKeyfile?: string; 
  public get xmppServerKeyfile() {
    return this.getStringAttribute('xmpp_server_keyfile');
  }
  public set xmppServerKeyfile(value: string) {
    this._xmppServerKeyfile = value;
  }
  public resetXmppServerKeyfile() {
    this._xmppServerKeyfile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xmppServerKeyfileInput() {
    return this._xmppServerKeyfile;
  }

  // xmpp_server_port - computed: false, optional: true, required: false
  private _xmppServerPort?: string; 
  public get xmppServerPort() {
    return this.getStringAttribute('xmpp_server_port');
  }
  public set xmppServerPort(value: string) {
    this._xmppServerPort = value;
  }
  public resetXmppServerPort() {
    this._xmppServerPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get xmppServerPortInput() {
    return this._xmppServerPort;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfiguration;
  /**
  * VrouterConfiguration is the Spec for the vrouter API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVrouters {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadata;
  /**
  * VrouterSpec is the Spec for the vrouter API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVrouters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVrouters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVrouters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVrouters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVrouters[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfiguration {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#control_instance DataK8STfTungstenIoManagerV1Alpha1Manifest#control_instance}
  */
  readonly controlInstance?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
    control_instance: cdktf.stringToTerraform(struct!.controlInstance),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainersList",
    },
    control_instance: {
      value: cdktf.stringToHclTerraform(struct!.controlInstance),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._controlInstance !== undefined) {
      hasAnyValues = true;
      internalValueResult.controlInstance = this._controlInstance;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containers.internalValue = undefined;
      this._controlInstance = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containers.internalValue = value.containers;
      this._controlInstance = value.controlInstance;
    }
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // control_instance - computed: false, optional: true, required: false
  private _controlInstance?: string; 
  public get controlInstance() {
    return this.getStringAttribute('control_instance');
  }
  public set controlInstance(value: string) {
    this._controlInstance = value;
  }
  public resetControlInstance() {
    this._controlInstance = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get controlInstanceInput() {
    return this._controlInstance;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfiguration;
  /**
  * WebuiConfiguration is the Spec for the cassandras API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebui {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadata;
  /**
  * WebuiSpec is the Spec for the cassandras API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebui | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebui | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebui | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebui | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadata {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#labels DataK8STfTungstenIoManagerV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadataToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadataToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._labels = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._labels = value.labels;
      this._name = value.name;
    }
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParameters {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#address DataK8STfTungstenIoManagerV1Alpha1Manifest#address}
  */
  readonly address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_password DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_password}
  */
  readonly adminPassword?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_tenant DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_tenant}
  */
  readonly adminTenant?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_username DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_username}
  */
  readonly adminUsername?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_protocol DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_protocol}
  */
  readonly authProtocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#insecure DataK8STfTungstenIoManagerV1Alpha1Manifest#insecure}
  */
  readonly insecure?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#port DataK8STfTungstenIoManagerV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#project_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#project_domain_name}
  */
  readonly projectDomainName?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#region DataK8STfTungstenIoManagerV1Alpha1Manifest#region}
  */
  readonly region?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#user_domain_name DataK8STfTungstenIoManagerV1Alpha1Manifest#user_domain_name}
  */
  readonly userDomainName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    address: cdktf.stringToTerraform(struct!.address),
    admin_password: cdktf.stringToTerraform(struct!.adminPassword),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    admin_tenant: cdktf.stringToTerraform(struct!.adminTenant),
    admin_username: cdktf.stringToTerraform(struct!.adminUsername),
    auth_protocol: cdktf.stringToTerraform(struct!.authProtocol),
    insecure: cdktf.booleanToTerraform(struct!.insecure),
    port: cdktf.numberToTerraform(struct!.port),
    project_domain_name: cdktf.stringToTerraform(struct!.projectDomainName),
    region: cdktf.stringToTerraform(struct!.region),
    user_domain_name: cdktf.stringToTerraform(struct!.userDomainName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    address: {
      value: cdktf.stringToHclTerraform(struct!.address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_password: {
      value: cdktf.stringToHclTerraform(struct!.adminPassword),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    admin_tenant: {
      value: cdktf.stringToHclTerraform(struct!.adminTenant),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    admin_username: {
      value: cdktf.stringToHclTerraform(struct!.adminUsername),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    auth_protocol: {
      value: cdktf.stringToHclTerraform(struct!.authProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    insecure: {
      value: cdktf.booleanToHclTerraform(struct!.insecure),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    project_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.projectDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    region: {
      value: cdktf.stringToHclTerraform(struct!.region),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.userDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._adminPassword !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPassword = this._adminPassword;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._adminTenant !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminTenant = this._adminTenant;
    }
    if (this._adminUsername !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminUsername = this._adminUsername;
    }
    if (this._authProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.authProtocol = this._authProtocol;
    }
    if (this._insecure !== undefined) {
      hasAnyValues = true;
      internalValueResult.insecure = this._insecure;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._projectDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.projectDomainName = this._projectDomainName;
    }
    if (this._region !== undefined) {
      hasAnyValues = true;
      internalValueResult.region = this._region;
    }
    if (this._userDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDomainName = this._userDomainName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._address = undefined;
      this._adminPassword = undefined;
      this._adminPort = undefined;
      this._adminTenant = undefined;
      this._adminUsername = undefined;
      this._authProtocol = undefined;
      this._insecure = undefined;
      this._port = undefined;
      this._projectDomainName = undefined;
      this._region = undefined;
      this._userDomainName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._address = value.address;
      this._adminPassword = value.adminPassword;
      this._adminPort = value.adminPort;
      this._adminTenant = value.adminTenant;
      this._adminUsername = value.adminUsername;
      this._authProtocol = value.authProtocol;
      this._insecure = value.insecure;
      this._port = value.port;
      this._projectDomainName = value.projectDomainName;
      this._region = value.region;
      this._userDomainName = value.userDomainName;
    }
  }

  // address - computed: false, optional: true, required: false
  private _address?: string; 
  public get address() {
    return this.getStringAttribute('address');
  }
  public set address(value: string) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // admin_password - computed: false, optional: true, required: false
  private _adminPassword?: string; 
  public get adminPassword() {
    return this.getStringAttribute('admin_password');
  }
  public set adminPassword(value: string) {
    this._adminPassword = value;
  }
  public resetAdminPassword() {
    this._adminPassword = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPasswordInput() {
    return this._adminPassword;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // admin_tenant - computed: false, optional: true, required: false
  private _adminTenant?: string; 
  public get adminTenant() {
    return this.getStringAttribute('admin_tenant');
  }
  public set adminTenant(value: string) {
    this._adminTenant = value;
  }
  public resetAdminTenant() {
    this._adminTenant = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminTenantInput() {
    return this._adminTenant;
  }

  // admin_username - computed: false, optional: true, required: false
  private _adminUsername?: string; 
  public get adminUsername() {
    return this.getStringAttribute('admin_username');
  }
  public set adminUsername(value: string) {
    this._adminUsername = value;
  }
  public resetAdminUsername() {
    this._adminUsername = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminUsernameInput() {
    return this._adminUsername;
  }

  // auth_protocol - computed: false, optional: true, required: false
  private _authProtocol?: string; 
  public get authProtocol() {
    return this.getStringAttribute('auth_protocol');
  }
  public set authProtocol(value: string) {
    this._authProtocol = value;
  }
  public resetAuthProtocol() {
    this._authProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authProtocolInput() {
    return this._authProtocol;
  }

  // insecure - computed: false, optional: true, required: false
  private _insecure?: boolean | cdktf.IResolvable; 
  public get insecure() {
    return this.getBooleanAttribute('insecure');
  }
  public set insecure(value: boolean | cdktf.IResolvable) {
    this._insecure = value;
  }
  public resetInsecure() {
    this._insecure = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get insecureInput() {
    return this._insecure;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // project_domain_name - computed: false, optional: true, required: false
  private _projectDomainName?: string; 
  public get projectDomainName() {
    return this.getStringAttribute('project_domain_name');
  }
  public set projectDomainName(value: string) {
    this._projectDomainName = value;
  }
  public resetProjectDomainName() {
    this._projectDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get projectDomainNameInput() {
    return this._projectDomainName;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this.getStringAttribute('region');
  }
  public set region(value: string) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // user_domain_name - computed: false, optional: true, required: false
  private _userDomainName?: string; 
  public get userDomainName() {
    return this.getStringAttribute('user_domain_name');
  }
  public set userDomainName(value: string) {
    this._userDomainName = value;
  }
  public resetUserDomainName() {
    this._userDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDomainNameInput() {
    return this._userDomainName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParameters {
  /**
  * AuthenticationMode auth mode
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_mode DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_mode}
  */
  readonly authMode?: string;
  /**
  * KeystoneAuthParameters keystone parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_auth_parameters}
  */
  readonly keystoneAuthParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParameters;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#keystone_secret_name DataK8STfTungstenIoManagerV1Alpha1Manifest#keystone_secret_name}
  */
  readonly keystoneSecretName?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_mode: cdktf.stringToTerraform(struct!.authMode),
    keystone_auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParametersToTerraform(struct!.keystoneAuthParameters),
    keystone_secret_name: cdktf.stringToTerraform(struct!.keystoneSecretName),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParameters | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_mode: {
      value: cdktf.stringToHclTerraform(struct!.authMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    keystone_auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParametersToHclTerraform(struct!.keystoneAuthParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParameters",
    },
    keystone_secret_name: {
      value: cdktf.stringToHclTerraform(struct!.keystoneSecretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.authMode = this._authMode;
    }
    if (this._keystoneAuthParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneAuthParameters = this._keystoneAuthParameters?.internalValue;
    }
    if (this._keystoneSecretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keystoneSecretName = this._keystoneSecretName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParameters | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authMode = undefined;
      this._keystoneAuthParameters.internalValue = undefined;
      this._keystoneSecretName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authMode = value.authMode;
      this._keystoneAuthParameters.internalValue = value.keystoneAuthParameters;
      this._keystoneSecretName = value.keystoneSecretName;
    }
  }

  // auth_mode - computed: false, optional: true, required: false
  private _authMode?: string; 
  public get authMode() {
    return this.getStringAttribute('auth_mode');
  }
  public set authMode(value: string) {
    this._authMode = value;
  }
  public resetAuthMode() {
    this._authMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authModeInput() {
    return this._authMode;
  }

  // keystone_auth_parameters - computed: false, optional: true, required: false
  private _keystoneAuthParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParametersOutputReference(this, "keystone_auth_parameters");
  public get keystoneAuthParameters() {
    return this._keystoneAuthParameters;
  }
  public putKeystoneAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersKeystoneAuthParameters) {
    this._keystoneAuthParameters.internalValue = value;
  }
  public resetKeystoneAuthParameters() {
    this._keystoneAuthParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneAuthParametersInput() {
    return this._keystoneAuthParameters.internalValue;
  }

  // keystone_secret_name - computed: false, optional: true, required: false
  private _keystoneSecretName?: string; 
  public get keystoneSecretName() {
    return this.getStringAttribute('keystone_secret_name');
  }
  public set keystoneSecretName(value: string) {
    this._keystoneSecretName = value;
  }
  public resetKeystoneSecretName() {
    this._keystoneSecretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keystoneSecretNameInput() {
    return this._keystoneSecretName;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerations {
  /**
  * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#effect DataK8STfTungstenIoManagerV1Alpha1Manifest#effect}
  */
  readonly effect?: string;
  /**
  * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#key DataK8STfTungstenIoManagerV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#operator DataK8STfTungstenIoManagerV1Alpha1Manifest#operator}
  */
  readonly operator?: string;
  /**
  * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#toleration_seconds DataK8STfTungstenIoManagerV1Alpha1Manifest#toleration_seconds}
  */
  readonly tolerationSeconds?: number;
  /**
  * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#value DataK8STfTungstenIoManagerV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerationsToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    effect: cdktf.stringToTerraform(struct!.effect),
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    toleration_seconds: cdktf.numberToTerraform(struct!.tolerationSeconds),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerationsToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerations | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    effect: {
      value: cdktf.stringToHclTerraform(struct!.effect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    toleration_seconds: {
      value: cdktf.numberToHclTerraform(struct!.tolerationSeconds),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerationsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._effect !== undefined) {
      hasAnyValues = true;
      internalValueResult.effect = this._effect;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._tolerationSeconds !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerationSeconds = this._tolerationSeconds;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerations | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._effect = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._tolerationSeconds = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._effect = value.effect;
      this._key = value.key;
      this._operator = value.operator;
      this._tolerationSeconds = value.tolerationSeconds;
      this._value = value.value;
    }
  }

  // effect - computed: false, optional: true, required: false
  private _effect?: string; 
  public get effect() {
    return this.getStringAttribute('effect');
  }
  public set effect(value: string) {
    this._effect = value;
  }
  public resetEffect() {
    this._effect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get effectInput() {
    return this._effect;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: true, required: false
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  public resetOperator() {
    this._operator = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // toleration_seconds - computed: false, optional: true, required: false
  private _tolerationSeconds?: number; 
  public get tolerationSeconds() {
    return this.getNumberAttribute('toleration_seconds');
  }
  public set tolerationSeconds(value: number) {
    this._tolerationSeconds = value;
  }
  public resetTolerationSeconds() {
    this._tolerationSeconds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationSecondsInput() {
    return this._tolerationSeconds;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerationsList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerations[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerationsOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerationsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfiguration {
  /**
  * AuthParameters auth parameters
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#auth_parameters DataK8STfTungstenIoManagerV1Alpha1Manifest#auth_parameters}
  */
  readonly authParameters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParameters;
  /**
  * OS family
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#distribution DataK8STfTungstenIoManagerV1Alpha1Manifest#distribution}
  */
  readonly distribution?: string;
  /**
  * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image_pull_secrets DataK8STfTungstenIoManagerV1Alpha1Manifest#image_pull_secrets}
  */
  readonly imagePullSecrets?: string[];
  /**
  * Kubernetes Cluster Configuration
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#log_level DataK8STfTungstenIoManagerV1Alpha1Manifest#log_level}
  */
  readonly logLevel?: string;
  /**
  * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#node_selector DataK8STfTungstenIoManagerV1Alpha1Manifest#node_selector}
  */
  readonly nodeSelector?: { [key: string]: string };
  /**
  * If specified, the pod's tolerations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#tolerations DataK8STfTungstenIoManagerV1Alpha1Manifest#tolerations}
  */
  readonly tolerations?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerations[] | cdktf.IResolvable;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    auth_parameters: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersToTerraform(struct!.authParameters),
    distribution: cdktf.stringToTerraform(struct!.distribution),
    image_pull_secrets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.imagePullSecrets),
    log_level: cdktf.stringToTerraform(struct!.logLevel),
    node_selector: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelector),
    tolerations: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerationsToTerraform, false)(struct!.tolerations),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    auth_parameters: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersToHclTerraform(struct!.authParameters),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParameters",
    },
    distribution: {
      value: cdktf.stringToHclTerraform(struct!.distribution),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    image_pull_secrets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.imagePullSecrets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    log_level: {
      value: cdktf.stringToHclTerraform(struct!.logLevel),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    node_selector: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelector),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    tolerations: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerationsToHclTerraform, false)(struct!.tolerations),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerationsList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._authParameters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.authParameters = this._authParameters?.internalValue;
    }
    if (this._distribution !== undefined) {
      hasAnyValues = true;
      internalValueResult.distribution = this._distribution;
    }
    if (this._imagePullSecrets !== undefined) {
      hasAnyValues = true;
      internalValueResult.imagePullSecrets = this._imagePullSecrets;
    }
    if (this._logLevel !== undefined) {
      hasAnyValues = true;
      internalValueResult.logLevel = this._logLevel;
    }
    if (this._nodeSelector !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelector = this._nodeSelector;
    }
    if (this._tolerations?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tolerations = this._tolerations?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = undefined;
      this._distribution = undefined;
      this._imagePullSecrets = undefined;
      this._logLevel = undefined;
      this._nodeSelector = undefined;
      this._tolerations.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._authParameters.internalValue = value.authParameters;
      this._distribution = value.distribution;
      this._imagePullSecrets = value.imagePullSecrets;
      this._logLevel = value.logLevel;
      this._nodeSelector = value.nodeSelector;
      this._tolerations.internalValue = value.tolerations;
    }
  }

  // auth_parameters - computed: false, optional: true, required: false
  private _authParameters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParametersOutputReference(this, "auth_parameters");
  public get authParameters() {
    return this._authParameters;
  }
  public putAuthParameters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationAuthParameters) {
    this._authParameters.internalValue = value;
  }
  public resetAuthParameters() {
    this._authParameters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authParametersInput() {
    return this._authParameters.internalValue;
  }

  // distribution - computed: false, optional: true, required: false
  private _distribution?: string; 
  public get distribution() {
    return this.getStringAttribute('distribution');
  }
  public set distribution(value: string) {
    this._distribution = value;
  }
  public resetDistribution() {
    this._distribution = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distributionInput() {
    return this._distribution;
  }

  // image_pull_secrets - computed: false, optional: true, required: false
  private _imagePullSecrets?: string[]; 
  public get imagePullSecrets() {
    return this.getListAttribute('image_pull_secrets');
  }
  public set imagePullSecrets(value: string[]) {
    this._imagePullSecrets = value;
  }
  public resetImagePullSecrets() {
    this._imagePullSecrets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imagePullSecretsInput() {
    return this._imagePullSecrets;
  }

  // log_level - computed: false, optional: true, required: false
  private _logLevel?: string; 
  public get logLevel() {
    return this.getStringAttribute('log_level');
  }
  public set logLevel(value: string) {
    this._logLevel = value;
  }
  public resetLogLevel() {
    this._logLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logLevelInput() {
    return this._logLevel;
  }

  // node_selector - computed: false, optional: true, required: false
  private _nodeSelector?: { [key: string]: string }; 
  public get nodeSelector() {
    return this.getStringMapAttribute('node_selector');
  }
  public set nodeSelector(value: { [key: string]: string }) {
    this._nodeSelector = value;
  }
  public resetNodeSelector() {
    this._nodeSelector = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorInput() {
    return this._nodeSelector;
  }

  // tolerations - computed: false, optional: true, required: false
  private _tolerations = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerationsList(this, "tolerations", false);
  public get tolerations() {
    return this._tolerations;
  }
  public putTolerations(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationTolerations[] | cdktf.IResolvable) {
    this._tolerations.internalValue = value;
  }
  public resetTolerations() {
    this._tolerations.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tolerationsInput() {
    return this._tolerations.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#command DataK8STfTungstenIoManagerV1Alpha1Manifest#command}
  */
  readonly command?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#image DataK8STfTungstenIoManagerV1Alpha1Manifest#image}
  */
  readonly image?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#name DataK8STfTungstenIoManagerV1Alpha1Manifest#name}
  */
  readonly name?: string;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainersToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    command: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.command),
    image: cdktf.stringToTerraform(struct!.image),
    name: cdktf.stringToTerraform(struct!.name),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainersToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    command: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.command),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    image: {
      value: cdktf.stringToHclTerraform(struct!.image),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._command !== undefined) {
      hasAnyValues = true;
      internalValueResult.command = this._command;
    }
    if (this._image !== undefined) {
      hasAnyValues = true;
      internalValueResult.image = this._image;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._command = undefined;
      this._image = undefined;
      this._name = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._command = value.command;
      this._image = value.image;
      this._name = value.name;
    }
  }

  // command - computed: false, optional: true, required: false
  private _command?: string[]; 
  public get command() {
    return this.getListAttribute('command');
  }
  public set command(value: string[]) {
    this._command = value;
  }
  public resetCommand() {
    this._command = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commandInput() {
    return this._command;
  }

  // image - computed: false, optional: true, required: false
  private _image?: string; 
  public get image() {
    return this.getStringAttribute('image');
  }
  public set image(value: string) {
    this._image = value;
  }
  public resetImage() {
    this._image = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get imageInput() {
    return this._image;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainersList extends cdktf.ComplexList {
  public internalValue? : DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainersOutputReference {
    return new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfiguration {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_enabled DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_enabled}
  */
  readonly adminEnabled?: boolean | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#admin_port DataK8STfTungstenIoManagerV1Alpha1Manifest#admin_port}
  */
  readonly adminPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#client_port DataK8STfTungstenIoManagerV1Alpha1Manifest#client_port}
  */
  readonly clientPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#containers DataK8STfTungstenIoManagerV1Alpha1Manifest#containers}
  */
  readonly containers?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainers[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#election_port DataK8STfTungstenIoManagerV1Alpha1Manifest#election_port}
  */
  readonly electionPort?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#server_port DataK8STfTungstenIoManagerV1Alpha1Manifest#server_port}
  */
  readonly serverPort?: number;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    admin_enabled: cdktf.booleanToTerraform(struct!.adminEnabled),
    admin_port: cdktf.numberToTerraform(struct!.adminPort),
    client_port: cdktf.numberToTerraform(struct!.clientPort),
    containers: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainersToTerraform, false)(struct!.containers),
    election_port: cdktf.numberToTerraform(struct!.electionPort),
    server_port: cdktf.numberToTerraform(struct!.serverPort),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfiguration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    admin_enabled: {
      value: cdktf.booleanToHclTerraform(struct!.adminEnabled),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    admin_port: {
      value: cdktf.numberToHclTerraform(struct!.adminPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    client_port: {
      value: cdktf.numberToHclTerraform(struct!.clientPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    containers: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainersToHclTerraform, false)(struct!.containers),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainersList",
    },
    election_port: {
      value: cdktf.numberToHclTerraform(struct!.electionPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    server_port: {
      value: cdktf.numberToHclTerraform(struct!.serverPort),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfiguration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._adminEnabled !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminEnabled = this._adminEnabled;
    }
    if (this._adminPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.adminPort = this._adminPort;
    }
    if (this._clientPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.clientPort = this._clientPort;
    }
    if (this._containers?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.containers = this._containers?.internalValue;
    }
    if (this._electionPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.electionPort = this._electionPort;
    }
    if (this._serverPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.serverPort = this._serverPort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfiguration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._adminEnabled = undefined;
      this._adminPort = undefined;
      this._clientPort = undefined;
      this._containers.internalValue = undefined;
      this._electionPort = undefined;
      this._serverPort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._adminEnabled = value.adminEnabled;
      this._adminPort = value.adminPort;
      this._clientPort = value.clientPort;
      this._containers.internalValue = value.containers;
      this._electionPort = value.electionPort;
      this._serverPort = value.serverPort;
    }
  }

  // admin_enabled - computed: false, optional: true, required: false
  private _adminEnabled?: boolean | cdktf.IResolvable; 
  public get adminEnabled() {
    return this.getBooleanAttribute('admin_enabled');
  }
  public set adminEnabled(value: boolean | cdktf.IResolvable) {
    this._adminEnabled = value;
  }
  public resetAdminEnabled() {
    this._adminEnabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminEnabledInput() {
    return this._adminEnabled;
  }

  // admin_port - computed: false, optional: true, required: false
  private _adminPort?: number; 
  public get adminPort() {
    return this.getNumberAttribute('admin_port');
  }
  public set adminPort(value: number) {
    this._adminPort = value;
  }
  public resetAdminPort() {
    this._adminPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get adminPortInput() {
    return this._adminPort;
  }

  // client_port - computed: false, optional: true, required: false
  private _clientPort?: number; 
  public get clientPort() {
    return this.getNumberAttribute('client_port');
  }
  public set clientPort(value: number) {
    this._clientPort = value;
  }
  public resetClientPort() {
    this._clientPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clientPortInput() {
    return this._clientPort;
  }

  // containers - computed: false, optional: true, required: false
  private _containers = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainersList(this, "containers", false);
  public get containers() {
    return this._containers;
  }
  public putContainers(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationContainers[] | cdktf.IResolvable) {
    this._containers.internalValue = value;
  }
  public resetContainers() {
    this._containers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containersInput() {
    return this._containers.internalValue;
  }

  // election_port - computed: false, optional: true, required: false
  private _electionPort?: number; 
  public get electionPort() {
    return this.getNumberAttribute('election_port');
  }
  public set electionPort(value: number) {
    this._electionPort = value;
  }
  public resetElectionPort() {
    this._electionPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get electionPortInput() {
    return this._electionPort;
  }

  // server_port - computed: false, optional: true, required: false
  private _serverPort?: number; 
  public get serverPort() {
    return this.getNumberAttribute('server_port');
  }
  public set serverPort(value: number) {
    this._serverPort = value;
  }
  public resetServerPort() {
    this._serverPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get serverPortInput() {
    return this._serverPort;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpec {
  /**
  * PodConfiguration is the common services struct.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfiguration;
  /**
  * ZookeeperConfiguration is the Spec for the zookeeper API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#service_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#service_configuration}
  */
  readonly serviceConfiguration: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfiguration;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    service_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationToTerraform(struct!.serviceConfiguration),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfiguration",
    },
    service_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationToHclTerraform(struct!.serviceConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfiguration",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._serviceConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.serviceConfiguration = this._serviceConfiguration?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._serviceConfiguration.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._serviceConfiguration.internalValue = value.serviceConfiguration;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // service_configuration - computed: false, optional: false, required: true
  private _serviceConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfigurationOutputReference(this, "service_configuration");
  public get serviceConfiguration() {
    return this._serviceConfiguration;
  }
  public putServiceConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecServiceConfiguration) {
    this._serviceConfiguration.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serviceConfigurationInput() {
    return this._serviceConfiguration.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeper {
  /**
  * Input data is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#metadata DataK8STfTungstenIoManagerV1Alpha1Manifest#metadata}
  */
  readonly metadata?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadata;
  /**
  * ZookeeperSpec is the Spec for the zookeeper API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#spec DataK8STfTungstenIoManagerV1Alpha1Manifest#spec}
  */
  readonly spec?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpec;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeper | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadataToTerraform(struct!.metadata),
    spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecToTerraform(struct!.spec),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeper | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    metadata: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadataToHclTerraform(struct!.metadata),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadata",
    },
    spec: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecToHclTerraform(struct!.spec),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpec",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeper | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._metadata?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.metadata = this._metadata?.internalValue;
    }
    if (this._spec?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.spec = this._spec?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeper | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._metadata.internalValue = undefined;
      this._spec.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._metadata.internalValue = value.metadata;
      this._spec.internalValue = value.spec;
    }
  }

  // metadata - computed: false, optional: true, required: false
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperMetadata) {
    this._metadata.internalValue = value;
  }
  public resetMetadata() {
    this._metadata.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServices {
  /**
  * AnalyticsInput is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#analytics DataK8STfTungstenIoManagerV1Alpha1Manifest#analytics}
  */
  readonly analytics?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalytics;
  /**
  * AnalyticsAlarmInput is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#analytics_alarm DataK8STfTungstenIoManagerV1Alpha1Manifest#analytics_alarm}
  */
  readonly analyticsAlarm?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarm;
  /**
  * AnalyticsSnmpInput is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#analytics_snmp DataK8STfTungstenIoManagerV1Alpha1Manifest#analytics_snmp}
  */
  readonly analyticsSnmp?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmp;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#cassandras DataK8STfTungstenIoManagerV1Alpha1Manifest#cassandras}
  */
  readonly cassandras?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandras[] | cdktf.IResolvable;
  /**
  * ConfigInput is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#config DataK8STfTungstenIoManagerV1Alpha1Manifest#config}
  */
  readonly config?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfig;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#controls DataK8STfTungstenIoManagerV1Alpha1Manifest#controls}
  */
  readonly controls?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControls[] | cdktf.IResolvable;
  /**
  * KubemanagerInput is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#kubemanager DataK8STfTungstenIoManagerV1Alpha1Manifest#kubemanager}
  */
  readonly kubemanager?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanager;
  /**
  * QueryEngineInput is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#queryengine DataK8STfTungstenIoManagerV1Alpha1Manifest#queryengine}
  */
  readonly queryengine?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengine;
  /**
  * RabbitmqInput is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#rabbitmq DataK8STfTungstenIoManagerV1Alpha1Manifest#rabbitmq}
  */
  readonly rabbitmq?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmq;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#redis DataK8STfTungstenIoManagerV1Alpha1Manifest#redis}
  */
  readonly redis?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedis[] | cdktf.IResolvable;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#vrouters DataK8STfTungstenIoManagerV1Alpha1Manifest#vrouters}
  */
  readonly vrouters?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVrouters[] | cdktf.IResolvable;
  /**
  * WebuiInput is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#webui DataK8STfTungstenIoManagerV1Alpha1Manifest#webui}
  */
  readonly webui?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebui;
  /**
  * ZookeeperInput is the Schema for the analytics API.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#zookeeper DataK8STfTungstenIoManagerV1Alpha1Manifest#zookeeper}
  */
  readonly zookeeper?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeper;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServices | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    analytics: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsToTerraform(struct!.analytics),
    analytics_alarm: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmToTerraform(struct!.analyticsAlarm),
    analytics_snmp: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpToTerraform(struct!.analyticsSnmp),
    cassandras: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasToTerraform, false)(struct!.cassandras),
    config: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigToTerraform(struct!.config),
    controls: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsToTerraform, false)(struct!.controls),
    kubemanager: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerToTerraform(struct!.kubemanager),
    queryengine: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineToTerraform(struct!.queryengine),
    rabbitmq: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqToTerraform(struct!.rabbitmq),
    redis: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisToTerraform, false)(struct!.redis),
    vrouters: cdktf.listMapper(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersToTerraform, false)(struct!.vrouters),
    webui: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiToTerraform(struct!.webui),
    zookeeper: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperToTerraform(struct!.zookeeper),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServices | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    analytics: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsToHclTerraform(struct!.analytics),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalytics",
    },
    analytics_alarm: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmToHclTerraform(struct!.analyticsAlarm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarm",
    },
    analytics_snmp: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpToHclTerraform(struct!.analyticsSnmp),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmp",
    },
    cassandras: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasToHclTerraform, false)(struct!.cassandras),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasList",
    },
    config: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigToHclTerraform(struct!.config),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfig",
    },
    controls: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsToHclTerraform, false)(struct!.controls),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsList",
    },
    kubemanager: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerToHclTerraform(struct!.kubemanager),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanager",
    },
    queryengine: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineToHclTerraform(struct!.queryengine),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengine",
    },
    rabbitmq: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqToHclTerraform(struct!.rabbitmq),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmq",
    },
    redis: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisToHclTerraform, false)(struct!.redis),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisList",
    },
    vrouters: {
      value: cdktf.listMapperHcl(dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersToHclTerraform, false)(struct!.vrouters),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersList",
    },
    webui: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiToHclTerraform(struct!.webui),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebui",
    },
    zookeeper: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperToHclTerraform(struct!.zookeeper),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeper",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServices | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._analytics?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.analytics = this._analytics?.internalValue;
    }
    if (this._analyticsAlarm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.analyticsAlarm = this._analyticsAlarm?.internalValue;
    }
    if (this._analyticsSnmp?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.analyticsSnmp = this._analyticsSnmp?.internalValue;
    }
    if (this._cassandras?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cassandras = this._cassandras?.internalValue;
    }
    if (this._config?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.config = this._config?.internalValue;
    }
    if (this._controls?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.controls = this._controls?.internalValue;
    }
    if (this._kubemanager?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kubemanager = this._kubemanager?.internalValue;
    }
    if (this._queryengine?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.queryengine = this._queryengine?.internalValue;
    }
    if (this._rabbitmq?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rabbitmq = this._rabbitmq?.internalValue;
    }
    if (this._redis?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.redis = this._redis?.internalValue;
    }
    if (this._vrouters?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrouters = this._vrouters?.internalValue;
    }
    if (this._webui?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.webui = this._webui?.internalValue;
    }
    if (this._zookeeper?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.zookeeper = this._zookeeper?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServices | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._analytics.internalValue = undefined;
      this._analyticsAlarm.internalValue = undefined;
      this._analyticsSnmp.internalValue = undefined;
      this._cassandras.internalValue = undefined;
      this._config.internalValue = undefined;
      this._controls.internalValue = undefined;
      this._kubemanager.internalValue = undefined;
      this._queryengine.internalValue = undefined;
      this._rabbitmq.internalValue = undefined;
      this._redis.internalValue = undefined;
      this._vrouters.internalValue = undefined;
      this._webui.internalValue = undefined;
      this._zookeeper.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._analytics.internalValue = value.analytics;
      this._analyticsAlarm.internalValue = value.analyticsAlarm;
      this._analyticsSnmp.internalValue = value.analyticsSnmp;
      this._cassandras.internalValue = value.cassandras;
      this._config.internalValue = value.config;
      this._controls.internalValue = value.controls;
      this._kubemanager.internalValue = value.kubemanager;
      this._queryengine.internalValue = value.queryengine;
      this._rabbitmq.internalValue = value.rabbitmq;
      this._redis.internalValue = value.redis;
      this._vrouters.internalValue = value.vrouters;
      this._webui.internalValue = value.webui;
      this._zookeeper.internalValue = value.zookeeper;
    }
  }

  // analytics - computed: false, optional: true, required: false
  private _analytics = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsOutputReference(this, "analytics");
  public get analytics() {
    return this._analytics;
  }
  public putAnalytics(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalytics) {
    this._analytics.internalValue = value;
  }
  public resetAnalytics() {
    this._analytics.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyticsInput() {
    return this._analytics.internalValue;
  }

  // analytics_alarm - computed: false, optional: true, required: false
  private _analyticsAlarm = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarmOutputReference(this, "analytics_alarm");
  public get analyticsAlarm() {
    return this._analyticsAlarm;
  }
  public putAnalyticsAlarm(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsAlarm) {
    this._analyticsAlarm.internalValue = value;
  }
  public resetAnalyticsAlarm() {
    this._analyticsAlarm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyticsAlarmInput() {
    return this._analyticsAlarm.internalValue;
  }

  // analytics_snmp - computed: false, optional: true, required: false
  private _analyticsSnmp = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmpOutputReference(this, "analytics_snmp");
  public get analyticsSnmp() {
    return this._analyticsSnmp;
  }
  public putAnalyticsSnmp(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesAnalyticsSnmp) {
    this._analyticsSnmp.internalValue = value;
  }
  public resetAnalyticsSnmp() {
    this._analyticsSnmp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get analyticsSnmpInput() {
    return this._analyticsSnmp.internalValue;
  }

  // cassandras - computed: false, optional: true, required: false
  private _cassandras = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandrasList(this, "cassandras", false);
  public get cassandras() {
    return this._cassandras;
  }
  public putCassandras(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesCassandras[] | cdktf.IResolvable) {
    this._cassandras.internalValue = value;
  }
  public resetCassandras() {
    this._cassandras.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cassandrasInput() {
    return this._cassandras.internalValue;
  }

  // config - computed: false, optional: true, required: false
  private _config = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfigOutputReference(this, "config");
  public get config() {
    return this._config;
  }
  public putConfig(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesConfig) {
    this._config.internalValue = value;
  }
  public resetConfig() {
    this._config.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configInput() {
    return this._config.internalValue;
  }

  // controls - computed: false, optional: true, required: false
  private _controls = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControlsList(this, "controls", false);
  public get controls() {
    return this._controls;
  }
  public putControls(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesControls[] | cdktf.IResolvable) {
    this._controls.internalValue = value;
  }
  public resetControls() {
    this._controls.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get controlsInput() {
    return this._controls.internalValue;
  }

  // kubemanager - computed: false, optional: true, required: false
  private _kubemanager = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanagerOutputReference(this, "kubemanager");
  public get kubemanager() {
    return this._kubemanager;
  }
  public putKubemanager(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesKubemanager) {
    this._kubemanager.internalValue = value;
  }
  public resetKubemanager() {
    this._kubemanager.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kubemanagerInput() {
    return this._kubemanager.internalValue;
  }

  // queryengine - computed: false, optional: true, required: false
  private _queryengine = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengineOutputReference(this, "queryengine");
  public get queryengine() {
    return this._queryengine;
  }
  public putQueryengine(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesQueryengine) {
    this._queryengine.internalValue = value;
  }
  public resetQueryengine() {
    this._queryengine.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queryengineInput() {
    return this._queryengine.internalValue;
  }

  // rabbitmq - computed: false, optional: true, required: false
  private _rabbitmq = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmqOutputReference(this, "rabbitmq");
  public get rabbitmq() {
    return this._rabbitmq;
  }
  public putRabbitmq(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRabbitmq) {
    this._rabbitmq.internalValue = value;
  }
  public resetRabbitmq() {
    this._rabbitmq.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rabbitmqInput() {
    return this._rabbitmq.internalValue;
  }

  // redis - computed: false, optional: true, required: false
  private _redis = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedisList(this, "redis", false);
  public get redis() {
    return this._redis;
  }
  public putRedis(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesRedis[] | cdktf.IResolvable) {
    this._redis.internalValue = value;
  }
  public resetRedis() {
    this._redis.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redisInput() {
    return this._redis.internalValue;
  }

  // vrouters - computed: false, optional: true, required: false
  private _vrouters = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVroutersList(this, "vrouters", false);
  public get vrouters() {
    return this._vrouters;
  }
  public putVrouters(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesVrouters[] | cdktf.IResolvable) {
    this._vrouters.internalValue = value;
  }
  public resetVrouters() {
    this._vrouters.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vroutersInput() {
    return this._vrouters.internalValue;
  }

  // webui - computed: false, optional: true, required: false
  private _webui = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebuiOutputReference(this, "webui");
  public get webui() {
    return this._webui;
  }
  public putWebui(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesWebui) {
    this._webui.internalValue = value;
  }
  public resetWebui() {
    this._webui.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get webuiInput() {
    return this._webui.internalValue;
  }

  // zookeeper - computed: false, optional: true, required: false
  private _zookeeper = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeperOutputReference(this, "zookeeper");
  public get zookeeper() {
    return this._zookeeper;
  }
  public putZookeeper(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesZookeeper) {
    this._zookeeper.internalValue = value;
  }
  public resetZookeeper() {
    this._zookeeper.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get zookeeperInput() {
    return this._zookeeper.internalValue;
  }
}
export interface DataK8STfTungstenIoManagerV1Alpha1ManifestSpec {
  /**
  * INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run 'operator-sdk generate k8s' to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#common_configuration DataK8STfTungstenIoManagerV1Alpha1Manifest#common_configuration}
  */
  readonly commonConfiguration?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfiguration;
  /**
  * Services defines the desired state of Services.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#services DataK8STfTungstenIoManagerV1Alpha1Manifest#services}
  */
  readonly services?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServices;
}

export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecToTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    common_configuration: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationToTerraform(struct!.commonConfiguration),
    services: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesToTerraform(struct!.services),
  }
}


export function dataK8STfTungstenIoManagerV1Alpha1ManifestSpecToHclTerraform(struct?: DataK8STfTungstenIoManagerV1Alpha1ManifestSpec | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    common_configuration: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationToHclTerraform(struct!.commonConfiguration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfiguration",
    },
    services: {
      value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesToHclTerraform(struct!.services),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServices",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8STfTungstenIoManagerV1Alpha1ManifestSpecOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8STfTungstenIoManagerV1Alpha1ManifestSpec | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._commonConfiguration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.commonConfiguration = this._commonConfiguration?.internalValue;
    }
    if (this._services?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.services = this._services?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpec | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = undefined;
      this._services.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._commonConfiguration.internalValue = value.commonConfiguration;
      this._services.internalValue = value.services;
    }
  }

  // common_configuration - computed: false, optional: true, required: false
  private _commonConfiguration = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfigurationOutputReference(this, "common_configuration");
  public get commonConfiguration() {
    return this._commonConfiguration;
  }
  public putCommonConfiguration(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecCommonConfiguration) {
    this._commonConfiguration.internalValue = value;
  }
  public resetCommonConfiguration() {
    this._commonConfiguration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get commonConfigurationInput() {
    return this._commonConfiguration.internalValue;
  }

  // services - computed: false, optional: true, required: false
  private _services = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServicesOutputReference(this, "services");
  public get services() {
    return this._services;
  }
  public putServices(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpecServices) {
    this._services.internalValue = value;
  }
  public resetServices() {
    this._services.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get servicesInput() {
    return this._services.internalValue;
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest k8s_tf_tungsten_io_manager_v1alpha1_manifest}
*/
export class DataK8STfTungstenIoManagerV1Alpha1Manifest extends cdktf.TerraformDataSource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "k8s_tf_tungsten_io_manager_v1alpha1_manifest";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a DataK8STfTungstenIoManagerV1Alpha1Manifest resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the DataK8STfTungstenIoManagerV1Alpha1Manifest to import
  * @param importFromId The id of the existing DataK8STfTungstenIoManagerV1Alpha1Manifest that should be imported. Refer to the {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the DataK8STfTungstenIoManagerV1Alpha1Manifest to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "k8s_tf_tungsten_io_manager_v1alpha1_manifest", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/tf_tungsten_io_manager_v1alpha1_manifest k8s_tf_tungsten_io_manager_v1alpha1_manifest} Data Source
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options DataK8STfTungstenIoManagerV1Alpha1ManifestConfig
  */
  public constructor(scope: Construct, id: string, config: DataK8STfTungstenIoManagerV1Alpha1ManifestConfig) {
    super(scope, id, {
      terraformResourceType: 'k8s_tf_tungsten_io_manager_v1alpha1_manifest',
      terraformGeneratorMetadata: {
        providerName: 'k8s',
        providerVersion: '2025.10.20'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._metadata.internalValue = config.metadata;
    this._spec.internalValue = config.spec;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // metadata - computed: false, optional: false, required: true
  private _metadata = new DataK8STfTungstenIoManagerV1Alpha1ManifestMetadataOutputReference(this, "metadata");
  public get metadata() {
    return this._metadata;
  }
  public putMetadata(value: DataK8STfTungstenIoManagerV1Alpha1ManifestMetadata) {
    this._metadata.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get metadataInput() {
    return this._metadata.internalValue;
  }

  // spec - computed: false, optional: true, required: false
  private _spec = new DataK8STfTungstenIoManagerV1Alpha1ManifestSpecOutputReference(this, "spec");
  public get spec() {
    return this._spec;
  }
  public putSpec(value: DataK8STfTungstenIoManagerV1Alpha1ManifestSpec) {
    this._spec.internalValue = value;
  }
  public resetSpec() {
    this._spec.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get specInput() {
    return this._spec.internalValue;
  }

  // yaml - computed: true, optional: false, required: false
  public get yaml() {
    return this.getStringAttribute('yaml');
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      metadata: dataK8STfTungstenIoManagerV1Alpha1ManifestMetadataToTerraform(this._metadata.internalValue),
      spec: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecToTerraform(this._spec.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      metadata: {
        value: dataK8STfTungstenIoManagerV1Alpha1ManifestMetadataToHclTerraform(this._metadata.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestMetadata",
      },
      spec: {
        value: dataK8STfTungstenIoManagerV1Alpha1ManifestSpecToHclTerraform(this._spec.internalValue),
        isBlock: true,
        type: "struct",
        storageClassType: "DataK8STfTungstenIoManagerV1Alpha1ManifestSpec",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
