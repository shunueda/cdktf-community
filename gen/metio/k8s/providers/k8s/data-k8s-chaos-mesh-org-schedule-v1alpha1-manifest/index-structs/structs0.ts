import * as cdktf from 'cdktf';
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestMetadata {
  /**
  * Keys and values that can be used by external tooling to store and retrieve arbitrary metadata about this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotations DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotations}
  */
  readonly annotations?: { [key: string]: string };
  /**
  * Keys and values that can be used to organize and categorize objects. See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#labels DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#labels}
  */
  readonly labels?: { [key: string]: string };
  /**
  * Unique identifier for this object. See https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#name}
  */
  readonly name: string;
  /**
  * Namespaces provides a mechanism for isolating groups of resources within a single cluster. See https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ for more details.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespace DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespace}
  */
  readonly namespace: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestMetadataToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotations: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotations),
    labels: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labels),
    name: cdktf.stringToTerraform(struct!.name),
    namespace: cdktf.stringToTerraform(struct!.namespace),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestMetadataToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestMetadata | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotations: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotations),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    labels: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labels),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    namespace: {
      value: cdktf.stringToHclTerraform(struct!.namespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestMetadataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestMetadata | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotations !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotations = this._annotations;
    }
    if (this._labels !== undefined) {
      hasAnyValues = true;
      internalValueResult.labels = this._labels;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._namespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespace = this._namespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestMetadata | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotations = undefined;
      this._labels = undefined;
      this._name = undefined;
      this._namespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotations = value.annotations;
      this._labels = value.labels;
      this._name = value.name;
      this._namespace = value.namespace;
    }
  }

  // annotations - computed: false, optional: true, required: false
  private _annotations?: { [key: string]: string }; 
  public get annotations() {
    return this.getStringMapAttribute('annotations');
  }
  public set annotations(value: { [key: string]: string }) {
    this._annotations = value;
  }
  public resetAnnotations() {
    this._annotations = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationsInput() {
    return this._annotations;
  }

  // labels - computed: false, optional: true, required: false
  private _labels?: { [key: string]: string }; 
  public get labels() {
    return this.getStringMapAttribute('labels');
  }
  public set labels(value: { [key: string]: string }) {
    this._labels = value;
  }
  public resetLabels() {
    this._labels = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelsInput() {
    return this._labels;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // namespace - computed: false, optional: false, required: true
  private _namespace?: string; 
  public get namespace() {
    return this.getStringAttribute('namespace');
  }
  public set namespace(value: string) {
    this._namespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get namespaceInput() {
    return this._namespace;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAwsChaos {
  /**
  * Action defines the specific aws chaos action. Supported action: ec2-stop / ec2-restart / detach-volume Default action: ec2-stop
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * AWSRegion defines the region of aws.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#aws_region DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#aws_region}
  */
  readonly awsRegion: string;
  /**
  * DeviceName indicates the name of the device. Needed in detach-volume.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device_name}
  */
  readonly deviceName?: string;
  /**
  * Duration represents the duration of the chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Ec2Instance indicates the ID of the ec2 instance.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ec2_instance DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ec2_instance}
  */
  readonly ec2Instance: string;
  /**
  * Endpoint indicates the endpoint of the aws server. Just used it in test now.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#endpoint DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * SecretName defines the name of kubernetes secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#secret_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
  /**
  * EbsVolume indicates the ID of the EBS volume. Needed in detach-volume.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#volume_id DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#volume_id}
  */
  readonly volumeId?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAwsChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAwsChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    aws_region: cdktf.stringToTerraform(struct!.awsRegion),
    device_name: cdktf.stringToTerraform(struct!.deviceName),
    duration: cdktf.stringToTerraform(struct!.duration),
    ec2_instance: cdktf.stringToTerraform(struct!.ec2Instance),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
    volume_id: cdktf.stringToTerraform(struct!.volumeId),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAwsChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAwsChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    aws_region: {
      value: cdktf.stringToHclTerraform(struct!.awsRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_name: {
      value: cdktf.stringToHclTerraform(struct!.deviceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ec2_instance: {
      value: cdktf.stringToHclTerraform(struct!.ec2Instance),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_id: {
      value: cdktf.stringToHclTerraform(struct!.volumeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAwsChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAwsChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._awsRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.awsRegion = this._awsRegion;
    }
    if (this._deviceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceName = this._deviceName;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._ec2Instance !== undefined) {
      hasAnyValues = true;
      internalValueResult.ec2Instance = this._ec2Instance;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    if (this._volumeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeId = this._volumeId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAwsChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._awsRegion = undefined;
      this._deviceName = undefined;
      this._duration = undefined;
      this._ec2Instance = undefined;
      this._endpoint = undefined;
      this._remoteCluster = undefined;
      this._secretName = undefined;
      this._volumeId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._awsRegion = value.awsRegion;
      this._deviceName = value.deviceName;
      this._duration = value.duration;
      this._ec2Instance = value.ec2Instance;
      this._endpoint = value.endpoint;
      this._remoteCluster = value.remoteCluster;
      this._secretName = value.secretName;
      this._volumeId = value.volumeId;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // aws_region - computed: false, optional: false, required: true
  private _awsRegion?: string; 
  public get awsRegion() {
    return this.getStringAttribute('aws_region');
  }
  public set awsRegion(value: string) {
    this._awsRegion = value;
  }
  // Temporarily expose input value. Use with caution.
  public get awsRegionInput() {
    return this._awsRegion;
  }

  // device_name - computed: false, optional: true, required: false
  private _deviceName?: string; 
  public get deviceName() {
    return this.getStringAttribute('device_name');
  }
  public set deviceName(value: string) {
    this._deviceName = value;
  }
  public resetDeviceName() {
    this._deviceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceNameInput() {
    return this._deviceName;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // ec2_instance - computed: false, optional: false, required: true
  private _ec2Instance?: string; 
  public get ec2Instance() {
    return this.getStringAttribute('ec2_instance');
  }
  public set ec2Instance(value: string) {
    this._ec2Instance = value;
  }
  // Temporarily expose input value. Use with caution.
  public get ec2InstanceInput() {
    return this._ec2Instance;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }

  // volume_id - computed: false, optional: true, required: false
  private _volumeId?: string; 
  public get volumeId() {
    return this.getStringAttribute('volume_id');
  }
  public set volumeId(value: string) {
    this._volumeId = value;
  }
  public resetVolumeId() {
    this._volumeId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeIdInput() {
    return this._volumeId;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAzureChaos {
  /**
  * Action defines the specific azure chaos action. Supported action: vm-stop / vm-restart / disk-detach Default action: vm-stop
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * DiskName indicates the name of the disk. Needed in disk-detach.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#disk_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#disk_name}
  */
  readonly diskName?: string;
  /**
  * Duration represents the duration of the chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * LUN indicates the Logical Unit Number of the data disk. Needed in disk-detach.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#lun DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#lun}
  */
  readonly lun?: number;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * ResourceGroupName defines the name of ResourceGroup
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#resource_group_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#resource_group_name}
  */
  readonly resourceGroupName: string;
  /**
  * SecretName defines the name of kubernetes secret. It is used for Azure credentials.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#secret_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
  /**
  * SubscriptionID defines the id of Azure subscription.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#subscription_id DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#subscription_id}
  */
  readonly subscriptionId: string;
  /**
  * VMName defines the name of Virtual Machine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#vm_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#vm_name}
  */
  readonly vmName: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAzureChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAzureChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    disk_name: cdktf.stringToTerraform(struct!.diskName),
    duration: cdktf.stringToTerraform(struct!.duration),
    lun: cdktf.numberToTerraform(struct!.lun),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    resource_group_name: cdktf.stringToTerraform(struct!.resourceGroupName),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
    subscription_id: cdktf.stringToTerraform(struct!.subscriptionId),
    vm_name: cdktf.stringToTerraform(struct!.vmName),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAzureChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAzureChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disk_name: {
      value: cdktf.stringToHclTerraform(struct!.diskName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    lun: {
      value: cdktf.numberToHclTerraform(struct!.lun),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_group_name: {
      value: cdktf.stringToHclTerraform(struct!.resourceGroupName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subscription_id: {
      value: cdktf.stringToHclTerraform(struct!.subscriptionId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vm_name: {
      value: cdktf.stringToHclTerraform(struct!.vmName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAzureChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAzureChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._diskName !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskName = this._diskName;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._lun !== undefined) {
      hasAnyValues = true;
      internalValueResult.lun = this._lun;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._resourceGroupName !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceGroupName = this._resourceGroupName;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    if (this._subscriptionId !== undefined) {
      hasAnyValues = true;
      internalValueResult.subscriptionId = this._subscriptionId;
    }
    if (this._vmName !== undefined) {
      hasAnyValues = true;
      internalValueResult.vmName = this._vmName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecAzureChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._diskName = undefined;
      this._duration = undefined;
      this._lun = undefined;
      this._remoteCluster = undefined;
      this._resourceGroupName = undefined;
      this._secretName = undefined;
      this._subscriptionId = undefined;
      this._vmName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._diskName = value.diskName;
      this._duration = value.duration;
      this._lun = value.lun;
      this._remoteCluster = value.remoteCluster;
      this._resourceGroupName = value.resourceGroupName;
      this._secretName = value.secretName;
      this._subscriptionId = value.subscriptionId;
      this._vmName = value.vmName;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // disk_name - computed: false, optional: true, required: false
  private _diskName?: string; 
  public get diskName() {
    return this.getStringAttribute('disk_name');
  }
  public set diskName(value: string) {
    this._diskName = value;
  }
  public resetDiskName() {
    this._diskName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskNameInput() {
    return this._diskName;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // lun - computed: false, optional: true, required: false
  private _lun?: number; 
  public get lun() {
    return this.getNumberAttribute('lun');
  }
  public set lun(value: number) {
    this._lun = value;
  }
  public resetLun() {
    this._lun = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lunInput() {
    return this._lun;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // resource_group_name - computed: false, optional: false, required: true
  private _resourceGroupName?: string; 
  public get resourceGroupName() {
    return this.getStringAttribute('resource_group_name');
  }
  public set resourceGroupName(value: string) {
    this._resourceGroupName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceGroupNameInput() {
    return this._resourceGroupName;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }

  // subscription_id - computed: false, optional: false, required: true
  private _subscriptionId?: string; 
  public get subscriptionId() {
    return this.getStringAttribute('subscription_id');
  }
  public set subscriptionId(value: string) {
    this._subscriptionId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get subscriptionIdInput() {
    return this._subscriptionId;
  }

  // vm_name - computed: false, optional: false, required: true
  private _vmName?: string; 
  public get vmName() {
    return this.getStringAttribute('vm_name');
  }
  public set vmName(value: string) {
    this._vmName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get vmNameInput() {
    return this._vmName;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelay {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jitter DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jitter}
  */
  readonly jitter?: string;
  /**
  * Latency defines the latency of every io request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#latency}
  */
  readonly latency?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelayToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    jitter: cdktf.stringToTerraform(struct!.jitter),
    latency: cdktf.stringToTerraform(struct!.latency),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelayToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    jitter: {
      value: cdktf.stringToHclTerraform(struct!.jitter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    latency: {
      value: cdktf.stringToHclTerraform(struct!.latency),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelayOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelay | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._jitter !== undefined) {
      hasAnyValues = true;
      internalValueResult.jitter = this._jitter;
    }
    if (this._latency !== undefined) {
      hasAnyValues = true;
      internalValueResult.latency = this._latency;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelay | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._jitter = undefined;
      this._latency = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._jitter = value.jitter;
      this._latency = value.latency;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // jitter - computed: false, optional: true, required: false
  private _jitter?: string; 
  public get jitter() {
    return this.getStringAttribute('jitter');
  }
  public set jitter(value: string) {
    this._jitter = value;
  }
  public resetJitter() {
    this._jitter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jitterInput() {
    return this._jitter;
  }

  // latency - computed: false, optional: true, required: false
  private _latency?: string; 
  public get latency() {
    return this.getStringAttribute('latency');
  }
  public set latency(value: string) {
    this._latency = value;
  }
  public resetLatency() {
    this._latency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get latencyInput() {
    return this._latency;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaos {
  /**
  * Action defines the specific block chaos action. Supported action: delay
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * Delay defines the delay distribution.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#delay}
  */
  readonly delay?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelay;
  /**
  * Duration represents the duration of the chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelector;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#volume_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#volume_name}
  */
  readonly volumeName: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    delay: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelayToTerraform(struct!.delay),
    duration: cdktf.stringToTerraform(struct!.duration),
    mode: cdktf.stringToTerraform(struct!.mode),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    delay: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelayToHclTerraform(struct!.delay),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelay",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelector",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._delay?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.delay = this._delay?.internalValue;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._containerNames = undefined;
      this._delay.internalValue = undefined;
      this._duration = undefined;
      this._mode = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._value = undefined;
      this._volumeName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._containerNames = value.containerNames;
      this._delay.internalValue = value.delay;
      this._duration = value.duration;
      this._mode = value.mode;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._value = value.value;
      this._volumeName = value.volumeName;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // delay - computed: false, optional: true, required: false
  private _delay = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelayOutputReference(this, "delay");
  public get delay() {
    return this._delay;
  }
  public putDelay(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosDelay) {
    this._delay.internalValue = value;
  }
  public resetDelay() {
    this._delay.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get delayInput() {
    return this._delay.internalValue;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecBlockChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // volume_name - computed: false, optional: false, required: true
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaos {
  /**
  * Action defines the specific DNS chaos action. Supported action: error, random Default action: error
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * Duration represents the duration of the chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Choose which domain names to take effect, support the placeholder ? and wildcard *, or the Specified domain name. Note: 1. The wildcard * must be at the end of the string. For example, chaos-*.org is invalid. 2. if the patterns is empty, will take effect on all the domain names. For example: The value is ['google.com', 'github.*', 'chaos-mes?.org'], will take effect on 'google.com', 'github.com' and 'chaos-mesh.org'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#patterns DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#patterns}
  */
  readonly patterns?: string[];
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelector;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    duration: cdktf.stringToTerraform(struct!.duration),
    mode: cdktf.stringToTerraform(struct!.mode),
    patterns: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.patterns),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    patterns: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.patterns),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelector",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._patterns !== undefined) {
      hasAnyValues = true;
      internalValueResult.patterns = this._patterns;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._containerNames = undefined;
      this._duration = undefined;
      this._mode = undefined;
      this._patterns = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._containerNames = value.containerNames;
      this._duration = value.duration;
      this._mode = value.mode;
      this._patterns = value.patterns;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._value = value.value;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // patterns - computed: false, optional: true, required: false
  private _patterns?: string[]; 
  public get patterns() {
    return this.getListAttribute('patterns');
  }
  public set patterns(value: string[]) {
    this._patterns = value;
  }
  public resetPatterns() {
    this._patterns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternsInput() {
    return this._patterns;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecDnsChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecGcpChaos {
  /**
  * Action defines the specific gcp chaos action. Supported action: node-stop / node-reset / disk-loss Default action: node-stop
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * The device name of disks to detach. Needed in disk-loss.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device_names}
  */
  readonly deviceNames?: string[];
  /**
  * Duration represents the duration of the chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Instance defines the name of the instance
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#instance DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#instance}
  */
  readonly instance: string;
  /**
  * Project defines the ID of gcp project.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#project DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#project}
  */
  readonly project: string;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * SecretName defines the name of kubernetes secret. It is used for GCP credentials.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#secret_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
  /**
  * Zone defines the zone of gcp project.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#zone DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#zone}
  */
  readonly zone: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecGcpChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecGcpChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    device_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.deviceNames),
    duration: cdktf.stringToTerraform(struct!.duration),
    instance: cdktf.stringToTerraform(struct!.instance),
    project: cdktf.stringToTerraform(struct!.project),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
    zone: cdktf.stringToTerraform(struct!.zone),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecGcpChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecGcpChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.deviceNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    instance: {
      value: cdktf.stringToHclTerraform(struct!.instance),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    project: {
      value: cdktf.stringToHclTerraform(struct!.project),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    zone: {
      value: cdktf.stringToHclTerraform(struct!.zone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecGcpChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecGcpChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._deviceNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceNames = this._deviceNames;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._instance !== undefined) {
      hasAnyValues = true;
      internalValueResult.instance = this._instance;
    }
    if (this._project !== undefined) {
      hasAnyValues = true;
      internalValueResult.project = this._project;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    if (this._zone !== undefined) {
      hasAnyValues = true;
      internalValueResult.zone = this._zone;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecGcpChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._deviceNames = undefined;
      this._duration = undefined;
      this._instance = undefined;
      this._project = undefined;
      this._remoteCluster = undefined;
      this._secretName = undefined;
      this._zone = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._deviceNames = value.deviceNames;
      this._duration = value.duration;
      this._instance = value.instance;
      this._project = value.project;
      this._remoteCluster = value.remoteCluster;
      this._secretName = value.secretName;
      this._zone = value.zone;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // device_names - computed: false, optional: true, required: false
  private _deviceNames?: string[]; 
  public get deviceNames() {
    return this.getListAttribute('device_names');
  }
  public set deviceNames(value: string[]) {
    this._deviceNames = value;
  }
  public resetDeviceNames() {
    this._deviceNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceNamesInput() {
    return this._deviceNames;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // instance - computed: false, optional: false, required: true
  private _instance?: string; 
  public get instance() {
    return this.getStringAttribute('instance');
  }
  public set instance(value: string) {
    this._instance = value;
  }
  // Temporarily expose input value. Use with caution.
  public get instanceInput() {
    return this._instance;
  }

  // project - computed: false, optional: false, required: true
  private _project?: string; 
  public get project() {
    return this.getStringAttribute('project');
  }
  public set project(value: string) {
    this._project = value;
  }
  // Temporarily expose input value. Use with caution.
  public get projectInput() {
    return this._project;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }

  // zone - computed: false, optional: false, required: true
  private _zone?: string; 
  public get zone() {
    return this.getStringAttribute('zone');
  }
  public set zone(value: string) {
    this._zone = value;
  }
  // Temporarily expose input value. Use with caution.
  public get zoneInput() {
    return this._zone;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBody {
  /**
  * Type represents the patch type, only support 'JSON' as [merge patch json](https://tools.ietf.org/html/rfc7396) currently.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#type DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#type}
  */
  readonly type: string;
  /**
  * Value is the patch contents.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBodyToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBodyToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBodyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBody | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBody | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatch {
  /**
  * Body is a rule to patch message body of target.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#body DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#body}
  */
  readonly body?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBody;
  /**
  * Headers is a rule to append http headers of target. For example: '[['Set-Cookie', '<one cookie>'], ['Set-Cookie', '<another cookie>']]'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#headers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#headers}
  */
  readonly headers?: string[];
  /**
  * Queries is a rule to append uri queries of target(Request only). For example: '[['foo', 'bar'], ['foo', 'unknown']]'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#queries DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#queries}
  */
  readonly queries?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    body: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBodyToTerraform(struct!.body),
    headers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.headers),
    queries: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.queries),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    body: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBodyToHclTerraform(struct!.body),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBody",
    },
    headers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.headers),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    queries: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.queries),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._body?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.body = this._body?.internalValue;
    }
    if (this._headers !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers;
    }
    if (this._queries !== undefined) {
      hasAnyValues = true;
      internalValueResult.queries = this._queries;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._body.internalValue = undefined;
      this._headers = undefined;
      this._queries = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._body.internalValue = value.body;
      this._headers = value.headers;
      this._queries = value.queries;
    }
  }

  // body - computed: false, optional: true, required: false
  private _body = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBodyOutputReference(this, "body");
  public get body() {
    return this._body;
  }
  public putBody(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchBody) {
    this._body.internalValue = value;
  }
  public resetBody() {
    this._body.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bodyInput() {
    return this._body.internalValue;
  }

  // headers - computed: false, optional: true, required: false
  private _headers?: string[]; 
  public get headers() {
    return this.getListAttribute('headers');
  }
  public set headers(value: string[]) {
    this._headers = value;
  }
  public resetHeaders() {
    this._headers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers;
  }

  // queries - computed: false, optional: true, required: false
  private _queries?: string[]; 
  public get queries() {
    return this.getListAttribute('queries');
  }
  public set queries(value: string[]) {
    this._queries = value;
  }
  public resetQueries() {
    this._queries = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queriesInput() {
    return this._queries;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplace {
  /**
  * Body is a rule to replace http message body in target.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#body DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#body}
  */
  readonly body?: string;
  /**
  * Code is a rule to replace http status code in response.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#code DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#code}
  */
  readonly code?: number;
  /**
  * Headers is a rule to replace http headers of target. The key-value pairs represent header name and header value pairs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#headers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#headers}
  */
  readonly headers?: { [key: string]: string };
  /**
  * Method is a rule to replace http method in request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * Path is rule to to replace uri path in http request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Queries is a rule to replace uri queries in http request. For example, with value '{ 'foo': 'unknown' }', the '/?foo=bar' will be altered to '/?foo=unknown',
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#queries DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#queries}
  */
  readonly queries?: { [key: string]: string };
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplaceToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    body: cdktf.stringToTerraform(struct!.body),
    code: cdktf.numberToTerraform(struct!.code),
    headers: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    path: cdktf.stringToTerraform(struct!.path),
    queries: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.queries),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplaceToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    body: {
      value: cdktf.stringToHclTerraform(struct!.body),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    code: {
      value: cdktf.numberToHclTerraform(struct!.code),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    headers: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.headers),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    queries: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.queries),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplace | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._body !== undefined) {
      hasAnyValues = true;
      internalValueResult.body = this._body;
    }
    if (this._code !== undefined) {
      hasAnyValues = true;
      internalValueResult.code = this._code;
    }
    if (this._headers !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._queries !== undefined) {
      hasAnyValues = true;
      internalValueResult.queries = this._queries;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplace | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._body = undefined;
      this._code = undefined;
      this._headers = undefined;
      this._method = undefined;
      this._path = undefined;
      this._queries = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._body = value.body;
      this._code = value.code;
      this._headers = value.headers;
      this._method = value.method;
      this._path = value.path;
      this._queries = value.queries;
    }
  }

  // body - computed: false, optional: true, required: false
  private _body?: string; 
  public get body() {
    return this.getStringAttribute('body');
  }
  public set body(value: string) {
    this._body = value;
  }
  public resetBody() {
    this._body = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bodyInput() {
    return this._body;
  }

  // code - computed: false, optional: true, required: false
  private _code?: number; 
  public get code() {
    return this.getNumberAttribute('code');
  }
  public set code(value: number) {
    this._code = value;
  }
  public resetCode() {
    this._code = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get codeInput() {
    return this._code;
  }

  // headers - computed: false, optional: true, required: false
  private _headers?: { [key: string]: string }; 
  public get headers() {
    return this.getStringMapAttribute('headers');
  }
  public set headers(value: { [key: string]: string }) {
    this._headers = value;
  }
  public resetHeaders() {
    this._headers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // queries - computed: false, optional: true, required: false
  private _queries?: { [key: string]: string }; 
  public get queries() {
    return this.getStringMapAttribute('queries');
  }
  public set queries(value: { [key: string]: string }) {
    this._queries = value;
  }
  public resetQueries() {
    this._queries = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queriesInput() {
    return this._queries;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTls {
  /**
  * CAName represents the data name of ca file in secret, 'ca.crt' for example
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ca_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ca_name}
  */
  readonly caName?: string;
  /**
  * CertName represents the data name of cert file in secret, 'tls.crt' for example
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#cert_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#cert_name}
  */
  readonly certName: string;
  /**
  * KeyName represents the data name of key file in secret, 'tls.key' for example
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key_name}
  */
  readonly keyName: string;
  /**
  * SecretName represents the name of required secret resource
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#secret_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#secret_name}
  */
  readonly secretName: string;
  /**
  * SecretNamespace represents the namespace of required secret resource
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#secret_namespace DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#secret_namespace}
  */
  readonly secretNamespace: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTlsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTls | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ca_name: cdktf.stringToTerraform(struct!.caName),
    cert_name: cdktf.stringToTerraform(struct!.certName),
    key_name: cdktf.stringToTerraform(struct!.keyName),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
    secret_namespace: cdktf.stringToTerraform(struct!.secretNamespace),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTlsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTls | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ca_name: {
      value: cdktf.stringToHclTerraform(struct!.caName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    cert_name: {
      value: cdktf.stringToHclTerraform(struct!.certName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key_name: {
      value: cdktf.stringToHclTerraform(struct!.keyName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_namespace: {
      value: cdktf.stringToHclTerraform(struct!.secretNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTlsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTls | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._caName !== undefined) {
      hasAnyValues = true;
      internalValueResult.caName = this._caName;
    }
    if (this._certName !== undefined) {
      hasAnyValues = true;
      internalValueResult.certName = this._certName;
    }
    if (this._keyName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyName = this._keyName;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    if (this._secretNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretNamespace = this._secretNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTls | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._caName = undefined;
      this._certName = undefined;
      this._keyName = undefined;
      this._secretName = undefined;
      this._secretNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._caName = value.caName;
      this._certName = value.certName;
      this._keyName = value.keyName;
      this._secretName = value.secretName;
      this._secretNamespace = value.secretNamespace;
    }
  }

  // ca_name - computed: false, optional: true, required: false
  private _caName?: string; 
  public get caName() {
    return this.getStringAttribute('ca_name');
  }
  public set caName(value: string) {
    this._caName = value;
  }
  public resetCaName() {
    this._caName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get caNameInput() {
    return this._caName;
  }

  // cert_name - computed: false, optional: false, required: true
  private _certName?: string; 
  public get certName() {
    return this.getStringAttribute('cert_name');
  }
  public set certName(value: string) {
    this._certName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get certNameInput() {
    return this._certName;
  }

  // key_name - computed: false, optional: false, required: true
  private _keyName?: string; 
  public get keyName() {
    return this.getStringAttribute('key_name');
  }
  public set keyName(value: string) {
    this._keyName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyNameInput() {
    return this._keyName;
  }

  // secret_name - computed: false, optional: false, required: true
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }

  // secret_namespace - computed: false, optional: false, required: true
  private _secretNamespace?: string; 
  public get secretNamespace() {
    return this.getStringAttribute('secret_namespace');
  }
  public set secretNamespace(value: string) {
    this._secretNamespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNamespaceInput() {
    return this._secretNamespace;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaos {
  /**
  * Abort is a rule to abort a http session.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#abort DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#abort}
  */
  readonly abort?: boolean | cdktf.IResolvable;
  /**
  * Code is a rule to select target by http status code in response.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#code DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#code}
  */
  readonly code?: number;
  /**
  * Delay represents the delay of the target request/response. A duration string is a possibly unsigned sequence of decimal numbers, each with optional fraction and a unit suffix, such as '300ms', '2h45m'. Valid time units are 'ns', 'us' (or 'µs'), 'ms', 's', 'm', 'h'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#delay}
  */
  readonly delay?: string;
  /**
  * Duration represents the duration of the chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Method is a rule to select target by http method in request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Patch is a rule to patch some contents in target.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#patch DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#patch}
  */
  readonly patch?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatch;
  /**
  * Path is a rule to select target by uri path in http request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Port represents the target port to be proxy of.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Replace is a rule to replace some contents in target.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#replace DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#replace}
  */
  readonly replace?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplace;
  /**
  * RequestHeaders is a rule to select target by http headers in request. The key-value pairs represent header name and header value pairs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#request_headers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#request_headers}
  */
  readonly requestHeaders?: { [key: string]: string };
  /**
  * ResponseHeaders is a rule to select target by http headers in response. The key-value pairs represent header name and header value pairs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#response_headers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#response_headers}
  */
  readonly responseHeaders?: { [key: string]: string };
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelector;
  /**
  * Target is the object to be selected and injected.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#target DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#target}
  */
  readonly target: string;
  /**
  * TLS is the tls config, will override PodHttpChaos if there are multiple HTTPChaos experiments are applied
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#tls DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#tls}
  */
  readonly tls?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTls;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    abort: cdktf.booleanToTerraform(struct!.abort),
    code: cdktf.numberToTerraform(struct!.code),
    delay: cdktf.stringToTerraform(struct!.delay),
    duration: cdktf.stringToTerraform(struct!.duration),
    method: cdktf.stringToTerraform(struct!.method),
    mode: cdktf.stringToTerraform(struct!.mode),
    patch: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchToTerraform(struct!.patch),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.numberToTerraform(struct!.port),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    replace: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplaceToTerraform(struct!.replace),
    request_headers: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requestHeaders),
    response_headers: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.responseHeaders),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorToTerraform(struct!.selector),
    target: cdktf.stringToTerraform(struct!.target),
    tls: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTlsToTerraform(struct!.tls),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    abort: {
      value: cdktf.booleanToHclTerraform(struct!.abort),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    code: {
      value: cdktf.numberToHclTerraform(struct!.code),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    delay: {
      value: cdktf.stringToHclTerraform(struct!.delay),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    patch: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchToHclTerraform(struct!.patch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatch",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    replace: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplaceToHclTerraform(struct!.replace),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplace",
    },
    request_headers: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requestHeaders),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    response_headers: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.responseHeaders),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelector",
    },
    target: {
      value: cdktf.stringToHclTerraform(struct!.target),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTlsToHclTerraform(struct!.tls),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTls",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._abort !== undefined) {
      hasAnyValues = true;
      internalValueResult.abort = this._abort;
    }
    if (this._code !== undefined) {
      hasAnyValues = true;
      internalValueResult.code = this._code;
    }
    if (this._delay !== undefined) {
      hasAnyValues = true;
      internalValueResult.delay = this._delay;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._patch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.patch = this._patch?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._replace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.replace = this._replace?.internalValue;
    }
    if (this._requestHeaders !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestHeaders = this._requestHeaders;
    }
    if (this._responseHeaders !== undefined) {
      hasAnyValues = true;
      internalValueResult.responseHeaders = this._responseHeaders;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._target !== undefined) {
      hasAnyValues = true;
      internalValueResult.target = this._target;
    }
    if (this._tls?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tls = this._tls?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._abort = undefined;
      this._code = undefined;
      this._delay = undefined;
      this._duration = undefined;
      this._method = undefined;
      this._mode = undefined;
      this._patch.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._remoteCluster = undefined;
      this._replace.internalValue = undefined;
      this._requestHeaders = undefined;
      this._responseHeaders = undefined;
      this._selector.internalValue = undefined;
      this._target = undefined;
      this._tls.internalValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._abort = value.abort;
      this._code = value.code;
      this._delay = value.delay;
      this._duration = value.duration;
      this._method = value.method;
      this._mode = value.mode;
      this._patch.internalValue = value.patch;
      this._path = value.path;
      this._port = value.port;
      this._remoteCluster = value.remoteCluster;
      this._replace.internalValue = value.replace;
      this._requestHeaders = value.requestHeaders;
      this._responseHeaders = value.responseHeaders;
      this._selector.internalValue = value.selector;
      this._target = value.target;
      this._tls.internalValue = value.tls;
      this._value = value.value;
    }
  }

  // abort - computed: false, optional: true, required: false
  private _abort?: boolean | cdktf.IResolvable; 
  public get abort() {
    return this.getBooleanAttribute('abort');
  }
  public set abort(value: boolean | cdktf.IResolvable) {
    this._abort = value;
  }
  public resetAbort() {
    this._abort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get abortInput() {
    return this._abort;
  }

  // code - computed: false, optional: true, required: false
  private _code?: number; 
  public get code() {
    return this.getNumberAttribute('code');
  }
  public set code(value: number) {
    this._code = value;
  }
  public resetCode() {
    this._code = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get codeInput() {
    return this._code;
  }

  // delay - computed: false, optional: true, required: false
  private _delay?: string; 
  public get delay() {
    return this.getStringAttribute('delay');
  }
  public set delay(value: string) {
    this._delay = value;
  }
  public resetDelay() {
    this._delay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get delayInput() {
    return this._delay;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // patch - computed: false, optional: true, required: false
  private _patch = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatchOutputReference(this, "patch");
  public get patch() {
    return this._patch;
  }
  public putPatch(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosPatch) {
    this._patch.internalValue = value;
  }
  public resetPatch() {
    this._patch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patchInput() {
    return this._patch.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // replace - computed: false, optional: true, required: false
  private _replace = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplaceOutputReference(this, "replace");
  public get replace() {
    return this._replace;
  }
  public putReplace(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosReplace) {
    this._replace.internalValue = value;
  }
  public resetReplace() {
    this._replace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replaceInput() {
    return this._replace.internalValue;
  }

  // request_headers - computed: false, optional: true, required: false
  private _requestHeaders?: { [key: string]: string }; 
  public get requestHeaders() {
    return this.getStringMapAttribute('request_headers');
  }
  public set requestHeaders(value: { [key: string]: string }) {
    this._requestHeaders = value;
  }
  public resetRequestHeaders() {
    this._requestHeaders = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestHeadersInput() {
    return this._requestHeaders;
  }

  // response_headers - computed: false, optional: true, required: false
  private _responseHeaders?: { [key: string]: string }; 
  public get responseHeaders() {
    return this.getStringMapAttribute('response_headers');
  }
  public set responseHeaders(value: { [key: string]: string }) {
    this._responseHeaders = value;
  }
  public resetResponseHeaders() {
    this._responseHeaders = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get responseHeadersInput() {
    return this._responseHeaders;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // target - computed: false, optional: false, required: true
  private _target?: string; 
  public get target() {
    return this.getStringAttribute('target');
  }
  public set target(value: string) {
    this._target = value;
  }
  // Temporarily expose input value. Use with caution.
  public get targetInput() {
    return this._target;
  }

  // tls - computed: false, optional: true, required: false
  private _tls = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTlsOutputReference(this, "tls");
  public get tls() {
    return this._tls;
  }
  public putTls(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecHttpChaosTls) {
    this._tls.internalValue = value;
  }
  public resetTls() {
    this._tls.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsInput() {
    return this._tls.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtime {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nsec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nsec}
  */
  readonly nsec: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#sec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#sec}
  */
  readonly sec: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtimeToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nsec: cdktf.numberToTerraform(struct!.nsec),
    sec: cdktf.numberToTerraform(struct!.sec),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtimeToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nsec: {
      value: cdktf.numberToHclTerraform(struct!.nsec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sec: {
      value: cdktf.numberToHclTerraform(struct!.sec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtimeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtime | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nsec !== undefined) {
      hasAnyValues = true;
      internalValueResult.nsec = this._nsec;
    }
    if (this._sec !== undefined) {
      hasAnyValues = true;
      internalValueResult.sec = this._sec;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtime | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nsec = undefined;
      this._sec = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nsec = value.nsec;
      this._sec = value.sec;
    }
  }

  // nsec - computed: false, optional: false, required: true
  private _nsec?: number; 
  public get nsec() {
    return this.getNumberAttribute('nsec');
  }
  public set nsec(value: number) {
    this._nsec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nsecInput() {
    return this._nsec;
  }

  // sec - computed: false, optional: false, required: true
  private _sec?: number; 
  public get sec() {
    return this.getNumberAttribute('sec');
  }
  public set sec(value: number) {
    this._sec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secInput() {
    return this._sec;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtime {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nsec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nsec}
  */
  readonly nsec: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#sec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#sec}
  */
  readonly sec: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtimeToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nsec: cdktf.numberToTerraform(struct!.nsec),
    sec: cdktf.numberToTerraform(struct!.sec),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtimeToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nsec: {
      value: cdktf.numberToHclTerraform(struct!.nsec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sec: {
      value: cdktf.numberToHclTerraform(struct!.sec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtimeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtime | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nsec !== undefined) {
      hasAnyValues = true;
      internalValueResult.nsec = this._nsec;
    }
    if (this._sec !== undefined) {
      hasAnyValues = true;
      internalValueResult.sec = this._sec;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtime | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nsec = undefined;
      this._sec = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nsec = value.nsec;
      this._sec = value.sec;
    }
  }

  // nsec - computed: false, optional: false, required: true
  private _nsec?: number; 
  public get nsec() {
    return this.getNumberAttribute('nsec');
  }
  public set nsec(value: number) {
    this._nsec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nsecInput() {
    return this._nsec;
  }

  // sec - computed: false, optional: false, required: true
  private _sec?: number; 
  public get sec() {
    return this.getNumberAttribute('sec');
  }
  public set sec(value: number) {
    this._sec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secInput() {
    return this._sec;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtime {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nsec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nsec}
  */
  readonly nsec: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#sec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#sec}
  */
  readonly sec: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtimeToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nsec: cdktf.numberToTerraform(struct!.nsec),
    sec: cdktf.numberToTerraform(struct!.sec),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtimeToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nsec: {
      value: cdktf.numberToHclTerraform(struct!.nsec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sec: {
      value: cdktf.numberToHclTerraform(struct!.sec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtimeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtime | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nsec !== undefined) {
      hasAnyValues = true;
      internalValueResult.nsec = this._nsec;
    }
    if (this._sec !== undefined) {
      hasAnyValues = true;
      internalValueResult.sec = this._sec;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtime | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nsec = undefined;
      this._sec = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nsec = value.nsec;
      this._sec = value.sec;
    }
  }

  // nsec - computed: false, optional: false, required: true
  private _nsec?: number; 
  public get nsec() {
    return this.getNumberAttribute('nsec');
  }
  public set nsec(value: number) {
    this._nsec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nsecInput() {
    return this._nsec;
  }

  // sec - computed: false, optional: false, required: true
  private _sec?: number; 
  public get sec() {
    return this.getNumberAttribute('sec');
  }
  public set sec(value: number) {
    this._sec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secInput() {
    return this._sec;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttr {
  /**
  * Timespec represents a time
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#atime DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#atime}
  */
  readonly atime?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtime;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#blocks DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#blocks}
  */
  readonly blocks?: number;
  /**
  * Timespec represents a time
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ctime DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ctime}
  */
  readonly ctime?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtime;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#gid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#gid}
  */
  readonly gid?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ino DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ino}
  */
  readonly ino?: number;
  /**
  * FileType represents type of file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#kind DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Timespec represents a time
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mtime DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mtime}
  */
  readonly mtime?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtime;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nlink DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nlink}
  */
  readonly nlink?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#perm DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#perm}
  */
  readonly perm?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rdev DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rdev}
  */
  readonly rdev?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#size}
  */
  readonly size?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#uid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#uid}
  */
  readonly uid?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttr | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    atime: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtimeToTerraform(struct!.atime),
    blocks: cdktf.numberToTerraform(struct!.blocks),
    ctime: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtimeToTerraform(struct!.ctime),
    gid: cdktf.numberToTerraform(struct!.gid),
    ino: cdktf.numberToTerraform(struct!.ino),
    kind: cdktf.stringToTerraform(struct!.kind),
    mtime: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtimeToTerraform(struct!.mtime),
    nlink: cdktf.numberToTerraform(struct!.nlink),
    perm: cdktf.numberToTerraform(struct!.perm),
    rdev: cdktf.numberToTerraform(struct!.rdev),
    size: cdktf.numberToTerraform(struct!.size),
    uid: cdktf.numberToTerraform(struct!.uid),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttr | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    atime: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtimeToHclTerraform(struct!.atime),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtime",
    },
    blocks: {
      value: cdktf.numberToHclTerraform(struct!.blocks),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ctime: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtimeToHclTerraform(struct!.ctime),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtime",
    },
    gid: {
      value: cdktf.numberToHclTerraform(struct!.gid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ino: {
      value: cdktf.numberToHclTerraform(struct!.ino),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mtime: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtimeToHclTerraform(struct!.mtime),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtime",
    },
    nlink: {
      value: cdktf.numberToHclTerraform(struct!.nlink),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    perm: {
      value: cdktf.numberToHclTerraform(struct!.perm),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rdev: {
      value: cdktf.numberToHclTerraform(struct!.rdev),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    size: {
      value: cdktf.numberToHclTerraform(struct!.size),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    uid: {
      value: cdktf.numberToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttr | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._atime?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.atime = this._atime?.internalValue;
    }
    if (this._blocks !== undefined) {
      hasAnyValues = true;
      internalValueResult.blocks = this._blocks;
    }
    if (this._ctime?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ctime = this._ctime?.internalValue;
    }
    if (this._gid !== undefined) {
      hasAnyValues = true;
      internalValueResult.gid = this._gid;
    }
    if (this._ino !== undefined) {
      hasAnyValues = true;
      internalValueResult.ino = this._ino;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._mtime?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mtime = this._mtime?.internalValue;
    }
    if (this._nlink !== undefined) {
      hasAnyValues = true;
      internalValueResult.nlink = this._nlink;
    }
    if (this._perm !== undefined) {
      hasAnyValues = true;
      internalValueResult.perm = this._perm;
    }
    if (this._rdev !== undefined) {
      hasAnyValues = true;
      internalValueResult.rdev = this._rdev;
    }
    if (this._size !== undefined) {
      hasAnyValues = true;
      internalValueResult.size = this._size;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttr | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._atime.internalValue = undefined;
      this._blocks = undefined;
      this._ctime.internalValue = undefined;
      this._gid = undefined;
      this._ino = undefined;
      this._kind = undefined;
      this._mtime.internalValue = undefined;
      this._nlink = undefined;
      this._perm = undefined;
      this._rdev = undefined;
      this._size = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._atime.internalValue = value.atime;
      this._blocks = value.blocks;
      this._ctime.internalValue = value.ctime;
      this._gid = value.gid;
      this._ino = value.ino;
      this._kind = value.kind;
      this._mtime.internalValue = value.mtime;
      this._nlink = value.nlink;
      this._perm = value.perm;
      this._rdev = value.rdev;
      this._size = value.size;
      this._uid = value.uid;
    }
  }

  // atime - computed: false, optional: true, required: false
  private _atime = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtimeOutputReference(this, "atime");
  public get atime() {
    return this._atime;
  }
  public putAtime(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrAtime) {
    this._atime.internalValue = value;
  }
  public resetAtime() {
    this._atime.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get atimeInput() {
    return this._atime.internalValue;
  }

  // blocks - computed: false, optional: true, required: false
  private _blocks?: number; 
  public get blocks() {
    return this.getNumberAttribute('blocks');
  }
  public set blocks(value: number) {
    this._blocks = value;
  }
  public resetBlocks() {
    this._blocks = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blocksInput() {
    return this._blocks;
  }

  // ctime - computed: false, optional: true, required: false
  private _ctime = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtimeOutputReference(this, "ctime");
  public get ctime() {
    return this._ctime;
  }
  public putCtime(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrCtime) {
    this._ctime.internalValue = value;
  }
  public resetCtime() {
    this._ctime.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ctimeInput() {
    return this._ctime.internalValue;
  }

  // gid - computed: false, optional: true, required: false
  private _gid?: number; 
  public get gid() {
    return this.getNumberAttribute('gid');
  }
  public set gid(value: number) {
    this._gid = value;
  }
  public resetGid() {
    this._gid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gidInput() {
    return this._gid;
  }

  // ino - computed: false, optional: true, required: false
  private _ino?: number; 
  public get ino() {
    return this.getNumberAttribute('ino');
  }
  public set ino(value: number) {
    this._ino = value;
  }
  public resetIno() {
    this._ino = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get inoInput() {
    return this._ino;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // mtime - computed: false, optional: true, required: false
  private _mtime = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtimeOutputReference(this, "mtime");
  public get mtime() {
    return this._mtime;
  }
  public putMtime(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrMtime) {
    this._mtime.internalValue = value;
  }
  public resetMtime() {
    this._mtime.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mtimeInput() {
    return this._mtime.internalValue;
  }

  // nlink - computed: false, optional: true, required: false
  private _nlink?: number; 
  public get nlink() {
    return this.getNumberAttribute('nlink');
  }
  public set nlink(value: number) {
    this._nlink = value;
  }
  public resetNlink() {
    this._nlink = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nlinkInput() {
    return this._nlink;
  }

  // perm - computed: false, optional: true, required: false
  private _perm?: number; 
  public get perm() {
    return this.getNumberAttribute('perm');
  }
  public set perm(value: number) {
    this._perm = value;
  }
  public resetPerm() {
    this._perm = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get permInput() {
    return this._perm;
  }

  // rdev - computed: false, optional: true, required: false
  private _rdev?: number; 
  public get rdev() {
    return this.getNumberAttribute('rdev');
  }
  public set rdev(value: number) {
    this._rdev = value;
  }
  public resetRdev() {
    this._rdev = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rdevInput() {
    return this._rdev;
  }

  // size - computed: false, optional: true, required: false
  private _size?: number; 
  public get size() {
    return this.getNumberAttribute('size');
  }
  public set size(value: number) {
    this._size = value;
  }
  public resetSize() {
    this._size = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeInput() {
    return this._size;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: number; 
  public get uid() {
    return this.getNumberAttribute('uid');
  }
  public set uid(value: number) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistake {
  /**
  * Filling determines what is filled in the mistake data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#filling DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#filling}
  */
  readonly filling?: string;
  /**
  * Max length of each wrong data segment in bytes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#max_length DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#max_length}
  */
  readonly maxLength?: number;
  /**
  * There will be [1, MaxOccurrences] segments of wrong data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#max_occurrences DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#max_occurrences}
  */
  readonly maxOccurrences?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistakeToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistake | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    filling: cdktf.stringToTerraform(struct!.filling),
    max_length: cdktf.numberToTerraform(struct!.maxLength),
    max_occurrences: cdktf.numberToTerraform(struct!.maxOccurrences),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistakeToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistake | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    filling: {
      value: cdktf.stringToHclTerraform(struct!.filling),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_length: {
      value: cdktf.numberToHclTerraform(struct!.maxLength),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_occurrences: {
      value: cdktf.numberToHclTerraform(struct!.maxOccurrences),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistakeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistake | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._filling !== undefined) {
      hasAnyValues = true;
      internalValueResult.filling = this._filling;
    }
    if (this._maxLength !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxLength = this._maxLength;
    }
    if (this._maxOccurrences !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxOccurrences = this._maxOccurrences;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistake | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._filling = undefined;
      this._maxLength = undefined;
      this._maxOccurrences = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._filling = value.filling;
      this._maxLength = value.maxLength;
      this._maxOccurrences = value.maxOccurrences;
    }
  }

  // filling - computed: false, optional: true, required: false
  private _filling?: string; 
  public get filling() {
    return this.getStringAttribute('filling');
  }
  public set filling(value: string) {
    this._filling = value;
  }
  public resetFilling() {
    this._filling = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fillingInput() {
    return this._filling;
  }

  // max_length - computed: false, optional: true, required: false
  private _maxLength?: number; 
  public get maxLength() {
    return this.getNumberAttribute('max_length');
  }
  public set maxLength(value: number) {
    this._maxLength = value;
  }
  public resetMaxLength() {
    this._maxLength = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxLengthInput() {
    return this._maxLength;
  }

  // max_occurrences - computed: false, optional: true, required: false
  private _maxOccurrences?: number; 
  public get maxOccurrences() {
    return this.getNumberAttribute('max_occurrences');
  }
  public set maxOccurrences(value: number) {
    this._maxOccurrences = value;
  }
  public resetMaxOccurrences() {
    this._maxOccurrences = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxOccurrencesInput() {
    return this._maxOccurrences;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaos {
  /**
  * Action defines the specific pod chaos action. Supported action: latency / fault / attrOverride / mistake
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * Attr defines the overrided attribution
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#attr DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#attr}
  */
  readonly attr?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttr;
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * Delay defines the value of I/O chaos action delay. A delay string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as '300ms'. Valid time units are 'ns', 'us' (or 'µs'), 'ms', 's', 'm', 'h'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#delay}
  */
  readonly delay?: string;
  /**
  * Duration represents the duration of the chaos action. It is required when the action is 'PodFailureAction'. A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as '300ms', '-1.5h' or '2h45m'. Valid time units are 'ns', 'us' (or 'µs'), 'ms', 's', 'm', 'h'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Errno defines the error code that returned by I/O action. refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#errno DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#errno}
  */
  readonly errno?: number;
  /**
  * Methods defines the I/O methods for injecting I/O chaos action. default: all I/O methods.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#methods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#methods}
  */
  readonly methods?: string[];
  /**
  * Mistake defines what types of incorrectness are injected to IO operations
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mistake DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mistake}
  */
  readonly mistake?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistake;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Path defines the path of files for injecting I/O chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Percent defines the percentage of injection errors and provides a number from 0-100. default: 100.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#percent DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#percent}
  */
  readonly percent?: number;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelector;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
  /**
  * VolumePath represents the mount path of injected volume
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#volume_path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#volume_path}
  */
  readonly volumePath: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    attr: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrToTerraform(struct!.attr),
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    delay: cdktf.stringToTerraform(struct!.delay),
    duration: cdktf.stringToTerraform(struct!.duration),
    errno: cdktf.numberToTerraform(struct!.errno),
    methods: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.methods),
    mistake: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistakeToTerraform(struct!.mistake),
    mode: cdktf.stringToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
    percent: cdktf.numberToTerraform(struct!.percent),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
    volume_path: cdktf.stringToTerraform(struct!.volumePath),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    attr: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrToHclTerraform(struct!.attr),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttr",
    },
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    delay: {
      value: cdktf.stringToHclTerraform(struct!.delay),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    errno: {
      value: cdktf.numberToHclTerraform(struct!.errno),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    methods: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.methods),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    mistake: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistakeToHclTerraform(struct!.mistake),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistake",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    percent: {
      value: cdktf.numberToHclTerraform(struct!.percent),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelector",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_path: {
      value: cdktf.stringToHclTerraform(struct!.volumePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._attr?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.attr = this._attr?.internalValue;
    }
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._delay !== undefined) {
      hasAnyValues = true;
      internalValueResult.delay = this._delay;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._errno !== undefined) {
      hasAnyValues = true;
      internalValueResult.errno = this._errno;
    }
    if (this._methods !== undefined) {
      hasAnyValues = true;
      internalValueResult.methods = this._methods;
    }
    if (this._mistake?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mistake = this._mistake?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._percent !== undefined) {
      hasAnyValues = true;
      internalValueResult.percent = this._percent;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._volumePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumePath = this._volumePath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._attr.internalValue = undefined;
      this._containerNames = undefined;
      this._delay = undefined;
      this._duration = undefined;
      this._errno = undefined;
      this._methods = undefined;
      this._mistake.internalValue = undefined;
      this._mode = undefined;
      this._path = undefined;
      this._percent = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._value = undefined;
      this._volumePath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._attr.internalValue = value.attr;
      this._containerNames = value.containerNames;
      this._delay = value.delay;
      this._duration = value.duration;
      this._errno = value.errno;
      this._methods = value.methods;
      this._mistake.internalValue = value.mistake;
      this._mode = value.mode;
      this._path = value.path;
      this._percent = value.percent;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._value = value.value;
      this._volumePath = value.volumePath;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // attr - computed: false, optional: true, required: false
  private _attr = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttrOutputReference(this, "attr");
  public get attr() {
    return this._attr;
  }
  public putAttr(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosAttr) {
    this._attr.internalValue = value;
  }
  public resetAttr() {
    this._attr.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attrInput() {
    return this._attr.internalValue;
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // delay - computed: false, optional: true, required: false
  private _delay?: string; 
  public get delay() {
    return this.getStringAttribute('delay');
  }
  public set delay(value: string) {
    this._delay = value;
  }
  public resetDelay() {
    this._delay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get delayInput() {
    return this._delay;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // errno - computed: false, optional: true, required: false
  private _errno?: number; 
  public get errno() {
    return this.getNumberAttribute('errno');
  }
  public set errno(value: number) {
    this._errno = value;
  }
  public resetErrno() {
    this._errno = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get errnoInput() {
    return this._errno;
  }

  // methods - computed: false, optional: true, required: false
  private _methods?: string[]; 
  public get methods() {
    return this.getListAttribute('methods');
  }
  public set methods(value: string[]) {
    this._methods = value;
  }
  public resetMethods() {
    this._methods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodsInput() {
    return this._methods;
  }

  // mistake - computed: false, optional: true, required: false
  private _mistake = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistakeOutputReference(this, "mistake");
  public get mistake() {
    return this._mistake;
  }
  public putMistake(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosMistake) {
    this._mistake.internalValue = value;
  }
  public resetMistake() {
    this._mistake.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mistakeInput() {
    return this._mistake.internalValue;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // percent - computed: false, optional: true, required: false
  private _percent?: number; 
  public get percent() {
    return this.getNumberAttribute('percent');
  }
  public set percent(value: number) {
    this._percent = value;
  }
  public resetPercent() {
    this._percent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get percentInput() {
    return this._percent;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecIoChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // volume_path - computed: false, optional: false, required: true
  private _volumePath?: string; 
  public get volumePath() {
    return this.getStringAttribute('volume_path');
  }
  public set volumePath(value: string) {
    this._volumePath = value;
  }
  // Temporarily expose input value. Use with caution.
  public get volumePathInput() {
    return this._volumePath;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaos {
  /**
  * Action defines the specific jvm chaos action. Supported action: latency;return;exception;stress;gc;ruleData
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#class DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#class}
  */
  readonly class?: string;
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * the CPU core number needs to use, only set it when action is stress
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#cpu_count DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#cpu_count}
  */
  readonly cpuCount?: number;
  /**
  * the match database default value is '', means match all database
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#database DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#database}
  */
  readonly database?: string;
  /**
  * Duration represents the duration of the chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * the exception which needs to throw for action 'exception' or the exception message needs to throw in action 'mysql'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#exception DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#exception}
  */
  readonly exception?: string;
  /**
  * the latency duration for action 'latency', unit ms or the latency duration in action 'mysql'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#latency}
  */
  readonly latency?: number;
  /**
  * the memory type needs to locate, only set it when action is stress, the value can be 'stack' or 'heap'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mem_type DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mem_type}
  */
  readonly memType?: string;
  /**
  * the method in Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * the version of mysql-connector-java, only support 5.X.X(set to '5') and 8.X.X(set to '8') now
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mysql_connector_version DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mysql_connector_version}
  */
  readonly mysqlConnectorVersion?: string;
  /**
  * byteman rule name, should be unique, and will generate one if not set
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * the byteman rule's data for action 'ruleData'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rule_data DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rule_data}
  */
  readonly ruleData?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelector;
  /**
  * the match sql type default value is '', means match all SQL type. The value can be 'select', 'insert', 'update', 'delete', 'replace'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#sql_type DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#sql_type}
  */
  readonly sqlType?: string;
  /**
  * the match table default value is '', means match all table
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#table DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#table}
  */
  readonly table?: string;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    class: cdktf.stringToTerraform(struct!.class),
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    cpu_count: cdktf.numberToTerraform(struct!.cpuCount),
    database: cdktf.stringToTerraform(struct!.database),
    duration: cdktf.stringToTerraform(struct!.duration),
    exception: cdktf.stringToTerraform(struct!.exception),
    latency: cdktf.numberToTerraform(struct!.latency),
    mem_type: cdktf.stringToTerraform(struct!.memType),
    method: cdktf.stringToTerraform(struct!.method),
    mode: cdktf.stringToTerraform(struct!.mode),
    mysql_connector_version: cdktf.stringToTerraform(struct!.mysqlConnectorVersion),
    name: cdktf.stringToTerraform(struct!.name),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    rule_data: cdktf.stringToTerraform(struct!.ruleData),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorToTerraform(struct!.selector),
    sql_type: cdktf.stringToTerraform(struct!.sqlType),
    table: cdktf.stringToTerraform(struct!.table),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    class: {
      value: cdktf.stringToHclTerraform(struct!.class),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    cpu_count: {
      value: cdktf.numberToHclTerraform(struct!.cpuCount),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    exception: {
      value: cdktf.stringToHclTerraform(struct!.exception),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    latency: {
      value: cdktf.numberToHclTerraform(struct!.latency),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    mem_type: {
      value: cdktf.stringToHclTerraform(struct!.memType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mysql_connector_version: {
      value: cdktf.stringToHclTerraform(struct!.mysqlConnectorVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    rule_data: {
      value: cdktf.stringToHclTerraform(struct!.ruleData),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelector",
    },
    sql_type: {
      value: cdktf.stringToHclTerraform(struct!.sqlType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._class !== undefined) {
      hasAnyValues = true;
      internalValueResult.class = this._class;
    }
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._cpuCount !== undefined) {
      hasAnyValues = true;
      internalValueResult.cpuCount = this._cpuCount;
    }
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._exception !== undefined) {
      hasAnyValues = true;
      internalValueResult.exception = this._exception;
    }
    if (this._latency !== undefined) {
      hasAnyValues = true;
      internalValueResult.latency = this._latency;
    }
    if (this._memType !== undefined) {
      hasAnyValues = true;
      internalValueResult.memType = this._memType;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._mysqlConnectorVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.mysqlConnectorVersion = this._mysqlConnectorVersion;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._ruleData !== undefined) {
      hasAnyValues = true;
      internalValueResult.ruleData = this._ruleData;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._sqlType !== undefined) {
      hasAnyValues = true;
      internalValueResult.sqlType = this._sqlType;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._class = undefined;
      this._containerNames = undefined;
      this._cpuCount = undefined;
      this._database = undefined;
      this._duration = undefined;
      this._exception = undefined;
      this._latency = undefined;
      this._memType = undefined;
      this._method = undefined;
      this._mode = undefined;
      this._mysqlConnectorVersion = undefined;
      this._name = undefined;
      this._pid = undefined;
      this._port = undefined;
      this._remoteCluster = undefined;
      this._ruleData = undefined;
      this._selector.internalValue = undefined;
      this._sqlType = undefined;
      this._table = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._class = value.class;
      this._containerNames = value.containerNames;
      this._cpuCount = value.cpuCount;
      this._database = value.database;
      this._duration = value.duration;
      this._exception = value.exception;
      this._latency = value.latency;
      this._memType = value.memType;
      this._method = value.method;
      this._mode = value.mode;
      this._mysqlConnectorVersion = value.mysqlConnectorVersion;
      this._name = value.name;
      this._pid = value.pid;
      this._port = value.port;
      this._remoteCluster = value.remoteCluster;
      this._ruleData = value.ruleData;
      this._selector.internalValue = value.selector;
      this._sqlType = value.sqlType;
      this._table = value.table;
      this._value = value.value;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // class - computed: false, optional: true, required: false
  private _class?: string; 
  public get class() {
    return this.getStringAttribute('class');
  }
  public set class(value: string) {
    this._class = value;
  }
  public resetClass() {
    this._class = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get classInput() {
    return this._class;
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // cpu_count - computed: false, optional: true, required: false
  private _cpuCount?: number; 
  public get cpuCount() {
    return this.getNumberAttribute('cpu_count');
  }
  public set cpuCount(value: number) {
    this._cpuCount = value;
  }
  public resetCpuCount() {
    this._cpuCount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cpuCountInput() {
    return this._cpuCount;
  }

  // database - computed: false, optional: true, required: false
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  public resetDatabase() {
    this._database = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // exception - computed: false, optional: true, required: false
  private _exception?: string; 
  public get exception() {
    return this.getStringAttribute('exception');
  }
  public set exception(value: string) {
    this._exception = value;
  }
  public resetException() {
    this._exception = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exceptionInput() {
    return this._exception;
  }

  // latency - computed: false, optional: true, required: false
  private _latency?: number; 
  public get latency() {
    return this.getNumberAttribute('latency');
  }
  public set latency(value: number) {
    this._latency = value;
  }
  public resetLatency() {
    this._latency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get latencyInput() {
    return this._latency;
  }

  // mem_type - computed: false, optional: true, required: false
  private _memType?: string; 
  public get memType() {
    return this.getStringAttribute('mem_type');
  }
  public set memType(value: string) {
    this._memType = value;
  }
  public resetMemType() {
    this._memType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get memTypeInput() {
    return this._memType;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // mysql_connector_version - computed: false, optional: true, required: false
  private _mysqlConnectorVersion?: string; 
  public get mysqlConnectorVersion() {
    return this.getStringAttribute('mysql_connector_version');
  }
  public set mysqlConnectorVersion(value: string) {
    this._mysqlConnectorVersion = value;
  }
  public resetMysqlConnectorVersion() {
    this._mysqlConnectorVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mysqlConnectorVersionInput() {
    return this._mysqlConnectorVersion;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // rule_data - computed: false, optional: true, required: false
  private _ruleData?: string; 
  public get ruleData() {
    return this.getStringAttribute('rule_data');
  }
  public set ruleData(value: string) {
    this._ruleData = value;
  }
  public resetRuleData() {
    this._ruleData = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ruleDataInput() {
    return this._ruleData;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecJvmChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // sql_type - computed: false, optional: true, required: false
  private _sqlType?: string; 
  public get sqlType() {
    return this.getStringAttribute('sql_type');
  }
  public set sqlType(value: string) {
    this._sqlType = value;
  }
  public resetSqlType() {
    this._sqlType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sqlTypeInput() {
    return this._sqlType;
  }

  // table - computed: false, optional: true, required: false
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  public resetTable() {
    this._table = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchain {
  /**
  * Funcname can be find from kernel source or '/proc/kallsyms', such as 'ext4_mount'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#funcname DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#funcname}
  */
  readonly funcname?: string;
  /**
  * Parameters is used with predicate, for example, if you want to inject slab error in 'd_alloc_parallel(struct dentry *parent, const struct qstr *name)' with a special name 'bananas', you need to set it to 'struct dentry *parent, const struct qstr *name' otherwise omit it.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#parameters DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#parameters}
  */
  readonly parameters?: string;
  /**
  * Predicate will access the arguments of this Frame, example with Parameters's, you can set it to 'STRNCMP(name->name, 'bananas', 8)' to make inject only with it, or omit it to inject for all d_alloc_parallel call chain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#predicate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#predicate}
  */
  readonly predicate?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchainToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    funcname: cdktf.stringToTerraform(struct!.funcname),
    parameters: cdktf.stringToTerraform(struct!.parameters),
    predicate: cdktf.stringToTerraform(struct!.predicate),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchainToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    funcname: {
      value: cdktf.stringToHclTerraform(struct!.funcname),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    parameters: {
      value: cdktf.stringToHclTerraform(struct!.parameters),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    predicate: {
      value: cdktf.stringToHclTerraform(struct!.predicate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchainOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchain | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._funcname !== undefined) {
      hasAnyValues = true;
      internalValueResult.funcname = this._funcname;
    }
    if (this._parameters !== undefined) {
      hasAnyValues = true;
      internalValueResult.parameters = this._parameters;
    }
    if (this._predicate !== undefined) {
      hasAnyValues = true;
      internalValueResult.predicate = this._predicate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchain | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._funcname = undefined;
      this._parameters = undefined;
      this._predicate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._funcname = value.funcname;
      this._parameters = value.parameters;
      this._predicate = value.predicate;
    }
  }

  // funcname - computed: false, optional: true, required: false
  private _funcname?: string; 
  public get funcname() {
    return this.getStringAttribute('funcname');
  }
  public set funcname(value: string) {
    this._funcname = value;
  }
  public resetFuncname() {
    this._funcname = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get funcnameInput() {
    return this._funcname;
  }

  // parameters - computed: false, optional: true, required: false
  private _parameters?: string; 
  public get parameters() {
    return this.getStringAttribute('parameters');
  }
  public set parameters(value: string) {
    this._parameters = value;
  }
  public resetParameters() {
    this._parameters = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get parametersInput() {
    return this._parameters;
  }

  // predicate - computed: false, optional: true, required: false
  private _predicate?: string; 
  public get predicate() {
    return this.getStringAttribute('predicate');
  }
  public set predicate(value: string) {
    this._predicate = value;
  }
  public resetPredicate() {
    this._predicate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get predicateInput() {
    return this._predicate;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchainList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchain[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchainOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchainOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequest {
  /**
  * Callchain indicate a special call chain, such as: ext4_mount -> mount_subtree -> ... -> should_failslab With an optional set of predicates and an optional set of parameters, which used with predicates. You can read call chan and predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples to learn more. If no special call chain, just keep Callchain empty, which means it will fail at any call chain with slab alloc (eg: kmalloc).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#callchain DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#callchain}
  */
  readonly callchain?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchain[] | cdktf.IResolvable;
  /**
  * FailType indicates what to fail, can be set to '0' / '1' / '2' If '0', indicates slab to fail (should_failslab) If '1', indicates alloc_page to fail (should_fail_alloc_page) If '2', indicates bio to fail (should_fail_bio) You can read: 1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html 2. http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt to learn more
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#failtype DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#failtype}
  */
  readonly failtype: number;
  /**
  * Headers indicates the appropriate kernel headers you need. Eg: 'linux/mmzone.h', 'linux/blkdev.h' and so on
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#headers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#headers}
  */
  readonly headers?: string[];
  /**
  * Probability indicates the fails with probability. If you want 1%, please set this field with 1.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#probability DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#probability}
  */
  readonly probability?: number;
  /**
  * Times indicates the max times of fails.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#times DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#times}
  */
  readonly times?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    callchain: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchainToTerraform, false)(struct!.callchain),
    failtype: cdktf.numberToTerraform(struct!.failtype),
    headers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.headers),
    probability: cdktf.numberToTerraform(struct!.probability),
    times: cdktf.numberToTerraform(struct!.times),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    callchain: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchainToHclTerraform, false)(struct!.callchain),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchainList",
    },
    failtype: {
      value: cdktf.numberToHclTerraform(struct!.failtype),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    headers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.headers),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    probability: {
      value: cdktf.numberToHclTerraform(struct!.probability),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    times: {
      value: cdktf.numberToHclTerraform(struct!.times),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequest | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._callchain?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.callchain = this._callchain?.internalValue;
    }
    if (this._failtype !== undefined) {
      hasAnyValues = true;
      internalValueResult.failtype = this._failtype;
    }
    if (this._headers !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers;
    }
    if (this._probability !== undefined) {
      hasAnyValues = true;
      internalValueResult.probability = this._probability;
    }
    if (this._times !== undefined) {
      hasAnyValues = true;
      internalValueResult.times = this._times;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequest | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._callchain.internalValue = undefined;
      this._failtype = undefined;
      this._headers = undefined;
      this._probability = undefined;
      this._times = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._callchain.internalValue = value.callchain;
      this._failtype = value.failtype;
      this._headers = value.headers;
      this._probability = value.probability;
      this._times = value.times;
    }
  }

  // callchain - computed: false, optional: true, required: false
  private _callchain = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchainList(this, "callchain", false);
  public get callchain() {
    return this._callchain;
  }
  public putCallchain(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestCallchain[] | cdktf.IResolvable) {
    this._callchain.internalValue = value;
  }
  public resetCallchain() {
    this._callchain.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get callchainInput() {
    return this._callchain.internalValue;
  }

  // failtype - computed: false, optional: false, required: true
  private _failtype?: number; 
  public get failtype() {
    return this.getNumberAttribute('failtype');
  }
  public set failtype(value: number) {
    this._failtype = value;
  }
  // Temporarily expose input value. Use with caution.
  public get failtypeInput() {
    return this._failtype;
  }

  // headers - computed: false, optional: true, required: false
  private _headers?: string[]; 
  public get headers() {
    return this.getListAttribute('headers');
  }
  public set headers(value: string[]) {
    this._headers = value;
  }
  public resetHeaders() {
    this._headers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers;
  }

  // probability - computed: false, optional: true, required: false
  private _probability?: number; 
  public get probability() {
    return this.getNumberAttribute('probability');
  }
  public set probability(value: number) {
    this._probability = value;
  }
  public resetProbability() {
    this._probability = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get probabilityInput() {
    return this._probability;
  }

  // times - computed: false, optional: true, required: false
  private _times?: number; 
  public get times() {
    return this.getNumberAttribute('times');
  }
  public set times(value: number) {
    this._times = value;
  }
  public resetTimes() {
    this._times = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timesInput() {
    return this._times;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaos {
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * Duration represents the duration of the chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * FailKernRequest defines the request of kernel injection
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#fail_kern_request DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#fail_kern_request}
  */
  readonly failKernRequest: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequest;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelector;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    duration: cdktf.stringToTerraform(struct!.duration),
    fail_kern_request: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestToTerraform(struct!.failKernRequest),
    mode: cdktf.stringToTerraform(struct!.mode),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fail_kern_request: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestToHclTerraform(struct!.failKernRequest),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequest",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelector",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._failKernRequest?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.failKernRequest = this._failKernRequest?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerNames = undefined;
      this._duration = undefined;
      this._failKernRequest.internalValue = undefined;
      this._mode = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerNames = value.containerNames;
      this._duration = value.duration;
      this._failKernRequest.internalValue = value.failKernRequest;
      this._mode = value.mode;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._value = value.value;
    }
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // fail_kern_request - computed: false, optional: false, required: true
  private _failKernRequest = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequestOutputReference(this, "fail_kern_request");
  public get failKernRequest() {
    return this._failKernRequest;
  }
  public putFailKernRequest(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosFailKernRequest) {
    this._failKernRequest.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get failKernRequestInput() {
    return this._failKernRequest.internalValue;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecKernelChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidth {
  /**
  * Buffer is the maximum amount of bytes that tokens can be available for instantaneously.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#buffer DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#buffer}
  */
  readonly buffer: number;
  /**
  * Limit is the number of bytes that can be queued waiting for tokens to become available.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#limit DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#limit}
  */
  readonly limit: number;
  /**
  * Minburst specifies the size of the peakrate bucket. For perfect accuracy, should be set to the MTU of the interface. If a peakrate is needed, but some burstiness is acceptable, this size can be raised. A 3000 byte minburst allows around 3mbit/s of peakrate, given 1000 byte packets.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#minburst DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#minburst}
  */
  readonly minburst?: number;
  /**
  * Peakrate is the maximum depletion rate of the bucket. The peakrate does not need to be set, it is only necessary if perfect millisecond timescale shaping is required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#peakrate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#peakrate}
  */
  readonly peakrate?: number;
  /**
  * Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rate}
  */
  readonly rate: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidthToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    buffer: cdktf.numberToTerraform(struct!.buffer),
    limit: cdktf.numberToTerraform(struct!.limit),
    minburst: cdktf.numberToTerraform(struct!.minburst),
    peakrate: cdktf.numberToTerraform(struct!.peakrate),
    rate: cdktf.stringToTerraform(struct!.rate),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidthToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    buffer: {
      value: cdktf.numberToHclTerraform(struct!.buffer),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    limit: {
      value: cdktf.numberToHclTerraform(struct!.limit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    minburst: {
      value: cdktf.numberToHclTerraform(struct!.minburst),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    peakrate: {
      value: cdktf.numberToHclTerraform(struct!.peakrate),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rate: {
      value: cdktf.stringToHclTerraform(struct!.rate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidthOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidth | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._buffer !== undefined) {
      hasAnyValues = true;
      internalValueResult.buffer = this._buffer;
    }
    if (this._limit !== undefined) {
      hasAnyValues = true;
      internalValueResult.limit = this._limit;
    }
    if (this._minburst !== undefined) {
      hasAnyValues = true;
      internalValueResult.minburst = this._minburst;
    }
    if (this._peakrate !== undefined) {
      hasAnyValues = true;
      internalValueResult.peakrate = this._peakrate;
    }
    if (this._rate !== undefined) {
      hasAnyValues = true;
      internalValueResult.rate = this._rate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidth | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._buffer = undefined;
      this._limit = undefined;
      this._minburst = undefined;
      this._peakrate = undefined;
      this._rate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._buffer = value.buffer;
      this._limit = value.limit;
      this._minburst = value.minburst;
      this._peakrate = value.peakrate;
      this._rate = value.rate;
    }
  }

  // buffer - computed: false, optional: false, required: true
  private _buffer?: number; 
  public get buffer() {
    return this.getNumberAttribute('buffer');
  }
  public set buffer(value: number) {
    this._buffer = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bufferInput() {
    return this._buffer;
  }

  // limit - computed: false, optional: false, required: true
  private _limit?: number; 
  public get limit() {
    return this.getNumberAttribute('limit');
  }
  public set limit(value: number) {
    this._limit = value;
  }
  // Temporarily expose input value. Use with caution.
  public get limitInput() {
    return this._limit;
  }

  // minburst - computed: false, optional: true, required: false
  private _minburst?: number; 
  public get minburst() {
    return this.getNumberAttribute('minburst');
  }
  public set minburst(value: number) {
    this._minburst = value;
  }
  public resetMinburst() {
    this._minburst = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minburstInput() {
    return this._minburst;
  }

  // peakrate - computed: false, optional: true, required: false
  private _peakrate?: number; 
  public get peakrate() {
    return this.getNumberAttribute('peakrate');
  }
  public set peakrate(value: number) {
    this._peakrate = value;
  }
  public resetPeakrate() {
    this._peakrate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get peakrateInput() {
    return this._peakrate;
  }

  // rate - computed: false, optional: false, required: true
  private _rate?: string; 
  public get rate() {
    return this.getStringAttribute('rate');
  }
  public set rate(value: string) {
    this._rate = value;
  }
  // Temporarily expose input value. Use with caution.
  public get rateInput() {
    return this._rate;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorrupt {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#corrupt DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#corrupt}
  */
  readonly corrupt: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorruptToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorrupt | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    corrupt: cdktf.stringToTerraform(struct!.corrupt),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorruptToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorrupt | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    corrupt: {
      value: cdktf.stringToHclTerraform(struct!.corrupt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorruptOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorrupt | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._corrupt !== undefined) {
      hasAnyValues = true;
      internalValueResult.corrupt = this._corrupt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorrupt | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._corrupt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._corrupt = value.corrupt;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // corrupt - computed: false, optional: false, required: true
  private _corrupt?: string; 
  public get corrupt() {
    return this.getStringAttribute('corrupt');
  }
  public set corrupt(value: string) {
    this._corrupt = value;
  }
  // Temporarily expose input value. Use with caution.
  public get corruptInput() {
    return this._corrupt;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorder {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#gap DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#gap}
  */
  readonly gap: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#reorder DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#reorder}
  */
  readonly reorder: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorderToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    gap: cdktf.numberToTerraform(struct!.gap),
    reorder: cdktf.stringToTerraform(struct!.reorder),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorderToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gap: {
      value: cdktf.numberToHclTerraform(struct!.gap),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    reorder: {
      value: cdktf.stringToHclTerraform(struct!.reorder),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorder | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._gap !== undefined) {
      hasAnyValues = true;
      internalValueResult.gap = this._gap;
    }
    if (this._reorder !== undefined) {
      hasAnyValues = true;
      internalValueResult.reorder = this._reorder;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorder | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._gap = undefined;
      this._reorder = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._gap = value.gap;
      this._reorder = value.reorder;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // gap - computed: false, optional: false, required: true
  private _gap?: number; 
  public get gap() {
    return this.getNumberAttribute('gap');
  }
  public set gap(value: number) {
    this._gap = value;
  }
  // Temporarily expose input value. Use with caution.
  public get gapInput() {
    return this._gap;
  }

  // reorder - computed: false, optional: false, required: true
  private _reorder?: string; 
  public get reorder() {
    return this.getStringAttribute('reorder');
  }
  public set reorder(value: string) {
    this._reorder = value;
  }
  // Temporarily expose input value. Use with caution.
  public get reorderInput() {
    return this._reorder;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelay {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jitter DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jitter}
  */
  readonly jitter?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#latency}
  */
  readonly latency: string;
  /**
  * ReorderSpec defines details of packet reorder.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#reorder DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#reorder}
  */
  readonly reorder?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorder;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    jitter: cdktf.stringToTerraform(struct!.jitter),
    latency: cdktf.stringToTerraform(struct!.latency),
    reorder: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorderToTerraform(struct!.reorder),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    jitter: {
      value: cdktf.stringToHclTerraform(struct!.jitter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    latency: {
      value: cdktf.stringToHclTerraform(struct!.latency),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reorder: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorderToHclTerraform(struct!.reorder),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorder",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelay | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._jitter !== undefined) {
      hasAnyValues = true;
      internalValueResult.jitter = this._jitter;
    }
    if (this._latency !== undefined) {
      hasAnyValues = true;
      internalValueResult.latency = this._latency;
    }
    if (this._reorder?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.reorder = this._reorder?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelay | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._jitter = undefined;
      this._latency = undefined;
      this._reorder.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._jitter = value.jitter;
      this._latency = value.latency;
      this._reorder.internalValue = value.reorder;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // jitter - computed: false, optional: true, required: false
  private _jitter?: string; 
  public get jitter() {
    return this.getStringAttribute('jitter');
  }
  public set jitter(value: string) {
    this._jitter = value;
  }
  public resetJitter() {
    this._jitter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jitterInput() {
    return this._jitter;
  }

  // latency - computed: false, optional: false, required: true
  private _latency?: string; 
  public get latency() {
    return this.getStringAttribute('latency');
  }
  public set latency(value: string) {
    this._latency = value;
  }
  // Temporarily expose input value. Use with caution.
  public get latencyInput() {
    return this._latency;
  }

  // reorder - computed: false, optional: true, required: false
  private _reorder = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorderOutputReference(this, "reorder");
  public get reorder() {
    return this._reorder;
  }
  public putReorder(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayReorder) {
    this._reorder.internalValue = value;
  }
  public resetReorder() {
    this._reorder.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reorderInput() {
    return this._reorder.internalValue;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicate {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duplicate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duplicate}
  */
  readonly duplicate: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicateToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    duplicate: cdktf.stringToTerraform(struct!.duplicate),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicateToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duplicate: {
      value: cdktf.stringToHclTerraform(struct!.duplicate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._duplicate !== undefined) {
      hasAnyValues = true;
      internalValueResult.duplicate = this._duplicate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._duplicate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._duplicate = value.duplicate;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // duplicate - computed: false, optional: false, required: true
  private _duplicate?: string; 
  public get duplicate() {
    return this.getStringAttribute('duplicate');
  }
  public set duplicate(value: string) {
    this._duplicate = value;
  }
  // Temporarily expose input value. Use with caution.
  public get duplicateInput() {
    return this._duplicate;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLoss {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#loss DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#loss}
  */
  readonly loss: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLossToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLoss | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    loss: cdktf.stringToTerraform(struct!.loss),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLossToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLoss | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    loss: {
      value: cdktf.stringToHclTerraform(struct!.loss),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLossOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLoss | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._loss !== undefined) {
      hasAnyValues = true;
      internalValueResult.loss = this._loss;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLoss | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._loss = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._loss = value.loss;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // loss - computed: false, optional: false, required: true
  private _loss?: string; 
  public get loss() {
    return this.getStringAttribute('loss');
  }
  public set loss(value: string) {
    this._loss = value;
  }
  // Temporarily expose input value. Use with caution.
  public get lossInput() {
    return this._loss;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRate {
  /**
  * Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rate}
  */
  readonly rate: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRateToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    rate: cdktf.stringToTerraform(struct!.rate),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRateToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    rate: {
      value: cdktf.stringToHclTerraform(struct!.rate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._rate !== undefined) {
      hasAnyValues = true;
      internalValueResult.rate = this._rate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._rate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._rate = value.rate;
    }
  }

  // rate - computed: false, optional: false, required: true
  private _rate?: string; 
  public get rate() {
    return this.getStringAttribute('rate');
  }
  public set rate(value: string) {
    this._rate = value;
  }
  // Temporarily expose input value. Use with caution.
  public get rateInput() {
    return this._rate;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTarget {
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelector;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTarget | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    mode: cdktf.stringToTerraform(struct!.mode),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTarget | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelector",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTarget | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTarget | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mode = undefined;
      this._selector.internalValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mode = value.mode;
      this._selector.internalValue = value.selector;
      this._value = value.value;
    }
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaos {
  /**
  * Action defines the specific network chaos action. Supported action: partition, netem, delay, loss, duplicate, corrupt Default action: delay
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * Bandwidth represents the detail about bandwidth control action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#bandwidth DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#bandwidth}
  */
  readonly bandwidth?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidth;
  /**
  * Corrupt represents the detail about corrupt action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#corrupt DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#corrupt}
  */
  readonly corrupt?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorrupt;
  /**
  * Delay represents the detail about delay action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#delay}
  */
  readonly delay?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelay;
  /**
  * Device represents the network device to be affected.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * Direction represents the direction, this applies on netem and network partition action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#direction DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#direction}
  */
  readonly direction?: string;
  /**
  * DuplicateSpec represents the detail about loss action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duplicate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duplicate}
  */
  readonly duplicate?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicate;
  /**
  * Duration represents the duration of the chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * ExternalTargets represents network targets outside k8s
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#external_targets DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#external_targets}
  */
  readonly externalTargets?: string[];
  /**
  * Loss represents the detail about loss action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#loss DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#loss}
  */
  readonly loss?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLoss;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Rate represents the detail about rate control action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rate}
  */
  readonly rate?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRate;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelector;
  /**
  * Target represents network target, this applies on netem and network partition action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#target DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#target}
  */
  readonly target?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTarget;
  /**
  * TargetDevice represents the network device to be affected in target scope.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#target_device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#target_device}
  */
  readonly targetDevice?: string;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    bandwidth: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidthToTerraform(struct!.bandwidth),
    corrupt: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorruptToTerraform(struct!.corrupt),
    delay: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayToTerraform(struct!.delay),
    device: cdktf.stringToTerraform(struct!.device),
    direction: cdktf.stringToTerraform(struct!.direction),
    duplicate: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicateToTerraform(struct!.duplicate),
    duration: cdktf.stringToTerraform(struct!.duration),
    external_targets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.externalTargets),
    loss: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLossToTerraform(struct!.loss),
    mode: cdktf.stringToTerraform(struct!.mode),
    rate: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRateToTerraform(struct!.rate),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorToTerraform(struct!.selector),
    target: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetToTerraform(struct!.target),
    target_device: cdktf.stringToTerraform(struct!.targetDevice),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    bandwidth: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidthToHclTerraform(struct!.bandwidth),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidth",
    },
    corrupt: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorruptToHclTerraform(struct!.corrupt),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorrupt",
    },
    delay: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayToHclTerraform(struct!.delay),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelay",
    },
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    direction: {
      value: cdktf.stringToHclTerraform(struct!.direction),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duplicate: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicateToHclTerraform(struct!.duplicate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicate",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    external_targets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.externalTargets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    loss: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLossToHclTerraform(struct!.loss),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLoss",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    rate: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRateToHclTerraform(struct!.rate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRate",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelector",
    },
    target: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetToHclTerraform(struct!.target),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTarget",
    },
    target_device: {
      value: cdktf.stringToHclTerraform(struct!.targetDevice),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._bandwidth?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bandwidth = this._bandwidth?.internalValue;
    }
    if (this._corrupt?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.corrupt = this._corrupt?.internalValue;
    }
    if (this._delay?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.delay = this._delay?.internalValue;
    }
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._direction !== undefined) {
      hasAnyValues = true;
      internalValueResult.direction = this._direction;
    }
    if (this._duplicate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.duplicate = this._duplicate?.internalValue;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._externalTargets !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalTargets = this._externalTargets;
    }
    if (this._loss?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.loss = this._loss?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._rate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rate = this._rate?.internalValue;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._target?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.target = this._target?.internalValue;
    }
    if (this._targetDevice !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetDevice = this._targetDevice;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._bandwidth.internalValue = undefined;
      this._corrupt.internalValue = undefined;
      this._delay.internalValue = undefined;
      this._device = undefined;
      this._direction = undefined;
      this._duplicate.internalValue = undefined;
      this._duration = undefined;
      this._externalTargets = undefined;
      this._loss.internalValue = undefined;
      this._mode = undefined;
      this._rate.internalValue = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._target.internalValue = undefined;
      this._targetDevice = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._bandwidth.internalValue = value.bandwidth;
      this._corrupt.internalValue = value.corrupt;
      this._delay.internalValue = value.delay;
      this._device = value.device;
      this._direction = value.direction;
      this._duplicate.internalValue = value.duplicate;
      this._duration = value.duration;
      this._externalTargets = value.externalTargets;
      this._loss.internalValue = value.loss;
      this._mode = value.mode;
      this._rate.internalValue = value.rate;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._target.internalValue = value.target;
      this._targetDevice = value.targetDevice;
      this._value = value.value;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // bandwidth - computed: false, optional: true, required: false
  private _bandwidth = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidthOutputReference(this, "bandwidth");
  public get bandwidth() {
    return this._bandwidth;
  }
  public putBandwidth(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosBandwidth) {
    this._bandwidth.internalValue = value;
  }
  public resetBandwidth() {
    this._bandwidth.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bandwidthInput() {
    return this._bandwidth.internalValue;
  }

  // corrupt - computed: false, optional: true, required: false
  private _corrupt = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorruptOutputReference(this, "corrupt");
  public get corrupt() {
    return this._corrupt;
  }
  public putCorrupt(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosCorrupt) {
    this._corrupt.internalValue = value;
  }
  public resetCorrupt() {
    this._corrupt.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get corruptInput() {
    return this._corrupt.internalValue;
  }

  // delay - computed: false, optional: true, required: false
  private _delay = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelayOutputReference(this, "delay");
  public get delay() {
    return this._delay;
  }
  public putDelay(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDelay) {
    this._delay.internalValue = value;
  }
  public resetDelay() {
    this._delay.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get delayInput() {
    return this._delay.internalValue;
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // direction - computed: false, optional: true, required: false
  private _direction?: string; 
  public get direction() {
    return this.getStringAttribute('direction');
  }
  public set direction(value: string) {
    this._direction = value;
  }
  public resetDirection() {
    this._direction = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directionInput() {
    return this._direction;
  }

  // duplicate - computed: false, optional: true, required: false
  private _duplicate = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicateOutputReference(this, "duplicate");
  public get duplicate() {
    return this._duplicate;
  }
  public putDuplicate(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosDuplicate) {
    this._duplicate.internalValue = value;
  }
  public resetDuplicate() {
    this._duplicate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get duplicateInput() {
    return this._duplicate.internalValue;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // external_targets - computed: false, optional: true, required: false
  private _externalTargets?: string[]; 
  public get externalTargets() {
    return this.getListAttribute('external_targets');
  }
  public set externalTargets(value: string[]) {
    this._externalTargets = value;
  }
  public resetExternalTargets() {
    this._externalTargets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalTargetsInput() {
    return this._externalTargets;
  }

  // loss - computed: false, optional: true, required: false
  private _loss = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLossOutputReference(this, "loss");
  public get loss() {
    return this._loss;
  }
  public putLoss(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosLoss) {
    this._loss.internalValue = value;
  }
  public resetLoss() {
    this._loss.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lossInput() {
    return this._loss.internalValue;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // rate - computed: false, optional: true, required: false
  private _rate = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRateOutputReference(this, "rate");
  public get rate() {
    return this._rate;
  }
  public putRate(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosRate) {
    this._rate.internalValue = value;
  }
  public resetRate() {
    this._rate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rateInput() {
    return this._rate.internalValue;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // target - computed: false, optional: true, required: false
  private _target = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTargetOutputReference(this, "target");
  public get target() {
    return this._target;
  }
  public putTarget(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecNetworkChaosTarget) {
    this._target.internalValue = value;
  }
  public resetTarget() {
    this._target.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetInput() {
    return this._target.internalValue;
  }

  // target_device - computed: false, optional: true, required: false
  private _targetDevice?: string; 
  public get targetDevice() {
    return this.getStringAttribute('target_device');
  }
  public set targetDevice(value: string) {
    this._targetDevice = value;
  }
  public resetTargetDevice() {
    this._targetDevice = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetDeviceInput() {
    return this._targetDevice;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClock {
  /**
  * the identifier of the particular clock on which to act. More clock description in linux kernel can be found in man page of clock_getres, clock_gettime, clock_settime. Muti clock ids should be split with ','
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#clock_ids_slice DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#clock_ids_slice}
  */
  readonly clockIdsSlice?: string;
  /**
  * the pid of target program.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * specifies the length of time offset.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#time_offset DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#time_offset}
  */
  readonly timeOffset?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClockToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClock | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    clock_ids_slice: cdktf.stringToTerraform(struct!.clockIdsSlice),
    pid: cdktf.numberToTerraform(struct!.pid),
    time_offset: cdktf.stringToTerraform(struct!.timeOffset),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClockToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClock | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    clock_ids_slice: {
      value: cdktf.stringToHclTerraform(struct!.clockIdsSlice),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    time_offset: {
      value: cdktf.stringToHclTerraform(struct!.timeOffset),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClockOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClock | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clockIdsSlice !== undefined) {
      hasAnyValues = true;
      internalValueResult.clockIdsSlice = this._clockIdsSlice;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._timeOffset !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeOffset = this._timeOffset;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClock | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clockIdsSlice = undefined;
      this._pid = undefined;
      this._timeOffset = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clockIdsSlice = value.clockIdsSlice;
      this._pid = value.pid;
      this._timeOffset = value.timeOffset;
    }
  }

  // clock_ids_slice - computed: false, optional: true, required: false
  private _clockIdsSlice?: string; 
  public get clockIdsSlice() {
    return this.getStringAttribute('clock_ids_slice');
  }
  public set clockIdsSlice(value: string) {
    this._clockIdsSlice = value;
  }
  public resetClockIdsSlice() {
    this._clockIdsSlice = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clockIdsSliceInput() {
    return this._clockIdsSlice;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // time_offset - computed: false, optional: true, required: false
  private _timeOffset?: string; 
  public get timeOffset() {
    return this.getStringAttribute('time_offset');
  }
  public set timeOffset(value: string) {
    this._timeOffset = value;
  }
  public resetTimeOffset() {
    this._timeOffset = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeOffsetInput() {
    return this._timeOffset;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFill {
  /**
  * fill disk by fallocate
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#fill_by_fallocate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#fill_by_fallocate}
  */
  readonly fillByFallocate?: boolean | cdktf.IResolvable;
  /**
  * specifies the location to fill data in. if path not provided, payload will read/write from/into a temp file, temp file will be deleted after writing
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000, K=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#size}
  */
  readonly size?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFillToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFill | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fill_by_fallocate: cdktf.booleanToTerraform(struct!.fillByFallocate),
    path: cdktf.stringToTerraform(struct!.path),
    size: cdktf.stringToTerraform(struct!.size),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFillToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFill | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fill_by_fallocate: {
      value: cdktf.booleanToHclTerraform(struct!.fillByFallocate),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    size: {
      value: cdktf.stringToHclTerraform(struct!.size),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFillOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFill | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fillByFallocate !== undefined) {
      hasAnyValues = true;
      internalValueResult.fillByFallocate = this._fillByFallocate;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._size !== undefined) {
      hasAnyValues = true;
      internalValueResult.size = this._size;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFill | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fillByFallocate = undefined;
      this._path = undefined;
      this._size = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fillByFallocate = value.fillByFallocate;
      this._path = value.path;
      this._size = value.size;
    }
  }

  // fill_by_fallocate - computed: false, optional: true, required: false
  private _fillByFallocate?: boolean | cdktf.IResolvable; 
  public get fillByFallocate() {
    return this.getBooleanAttribute('fill_by_fallocate');
  }
  public set fillByFallocate(value: boolean | cdktf.IResolvable) {
    this._fillByFallocate = value;
  }
  public resetFillByFallocate() {
    this._fillByFallocate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fillByFallocateInput() {
    return this._fillByFallocate;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // size - computed: false, optional: true, required: false
  private _size?: string; 
  public get size() {
    return this.getStringAttribute('size');
  }
  public set size(value: string) {
    this._size = value;
  }
  public resetSize() {
    this._size = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeInput() {
    return this._size;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayload {
  /**
  * specifies the location to fill data in. if path not provided, payload will read/write from/into a temp file, temp file will be deleted after writing
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * specifies the number of process work on writing, default 1, only 1-255 is valid value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#payload_process_num DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#payload_process_num}
  */
  readonly payloadProcessNum?: number;
  /**
  * specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000, K=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#size}
  */
  readonly size?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayloadToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayload | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    path: cdktf.stringToTerraform(struct!.path),
    payload_process_num: cdktf.numberToTerraform(struct!.payloadProcessNum),
    size: cdktf.stringToTerraform(struct!.size),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayloadToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayload | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    payload_process_num: {
      value: cdktf.numberToHclTerraform(struct!.payloadProcessNum),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    size: {
      value: cdktf.stringToHclTerraform(struct!.size),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayloadOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayload | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._payloadProcessNum !== undefined) {
      hasAnyValues = true;
      internalValueResult.payloadProcessNum = this._payloadProcessNum;
    }
    if (this._size !== undefined) {
      hasAnyValues = true;
      internalValueResult.size = this._size;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayload | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._path = undefined;
      this._payloadProcessNum = undefined;
      this._size = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._path = value.path;
      this._payloadProcessNum = value.payloadProcessNum;
      this._size = value.size;
    }
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // payload_process_num - computed: false, optional: true, required: false
  private _payloadProcessNum?: number; 
  public get payloadProcessNum() {
    return this.getNumberAttribute('payload_process_num');
  }
  public set payloadProcessNum(value: number) {
    this._payloadProcessNum = value;
  }
  public resetPayloadProcessNum() {
    this._payloadProcessNum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get payloadProcessNumInput() {
    return this._payloadProcessNum;
  }

  // size - computed: false, optional: true, required: false
  private _size?: string; 
  public get size() {
    return this.getStringAttribute('size');
  }
  public set size(value: string) {
    this._size = value;
  }
  public resetSize() {
    this._size = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeInput() {
    return this._size;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayload {
  /**
  * specifies the location to fill data in. if path not provided, payload will read/write from/into a temp file, temp file will be deleted after writing
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * specifies the number of process work on writing, default 1, only 1-255 is valid value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#payload_process_num DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#payload_process_num}
  */
  readonly payloadProcessNum?: number;
  /**
  * specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000, K=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#size}
  */
  readonly size?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayloadToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayload | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    path: cdktf.stringToTerraform(struct!.path),
    payload_process_num: cdktf.numberToTerraform(struct!.payloadProcessNum),
    size: cdktf.stringToTerraform(struct!.size),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayloadToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayload | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    payload_process_num: {
      value: cdktf.numberToHclTerraform(struct!.payloadProcessNum),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    size: {
      value: cdktf.stringToHclTerraform(struct!.size),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayloadOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayload | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._payloadProcessNum !== undefined) {
      hasAnyValues = true;
      internalValueResult.payloadProcessNum = this._payloadProcessNum;
    }
    if (this._size !== undefined) {
      hasAnyValues = true;
      internalValueResult.size = this._size;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayload | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._path = undefined;
      this._payloadProcessNum = undefined;
      this._size = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._path = value.path;
      this._payloadProcessNum = value.payloadProcessNum;
      this._size = value.size;
    }
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // payload_process_num - computed: false, optional: true, required: false
  private _payloadProcessNum?: number; 
  public get payloadProcessNum() {
    return this.getNumberAttribute('payload_process_num');
  }
  public set payloadProcessNum(value: number) {
    this._payloadProcessNum = value;
  }
  public resetPayloadProcessNum() {
    this._payloadProcessNum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get payloadProcessNumInput() {
    return this._payloadProcessNum;
  }

  // size - computed: false, optional: true, required: false
  private _size?: string; 
  public get size() {
    return this.getStringAttribute('size');
  }
  public set size(value: string) {
    this._size = value;
  }
  public resetSize() {
    this._size = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeInput() {
    return this._size;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppend {
  /**
  * Count is the number of times to append the data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#count DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#count}
  */
  readonly count?: number;
  /**
  * Data is the data for append.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#data DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#data}
  */
  readonly data?: string;
  /**
  * FileName is the name of the file to be created, modified, deleted, renamed, or appended.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_name}
  */
  readonly fileName?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppendToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppend | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    count: cdktf.numberToTerraform(struct!.count),
    data: cdktf.stringToTerraform(struct!.data),
    file_name: cdktf.stringToTerraform(struct!.fileName),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppendToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppend | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    count: {
      value: cdktf.numberToHclTerraform(struct!.count),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    data: {
      value: cdktf.stringToHclTerraform(struct!.data),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    file_name: {
      value: cdktf.stringToHclTerraform(struct!.fileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppendOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppend | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._count !== undefined) {
      hasAnyValues = true;
      internalValueResult.count = this._count;
    }
    if (this._data !== undefined) {
      hasAnyValues = true;
      internalValueResult.data = this._data;
    }
    if (this._fileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileName = this._fileName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppend | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._count = undefined;
      this._data = undefined;
      this._fileName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._count = value.count;
      this._data = value.data;
      this._fileName = value.fileName;
    }
  }

  // count - computed: false, optional: true, required: false
  private _count?: number; 
  public get count() {
    return this.getNumberAttribute('count');
  }
  public set count(value: number) {
    this._count = value;
  }
  public resetCount() {
    this._count = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get countInput() {
    return this._count;
  }

  // data - computed: false, optional: true, required: false
  private _data?: string; 
  public get data() {
    return this.getStringAttribute('data');
  }
  public set data(value: string) {
    this._data = value;
  }
  public resetData() {
    this._data = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataInput() {
    return this._data;
  }

  // file_name - computed: false, optional: true, required: false
  private _fileName?: string; 
  public get fileName() {
    return this.getStringAttribute('file_name');
  }
  public set fileName(value: string) {
    this._fileName = value;
  }
  public resetFileName() {
    this._fileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileNameInput() {
    return this._fileName;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreate {
  /**
  * DirName is the directory name to create or delete.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#dir_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#dir_name}
  */
  readonly dirName?: string;
  /**
  * FileName is the name of the file to be created, modified, deleted, renamed, or appended.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_name}
  */
  readonly fileName?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreateToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dir_name: cdktf.stringToTerraform(struct!.dirName),
    file_name: cdktf.stringToTerraform(struct!.fileName),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreateToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dir_name: {
      value: cdktf.stringToHclTerraform(struct!.dirName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    file_name: {
      value: cdktf.stringToHclTerraform(struct!.fileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dirName !== undefined) {
      hasAnyValues = true;
      internalValueResult.dirName = this._dirName;
    }
    if (this._fileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileName = this._fileName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dirName = undefined;
      this._fileName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dirName = value.dirName;
      this._fileName = value.fileName;
    }
  }

  // dir_name - computed: false, optional: true, required: false
  private _dirName?: string; 
  public get dirName() {
    return this.getStringAttribute('dir_name');
  }
  public set dirName(value: string) {
    this._dirName = value;
  }
  public resetDirName() {
    this._dirName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dirNameInput() {
    return this._dirName;
  }

  // file_name - computed: false, optional: true, required: false
  private _fileName?: string; 
  public get fileName() {
    return this.getStringAttribute('file_name');
  }
  public set fileName(value: string) {
    this._fileName = value;
  }
  public resetFileName() {
    this._fileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileNameInput() {
    return this._fileName;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDelete {
  /**
  * DirName is the directory name to create or delete.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#dir_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#dir_name}
  */
  readonly dirName?: string;
  /**
  * FileName is the name of the file to be created, modified, deleted, renamed, or appended.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_name}
  */
  readonly fileName?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDeleteToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDelete | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dir_name: cdktf.stringToTerraform(struct!.dirName),
    file_name: cdktf.stringToTerraform(struct!.fileName),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDeleteToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDelete | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dir_name: {
      value: cdktf.stringToHclTerraform(struct!.dirName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    file_name: {
      value: cdktf.stringToHclTerraform(struct!.fileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDeleteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDelete | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dirName !== undefined) {
      hasAnyValues = true;
      internalValueResult.dirName = this._dirName;
    }
    if (this._fileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileName = this._fileName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDelete | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dirName = undefined;
      this._fileName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dirName = value.dirName;
      this._fileName = value.fileName;
    }
  }

  // dir_name - computed: false, optional: true, required: false
  private _dirName?: string; 
  public get dirName() {
    return this.getStringAttribute('dir_name');
  }
  public set dirName(value: string) {
    this._dirName = value;
  }
  public resetDirName() {
    this._dirName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dirNameInput() {
    return this._dirName;
  }

  // file_name - computed: false, optional: true, required: false
  private _fileName?: string; 
  public get fileName() {
    return this.getStringAttribute('file_name');
  }
  public set fileName(value: string) {
    this._fileName = value;
  }
  public resetFileName() {
    this._fileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileNameInput() {
    return this._fileName;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModify {
  /**
  * FileName is the name of the file to be created, modified, deleted, renamed, or appended.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_name}
  */
  readonly fileName?: string;
  /**
  * Privilege is the file privilege to be set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#privilege DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#privilege}
  */
  readonly privilege?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModifyToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModify | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    file_name: cdktf.stringToTerraform(struct!.fileName),
    privilege: cdktf.numberToTerraform(struct!.privilege),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModifyToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModify | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    file_name: {
      value: cdktf.stringToHclTerraform(struct!.fileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    privilege: {
      value: cdktf.numberToHclTerraform(struct!.privilege),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModifyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModify | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileName = this._fileName;
    }
    if (this._privilege !== undefined) {
      hasAnyValues = true;
      internalValueResult.privilege = this._privilege;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModify | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fileName = undefined;
      this._privilege = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fileName = value.fileName;
      this._privilege = value.privilege;
    }
  }

  // file_name - computed: false, optional: true, required: false
  private _fileName?: string; 
  public get fileName() {
    return this.getStringAttribute('file_name');
  }
  public set fileName(value: string) {
    this._fileName = value;
  }
  public resetFileName() {
    this._fileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileNameInput() {
    return this._fileName;
  }

  // privilege - computed: false, optional: true, required: false
  private _privilege?: number; 
  public get privilege() {
    return this.getNumberAttribute('privilege');
  }
  public set privilege(value: number) {
    this._privilege = value;
  }
  public resetPrivilege() {
    this._privilege = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privilegeInput() {
    return this._privilege;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRename {
  /**
  * DestFile is the name to be renamed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#dest_file DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#dest_file}
  */
  readonly destFile?: string;
  /**
  * SourceFile is the name need to be renamed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#source_file DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#source_file}
  */
  readonly sourceFile?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRenameToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRename | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dest_file: cdktf.stringToTerraform(struct!.destFile),
    source_file: cdktf.stringToTerraform(struct!.sourceFile),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRenameToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRename | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dest_file: {
      value: cdktf.stringToHclTerraform(struct!.destFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    source_file: {
      value: cdktf.stringToHclTerraform(struct!.sourceFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRenameOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRename | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._destFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.destFile = this._destFile;
    }
    if (this._sourceFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceFile = this._sourceFile;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRename | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._destFile = undefined;
      this._sourceFile = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._destFile = value.destFile;
      this._sourceFile = value.sourceFile;
    }
  }

  // dest_file - computed: false, optional: true, required: false
  private _destFile?: string; 
  public get destFile() {
    return this.getStringAttribute('dest_file');
  }
  public set destFile(value: string) {
    this._destFile = value;
  }
  public resetDestFile() {
    this._destFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destFileInput() {
    return this._destFile;
  }

  // source_file - computed: false, optional: true, required: false
  private _sourceFile?: string; 
  public get sourceFile() {
    return this.getStringAttribute('source_file');
  }
  public set sourceFile(value: string) {
    this._sourceFile = value;
  }
  public resetSourceFile() {
    this._sourceFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceFileInput() {
    return this._sourceFile;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplace {
  /**
  * DestStr is the destination string of the file.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#dest_string DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#dest_string}
  */
  readonly destString?: string;
  /**
  * FileName is the name of the file to be created, modified, deleted, renamed, or appended.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_name}
  */
  readonly fileName?: string;
  /**
  * Line is the line number of the file to be replaced.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#line DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#line}
  */
  readonly line?: number;
  /**
  * OriginStr is the origin string of the file.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#origin_string DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#origin_string}
  */
  readonly originString?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplaceToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dest_string: cdktf.stringToTerraform(struct!.destString),
    file_name: cdktf.stringToTerraform(struct!.fileName),
    line: cdktf.numberToTerraform(struct!.line),
    origin_string: cdktf.stringToTerraform(struct!.originString),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplaceToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dest_string: {
      value: cdktf.stringToHclTerraform(struct!.destString),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    file_name: {
      value: cdktf.stringToHclTerraform(struct!.fileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    line: {
      value: cdktf.numberToHclTerraform(struct!.line),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    origin_string: {
      value: cdktf.stringToHclTerraform(struct!.originString),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplace | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._destString !== undefined) {
      hasAnyValues = true;
      internalValueResult.destString = this._destString;
    }
    if (this._fileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileName = this._fileName;
    }
    if (this._line !== undefined) {
      hasAnyValues = true;
      internalValueResult.line = this._line;
    }
    if (this._originString !== undefined) {
      hasAnyValues = true;
      internalValueResult.originString = this._originString;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplace | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._destString = undefined;
      this._fileName = undefined;
      this._line = undefined;
      this._originString = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._destString = value.destString;
      this._fileName = value.fileName;
      this._line = value.line;
      this._originString = value.originString;
    }
  }

  // dest_string - computed: false, optional: true, required: false
  private _destString?: string; 
  public get destString() {
    return this.getStringAttribute('dest_string');
  }
  public set destString(value: string) {
    this._destString = value;
  }
  public resetDestString() {
    this._destString = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destStringInput() {
    return this._destString;
  }

  // file_name - computed: false, optional: true, required: false
  private _fileName?: string; 
  public get fileName() {
    return this.getStringAttribute('file_name');
  }
  public set fileName(value: string) {
    this._fileName = value;
  }
  public resetFileName() {
    this._fileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileNameInput() {
    return this._fileName;
  }

  // line - computed: false, optional: true, required: false
  private _line?: number; 
  public get line() {
    return this.getNumberAttribute('line');
  }
  public set line(value: number) {
    this._line = value;
  }
  public resetLine() {
    this._line = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lineInput() {
    return this._line;
  }

  // origin_string - computed: false, optional: true, required: false
  private _originString?: string; 
  public get originString() {
    return this.getStringAttribute('origin_string');
  }
  public set originString(value: string) {
    this._originString = value;
  }
  public resetOriginString() {
    this._originString = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originStringInput() {
    return this._originString;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbort {
  /**
  * Code is a rule to select target by http status code in response
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#code DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#code}
  */
  readonly code?: string;
  /**
  * HTTP method
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * Match path of Uri with wildcard matches
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * The TCP port that the target service listens on
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Composed with one of the port of HTTP connection, we will only attack HTTP connection with port inside proxy_ports
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#proxy_ports DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#proxy_ports}
  */
  readonly proxyPorts: string[];
  /**
  * HTTP target: Request or Response
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#target DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#target}
  */
  readonly target: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbortToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    code: cdktf.stringToTerraform(struct!.code),
    method: cdktf.stringToTerraform(struct!.method),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.numberToTerraform(struct!.port),
    proxy_ports: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.proxyPorts),
    target: cdktf.stringToTerraform(struct!.target),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbortToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    code: {
      value: cdktf.stringToHclTerraform(struct!.code),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    proxy_ports: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.proxyPorts),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    target: {
      value: cdktf.stringToHclTerraform(struct!.target),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbortOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbort | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._code !== undefined) {
      hasAnyValues = true;
      internalValueResult.code = this._code;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._proxyPorts !== undefined) {
      hasAnyValues = true;
      internalValueResult.proxyPorts = this._proxyPorts;
    }
    if (this._target !== undefined) {
      hasAnyValues = true;
      internalValueResult.target = this._target;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbort | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._code = undefined;
      this._method = undefined;
      this._path = undefined;
      this._port = undefined;
      this._proxyPorts = undefined;
      this._target = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._code = value.code;
      this._method = value.method;
      this._path = value.path;
      this._port = value.port;
      this._proxyPorts = value.proxyPorts;
      this._target = value.target;
    }
  }

  // code - computed: false, optional: true, required: false
  private _code?: string; 
  public get code() {
    return this.getStringAttribute('code');
  }
  public set code(value: string) {
    this._code = value;
  }
  public resetCode() {
    this._code = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get codeInput() {
    return this._code;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // proxy_ports - computed: false, optional: false, required: true
  private _proxyPorts?: string[]; 
  public get proxyPorts() {
    return this.getListAttribute('proxy_ports');
  }
  public set proxyPorts(value: string[]) {
    this._proxyPorts = value;
  }
  // Temporarily expose input value. Use with caution.
  public get proxyPortsInput() {
    return this._proxyPorts;
  }

  // target - computed: false, optional: false, required: true
  private _target?: string; 
  public get target() {
    return this.getStringAttribute('target');
  }
  public set target(value: string) {
    this._target = value;
  }
  // Temporarily expose input value. Use with caution.
  public get targetInput() {
    return this._target;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfig {
  /**
  * The config file path
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_path}
  */
  readonly filePath?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfigToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    file_path: cdktf.stringToTerraform(struct!.filePath),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfigToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    file_path: {
      value: cdktf.stringToHclTerraform(struct!.filePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._filePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.filePath = this._filePath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._filePath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._filePath = value.filePath;
    }
  }

  // file_path - computed: false, optional: true, required: false
  private _filePath?: string; 
  public get filePath() {
    return this.getStringAttribute('file_path');
  }
  public set filePath(value: string) {
    this._filePath = value;
  }
  public resetFilePath() {
    this._filePath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filePathInput() {
    return this._filePath;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelay {
  /**
  * Code is a rule to select target by http status code in response
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#code DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#code}
  */
  readonly code?: string;
  /**
  * Delay represents the delay of the target request/response
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#delay}
  */
  readonly delay: string;
  /**
  * HTTP method
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * Match path of Uri with wildcard matches
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * The TCP port that the target service listens on
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Composed with one of the port of HTTP connection, we will only attack HTTP connection with port inside proxy_ports
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#proxy_ports DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#proxy_ports}
  */
  readonly proxyPorts: string[];
  /**
  * HTTP target: Request or Response
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#target DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#target}
  */
  readonly target: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelayToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    code: cdktf.stringToTerraform(struct!.code),
    delay: cdktf.stringToTerraform(struct!.delay),
    method: cdktf.stringToTerraform(struct!.method),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.numberToTerraform(struct!.port),
    proxy_ports: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.proxyPorts),
    target: cdktf.stringToTerraform(struct!.target),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelayToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    code: {
      value: cdktf.stringToHclTerraform(struct!.code),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    delay: {
      value: cdktf.stringToHclTerraform(struct!.delay),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    proxy_ports: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.proxyPorts),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    target: {
      value: cdktf.stringToHclTerraform(struct!.target),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelayOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelay | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._code !== undefined) {
      hasAnyValues = true;
      internalValueResult.code = this._code;
    }
    if (this._delay !== undefined) {
      hasAnyValues = true;
      internalValueResult.delay = this._delay;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._proxyPorts !== undefined) {
      hasAnyValues = true;
      internalValueResult.proxyPorts = this._proxyPorts;
    }
    if (this._target !== undefined) {
      hasAnyValues = true;
      internalValueResult.target = this._target;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelay | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._code = undefined;
      this._delay = undefined;
      this._method = undefined;
      this._path = undefined;
      this._port = undefined;
      this._proxyPorts = undefined;
      this._target = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._code = value.code;
      this._delay = value.delay;
      this._method = value.method;
      this._path = value.path;
      this._port = value.port;
      this._proxyPorts = value.proxyPorts;
      this._target = value.target;
    }
  }

  // code - computed: false, optional: true, required: false
  private _code?: string; 
  public get code() {
    return this.getStringAttribute('code');
  }
  public set code(value: string) {
    this._code = value;
  }
  public resetCode() {
    this._code = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get codeInput() {
    return this._code;
  }

  // delay - computed: false, optional: false, required: true
  private _delay?: string; 
  public get delay() {
    return this.getStringAttribute('delay');
  }
  public set delay(value: string) {
    this._delay = value;
  }
  // Temporarily expose input value. Use with caution.
  public get delayInput() {
    return this._delay;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // proxy_ports - computed: false, optional: false, required: true
  private _proxyPorts?: string[]; 
  public get proxyPorts() {
    return this.getListAttribute('proxy_ports');
  }
  public set proxyPorts(value: string[]) {
    this._proxyPorts = value;
  }
  // Temporarily expose input value. Use with caution.
  public get proxyPortsInput() {
    return this._proxyPorts;
  }

  // target - computed: false, optional: false, required: true
  private _target?: string; 
  public get target() {
    return this.getStringAttribute('target');
  }
  public set target(value: string) {
    this._target = value;
  }
  // Temporarily expose input value. Use with caution.
  public get targetInput() {
    return this._target;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequest {
  /**
  * The number of requests to send
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#count DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#count}
  */
  readonly count?: number;
  /**
  * Enable connection pool
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#enable_conn_pool DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#enable_conn_pool}
  */
  readonly enableConnPool?: boolean | cdktf.IResolvable;
  /**
  * Request to send'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#url DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#url}
  */
  readonly url?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequestToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    count: cdktf.numberToTerraform(struct!.count),
    enable_conn_pool: cdktf.booleanToTerraform(struct!.enableConnPool),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequestToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    count: {
      value: cdktf.numberToHclTerraform(struct!.count),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    enable_conn_pool: {
      value: cdktf.booleanToHclTerraform(struct!.enableConnPool),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequestOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequest | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._count !== undefined) {
      hasAnyValues = true;
      internalValueResult.count = this._count;
    }
    if (this._enableConnPool !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableConnPool = this._enableConnPool;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequest | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._count = undefined;
      this._enableConnPool = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._count = value.count;
      this._enableConnPool = value.enableConnPool;
      this._url = value.url;
    }
  }

  // count - computed: false, optional: true, required: false
  private _count?: number; 
  public get count() {
    return this.getNumberAttribute('count');
  }
  public set count(value: number) {
    this._count = value;
  }
  public resetCount() {
    this._count = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get countInput() {
    return this._count;
  }

  // enable_conn_pool - computed: false, optional: true, required: false
  private _enableConnPool?: boolean | cdktf.IResolvable; 
  public get enableConnPool() {
    return this.getBooleanAttribute('enable_conn_pool');
  }
  public set enableConnPool(value: boolean | cdktf.IResolvable) {
    this._enableConnPool = value;
  }
  public resetEnableConnPool() {
    this._enableConnPool = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableConnPoolInput() {
    return this._enableConnPool;
  }

  // url - computed: false, optional: true, required: false
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  public resetUrl() {
    this._url = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmException {
  /**
  * Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#class DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#class}
  */
  readonly class?: string;
  /**
  * the exception which needs to throw for action 'exception'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#exception DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#exception}
  */
  readonly exception?: string;
  /**
  * the method in Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmExceptionToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmException | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    class: cdktf.stringToTerraform(struct!.class),
    exception: cdktf.stringToTerraform(struct!.exception),
    method: cdktf.stringToTerraform(struct!.method),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmExceptionToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmException | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    class: {
      value: cdktf.stringToHclTerraform(struct!.class),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    exception: {
      value: cdktf.stringToHclTerraform(struct!.exception),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmExceptionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmException | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._class !== undefined) {
      hasAnyValues = true;
      internalValueResult.class = this._class;
    }
    if (this._exception !== undefined) {
      hasAnyValues = true;
      internalValueResult.exception = this._exception;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmException | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._class = undefined;
      this._exception = undefined;
      this._method = undefined;
      this._pid = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._class = value.class;
      this._exception = value.exception;
      this._method = value.method;
      this._pid = value.pid;
      this._port = value.port;
    }
  }

  // class - computed: false, optional: true, required: false
  private _class?: string; 
  public get class() {
    return this.getStringAttribute('class');
  }
  public set class(value: string) {
    this._class = value;
  }
  public resetClass() {
    this._class = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get classInput() {
    return this._class;
  }

  // exception - computed: false, optional: true, required: false
  private _exception?: string; 
  public get exception() {
    return this.getStringAttribute('exception');
  }
  public set exception(value: string) {
    this._exception = value;
  }
  public resetException() {
    this._exception = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exceptionInput() {
    return this._exception;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGc {
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGcToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGcToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._pid = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._pid = value.pid;
      this._port = value.port;
    }
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatency {
  /**
  * Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#class DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#class}
  */
  readonly class?: string;
  /**
  * the latency duration for action 'latency', unit ms
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#latency}
  */
  readonly latency?: number;
  /**
  * the method in Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatencyToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatency | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    class: cdktf.stringToTerraform(struct!.class),
    latency: cdktf.numberToTerraform(struct!.latency),
    method: cdktf.stringToTerraform(struct!.method),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatencyToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatency | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    class: {
      value: cdktf.stringToHclTerraform(struct!.class),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    latency: {
      value: cdktf.numberToHclTerraform(struct!.latency),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatencyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatency | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._class !== undefined) {
      hasAnyValues = true;
      internalValueResult.class = this._class;
    }
    if (this._latency !== undefined) {
      hasAnyValues = true;
      internalValueResult.latency = this._latency;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatency | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._class = undefined;
      this._latency = undefined;
      this._method = undefined;
      this._pid = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._class = value.class;
      this._latency = value.latency;
      this._method = value.method;
      this._pid = value.pid;
      this._port = value.port;
    }
  }

  // class - computed: false, optional: true, required: false
  private _class?: string; 
  public get class() {
    return this.getStringAttribute('class');
  }
  public set class(value: string) {
    this._class = value;
  }
  public resetClass() {
    this._class = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get classInput() {
    return this._class;
  }

  // latency - computed: false, optional: true, required: false
  private _latency?: number; 
  public get latency() {
    return this.getNumberAttribute('latency');
  }
  public set latency(value: number) {
    this._latency = value;
  }
  public resetLatency() {
    this._latency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get latencyInput() {
    return this._latency;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysql {
  /**
  * the match database default value is '', means match all database
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#database DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#database}
  */
  readonly database?: string;
  /**
  * The exception which needs to throw for action 'exception' or the exception message needs to throw in action 'mysql'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#exception DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#exception}
  */
  readonly exception?: string;
  /**
  * The latency duration for action 'latency' or the latency duration in action 'mysql'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#latency}
  */
  readonly latency?: number;
  /**
  * the version of mysql-connector-java, only support 5.X.X(set to '5') and 8.X.X(set to '8') now
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mysql_connector_version DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mysql_connector_version}
  */
  readonly mysqlConnectorVersion?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * the match sql type default value is '', means match all SQL type. The value can be 'select', 'insert', 'update', 'delete', 'replace'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#sql_type DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#sql_type}
  */
  readonly sqlType?: string;
  /**
  * the match table default value is '', means match all table
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#table DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#table}
  */
  readonly table?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysqlToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysql | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    exception: cdktf.stringToTerraform(struct!.exception),
    latency: cdktf.numberToTerraform(struct!.latency),
    mysql_connector_version: cdktf.stringToTerraform(struct!.mysqlConnectorVersion),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
    sql_type: cdktf.stringToTerraform(struct!.sqlType),
    table: cdktf.stringToTerraform(struct!.table),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysqlToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysql | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    exception: {
      value: cdktf.stringToHclTerraform(struct!.exception),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    latency: {
      value: cdktf.numberToHclTerraform(struct!.latency),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    mysql_connector_version: {
      value: cdktf.stringToHclTerraform(struct!.mysqlConnectorVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sql_type: {
      value: cdktf.stringToHclTerraform(struct!.sqlType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysqlOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysql | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._exception !== undefined) {
      hasAnyValues = true;
      internalValueResult.exception = this._exception;
    }
    if (this._latency !== undefined) {
      hasAnyValues = true;
      internalValueResult.latency = this._latency;
    }
    if (this._mysqlConnectorVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.mysqlConnectorVersion = this._mysqlConnectorVersion;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._sqlType !== undefined) {
      hasAnyValues = true;
      internalValueResult.sqlType = this._sqlType;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysql | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._database = undefined;
      this._exception = undefined;
      this._latency = undefined;
      this._mysqlConnectorVersion = undefined;
      this._pid = undefined;
      this._port = undefined;
      this._sqlType = undefined;
      this._table = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._database = value.database;
      this._exception = value.exception;
      this._latency = value.latency;
      this._mysqlConnectorVersion = value.mysqlConnectorVersion;
      this._pid = value.pid;
      this._port = value.port;
      this._sqlType = value.sqlType;
      this._table = value.table;
    }
  }

  // database - computed: false, optional: true, required: false
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  public resetDatabase() {
    this._database = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // exception - computed: false, optional: true, required: false
  private _exception?: string; 
  public get exception() {
    return this.getStringAttribute('exception');
  }
  public set exception(value: string) {
    this._exception = value;
  }
  public resetException() {
    this._exception = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exceptionInput() {
    return this._exception;
  }

  // latency - computed: false, optional: true, required: false
  private _latency?: number; 
  public get latency() {
    return this.getNumberAttribute('latency');
  }
  public set latency(value: number) {
    this._latency = value;
  }
  public resetLatency() {
    this._latency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get latencyInput() {
    return this._latency;
  }

  // mysql_connector_version - computed: false, optional: true, required: false
  private _mysqlConnectorVersion?: string; 
  public get mysqlConnectorVersion() {
    return this.getStringAttribute('mysql_connector_version');
  }
  public set mysqlConnectorVersion(value: string) {
    this._mysqlConnectorVersion = value;
  }
  public resetMysqlConnectorVersion() {
    this._mysqlConnectorVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mysqlConnectorVersionInput() {
    return this._mysqlConnectorVersion;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // sql_type - computed: false, optional: true, required: false
  private _sqlType?: string; 
  public get sqlType() {
    return this.getStringAttribute('sql_type');
  }
  public set sqlType(value: string) {
    this._sqlType = value;
  }
  public resetSqlType() {
    this._sqlType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sqlTypeInput() {
    return this._sqlType;
  }

  // table - computed: false, optional: true, required: false
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  public resetTable() {
    this._table = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturn {
  /**
  * Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#class DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#class}
  */
  readonly class?: string;
  /**
  * the method in Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * the return value for action 'return'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturnToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturn | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    class: cdktf.stringToTerraform(struct!.class),
    method: cdktf.stringToTerraform(struct!.method),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturnToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturn | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    class: {
      value: cdktf.stringToHclTerraform(struct!.class),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturnOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturn | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._class !== undefined) {
      hasAnyValues = true;
      internalValueResult.class = this._class;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturn | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._class = undefined;
      this._method = undefined;
      this._pid = undefined;
      this._port = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._class = value.class;
      this._method = value.method;
      this._pid = value.pid;
      this._port = value.port;
      this._value = value.value;
    }
  }

  // class - computed: false, optional: true, required: false
  private _class?: string; 
  public get class() {
    return this.getStringAttribute('class');
  }
  public set class(value: string) {
    this._class = value;
  }
  public resetClass() {
    this._class = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get classInput() {
    return this._class;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleData {
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * RuleData used to save the rule file's data, will use it when recover
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rule_data DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rule_data}
  */
  readonly ruleData?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleDataToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
    rule_data: cdktf.stringToTerraform(struct!.ruleData),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleDataToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rule_data: {
      value: cdktf.stringToHclTerraform(struct!.ruleData),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleDataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleData | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._ruleData !== undefined) {
      hasAnyValues = true;
      internalValueResult.ruleData = this._ruleData;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleData | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._pid = undefined;
      this._port = undefined;
      this._ruleData = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._pid = value.pid;
      this._port = value.port;
      this._ruleData = value.ruleData;
    }
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // rule_data - computed: false, optional: true, required: false
  private _ruleData?: string; 
  public get ruleData() {
    return this.getStringAttribute('rule_data');
  }
  public set ruleData(value: string) {
    this._ruleData = value;
  }
  public resetRuleData() {
    this._ruleData = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ruleDataInput() {
    return this._ruleData;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStress {
  /**
  * the CPU core number need to use, only set it when action is stress
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#cpu_count DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#cpu_count}
  */
  readonly cpuCount?: number;
  /**
  * the memory type need to locate, only set it when action is stress, the value can be 'stack' or 'heap'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mem_type DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mem_type}
  */
  readonly memType?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStressToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cpu_count: cdktf.numberToTerraform(struct!.cpuCount),
    mem_type: cdktf.stringToTerraform(struct!.memType),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStressToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cpu_count: {
      value: cdktf.numberToHclTerraform(struct!.cpuCount),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    mem_type: {
      value: cdktf.stringToHclTerraform(struct!.memType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStressOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStress | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cpuCount !== undefined) {
      hasAnyValues = true;
      internalValueResult.cpuCount = this._cpuCount;
    }
    if (this._memType !== undefined) {
      hasAnyValues = true;
      internalValueResult.memType = this._memType;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStress | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cpuCount = undefined;
      this._memType = undefined;
      this._pid = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cpuCount = value.cpuCount;
      this._memType = value.memType;
      this._pid = value.pid;
      this._port = value.port;
    }
  }

  // cpu_count - computed: false, optional: true, required: false
  private _cpuCount?: number; 
  public get cpuCount() {
    return this.getNumberAttribute('cpu_count');
  }
  public set cpuCount(value: number) {
    this._cpuCount = value;
  }
  public resetCpuCount() {
    this._cpuCount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cpuCountInput() {
    return this._cpuCount;
  }

  // mem_type - computed: false, optional: true, required: false
  private _memType?: string; 
  public get memType() {
    return this.getStringAttribute('mem_type');
  }
  public set memType(value: string) {
    this._memType = value;
  }
  public resetMemType() {
    this._memType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get memTypeInput() {
    return this._memType;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFill {
  /**
  * The host of kafka server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#host DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * The max bytes to fill
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#max_bytes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#max_bytes}
  */
  readonly maxBytes?: number;
  /**
  * The size of each message
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#message_size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#message_size}
  */
  readonly messageSize?: number;
  /**
  * The password of kafka client
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#password DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#password}
  */
  readonly password?: string;
  /**
  * The port of kafka server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * The command to reload kafka config
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#reload_command DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#reload_command}
  */
  readonly reloadCommand?: string;
  /**
  * The topic to attack
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#topic DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#topic}
  */
  readonly topic?: string;
  /**
  * The username of kafka client
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#username DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#username}
  */
  readonly username?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFillToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFill | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    max_bytes: cdktf.numberToTerraform(struct!.maxBytes),
    message_size: cdktf.numberToTerraform(struct!.messageSize),
    password: cdktf.stringToTerraform(struct!.password),
    port: cdktf.numberToTerraform(struct!.port),
    reload_command: cdktf.stringToTerraform(struct!.reloadCommand),
    topic: cdktf.stringToTerraform(struct!.topic),
    username: cdktf.stringToTerraform(struct!.username),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFillToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFill | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_bytes: {
      value: cdktf.numberToHclTerraform(struct!.maxBytes),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    message_size: {
      value: cdktf.numberToHclTerraform(struct!.messageSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    reload_command: {
      value: cdktf.stringToHclTerraform(struct!.reloadCommand),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    username: {
      value: cdktf.stringToHclTerraform(struct!.username),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFillOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFill | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._maxBytes !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxBytes = this._maxBytes;
    }
    if (this._messageSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.messageSize = this._messageSize;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._reloadCommand !== undefined) {
      hasAnyValues = true;
      internalValueResult.reloadCommand = this._reloadCommand;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._username !== undefined) {
      hasAnyValues = true;
      internalValueResult.username = this._username;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFill | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._maxBytes = undefined;
      this._messageSize = undefined;
      this._password = undefined;
      this._port = undefined;
      this._reloadCommand = undefined;
      this._topic = undefined;
      this._username = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._maxBytes = value.maxBytes;
      this._messageSize = value.messageSize;
      this._password = value.password;
      this._port = value.port;
      this._reloadCommand = value.reloadCommand;
      this._topic = value.topic;
      this._username = value.username;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // max_bytes - computed: false, optional: true, required: false
  private _maxBytes?: number; 
  public get maxBytes() {
    return this.getNumberAttribute('max_bytes');
  }
  public set maxBytes(value: number) {
    this._maxBytes = value;
  }
  public resetMaxBytes() {
    this._maxBytes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxBytesInput() {
    return this._maxBytes;
  }

  // message_size - computed: false, optional: true, required: false
  private _messageSize?: number; 
  public get messageSize() {
    return this.getNumberAttribute('message_size');
  }
  public set messageSize(value: number) {
    this._messageSize = value;
  }
  public resetMessageSize() {
    this._messageSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageSizeInput() {
    return this._messageSize;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // reload_command - computed: false, optional: true, required: false
  private _reloadCommand?: string; 
  public get reloadCommand() {
    return this.getStringAttribute('reload_command');
  }
  public set reloadCommand(value: string) {
    this._reloadCommand = value;
  }
  public resetReloadCommand() {
    this._reloadCommand = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reloadCommandInput() {
    return this._reloadCommand;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // username - computed: false, optional: true, required: false
  private _username?: string; 
  public get username() {
    return this.getStringAttribute('username');
  }
  public set username(value: string) {
    this._username = value;
  }
  public resetUsername() {
    this._username = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usernameInput() {
    return this._username;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFlood {
  /**
  * The host of kafka server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#host DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * The size of each message
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#message_size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#message_size}
  */
  readonly messageSize?: number;
  /**
  * The password of kafka client
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#password DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#password}
  */
  readonly password?: string;
  /**
  * The port of kafka server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * The number of worker threads
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#threads DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#threads}
  */
  readonly threads?: number;
  /**
  * The topic to attack
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#topic DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#topic}
  */
  readonly topic?: string;
  /**
  * The username of kafka client
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#username DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#username}
  */
  readonly username?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFloodToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFlood | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    message_size: cdktf.numberToTerraform(struct!.messageSize),
    password: cdktf.stringToTerraform(struct!.password),
    port: cdktf.numberToTerraform(struct!.port),
    threads: cdktf.numberToTerraform(struct!.threads),
    topic: cdktf.stringToTerraform(struct!.topic),
    username: cdktf.stringToTerraform(struct!.username),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFloodToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFlood | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    message_size: {
      value: cdktf.numberToHclTerraform(struct!.messageSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    threads: {
      value: cdktf.numberToHclTerraform(struct!.threads),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    username: {
      value: cdktf.stringToHclTerraform(struct!.username),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFloodOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFlood | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._messageSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.messageSize = this._messageSize;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._threads !== undefined) {
      hasAnyValues = true;
      internalValueResult.threads = this._threads;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._username !== undefined) {
      hasAnyValues = true;
      internalValueResult.username = this._username;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFlood | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._messageSize = undefined;
      this._password = undefined;
      this._port = undefined;
      this._threads = undefined;
      this._topic = undefined;
      this._username = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._messageSize = value.messageSize;
      this._password = value.password;
      this._port = value.port;
      this._threads = value.threads;
      this._topic = value.topic;
      this._username = value.username;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // message_size - computed: false, optional: true, required: false
  private _messageSize?: number; 
  public get messageSize() {
    return this.getNumberAttribute('message_size');
  }
  public set messageSize(value: number) {
    this._messageSize = value;
  }
  public resetMessageSize() {
    this._messageSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageSizeInput() {
    return this._messageSize;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // threads - computed: false, optional: true, required: false
  private _threads?: number; 
  public get threads() {
    return this.getNumberAttribute('threads');
  }
  public set threads(value: number) {
    this._threads = value;
  }
  public resetThreads() {
    this._threads = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get threadsInput() {
    return this._threads;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // username - computed: false, optional: true, required: false
  private _username?: string; 
  public get username() {
    return this.getStringAttribute('username');
  }
  public set username(value: string) {
    this._username = value;
  }
  public resetUsername() {
    this._username = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usernameInput() {
    return this._username;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIo {
  /**
  * The path of server config
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#config_file DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#config_file}
  */
  readonly configFile?: string;
  /**
  * Make kafka cluster non-readable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#non_readable DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#non_readable}
  */
  readonly nonReadable?: boolean | cdktf.IResolvable;
  /**
  * Make kafka cluster non-writable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#non_writable DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#non_writable}
  */
  readonly nonWritable?: boolean | cdktf.IResolvable;
  /**
  * The topic to attack
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#topic DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#topic}
  */
  readonly topic?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIoToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_file: cdktf.stringToTerraform(struct!.configFile),
    non_readable: cdktf.booleanToTerraform(struct!.nonReadable),
    non_writable: cdktf.booleanToTerraform(struct!.nonWritable),
    topic: cdktf.stringToTerraform(struct!.topic),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIoToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_file: {
      value: cdktf.stringToHclTerraform(struct!.configFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    non_readable: {
      value: cdktf.booleanToHclTerraform(struct!.nonReadable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    non_writable: {
      value: cdktf.booleanToHclTerraform(struct!.nonWritable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIoOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIo | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.configFile = this._configFile;
    }
    if (this._nonReadable !== undefined) {
      hasAnyValues = true;
      internalValueResult.nonReadable = this._nonReadable;
    }
    if (this._nonWritable !== undefined) {
      hasAnyValues = true;
      internalValueResult.nonWritable = this._nonWritable;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIo | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configFile = undefined;
      this._nonReadable = undefined;
      this._nonWritable = undefined;
      this._topic = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configFile = value.configFile;
      this._nonReadable = value.nonReadable;
      this._nonWritable = value.nonWritable;
      this._topic = value.topic;
    }
  }

  // config_file - computed: false, optional: true, required: false
  private _configFile?: string; 
  public get configFile() {
    return this.getStringAttribute('config_file');
  }
  public set configFile(value: string) {
    this._configFile = value;
  }
  public resetConfigFile() {
    this._configFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configFileInput() {
    return this._configFile;
  }

  // non_readable - computed: false, optional: true, required: false
  private _nonReadable?: boolean | cdktf.IResolvable; 
  public get nonReadable() {
    return this.getBooleanAttribute('non_readable');
  }
  public set nonReadable(value: boolean | cdktf.IResolvable) {
    this._nonReadable = value;
  }
  public resetNonReadable() {
    this._nonReadable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nonReadableInput() {
    return this._nonReadable;
  }

  // non_writable - computed: false, optional: true, required: false
  private _nonWritable?: boolean | cdktf.IResolvable; 
  public get nonWritable() {
    return this.getBooleanAttribute('non_writable');
  }
  public set nonWritable(value: boolean | cdktf.IResolvable) {
    this._nonWritable = value;
  }
  public resetNonWritable() {
    this._nonWritable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nonWritableInput() {
    return this._nonWritable;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidth {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#buffer DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#buffer}
  */
  readonly buffer: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#hostname DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#hostname}
  */
  readonly hostname?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_address DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_address}
  */
  readonly ipAddress?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#limit DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#limit}
  */
  readonly limit: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#minburst DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#minburst}
  */
  readonly minburst?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#peakrate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#peakrate}
  */
  readonly peakrate?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rate}
  */
  readonly rate: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidthToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    buffer: cdktf.numberToTerraform(struct!.buffer),
    device: cdktf.stringToTerraform(struct!.device),
    hostname: cdktf.stringToTerraform(struct!.hostname),
    ip_address: cdktf.stringToTerraform(struct!.ipAddress),
    limit: cdktf.numberToTerraform(struct!.limit),
    minburst: cdktf.numberToTerraform(struct!.minburst),
    peakrate: cdktf.numberToTerraform(struct!.peakrate),
    rate: cdktf.stringToTerraform(struct!.rate),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidthToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    buffer: {
      value: cdktf.numberToHclTerraform(struct!.buffer),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hostname: {
      value: cdktf.stringToHclTerraform(struct!.hostname),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_address: {
      value: cdktf.stringToHclTerraform(struct!.ipAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    limit: {
      value: cdktf.numberToHclTerraform(struct!.limit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    minburst: {
      value: cdktf.numberToHclTerraform(struct!.minburst),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    peakrate: {
      value: cdktf.numberToHclTerraform(struct!.peakrate),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rate: {
      value: cdktf.stringToHclTerraform(struct!.rate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidthOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidth | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._buffer !== undefined) {
      hasAnyValues = true;
      internalValueResult.buffer = this._buffer;
    }
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._hostname !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostname = this._hostname;
    }
    if (this._ipAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipAddress = this._ipAddress;
    }
    if (this._limit !== undefined) {
      hasAnyValues = true;
      internalValueResult.limit = this._limit;
    }
    if (this._minburst !== undefined) {
      hasAnyValues = true;
      internalValueResult.minburst = this._minburst;
    }
    if (this._peakrate !== undefined) {
      hasAnyValues = true;
      internalValueResult.peakrate = this._peakrate;
    }
    if (this._rate !== undefined) {
      hasAnyValues = true;
      internalValueResult.rate = this._rate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidth | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._buffer = undefined;
      this._device = undefined;
      this._hostname = undefined;
      this._ipAddress = undefined;
      this._limit = undefined;
      this._minburst = undefined;
      this._peakrate = undefined;
      this._rate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._buffer = value.buffer;
      this._device = value.device;
      this._hostname = value.hostname;
      this._ipAddress = value.ipAddress;
      this._limit = value.limit;
      this._minburst = value.minburst;
      this._peakrate = value.peakrate;
      this._rate = value.rate;
    }
  }

  // buffer - computed: false, optional: false, required: true
  private _buffer?: number; 
  public get buffer() {
    return this.getNumberAttribute('buffer');
  }
  public set buffer(value: number) {
    this._buffer = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bufferInput() {
    return this._buffer;
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // hostname - computed: false, optional: true, required: false
  private _hostname?: string; 
  public get hostname() {
    return this.getStringAttribute('hostname');
  }
  public set hostname(value: string) {
    this._hostname = value;
  }
  public resetHostname() {
    this._hostname = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnameInput() {
    return this._hostname;
  }

  // ip_address - computed: false, optional: true, required: false
  private _ipAddress?: string; 
  public get ipAddress() {
    return this.getStringAttribute('ip_address');
  }
  public set ipAddress(value: string) {
    this._ipAddress = value;
  }
  public resetIpAddress() {
    this._ipAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipAddressInput() {
    return this._ipAddress;
  }

  // limit - computed: false, optional: false, required: true
  private _limit?: number; 
  public get limit() {
    return this.getNumberAttribute('limit');
  }
  public set limit(value: number) {
    this._limit = value;
  }
  // Temporarily expose input value. Use with caution.
  public get limitInput() {
    return this._limit;
  }

  // minburst - computed: false, optional: true, required: false
  private _minburst?: number; 
  public get minburst() {
    return this.getNumberAttribute('minburst');
  }
  public set minburst(value: number) {
    this._minburst = value;
  }
  public resetMinburst() {
    this._minburst = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minburstInput() {
    return this._minburst;
  }

  // peakrate - computed: false, optional: true, required: false
  private _peakrate?: number; 
  public get peakrate() {
    return this.getNumberAttribute('peakrate');
  }
  public set peakrate(value: number) {
    this._peakrate = value;
  }
  public resetPeakrate() {
    this._peakrate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get peakrateInput() {
    return this._peakrate;
  }

  // rate - computed: false, optional: false, required: true
  private _rate?: string; 
  public get rate() {
    return this.getStringAttribute('rate');
  }
  public set rate(value: string) {
    this._rate = value;
  }
  // Temporarily expose input value. Use with caution.
  public get rateInput() {
    return this._rate;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorrupt {
  /**
  * correlation is percentage (10 is 10%)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * the network interface to impact
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010. it can only be used in conjunction with -p tcp or -p udp
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#egress_port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#egress_port}
  */
  readonly egressPort?: string;
  /**
  * only impact traffic to these hostnames
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#hostname DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#hostname}
  */
  readonly hostname?: string;
  /**
  * only impact egress traffic to these IP addresses
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_address DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_address}
  */
  readonly ipAddress?: string;
  /**
  * only impact traffic using this IP protocol, supported: tcp, udp, icmp, all
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_protocol DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_protocol}
  */
  readonly ipProtocol?: string;
  /**
  * percentage of packets to corrupt (10 is 10%)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#percent DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#percent}
  */
  readonly percent?: string;
  /**
  * only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010. it can only be used in conjunction with -p tcp or -p udp
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#source_port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#source_port}
  */
  readonly sourcePort?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorruptToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorrupt | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    device: cdktf.stringToTerraform(struct!.device),
    egress_port: cdktf.stringToTerraform(struct!.egressPort),
    hostname: cdktf.stringToTerraform(struct!.hostname),
    ip_address: cdktf.stringToTerraform(struct!.ipAddress),
    ip_protocol: cdktf.stringToTerraform(struct!.ipProtocol),
    percent: cdktf.stringToTerraform(struct!.percent),
    source_port: cdktf.stringToTerraform(struct!.sourcePort),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorruptToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorrupt | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    egress_port: {
      value: cdktf.stringToHclTerraform(struct!.egressPort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hostname: {
      value: cdktf.stringToHclTerraform(struct!.hostname),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_address: {
      value: cdktf.stringToHclTerraform(struct!.ipAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_protocol: {
      value: cdktf.stringToHclTerraform(struct!.ipProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    percent: {
      value: cdktf.stringToHclTerraform(struct!.percent),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    source_port: {
      value: cdktf.stringToHclTerraform(struct!.sourcePort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorruptOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorrupt | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._egressPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.egressPort = this._egressPort;
    }
    if (this._hostname !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostname = this._hostname;
    }
    if (this._ipAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipAddress = this._ipAddress;
    }
    if (this._ipProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipProtocol = this._ipProtocol;
    }
    if (this._percent !== undefined) {
      hasAnyValues = true;
      internalValueResult.percent = this._percent;
    }
    if (this._sourcePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourcePort = this._sourcePort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorrupt | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._device = undefined;
      this._egressPort = undefined;
      this._hostname = undefined;
      this._ipAddress = undefined;
      this._ipProtocol = undefined;
      this._percent = undefined;
      this._sourcePort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._device = value.device;
      this._egressPort = value.egressPort;
      this._hostname = value.hostname;
      this._ipAddress = value.ipAddress;
      this._ipProtocol = value.ipProtocol;
      this._percent = value.percent;
      this._sourcePort = value.sourcePort;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // egress_port - computed: false, optional: true, required: false
  private _egressPort?: string; 
  public get egressPort() {
    return this.getStringAttribute('egress_port');
  }
  public set egressPort(value: string) {
    this._egressPort = value;
  }
  public resetEgressPort() {
    this._egressPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get egressPortInput() {
    return this._egressPort;
  }

  // hostname - computed: false, optional: true, required: false
  private _hostname?: string; 
  public get hostname() {
    return this.getStringAttribute('hostname');
  }
  public set hostname(value: string) {
    this._hostname = value;
  }
  public resetHostname() {
    this._hostname = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnameInput() {
    return this._hostname;
  }

  // ip_address - computed: false, optional: true, required: false
  private _ipAddress?: string; 
  public get ipAddress() {
    return this.getStringAttribute('ip_address');
  }
  public set ipAddress(value: string) {
    this._ipAddress = value;
  }
  public resetIpAddress() {
    this._ipAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipAddressInput() {
    return this._ipAddress;
  }

  // ip_protocol - computed: false, optional: true, required: false
  private _ipProtocol?: string; 
  public get ipProtocol() {
    return this.getStringAttribute('ip_protocol');
  }
  public set ipProtocol(value: string) {
    this._ipProtocol = value;
  }
  public resetIpProtocol() {
    this._ipProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipProtocolInput() {
    return this._ipProtocol;
  }

  // percent - computed: false, optional: true, required: false
  private _percent?: string; 
  public get percent() {
    return this.getStringAttribute('percent');
  }
  public set percent(value: string) {
    this._percent = value;
  }
  public resetPercent() {
    this._percent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get percentInput() {
    return this._percent;
  }

  // source_port - computed: false, optional: true, required: false
  private _sourcePort?: string; 
  public get sourcePort() {
    return this.getStringAttribute('source_port');
  }
  public set sourcePort(value: string) {
    this._sourcePort = value;
  }
  public resetSourcePort() {
    this._sourcePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourcePortInput() {
    return this._sourcePort;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelay {
  /**
  * only the packet which match the tcp flag can be accepted, others will be dropped. only set when the IPProtocol is tcp, used for partition.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#accept_tcp_flags DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#accept_tcp_flags}
  */
  readonly acceptTcpFlags?: string;
  /**
  * correlation is percentage (10 is 10%)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * the network interface to impact
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010. it can only be used in conjunction with -p tcp or -p udp
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#egress_port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#egress_port}
  */
  readonly egressPort?: string;
  /**
  * only impact traffic to these hostnames
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#hostname DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#hostname}
  */
  readonly hostname?: string;
  /**
  * only impact egress traffic to these IP addresses
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_address DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_address}
  */
  readonly ipAddress?: string;
  /**
  * only impact traffic using this IP protocol, supported: tcp, udp, icmp, all
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_protocol DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_protocol}
  */
  readonly ipProtocol?: string;
  /**
  * jitter time, time units: ns, us (or µs), ms, s, m, h.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jitter DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jitter}
  */
  readonly jitter?: string;
  /**
  * delay egress time, time units: ns, us (or µs), ms, s, m, h.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#latency}
  */
  readonly latency?: string;
  /**
  * only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010. it can only be used in conjunction with -p tcp or -p udp
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#source_port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#source_port}
  */
  readonly sourcePort?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelayToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    accept_tcp_flags: cdktf.stringToTerraform(struct!.acceptTcpFlags),
    correlation: cdktf.stringToTerraform(struct!.correlation),
    device: cdktf.stringToTerraform(struct!.device),
    egress_port: cdktf.stringToTerraform(struct!.egressPort),
    hostname: cdktf.stringToTerraform(struct!.hostname),
    ip_address: cdktf.stringToTerraform(struct!.ipAddress),
    ip_protocol: cdktf.stringToTerraform(struct!.ipProtocol),
    jitter: cdktf.stringToTerraform(struct!.jitter),
    latency: cdktf.stringToTerraform(struct!.latency),
    source_port: cdktf.stringToTerraform(struct!.sourcePort),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelayToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    accept_tcp_flags: {
      value: cdktf.stringToHclTerraform(struct!.acceptTcpFlags),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    egress_port: {
      value: cdktf.stringToHclTerraform(struct!.egressPort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hostname: {
      value: cdktf.stringToHclTerraform(struct!.hostname),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_address: {
      value: cdktf.stringToHclTerraform(struct!.ipAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_protocol: {
      value: cdktf.stringToHclTerraform(struct!.ipProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    jitter: {
      value: cdktf.stringToHclTerraform(struct!.jitter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    latency: {
      value: cdktf.stringToHclTerraform(struct!.latency),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    source_port: {
      value: cdktf.stringToHclTerraform(struct!.sourcePort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelayOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelay | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._acceptTcpFlags !== undefined) {
      hasAnyValues = true;
      internalValueResult.acceptTcpFlags = this._acceptTcpFlags;
    }
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._egressPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.egressPort = this._egressPort;
    }
    if (this._hostname !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostname = this._hostname;
    }
    if (this._ipAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipAddress = this._ipAddress;
    }
    if (this._ipProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipProtocol = this._ipProtocol;
    }
    if (this._jitter !== undefined) {
      hasAnyValues = true;
      internalValueResult.jitter = this._jitter;
    }
    if (this._latency !== undefined) {
      hasAnyValues = true;
      internalValueResult.latency = this._latency;
    }
    if (this._sourcePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourcePort = this._sourcePort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelay | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._acceptTcpFlags = undefined;
      this._correlation = undefined;
      this._device = undefined;
      this._egressPort = undefined;
      this._hostname = undefined;
      this._ipAddress = undefined;
      this._ipProtocol = undefined;
      this._jitter = undefined;
      this._latency = undefined;
      this._sourcePort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._acceptTcpFlags = value.acceptTcpFlags;
      this._correlation = value.correlation;
      this._device = value.device;
      this._egressPort = value.egressPort;
      this._hostname = value.hostname;
      this._ipAddress = value.ipAddress;
      this._ipProtocol = value.ipProtocol;
      this._jitter = value.jitter;
      this._latency = value.latency;
      this._sourcePort = value.sourcePort;
    }
  }

  // accept_tcp_flags - computed: false, optional: true, required: false
  private _acceptTcpFlags?: string; 
  public get acceptTcpFlags() {
    return this.getStringAttribute('accept_tcp_flags');
  }
  public set acceptTcpFlags(value: string) {
    this._acceptTcpFlags = value;
  }
  public resetAcceptTcpFlags() {
    this._acceptTcpFlags = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get acceptTcpFlagsInput() {
    return this._acceptTcpFlags;
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // egress_port - computed: false, optional: true, required: false
  private _egressPort?: string; 
  public get egressPort() {
    return this.getStringAttribute('egress_port');
  }
  public set egressPort(value: string) {
    this._egressPort = value;
  }
  public resetEgressPort() {
    this._egressPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get egressPortInput() {
    return this._egressPort;
  }

  // hostname - computed: false, optional: true, required: false
  private _hostname?: string; 
  public get hostname() {
    return this.getStringAttribute('hostname');
  }
  public set hostname(value: string) {
    this._hostname = value;
  }
  public resetHostname() {
    this._hostname = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnameInput() {
    return this._hostname;
  }

  // ip_address - computed: false, optional: true, required: false
  private _ipAddress?: string; 
  public get ipAddress() {
    return this.getStringAttribute('ip_address');
  }
  public set ipAddress(value: string) {
    this._ipAddress = value;
  }
  public resetIpAddress() {
    this._ipAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipAddressInput() {
    return this._ipAddress;
  }

  // ip_protocol - computed: false, optional: true, required: false
  private _ipProtocol?: string; 
  public get ipProtocol() {
    return this.getStringAttribute('ip_protocol');
  }
  public set ipProtocol(value: string) {
    this._ipProtocol = value;
  }
  public resetIpProtocol() {
    this._ipProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipProtocolInput() {
    return this._ipProtocol;
  }

  // jitter - computed: false, optional: true, required: false
  private _jitter?: string; 
  public get jitter() {
    return this.getStringAttribute('jitter');
  }
  public set jitter(value: string) {
    this._jitter = value;
  }
  public resetJitter() {
    this._jitter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jitterInput() {
    return this._jitter;
  }

  // latency - computed: false, optional: true, required: false
  private _latency?: string; 
  public get latency() {
    return this.getStringAttribute('latency');
  }
  public set latency(value: string) {
    this._latency = value;
  }
  public resetLatency() {
    this._latency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get latencyInput() {
    return this._latency;
  }

  // source_port - computed: false, optional: true, required: false
  private _sourcePort?: string; 
  public get sourcePort() {
    return this.getStringAttribute('source_port');
  }
  public set sourcePort(value: string) {
    this._sourcePort = value;
  }
  public resetSourcePort() {
    this._sourcePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourcePortInput() {
    return this._sourcePort;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDns {
  /**
  * map this host to specified IP
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#dns_domain_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#dns_domain_name}
  */
  readonly dnsDomainName?: string;
  /**
  * map specified host to this IP address
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#dns_ip DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#dns_ip}
  */
  readonly dnsIp?: string;
  /**
  * update the DNS server in /etc/resolv.conf with this value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#dns_server DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#dns_server}
  */
  readonly dnsServer?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDnsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDns | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dns_domain_name: cdktf.stringToTerraform(struct!.dnsDomainName),
    dns_ip: cdktf.stringToTerraform(struct!.dnsIp),
    dns_server: cdktf.stringToTerraform(struct!.dnsServer),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDnsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDns | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dns_domain_name: {
      value: cdktf.stringToHclTerraform(struct!.dnsDomainName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dns_ip: {
      value: cdktf.stringToHclTerraform(struct!.dnsIp),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dns_server: {
      value: cdktf.stringToHclTerraform(struct!.dnsServer),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDnsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDns | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dnsDomainName !== undefined) {
      hasAnyValues = true;
      internalValueResult.dnsDomainName = this._dnsDomainName;
    }
    if (this._dnsIp !== undefined) {
      hasAnyValues = true;
      internalValueResult.dnsIp = this._dnsIp;
    }
    if (this._dnsServer !== undefined) {
      hasAnyValues = true;
      internalValueResult.dnsServer = this._dnsServer;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDns | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dnsDomainName = undefined;
      this._dnsIp = undefined;
      this._dnsServer = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dnsDomainName = value.dnsDomainName;
      this._dnsIp = value.dnsIp;
      this._dnsServer = value.dnsServer;
    }
  }

  // dns_domain_name - computed: false, optional: true, required: false
  private _dnsDomainName?: string; 
  public get dnsDomainName() {
    return this.getStringAttribute('dns_domain_name');
  }
  public set dnsDomainName(value: string) {
    this._dnsDomainName = value;
  }
  public resetDnsDomainName() {
    this._dnsDomainName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dnsDomainNameInput() {
    return this._dnsDomainName;
  }

  // dns_ip - computed: false, optional: true, required: false
  private _dnsIp?: string; 
  public get dnsIp() {
    return this.getStringAttribute('dns_ip');
  }
  public set dnsIp(value: string) {
    this._dnsIp = value;
  }
  public resetDnsIp() {
    this._dnsIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dnsIpInput() {
    return this._dnsIp;
  }

  // dns_server - computed: false, optional: true, required: false
  private _dnsServer?: string; 
  public get dnsServer() {
    return this.getStringAttribute('dns_server');
  }
  public set dnsServer(value: string) {
    this._dnsServer = value;
  }
  public resetDnsServer() {
    this._dnsServer = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dnsServerInput() {
    return this._dnsServer;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDown {
  /**
  * The network interface to impact
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * NIC down time, time units: ns, us (or µs), ms, s, m, h.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDownToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDown | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    device: cdktf.stringToTerraform(struct!.device),
    duration: cdktf.stringToTerraform(struct!.duration),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDownToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDown | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDownOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDown | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDown | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._device = undefined;
      this._duration = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._device = value.device;
      this._duration = value.duration;
    }
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicate {
  /**
  * correlation is percentage (10 is 10%)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * the network interface to impact
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010. it can only be used in conjunction with -p tcp or -p udp
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#egress_port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#egress_port}
  */
  readonly egressPort?: string;
  /**
  * only impact traffic to these hostnames
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#hostname DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#hostname}
  */
  readonly hostname?: string;
  /**
  * only impact egress traffic to these IP addresses
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_address DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_address}
  */
  readonly ipAddress?: string;
  /**
  * only impact traffic using this IP protocol, supported: tcp, udp, icmp, all
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_protocol DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_protocol}
  */
  readonly ipProtocol?: string;
  /**
  * percentage of packets to duplicate (10 is 10%)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#percent DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#percent}
  */
  readonly percent?: string;
  /**
  * only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010. it can only be used in conjunction with -p tcp or -p udp
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#source_port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#source_port}
  */
  readonly sourcePort?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicateToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    device: cdktf.stringToTerraform(struct!.device),
    egress_port: cdktf.stringToTerraform(struct!.egressPort),
    hostname: cdktf.stringToTerraform(struct!.hostname),
    ip_address: cdktf.stringToTerraform(struct!.ipAddress),
    ip_protocol: cdktf.stringToTerraform(struct!.ipProtocol),
    percent: cdktf.stringToTerraform(struct!.percent),
    source_port: cdktf.stringToTerraform(struct!.sourcePort),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicateToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    egress_port: {
      value: cdktf.stringToHclTerraform(struct!.egressPort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hostname: {
      value: cdktf.stringToHclTerraform(struct!.hostname),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_address: {
      value: cdktf.stringToHclTerraform(struct!.ipAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_protocol: {
      value: cdktf.stringToHclTerraform(struct!.ipProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    percent: {
      value: cdktf.stringToHclTerraform(struct!.percent),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    source_port: {
      value: cdktf.stringToHclTerraform(struct!.sourcePort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._egressPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.egressPort = this._egressPort;
    }
    if (this._hostname !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostname = this._hostname;
    }
    if (this._ipAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipAddress = this._ipAddress;
    }
    if (this._ipProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipProtocol = this._ipProtocol;
    }
    if (this._percent !== undefined) {
      hasAnyValues = true;
      internalValueResult.percent = this._percent;
    }
    if (this._sourcePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourcePort = this._sourcePort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._device = undefined;
      this._egressPort = undefined;
      this._hostname = undefined;
      this._ipAddress = undefined;
      this._ipProtocol = undefined;
      this._percent = undefined;
      this._sourcePort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._device = value.device;
      this._egressPort = value.egressPort;
      this._hostname = value.hostname;
      this._ipAddress = value.ipAddress;
      this._ipProtocol = value.ipProtocol;
      this._percent = value.percent;
      this._sourcePort = value.sourcePort;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // egress_port - computed: false, optional: true, required: false
  private _egressPort?: string; 
  public get egressPort() {
    return this.getStringAttribute('egress_port');
  }
  public set egressPort(value: string) {
    this._egressPort = value;
  }
  public resetEgressPort() {
    this._egressPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get egressPortInput() {
    return this._egressPort;
  }

  // hostname - computed: false, optional: true, required: false
  private _hostname?: string; 
  public get hostname() {
    return this.getStringAttribute('hostname');
  }
  public set hostname(value: string) {
    this._hostname = value;
  }
  public resetHostname() {
    this._hostname = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnameInput() {
    return this._hostname;
  }

  // ip_address - computed: false, optional: true, required: false
  private _ipAddress?: string; 
  public get ipAddress() {
    return this.getStringAttribute('ip_address');
  }
  public set ipAddress(value: string) {
    this._ipAddress = value;
  }
  public resetIpAddress() {
    this._ipAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipAddressInput() {
    return this._ipAddress;
  }

  // ip_protocol - computed: false, optional: true, required: false
  private _ipProtocol?: string; 
  public get ipProtocol() {
    return this.getStringAttribute('ip_protocol');
  }
  public set ipProtocol(value: string) {
    this._ipProtocol = value;
  }
  public resetIpProtocol() {
    this._ipProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipProtocolInput() {
    return this._ipProtocol;
  }

  // percent - computed: false, optional: true, required: false
  private _percent?: string; 
  public get percent() {
    return this.getStringAttribute('percent');
  }
  public set percent(value: string) {
    this._percent = value;
  }
  public resetPercent() {
    this._percent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get percentInput() {
    return this._percent;
  }

  // source_port - computed: false, optional: true, required: false
  private _sourcePort?: string; 
  public get sourcePort() {
    return this.getStringAttribute('source_port');
  }
  public set sourcePort(value: string) {
    this._sourcePort = value;
  }
  public resetSourcePort() {
    this._sourcePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourcePortInput() {
    return this._sourcePort;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFlood {
  /**
  * The number of seconds to run the iperf test
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration: string;
  /**
  * Generate traffic to this IP address
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_address DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_address}
  */
  readonly ipAddress?: string;
  /**
  * The number of iperf parallel client threads to run
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#parallel DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#parallel}
  */
  readonly parallel?: number;
  /**
  * Generate traffic to this port on the IP address
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: string;
  /**
  * The speed of network traffic, allows bps, kbps, mbps, gbps, tbps unit. bps means bytes per second
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rate}
  */
  readonly rate: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFloodToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFlood | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    duration: cdktf.stringToTerraform(struct!.duration),
    ip_address: cdktf.stringToTerraform(struct!.ipAddress),
    parallel: cdktf.numberToTerraform(struct!.parallel),
    port: cdktf.stringToTerraform(struct!.port),
    rate: cdktf.stringToTerraform(struct!.rate),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFloodToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFlood | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_address: {
      value: cdktf.stringToHclTerraform(struct!.ipAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    parallel: {
      value: cdktf.numberToHclTerraform(struct!.parallel),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.stringToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    rate: {
      value: cdktf.stringToHclTerraform(struct!.rate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFloodOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFlood | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._ipAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipAddress = this._ipAddress;
    }
    if (this._parallel !== undefined) {
      hasAnyValues = true;
      internalValueResult.parallel = this._parallel;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._rate !== undefined) {
      hasAnyValues = true;
      internalValueResult.rate = this._rate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFlood | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._duration = undefined;
      this._ipAddress = undefined;
      this._parallel = undefined;
      this._port = undefined;
      this._rate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._duration = value.duration;
      this._ipAddress = value.ipAddress;
      this._parallel = value.parallel;
      this._port = value.port;
      this._rate = value.rate;
    }
  }

  // duration - computed: false, optional: false, required: true
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // ip_address - computed: false, optional: true, required: false
  private _ipAddress?: string; 
  public get ipAddress() {
    return this.getStringAttribute('ip_address');
  }
  public set ipAddress(value: string) {
    this._ipAddress = value;
  }
  public resetIpAddress() {
    this._ipAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipAddressInput() {
    return this._ipAddress;
  }

  // parallel - computed: false, optional: true, required: false
  private _parallel?: number; 
  public get parallel() {
    return this.getNumberAttribute('parallel');
  }
  public set parallel(value: number) {
    this._parallel = value;
  }
  public resetParallel() {
    this._parallel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get parallelInput() {
    return this._parallel;
  }

  // port - computed: false, optional: true, required: false
  private _port?: string; 
  public get port() {
    return this.getStringAttribute('port');
  }
  public set port(value: string) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // rate - computed: false, optional: false, required: true
  private _rate?: string; 
  public get rate() {
    return this.getStringAttribute('rate');
  }
  public set rate(value: string) {
    this._rate = value;
  }
  // Temporarily expose input value. Use with caution.
  public get rateInput() {
    return this._rate;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLoss {
  /**
  * correlation is percentage (10 is 10%)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * the network interface to impact
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010. it can only be used in conjunction with -p tcp or -p udp
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#egress_port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#egress_port}
  */
  readonly egressPort?: string;
  /**
  * only impact traffic to these hostnames
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#hostname DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#hostname}
  */
  readonly hostname?: string;
  /**
  * only impact egress traffic to these IP addresses
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_address DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_address}
  */
  readonly ipAddress?: string;
  /**
  * only impact traffic using this IP protocol, supported: tcp, udp, icmp, all
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_protocol DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_protocol}
  */
  readonly ipProtocol?: string;
  /**
  * percentage of packets to loss (10 is 10%)
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#percent DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#percent}
  */
  readonly percent?: string;
  /**
  * only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010. it can only be used in conjunction with -p tcp or -p udp
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#source_port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#source_port}
  */
  readonly sourcePort?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLossToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLoss | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    device: cdktf.stringToTerraform(struct!.device),
    egress_port: cdktf.stringToTerraform(struct!.egressPort),
    hostname: cdktf.stringToTerraform(struct!.hostname),
    ip_address: cdktf.stringToTerraform(struct!.ipAddress),
    ip_protocol: cdktf.stringToTerraform(struct!.ipProtocol),
    percent: cdktf.stringToTerraform(struct!.percent),
    source_port: cdktf.stringToTerraform(struct!.sourcePort),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLossToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLoss | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    egress_port: {
      value: cdktf.stringToHclTerraform(struct!.egressPort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hostname: {
      value: cdktf.stringToHclTerraform(struct!.hostname),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_address: {
      value: cdktf.stringToHclTerraform(struct!.ipAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_protocol: {
      value: cdktf.stringToHclTerraform(struct!.ipProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    percent: {
      value: cdktf.stringToHclTerraform(struct!.percent),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    source_port: {
      value: cdktf.stringToHclTerraform(struct!.sourcePort),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLossOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLoss | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._egressPort !== undefined) {
      hasAnyValues = true;
      internalValueResult.egressPort = this._egressPort;
    }
    if (this._hostname !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostname = this._hostname;
    }
    if (this._ipAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipAddress = this._ipAddress;
    }
    if (this._ipProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipProtocol = this._ipProtocol;
    }
    if (this._percent !== undefined) {
      hasAnyValues = true;
      internalValueResult.percent = this._percent;
    }
    if (this._sourcePort !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourcePort = this._sourcePort;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLoss | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._device = undefined;
      this._egressPort = undefined;
      this._hostname = undefined;
      this._ipAddress = undefined;
      this._ipProtocol = undefined;
      this._percent = undefined;
      this._sourcePort = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._device = value.device;
      this._egressPort = value.egressPort;
      this._hostname = value.hostname;
      this._ipAddress = value.ipAddress;
      this._ipProtocol = value.ipProtocol;
      this._percent = value.percent;
      this._sourcePort = value.sourcePort;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // egress_port - computed: false, optional: true, required: false
  private _egressPort?: string; 
  public get egressPort() {
    return this.getStringAttribute('egress_port');
  }
  public set egressPort(value: string) {
    this._egressPort = value;
  }
  public resetEgressPort() {
    this._egressPort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get egressPortInput() {
    return this._egressPort;
  }

  // hostname - computed: false, optional: true, required: false
  private _hostname?: string; 
  public get hostname() {
    return this.getStringAttribute('hostname');
  }
  public set hostname(value: string) {
    this._hostname = value;
  }
  public resetHostname() {
    this._hostname = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnameInput() {
    return this._hostname;
  }

  // ip_address - computed: false, optional: true, required: false
  private _ipAddress?: string; 
  public get ipAddress() {
    return this.getStringAttribute('ip_address');
  }
  public set ipAddress(value: string) {
    this._ipAddress = value;
  }
  public resetIpAddress() {
    this._ipAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipAddressInput() {
    return this._ipAddress;
  }

  // ip_protocol - computed: false, optional: true, required: false
  private _ipProtocol?: string; 
  public get ipProtocol() {
    return this.getStringAttribute('ip_protocol');
  }
  public set ipProtocol(value: string) {
    this._ipProtocol = value;
  }
  public resetIpProtocol() {
    this._ipProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipProtocolInput() {
    return this._ipProtocol;
  }

  // percent - computed: false, optional: true, required: false
  private _percent?: string; 
  public get percent() {
    return this.getStringAttribute('percent');
  }
  public set percent(value: string) {
    this._percent = value;
  }
  public resetPercent() {
    this._percent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get percentInput() {
    return this._percent;
  }

  // source_port - computed: false, optional: true, required: false
  private _sourcePort?: string; 
  public get sourcePort() {
    return this.getStringAttribute('source_port');
  }
  public set sourcePort(value: string) {
    this._sourcePort = value;
  }
  public resetSourcePort() {
    this._sourcePort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourcePortInput() {
    return this._sourcePort;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartition {
  /**
  * only the packet which match the tcp flag can be accepted, others will be dropped. only set when the IPProtocol is tcp, used for partition.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#accept_tcp_flags DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#accept_tcp_flags}
  */
  readonly acceptTcpFlags?: string;
  /**
  * the network interface to impact
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * specifies the partition direction, values can be 'from', 'to'. 'from' means packets coming from the 'IPAddress' or 'Hostname' and going to your server, 'to' means packets originating from your server and going to the 'IPAddress' or 'Hostname'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#direction DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#direction}
  */
  readonly direction?: string;
  /**
  * only impact traffic to these hostnames
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#hostname DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#hostname}
  */
  readonly hostname?: string;
  /**
  * only impact egress traffic to these IP addresses
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_address DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_address}
  */
  readonly ipAddress?: string;
  /**
  * only impact egress traffic to these IP addresses
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_protocol DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_protocol}
  */
  readonly ipProtocol?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartitionToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartition | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    accept_tcp_flags: cdktf.stringToTerraform(struct!.acceptTcpFlags),
    device: cdktf.stringToTerraform(struct!.device),
    direction: cdktf.stringToTerraform(struct!.direction),
    hostname: cdktf.stringToTerraform(struct!.hostname),
    ip_address: cdktf.stringToTerraform(struct!.ipAddress),
    ip_protocol: cdktf.stringToTerraform(struct!.ipProtocol),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartitionToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartition | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    accept_tcp_flags: {
      value: cdktf.stringToHclTerraform(struct!.acceptTcpFlags),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    direction: {
      value: cdktf.stringToHclTerraform(struct!.direction),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hostname: {
      value: cdktf.stringToHclTerraform(struct!.hostname),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_address: {
      value: cdktf.stringToHclTerraform(struct!.ipAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_protocol: {
      value: cdktf.stringToHclTerraform(struct!.ipProtocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartitionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartition | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._acceptTcpFlags !== undefined) {
      hasAnyValues = true;
      internalValueResult.acceptTcpFlags = this._acceptTcpFlags;
    }
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._direction !== undefined) {
      hasAnyValues = true;
      internalValueResult.direction = this._direction;
    }
    if (this._hostname !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostname = this._hostname;
    }
    if (this._ipAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipAddress = this._ipAddress;
    }
    if (this._ipProtocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipProtocol = this._ipProtocol;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartition | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._acceptTcpFlags = undefined;
      this._device = undefined;
      this._direction = undefined;
      this._hostname = undefined;
      this._ipAddress = undefined;
      this._ipProtocol = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._acceptTcpFlags = value.acceptTcpFlags;
      this._device = value.device;
      this._direction = value.direction;
      this._hostname = value.hostname;
      this._ipAddress = value.ipAddress;
      this._ipProtocol = value.ipProtocol;
    }
  }

  // accept_tcp_flags - computed: false, optional: true, required: false
  private _acceptTcpFlags?: string; 
  public get acceptTcpFlags() {
    return this.getStringAttribute('accept_tcp_flags');
  }
  public set acceptTcpFlags(value: string) {
    this._acceptTcpFlags = value;
  }
  public resetAcceptTcpFlags() {
    this._acceptTcpFlags = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get acceptTcpFlagsInput() {
    return this._acceptTcpFlags;
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // direction - computed: false, optional: true, required: false
  private _direction?: string; 
  public get direction() {
    return this.getStringAttribute('direction');
  }
  public set direction(value: string) {
    this._direction = value;
  }
  public resetDirection() {
    this._direction = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directionInput() {
    return this._direction;
  }

  // hostname - computed: false, optional: true, required: false
  private _hostname?: string; 
  public get hostname() {
    return this.getStringAttribute('hostname');
  }
  public set hostname(value: string) {
    this._hostname = value;
  }
  public resetHostname() {
    this._hostname = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnameInput() {
    return this._hostname;
  }

  // ip_address - computed: false, optional: true, required: false
  private _ipAddress?: string; 
  public get ipAddress() {
    return this.getStringAttribute('ip_address');
  }
  public set ipAddress(value: string) {
    this._ipAddress = value;
  }
  public resetIpAddress() {
    this._ipAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipAddressInput() {
    return this._ipAddress;
  }

  // ip_protocol - computed: false, optional: true, required: false
  private _ipProtocol?: string; 
  public get ipProtocol() {
    return this.getStringAttribute('ip_protocol');
  }
  public set ipProtocol(value: string) {
    this._ipProtocol = value;
  }
  public resetIpProtocol() {
    this._ipProtocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipProtocolInput() {
    return this._ipProtocol;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcess {
  /**
  * the process name or the process ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#process DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#process}
  */
  readonly process?: string;
  /**
  * the command to be run when recovering experiment
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#recover_cmd DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#recover_cmd}
  */
  readonly recoverCmd?: string;
  /**
  * the signal number to send
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#signal DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#signal}
  */
  readonly signal?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcessToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcess | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    process: cdktf.stringToTerraform(struct!.process),
    recover_cmd: cdktf.stringToTerraform(struct!.recoverCmd),
    signal: cdktf.numberToTerraform(struct!.signal),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcessToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcess | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    process: {
      value: cdktf.stringToHclTerraform(struct!.process),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    recover_cmd: {
      value: cdktf.stringToHclTerraform(struct!.recoverCmd),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    signal: {
      value: cdktf.numberToHclTerraform(struct!.signal),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcessOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcess | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._process !== undefined) {
      hasAnyValues = true;
      internalValueResult.process = this._process;
    }
    if (this._recoverCmd !== undefined) {
      hasAnyValues = true;
      internalValueResult.recoverCmd = this._recoverCmd;
    }
    if (this._signal !== undefined) {
      hasAnyValues = true;
      internalValueResult.signal = this._signal;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcess | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._process = undefined;
      this._recoverCmd = undefined;
      this._signal = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._process = value.process;
      this._recoverCmd = value.recoverCmd;
      this._signal = value.signal;
    }
  }

  // process - computed: false, optional: true, required: false
  private _process?: string; 
  public get process() {
    return this.getStringAttribute('process');
  }
  public set process(value: string) {
    this._process = value;
  }
  public resetProcess() {
    this._process = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get processInput() {
    return this._process;
  }

  // recover_cmd - computed: false, optional: true, required: false
  private _recoverCmd?: string; 
  public get recoverCmd() {
    return this.getStringAttribute('recover_cmd');
  }
  public set recoverCmd(value: string) {
    this._recoverCmd = value;
  }
  public resetRecoverCmd() {
    this._recoverCmd = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recoverCmdInput() {
    return this._recoverCmd;
  }

  // signal - computed: false, optional: true, required: false
  private _signal?: number; 
  public get signal() {
    return this.getNumberAttribute('signal');
  }
  public set signal(value: number) {
    this._signal = value;
  }
  public resetSignal() {
    this._signal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signalInput() {
    return this._signal;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimit {
  /**
  * The adress of Redis server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#addr DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#addr}
  */
  readonly addr?: string;
  /**
  * The size of 'maxmemory'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#cache_size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#cache_size}
  */
  readonly cacheSize?: string;
  /**
  * The password of Redis server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#password DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#password}
  */
  readonly password?: string;
  /**
  * Specifies maxmemory as a percentage of the original value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#percent DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#percent}
  */
  readonly percent?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimitToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    addr: cdktf.stringToTerraform(struct!.addr),
    cache_size: cdktf.stringToTerraform(struct!.cacheSize),
    password: cdktf.stringToTerraform(struct!.password),
    percent: cdktf.stringToTerraform(struct!.percent),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimitToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimit | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    addr: {
      value: cdktf.stringToHclTerraform(struct!.addr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    cache_size: {
      value: cdktf.stringToHclTerraform(struct!.cacheSize),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    percent: {
      value: cdktf.stringToHclTerraform(struct!.percent),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimitOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimit | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addr !== undefined) {
      hasAnyValues = true;
      internalValueResult.addr = this._addr;
    }
    if (this._cacheSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.cacheSize = this._cacheSize;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._percent !== undefined) {
      hasAnyValues = true;
      internalValueResult.percent = this._percent;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimit | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addr = undefined;
      this._cacheSize = undefined;
      this._password = undefined;
      this._percent = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addr = value.addr;
      this._cacheSize = value.cacheSize;
      this._password = value.password;
      this._percent = value.percent;
    }
  }

  // addr - computed: false, optional: true, required: false
  private _addr?: string; 
  public get addr() {
    return this.getStringAttribute('addr');
  }
  public set addr(value: string) {
    this._addr = value;
  }
  public resetAddr() {
    this._addr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addrInput() {
    return this._addr;
  }

  // cache_size - computed: false, optional: true, required: false
  private _cacheSize?: string; 
  public get cacheSize() {
    return this.getStringAttribute('cache_size');
  }
  public set cacheSize(value: string) {
    this._cacheSize = value;
  }
  public resetCacheSize() {
    this._cacheSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cacheSizeInput() {
    return this._cacheSize;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // percent - computed: false, optional: true, required: false
  private _percent?: string; 
  public get percent() {
    return this.getStringAttribute('percent');
  }
  public set percent(value: string) {
    this._percent = value;
  }
  public resetPercent() {
    this._percent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get percentInput() {
    return this._percent;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpiration {
  /**
  * The adress of Redis server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#addr DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#addr}
  */
  readonly addr?: string;
  /**
  * The expiration of the keys
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expiration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expiration}
  */
  readonly expiration?: string;
  /**
  * The keys to be expired
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key?: string;
  /**
  * Additional options for 'expiration'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#option DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#option}
  */
  readonly option?: string;
  /**
  * The password of Redis server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#password DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#password}
  */
  readonly password?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpirationToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpiration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    addr: cdktf.stringToTerraform(struct!.addr),
    expiration: cdktf.stringToTerraform(struct!.expiration),
    key: cdktf.stringToTerraform(struct!.key),
    option: cdktf.stringToTerraform(struct!.option),
    password: cdktf.stringToTerraform(struct!.password),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpirationToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpiration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    addr: {
      value: cdktf.stringToHclTerraform(struct!.addr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    expiration: {
      value: cdktf.stringToHclTerraform(struct!.expiration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    option: {
      value: cdktf.stringToHclTerraform(struct!.option),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpirationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpiration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addr !== undefined) {
      hasAnyValues = true;
      internalValueResult.addr = this._addr;
    }
    if (this._expiration !== undefined) {
      hasAnyValues = true;
      internalValueResult.expiration = this._expiration;
    }
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._option !== undefined) {
      hasAnyValues = true;
      internalValueResult.option = this._option;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpiration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addr = undefined;
      this._expiration = undefined;
      this._key = undefined;
      this._option = undefined;
      this._password = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addr = value.addr;
      this._expiration = value.expiration;
      this._key = value.key;
      this._option = value.option;
      this._password = value.password;
    }
  }

  // addr - computed: false, optional: true, required: false
  private _addr?: string; 
  public get addr() {
    return this.getStringAttribute('addr');
  }
  public set addr(value: string) {
    this._addr = value;
  }
  public resetAddr() {
    this._addr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addrInput() {
    return this._addr;
  }

  // expiration - computed: false, optional: true, required: false
  private _expiration?: string; 
  public get expiration() {
    return this.getStringAttribute('expiration');
  }
  public set expiration(value: string) {
    this._expiration = value;
  }
  public resetExpiration() {
    this._expiration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expirationInput() {
    return this._expiration;
  }

  // key - computed: false, optional: true, required: false
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  public resetKey() {
    this._key = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // option - computed: false, optional: true, required: false
  private _option?: string; 
  public get option() {
    return this.getStringAttribute('option');
  }
  public set option(value: string) {
    this._option = value;
  }
  public resetOption() {
    this._option = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionInput() {
    return this._option;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetration {
  /**
  * The adress of Redis server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#addr DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#addr}
  */
  readonly addr?: string;
  /**
  * The password of Redis server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#password DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#password}
  */
  readonly password?: string;
  /**
  * The number of requests to be sent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#request_num DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#request_num}
  */
  readonly requestNum?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetrationToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    addr: cdktf.stringToTerraform(struct!.addr),
    password: cdktf.stringToTerraform(struct!.password),
    request_num: cdktf.numberToTerraform(struct!.requestNum),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetrationToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetration | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    addr: {
      value: cdktf.stringToHclTerraform(struct!.addr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    request_num: {
      value: cdktf.numberToHclTerraform(struct!.requestNum),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetrationOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetration | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addr !== undefined) {
      hasAnyValues = true;
      internalValueResult.addr = this._addr;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._requestNum !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestNum = this._requestNum;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetration | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addr = undefined;
      this._password = undefined;
      this._requestNum = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addr = value.addr;
      this._password = value.password;
      this._requestNum = value.requestNum;
    }
  }

  // addr - computed: false, optional: true, required: false
  private _addr?: string; 
  public get addr() {
    return this.getStringAttribute('addr');
  }
  public set addr(value: string) {
    this._addr = value;
  }
  public resetAddr() {
    this._addr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addrInput() {
    return this._addr;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // request_num - computed: false, optional: true, required: false
  private _requestNum?: number; 
  public get requestNum() {
    return this.getNumberAttribute('request_num');
  }
  public set requestNum(value: number) {
    this._requestNum = value;
  }
  public resetRequestNum() {
    this._requestNum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestNumInput() {
    return this._requestNum;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestart {
  /**
  * The adress of Redis server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#addr DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#addr}
  */
  readonly addr?: string;
  /**
  * The path of Sentinel conf
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#conf DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#conf}
  */
  readonly conf?: string;
  /**
  * The control flag determines whether to flush config
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#flush_config DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#flush_config}
  */
  readonly flushConfig?: boolean | cdktf.IResolvable;
  /**
  * The password of Redis server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#password DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#password}
  */
  readonly password?: string;
  /**
  * The path of 'redis-server' command-line tool
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#redis_path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#redis_path}
  */
  readonly redisPath?: boolean | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestartToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    addr: cdktf.stringToTerraform(struct!.addr),
    conf: cdktf.stringToTerraform(struct!.conf),
    flush_config: cdktf.booleanToTerraform(struct!.flushConfig),
    password: cdktf.stringToTerraform(struct!.password),
    redis_path: cdktf.booleanToTerraform(struct!.redisPath),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestartToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestart | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    addr: {
      value: cdktf.stringToHclTerraform(struct!.addr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    conf: {
      value: cdktf.stringToHclTerraform(struct!.conf),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    flush_config: {
      value: cdktf.booleanToHclTerraform(struct!.flushConfig),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    redis_path: {
      value: cdktf.booleanToHclTerraform(struct!.redisPath),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestartOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestart | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addr !== undefined) {
      hasAnyValues = true;
      internalValueResult.addr = this._addr;
    }
    if (this._conf !== undefined) {
      hasAnyValues = true;
      internalValueResult.conf = this._conf;
    }
    if (this._flushConfig !== undefined) {
      hasAnyValues = true;
      internalValueResult.flushConfig = this._flushConfig;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._redisPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.redisPath = this._redisPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestart | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addr = undefined;
      this._conf = undefined;
      this._flushConfig = undefined;
      this._password = undefined;
      this._redisPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addr = value.addr;
      this._conf = value.conf;
      this._flushConfig = value.flushConfig;
      this._password = value.password;
      this._redisPath = value.redisPath;
    }
  }

  // addr - computed: false, optional: true, required: false
  private _addr?: string; 
  public get addr() {
    return this.getStringAttribute('addr');
  }
  public set addr(value: string) {
    this._addr = value;
  }
  public resetAddr() {
    this._addr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addrInput() {
    return this._addr;
  }

  // conf - computed: false, optional: true, required: false
  private _conf?: string; 
  public get conf() {
    return this.getStringAttribute('conf');
  }
  public set conf(value: string) {
    this._conf = value;
  }
  public resetConf() {
    this._conf = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get confInput() {
    return this._conf;
  }

  // flush_config - computed: false, optional: true, required: false
  private _flushConfig?: boolean | cdktf.IResolvable; 
  public get flushConfig() {
    return this.getBooleanAttribute('flush_config');
  }
  public set flushConfig(value: boolean | cdktf.IResolvable) {
    this._flushConfig = value;
  }
  public resetFlushConfig() {
    this._flushConfig = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flushConfigInput() {
    return this._flushConfig;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // redis_path - computed: false, optional: true, required: false
  private _redisPath?: boolean | cdktf.IResolvable; 
  public get redisPath() {
    return this.getBooleanAttribute('redis_path');
  }
  public set redisPath(value: boolean | cdktf.IResolvable) {
    this._redisPath = value;
  }
  public resetRedisPath() {
    this._redisPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redisPathInput() {
    return this._redisPath;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStop {
  /**
  * The adress of Redis server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#addr DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#addr}
  */
  readonly addr?: string;
  /**
  * The path of Sentinel conf
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#conf DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#conf}
  */
  readonly conf?: string;
  /**
  * The control flag determines whether to flush config
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#flush_config DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#flush_config}
  */
  readonly flushConfig?: boolean | cdktf.IResolvable;
  /**
  * The password of Redis server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#password DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#password}
  */
  readonly password?: string;
  /**
  * The path of 'redis-server' command-line tool
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#redis_path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#redis_path}
  */
  readonly redisPath?: boolean | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStopToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStop | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    addr: cdktf.stringToTerraform(struct!.addr),
    conf: cdktf.stringToTerraform(struct!.conf),
    flush_config: cdktf.booleanToTerraform(struct!.flushConfig),
    password: cdktf.stringToTerraform(struct!.password),
    redis_path: cdktf.booleanToTerraform(struct!.redisPath),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStopToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStop | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    addr: {
      value: cdktf.stringToHclTerraform(struct!.addr),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    conf: {
      value: cdktf.stringToHclTerraform(struct!.conf),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    flush_config: {
      value: cdktf.booleanToHclTerraform(struct!.flushConfig),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    redis_path: {
      value: cdktf.booleanToHclTerraform(struct!.redisPath),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStopOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStop | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._addr !== undefined) {
      hasAnyValues = true;
      internalValueResult.addr = this._addr;
    }
    if (this._conf !== undefined) {
      hasAnyValues = true;
      internalValueResult.conf = this._conf;
    }
    if (this._flushConfig !== undefined) {
      hasAnyValues = true;
      internalValueResult.flushConfig = this._flushConfig;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._redisPath !== undefined) {
      hasAnyValues = true;
      internalValueResult.redisPath = this._redisPath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStop | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._addr = undefined;
      this._conf = undefined;
      this._flushConfig = undefined;
      this._password = undefined;
      this._redisPath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._addr = value.addr;
      this._conf = value.conf;
      this._flushConfig = value.flushConfig;
      this._password = value.password;
      this._redisPath = value.redisPath;
    }
  }

  // addr - computed: false, optional: true, required: false
  private _addr?: string; 
  public get addr() {
    return this.getStringAttribute('addr');
  }
  public set addr(value: string) {
    this._addr = value;
  }
  public resetAddr() {
    this._addr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addrInput() {
    return this._addr;
  }

  // conf - computed: false, optional: true, required: false
  private _conf?: string; 
  public get conf() {
    return this.getStringAttribute('conf');
  }
  public set conf(value: string) {
    this._conf = value;
  }
  public resetConf() {
    this._conf = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get confInput() {
    return this._conf;
  }

  // flush_config - computed: false, optional: true, required: false
  private _flushConfig?: boolean | cdktf.IResolvable; 
  public get flushConfig() {
    return this.getBooleanAttribute('flush_config');
  }
  public set flushConfig(value: boolean | cdktf.IResolvable) {
    this._flushConfig = value;
  }
  public resetFlushConfig() {
    this._flushConfig = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get flushConfigInput() {
    return this._flushConfig;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // redis_path - computed: false, optional: true, required: false
  private _redisPath?: boolean | cdktf.IResolvable; 
  public get redisPath() {
    return this.getBooleanAttribute('redis_path');
  }
  public set redisPath(value: boolean | cdktf.IResolvable) {
    this._redisPath = value;
  }
  public resetRedisPath() {
    this._redisPath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redisPathInput() {
    return this._redisPath;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * PhysicalMachines is a map of string keys and a set values that used to select physical machines. The key defines the namespace which physical machine belong, and each value is a set of physical machine names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#physical_machines DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#physical_machines}
  */
  readonly physicalMachines?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    physical_machines: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.physicalMachines),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    physical_machines: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.physicalMachines),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._physicalMachines !== undefined) {
      hasAnyValues = true;
      internalValueResult.physicalMachines = this._physicalMachines;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._physicalMachines = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._physicalMachines = value.physicalMachines;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // physical_machines - computed: false, optional: true, required: false
  private _physicalMachines?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get physicalMachines() {
    return this.interpolationForAttribute('physical_machines');
  }
  public set physicalMachines(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._physicalMachines = value;
  }
  public resetPhysicalMachines() {
    this._physicalMachines = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get physicalMachinesInput() {
    return this._physicalMachines;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpu {
  /**
  * specifies P percent loading per CPU worker. 0 is effectively a sleep (no load) and 100 is full loading.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#load DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#load}
  */
  readonly load?: number;
  /**
  * extend stress-ng options
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#options DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#options}
  */
  readonly options?: string[];
  /**
  * specifies N workers to apply the stressor.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#workers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#workers}
  */
  readonly workers?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpuToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpu | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    load: cdktf.numberToTerraform(struct!.load),
    options: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.options),
    workers: cdktf.numberToTerraform(struct!.workers),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpuToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpu | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    load: {
      value: cdktf.numberToHclTerraform(struct!.load),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    options: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.options),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    workers: {
      value: cdktf.numberToHclTerraform(struct!.workers),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpuOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpu | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._load !== undefined) {
      hasAnyValues = true;
      internalValueResult.load = this._load;
    }
    if (this._options !== undefined) {
      hasAnyValues = true;
      internalValueResult.options = this._options;
    }
    if (this._workers !== undefined) {
      hasAnyValues = true;
      internalValueResult.workers = this._workers;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpu | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._load = undefined;
      this._options = undefined;
      this._workers = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._load = value.load;
      this._options = value.options;
      this._workers = value.workers;
    }
  }

  // load - computed: false, optional: true, required: false
  private _load?: number; 
  public get load() {
    return this.getNumberAttribute('load');
  }
  public set load(value: number) {
    this._load = value;
  }
  public resetLoad() {
    this._load = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loadInput() {
    return this._load;
  }

  // options - computed: false, optional: true, required: false
  private _options?: string[]; 
  public get options() {
    return this.getListAttribute('options');
  }
  public set options(value: string[]) {
    this._options = value;
  }
  public resetOptions() {
    this._options = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionsInput() {
    return this._options;
  }

  // workers - computed: false, optional: true, required: false
  private _workers?: number; 
  public get workers() {
    return this.getNumberAttribute('workers');
  }
  public set workers(value: number) {
    this._workers = value;
  }
  public resetWorkers() {
    this._workers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get workersInput() {
    return this._workers;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMem {
  /**
  * extend stress-ng options
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#options DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#options}
  */
  readonly options?: string[];
  /**
  * specifies N bytes consumed per vm worker, default is the total available memory. One can specify the size as % of total available memory or in units of B, KB/KiB, MB/MiB, GB/GiB, TB/TiB..
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#size}
  */
  readonly size?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMemToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMem | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    options: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.options),
    size: cdktf.stringToTerraform(struct!.size),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMemToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMem | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    options: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.options),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    size: {
      value: cdktf.stringToHclTerraform(struct!.size),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMemOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMem | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._options !== undefined) {
      hasAnyValues = true;
      internalValueResult.options = this._options;
    }
    if (this._size !== undefined) {
      hasAnyValues = true;
      internalValueResult.size = this._size;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMem | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._options = undefined;
      this._size = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._options = value.options;
      this._size = value.size;
    }
  }

  // options - computed: false, optional: true, required: false
  private _options?: string[]; 
  public get options() {
    return this.getListAttribute('options');
  }
  public set options(value: string[]) {
    this._options = value;
  }
  public resetOptions() {
    this._options = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionsInput() {
    return this._options;
  }

  // size - computed: false, optional: true, required: false
  private _size?: string; 
  public get size() {
    return this.getStringAttribute('size');
  }
  public set size(value: string) {
    this._size = value;
  }
  public resetSize() {
    this._size = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeInput() {
    return this._size;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefined {
  /**
  * The command to be executed when attack
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#attack_cmd DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#attack_cmd}
  */
  readonly attackCmd?: string;
  /**
  * The command to be executed when recover
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#recover_cmd DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#recover_cmd}
  */
  readonly recoverCmd?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefinedToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefined | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    attack_cmd: cdktf.stringToTerraform(struct!.attackCmd),
    recover_cmd: cdktf.stringToTerraform(struct!.recoverCmd),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefinedToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefined | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    attack_cmd: {
      value: cdktf.stringToHclTerraform(struct!.attackCmd),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    recover_cmd: {
      value: cdktf.stringToHclTerraform(struct!.recoverCmd),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefinedOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefined | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._attackCmd !== undefined) {
      hasAnyValues = true;
      internalValueResult.attackCmd = this._attackCmd;
    }
    if (this._recoverCmd !== undefined) {
      hasAnyValues = true;
      internalValueResult.recoverCmd = this._recoverCmd;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefined | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._attackCmd = undefined;
      this._recoverCmd = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._attackCmd = value.attackCmd;
      this._recoverCmd = value.recoverCmd;
    }
  }

  // attack_cmd - computed: false, optional: true, required: false
  private _attackCmd?: string; 
  public get attackCmd() {
    return this.getStringAttribute('attack_cmd');
  }
  public set attackCmd(value: string) {
    this._attackCmd = value;
  }
  public resetAttackCmd() {
    this._attackCmd = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attackCmdInput() {
    return this._attackCmd;
  }

  // recover_cmd - computed: false, optional: true, required: false
  private _recoverCmd?: string; 
  public get recoverCmd() {
    return this.getStringAttribute('recover_cmd');
  }
  public set recoverCmd(value: string) {
    this._recoverCmd = value;
  }
  public resetRecoverCmd() {
    this._recoverCmd = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get recoverCmdInput() {
    return this._recoverCmd;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVm {
  /**
  * The name of the VM to be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#vm_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#vm_name}
  */
  readonly vmName?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVmToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    vm_name: cdktf.stringToTerraform(struct!.vmName),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVmToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVm | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    vm_name: {
      value: cdktf.stringToHclTerraform(struct!.vmName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVmOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVm | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._vmName !== undefined) {
      hasAnyValues = true;
      internalValueResult.vmName = this._vmName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVm | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._vmName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._vmName = value.vmName;
    }
  }

  // vm_name - computed: false, optional: true, required: false
  private _vmName?: string; 
  public get vmName() {
    return this.getStringAttribute('vm_name');
  }
  public set vmName(value: string) {
    this._vmName = value;
  }
  public resetVmName() {
    this._vmName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vmNameInput() {
    return this._vmName;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaos {
  /**
  * the subAction, generate automatically
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * DEPRECATED: Use Selector instead. Only one of Address and Selector could be specified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#address DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#address}
  */
  readonly address?: string[];
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#clock DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#clock}
  */
  readonly clock?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClock;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#disk_fill DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#disk_fill}
  */
  readonly diskFill?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFill;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#disk_read_payload DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#disk_read_payload}
  */
  readonly diskReadPayload?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayload;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#disk_write_payload DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#disk_write_payload}
  */
  readonly diskWritePayload?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayload;
  /**
  * Duration represents the duration of the chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_append DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_append}
  */
  readonly fileAppend?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppend;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_create DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_create}
  */
  readonly fileCreate?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreate;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_delete DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_delete}
  */
  readonly fileDelete?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDelete;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_modify DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_modify}
  */
  readonly fileModify?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModify;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_rename DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_rename}
  */
  readonly fileRename?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRename;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_replace DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_replace}
  */
  readonly fileReplace?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplace;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#http_abort DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#http_abort}
  */
  readonly httpAbort?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbort;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#http_config DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#http_config}
  */
  readonly httpConfig?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfig;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#http_delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#http_delay}
  */
  readonly httpDelay?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelay;
  /**
  * used for HTTP request, now only support GET
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#http_request DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#http_request}
  */
  readonly httpRequest?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequest;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jvm_exception DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jvm_exception}
  */
  readonly jvmException?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmException;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jvm_gc DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jvm_gc}
  */
  readonly jvmGc?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGc;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jvm_latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jvm_latency}
  */
  readonly jvmLatency?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatency;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jvm_mysql DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jvm_mysql}
  */
  readonly jvmMysql?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysql;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jvm_return DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jvm_return}
  */
  readonly jvmReturn?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturn;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jvm_rule_data DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jvm_rule_data}
  */
  readonly jvmRuleData?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleData;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jvm_stress DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jvm_stress}
  */
  readonly jvmStress?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStress;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#kafka_fill DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#kafka_fill}
  */
  readonly kafkaFill?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFill;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#kafka_flood DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#kafka_flood}
  */
  readonly kafkaFlood?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFlood;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#kafka_io DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#kafka_io}
  */
  readonly kafkaIo?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIo;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#network_bandwidth DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#network_bandwidth}
  */
  readonly networkBandwidth?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidth;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#network_corrupt DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#network_corrupt}
  */
  readonly networkCorrupt?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorrupt;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#network_delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#network_delay}
  */
  readonly networkDelay?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelay;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#network_dns DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#network_dns}
  */
  readonly networkDns?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDns;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#network_down DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#network_down}
  */
  readonly networkDown?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDown;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#network_duplicate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#network_duplicate}
  */
  readonly networkDuplicate?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicate;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#network_flood DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#network_flood}
  */
  readonly networkFlood?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFlood;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#network_loss DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#network_loss}
  */
  readonly networkLoss?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLoss;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#network_partition DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#network_partition}
  */
  readonly networkPartition?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartition;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#process DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#process}
  */
  readonly process?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcess;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#redis_cache_limit DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#redis_cache_limit}
  */
  readonly redisCacheLimit?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimit;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#redis_expiration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#redis_expiration}
  */
  readonly redisExpiration?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpiration;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#redis_penetration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#redis_penetration}
  */
  readonly redisPenetration?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetration;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#redis_restart DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#redis_restart}
  */
  readonly redisRestart?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestart;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#redis_stop DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#redis_stop}
  */
  readonly redisStop?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStop;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select physical machines that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelector;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#stress_cpu DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#stress_cpu}
  */
  readonly stressCpu?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpu;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#stress_mem DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#stress_mem}
  */
  readonly stressMem?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMem;
  /**
  * the experiment ID
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#uid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#uid}
  */
  readonly uid?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#user_defined DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#user_defined}
  */
  readonly userDefined?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefined;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of physical machines to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of physical machines the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#vm DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#vm}
  */
  readonly vm?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVm;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    address: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.address),
    clock: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClockToTerraform(struct!.clock),
    disk_fill: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFillToTerraform(struct!.diskFill),
    disk_read_payload: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayloadToTerraform(struct!.diskReadPayload),
    disk_write_payload: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayloadToTerraform(struct!.diskWritePayload),
    duration: cdktf.stringToTerraform(struct!.duration),
    file_append: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppendToTerraform(struct!.fileAppend),
    file_create: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreateToTerraform(struct!.fileCreate),
    file_delete: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDeleteToTerraform(struct!.fileDelete),
    file_modify: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModifyToTerraform(struct!.fileModify),
    file_rename: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRenameToTerraform(struct!.fileRename),
    file_replace: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplaceToTerraform(struct!.fileReplace),
    http_abort: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbortToTerraform(struct!.httpAbort),
    http_config: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfigToTerraform(struct!.httpConfig),
    http_delay: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelayToTerraform(struct!.httpDelay),
    http_request: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequestToTerraform(struct!.httpRequest),
    jvm_exception: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmExceptionToTerraform(struct!.jvmException),
    jvm_gc: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGcToTerraform(struct!.jvmGc),
    jvm_latency: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatencyToTerraform(struct!.jvmLatency),
    jvm_mysql: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysqlToTerraform(struct!.jvmMysql),
    jvm_return: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturnToTerraform(struct!.jvmReturn),
    jvm_rule_data: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleDataToTerraform(struct!.jvmRuleData),
    jvm_stress: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStressToTerraform(struct!.jvmStress),
    kafka_fill: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFillToTerraform(struct!.kafkaFill),
    kafka_flood: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFloodToTerraform(struct!.kafkaFlood),
    kafka_io: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIoToTerraform(struct!.kafkaIo),
    mode: cdktf.stringToTerraform(struct!.mode),
    network_bandwidth: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidthToTerraform(struct!.networkBandwidth),
    network_corrupt: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorruptToTerraform(struct!.networkCorrupt),
    network_delay: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelayToTerraform(struct!.networkDelay),
    network_dns: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDnsToTerraform(struct!.networkDns),
    network_down: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDownToTerraform(struct!.networkDown),
    network_duplicate: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicateToTerraform(struct!.networkDuplicate),
    network_flood: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFloodToTerraform(struct!.networkFlood),
    network_loss: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLossToTerraform(struct!.networkLoss),
    network_partition: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartitionToTerraform(struct!.networkPartition),
    process: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcessToTerraform(struct!.process),
    redis_cache_limit: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimitToTerraform(struct!.redisCacheLimit),
    redis_expiration: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpirationToTerraform(struct!.redisExpiration),
    redis_penetration: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetrationToTerraform(struct!.redisPenetration),
    redis_restart: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestartToTerraform(struct!.redisRestart),
    redis_stop: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStopToTerraform(struct!.redisStop),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorToTerraform(struct!.selector),
    stress_cpu: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpuToTerraform(struct!.stressCpu),
    stress_mem: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMemToTerraform(struct!.stressMem),
    uid: cdktf.stringToTerraform(struct!.uid),
    user_defined: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefinedToTerraform(struct!.userDefined),
    value: cdktf.stringToTerraform(struct!.value),
    vm: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVmToTerraform(struct!.vm),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    address: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.address),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    clock: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClockToHclTerraform(struct!.clock),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClock",
    },
    disk_fill: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFillToHclTerraform(struct!.diskFill),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFill",
    },
    disk_read_payload: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayloadToHclTerraform(struct!.diskReadPayload),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayload",
    },
    disk_write_payload: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayloadToHclTerraform(struct!.diskWritePayload),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayload",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    file_append: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppendToHclTerraform(struct!.fileAppend),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppend",
    },
    file_create: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreateToHclTerraform(struct!.fileCreate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreate",
    },
    file_delete: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDeleteToHclTerraform(struct!.fileDelete),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDelete",
    },
    file_modify: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModifyToHclTerraform(struct!.fileModify),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModify",
    },
    file_rename: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRenameToHclTerraform(struct!.fileRename),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRename",
    },
    file_replace: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplaceToHclTerraform(struct!.fileReplace),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplace",
    },
    http_abort: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbortToHclTerraform(struct!.httpAbort),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbort",
    },
    http_config: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfigToHclTerraform(struct!.httpConfig),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfig",
    },
    http_delay: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelayToHclTerraform(struct!.httpDelay),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelay",
    },
    http_request: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequestToHclTerraform(struct!.httpRequest),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequest",
    },
    jvm_exception: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmExceptionToHclTerraform(struct!.jvmException),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmException",
    },
    jvm_gc: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGcToHclTerraform(struct!.jvmGc),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGc",
    },
    jvm_latency: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatencyToHclTerraform(struct!.jvmLatency),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatency",
    },
    jvm_mysql: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysqlToHclTerraform(struct!.jvmMysql),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysql",
    },
    jvm_return: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturnToHclTerraform(struct!.jvmReturn),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturn",
    },
    jvm_rule_data: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleDataToHclTerraform(struct!.jvmRuleData),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleData",
    },
    jvm_stress: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStressToHclTerraform(struct!.jvmStress),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStress",
    },
    kafka_fill: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFillToHclTerraform(struct!.kafkaFill),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFill",
    },
    kafka_flood: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFloodToHclTerraform(struct!.kafkaFlood),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFlood",
    },
    kafka_io: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIoToHclTerraform(struct!.kafkaIo),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIo",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    network_bandwidth: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidthToHclTerraform(struct!.networkBandwidth),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidth",
    },
    network_corrupt: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorruptToHclTerraform(struct!.networkCorrupt),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorrupt",
    },
    network_delay: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelayToHclTerraform(struct!.networkDelay),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelay",
    },
    network_dns: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDnsToHclTerraform(struct!.networkDns),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDns",
    },
    network_down: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDownToHclTerraform(struct!.networkDown),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDown",
    },
    network_duplicate: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicateToHclTerraform(struct!.networkDuplicate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicate",
    },
    network_flood: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFloodToHclTerraform(struct!.networkFlood),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFlood",
    },
    network_loss: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLossToHclTerraform(struct!.networkLoss),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLoss",
    },
    network_partition: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartitionToHclTerraform(struct!.networkPartition),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartition",
    },
    process: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcessToHclTerraform(struct!.process),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcess",
    },
    redis_cache_limit: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimitToHclTerraform(struct!.redisCacheLimit),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimit",
    },
    redis_expiration: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpirationToHclTerraform(struct!.redisExpiration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpiration",
    },
    redis_penetration: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetrationToHclTerraform(struct!.redisPenetration),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetration",
    },
    redis_restart: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestartToHclTerraform(struct!.redisRestart),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestart",
    },
    redis_stop: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStopToHclTerraform(struct!.redisStop),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStop",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelector",
    },
    stress_cpu: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpuToHclTerraform(struct!.stressCpu),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpu",
    },
    stress_mem: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMemToHclTerraform(struct!.stressMem),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMem",
    },
    uid: {
      value: cdktf.stringToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    user_defined: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefinedToHclTerraform(struct!.userDefined),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefined",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vm: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVmToHclTerraform(struct!.vm),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVm",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._address !== undefined) {
      hasAnyValues = true;
      internalValueResult.address = this._address;
    }
    if (this._clock?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.clock = this._clock?.internalValue;
    }
    if (this._diskFill?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskFill = this._diskFill?.internalValue;
    }
    if (this._diskReadPayload?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskReadPayload = this._diskReadPayload?.internalValue;
    }
    if (this._diskWritePayload?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskWritePayload = this._diskWritePayload?.internalValue;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._fileAppend?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileAppend = this._fileAppend?.internalValue;
    }
    if (this._fileCreate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileCreate = this._fileCreate?.internalValue;
    }
    if (this._fileDelete?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileDelete = this._fileDelete?.internalValue;
    }
    if (this._fileModify?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileModify = this._fileModify?.internalValue;
    }
    if (this._fileRename?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileRename = this._fileRename?.internalValue;
    }
    if (this._fileReplace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileReplace = this._fileReplace?.internalValue;
    }
    if (this._httpAbort?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpAbort = this._httpAbort?.internalValue;
    }
    if (this._httpConfig?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpConfig = this._httpConfig?.internalValue;
    }
    if (this._httpDelay?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpDelay = this._httpDelay?.internalValue;
    }
    if (this._httpRequest?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.httpRequest = this._httpRequest?.internalValue;
    }
    if (this._jvmException?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jvmException = this._jvmException?.internalValue;
    }
    if (this._jvmGc?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jvmGc = this._jvmGc?.internalValue;
    }
    if (this._jvmLatency?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jvmLatency = this._jvmLatency?.internalValue;
    }
    if (this._jvmMysql?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jvmMysql = this._jvmMysql?.internalValue;
    }
    if (this._jvmReturn?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jvmReturn = this._jvmReturn?.internalValue;
    }
    if (this._jvmRuleData?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jvmRuleData = this._jvmRuleData?.internalValue;
    }
    if (this._jvmStress?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.jvmStress = this._jvmStress?.internalValue;
    }
    if (this._kafkaFill?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kafkaFill = this._kafkaFill?.internalValue;
    }
    if (this._kafkaFlood?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kafkaFlood = this._kafkaFlood?.internalValue;
    }
    if (this._kafkaIo?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.kafkaIo = this._kafkaIo?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._networkBandwidth?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkBandwidth = this._networkBandwidth?.internalValue;
    }
    if (this._networkCorrupt?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkCorrupt = this._networkCorrupt?.internalValue;
    }
    if (this._networkDelay?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkDelay = this._networkDelay?.internalValue;
    }
    if (this._networkDns?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkDns = this._networkDns?.internalValue;
    }
    if (this._networkDown?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkDown = this._networkDown?.internalValue;
    }
    if (this._networkDuplicate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkDuplicate = this._networkDuplicate?.internalValue;
    }
    if (this._networkFlood?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkFlood = this._networkFlood?.internalValue;
    }
    if (this._networkLoss?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkLoss = this._networkLoss?.internalValue;
    }
    if (this._networkPartition?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.networkPartition = this._networkPartition?.internalValue;
    }
    if (this._process?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.process = this._process?.internalValue;
    }
    if (this._redisCacheLimit?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.redisCacheLimit = this._redisCacheLimit?.internalValue;
    }
    if (this._redisExpiration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.redisExpiration = this._redisExpiration?.internalValue;
    }
    if (this._redisPenetration?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.redisPenetration = this._redisPenetration?.internalValue;
    }
    if (this._redisRestart?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.redisRestart = this._redisRestart?.internalValue;
    }
    if (this._redisStop?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.redisStop = this._redisStop?.internalValue;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._stressCpu?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.stressCpu = this._stressCpu?.internalValue;
    }
    if (this._stressMem?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.stressMem = this._stressMem?.internalValue;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    if (this._userDefined?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.userDefined = this._userDefined?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._vm?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vm = this._vm?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._address = undefined;
      this._clock.internalValue = undefined;
      this._diskFill.internalValue = undefined;
      this._diskReadPayload.internalValue = undefined;
      this._diskWritePayload.internalValue = undefined;
      this._duration = undefined;
      this._fileAppend.internalValue = undefined;
      this._fileCreate.internalValue = undefined;
      this._fileDelete.internalValue = undefined;
      this._fileModify.internalValue = undefined;
      this._fileRename.internalValue = undefined;
      this._fileReplace.internalValue = undefined;
      this._httpAbort.internalValue = undefined;
      this._httpConfig.internalValue = undefined;
      this._httpDelay.internalValue = undefined;
      this._httpRequest.internalValue = undefined;
      this._jvmException.internalValue = undefined;
      this._jvmGc.internalValue = undefined;
      this._jvmLatency.internalValue = undefined;
      this._jvmMysql.internalValue = undefined;
      this._jvmReturn.internalValue = undefined;
      this._jvmRuleData.internalValue = undefined;
      this._jvmStress.internalValue = undefined;
      this._kafkaFill.internalValue = undefined;
      this._kafkaFlood.internalValue = undefined;
      this._kafkaIo.internalValue = undefined;
      this._mode = undefined;
      this._networkBandwidth.internalValue = undefined;
      this._networkCorrupt.internalValue = undefined;
      this._networkDelay.internalValue = undefined;
      this._networkDns.internalValue = undefined;
      this._networkDown.internalValue = undefined;
      this._networkDuplicate.internalValue = undefined;
      this._networkFlood.internalValue = undefined;
      this._networkLoss.internalValue = undefined;
      this._networkPartition.internalValue = undefined;
      this._process.internalValue = undefined;
      this._redisCacheLimit.internalValue = undefined;
      this._redisExpiration.internalValue = undefined;
      this._redisPenetration.internalValue = undefined;
      this._redisRestart.internalValue = undefined;
      this._redisStop.internalValue = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._stressCpu.internalValue = undefined;
      this._stressMem.internalValue = undefined;
      this._uid = undefined;
      this._userDefined.internalValue = undefined;
      this._value = undefined;
      this._vm.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._address = value.address;
      this._clock.internalValue = value.clock;
      this._diskFill.internalValue = value.diskFill;
      this._diskReadPayload.internalValue = value.diskReadPayload;
      this._diskWritePayload.internalValue = value.diskWritePayload;
      this._duration = value.duration;
      this._fileAppend.internalValue = value.fileAppend;
      this._fileCreate.internalValue = value.fileCreate;
      this._fileDelete.internalValue = value.fileDelete;
      this._fileModify.internalValue = value.fileModify;
      this._fileRename.internalValue = value.fileRename;
      this._fileReplace.internalValue = value.fileReplace;
      this._httpAbort.internalValue = value.httpAbort;
      this._httpConfig.internalValue = value.httpConfig;
      this._httpDelay.internalValue = value.httpDelay;
      this._httpRequest.internalValue = value.httpRequest;
      this._jvmException.internalValue = value.jvmException;
      this._jvmGc.internalValue = value.jvmGc;
      this._jvmLatency.internalValue = value.jvmLatency;
      this._jvmMysql.internalValue = value.jvmMysql;
      this._jvmReturn.internalValue = value.jvmReturn;
      this._jvmRuleData.internalValue = value.jvmRuleData;
      this._jvmStress.internalValue = value.jvmStress;
      this._kafkaFill.internalValue = value.kafkaFill;
      this._kafkaFlood.internalValue = value.kafkaFlood;
      this._kafkaIo.internalValue = value.kafkaIo;
      this._mode = value.mode;
      this._networkBandwidth.internalValue = value.networkBandwidth;
      this._networkCorrupt.internalValue = value.networkCorrupt;
      this._networkDelay.internalValue = value.networkDelay;
      this._networkDns.internalValue = value.networkDns;
      this._networkDown.internalValue = value.networkDown;
      this._networkDuplicate.internalValue = value.networkDuplicate;
      this._networkFlood.internalValue = value.networkFlood;
      this._networkLoss.internalValue = value.networkLoss;
      this._networkPartition.internalValue = value.networkPartition;
      this._process.internalValue = value.process;
      this._redisCacheLimit.internalValue = value.redisCacheLimit;
      this._redisExpiration.internalValue = value.redisExpiration;
      this._redisPenetration.internalValue = value.redisPenetration;
      this._redisRestart.internalValue = value.redisRestart;
      this._redisStop.internalValue = value.redisStop;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._stressCpu.internalValue = value.stressCpu;
      this._stressMem.internalValue = value.stressMem;
      this._uid = value.uid;
      this._userDefined.internalValue = value.userDefined;
      this._value = value.value;
      this._vm.internalValue = value.vm;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // address - computed: false, optional: true, required: false
  private _address?: string[]; 
  public get address() {
    return this.getListAttribute('address');
  }
  public set address(value: string[]) {
    this._address = value;
  }
  public resetAddress() {
    this._address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get addressInput() {
    return this._address;
  }

  // clock - computed: false, optional: true, required: false
  private _clock = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClockOutputReference(this, "clock");
  public get clock() {
    return this._clock;
  }
  public putClock(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosClock) {
    this._clock.internalValue = value;
  }
  public resetClock() {
    this._clock.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clockInput() {
    return this._clock.internalValue;
  }

  // disk_fill - computed: false, optional: true, required: false
  private _diskFill = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFillOutputReference(this, "disk_fill");
  public get diskFill() {
    return this._diskFill;
  }
  public putDiskFill(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskFill) {
    this._diskFill.internalValue = value;
  }
  public resetDiskFill() {
    this._diskFill.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskFillInput() {
    return this._diskFill.internalValue;
  }

  // disk_read_payload - computed: false, optional: true, required: false
  private _diskReadPayload = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayloadOutputReference(this, "disk_read_payload");
  public get diskReadPayload() {
    return this._diskReadPayload;
  }
  public putDiskReadPayload(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskReadPayload) {
    this._diskReadPayload.internalValue = value;
  }
  public resetDiskReadPayload() {
    this._diskReadPayload.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskReadPayloadInput() {
    return this._diskReadPayload.internalValue;
  }

  // disk_write_payload - computed: false, optional: true, required: false
  private _diskWritePayload = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayloadOutputReference(this, "disk_write_payload");
  public get diskWritePayload() {
    return this._diskWritePayload;
  }
  public putDiskWritePayload(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosDiskWritePayload) {
    this._diskWritePayload.internalValue = value;
  }
  public resetDiskWritePayload() {
    this._diskWritePayload.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskWritePayloadInput() {
    return this._diskWritePayload.internalValue;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // file_append - computed: false, optional: true, required: false
  private _fileAppend = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppendOutputReference(this, "file_append");
  public get fileAppend() {
    return this._fileAppend;
  }
  public putFileAppend(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileAppend) {
    this._fileAppend.internalValue = value;
  }
  public resetFileAppend() {
    this._fileAppend.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileAppendInput() {
    return this._fileAppend.internalValue;
  }

  // file_create - computed: false, optional: true, required: false
  private _fileCreate = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreateOutputReference(this, "file_create");
  public get fileCreate() {
    return this._fileCreate;
  }
  public putFileCreate(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileCreate) {
    this._fileCreate.internalValue = value;
  }
  public resetFileCreate() {
    this._fileCreate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileCreateInput() {
    return this._fileCreate.internalValue;
  }

  // file_delete - computed: false, optional: true, required: false
  private _fileDelete = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDeleteOutputReference(this, "file_delete");
  public get fileDelete() {
    return this._fileDelete;
  }
  public putFileDelete(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileDelete) {
    this._fileDelete.internalValue = value;
  }
  public resetFileDelete() {
    this._fileDelete.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileDeleteInput() {
    return this._fileDelete.internalValue;
  }

  // file_modify - computed: false, optional: true, required: false
  private _fileModify = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModifyOutputReference(this, "file_modify");
  public get fileModify() {
    return this._fileModify;
  }
  public putFileModify(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileModify) {
    this._fileModify.internalValue = value;
  }
  public resetFileModify() {
    this._fileModify.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileModifyInput() {
    return this._fileModify.internalValue;
  }

  // file_rename - computed: false, optional: true, required: false
  private _fileRename = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRenameOutputReference(this, "file_rename");
  public get fileRename() {
    return this._fileRename;
  }
  public putFileRename(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileRename) {
    this._fileRename.internalValue = value;
  }
  public resetFileRename() {
    this._fileRename.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileRenameInput() {
    return this._fileRename.internalValue;
  }

  // file_replace - computed: false, optional: true, required: false
  private _fileReplace = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplaceOutputReference(this, "file_replace");
  public get fileReplace() {
    return this._fileReplace;
  }
  public putFileReplace(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosFileReplace) {
    this._fileReplace.internalValue = value;
  }
  public resetFileReplace() {
    this._fileReplace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileReplaceInput() {
    return this._fileReplace.internalValue;
  }

  // http_abort - computed: false, optional: true, required: false
  private _httpAbort = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbortOutputReference(this, "http_abort");
  public get httpAbort() {
    return this._httpAbort;
  }
  public putHttpAbort(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpAbort) {
    this._httpAbort.internalValue = value;
  }
  public resetHttpAbort() {
    this._httpAbort.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpAbortInput() {
    return this._httpAbort.internalValue;
  }

  // http_config - computed: false, optional: true, required: false
  private _httpConfig = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfigOutputReference(this, "http_config");
  public get httpConfig() {
    return this._httpConfig;
  }
  public putHttpConfig(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpConfig) {
    this._httpConfig.internalValue = value;
  }
  public resetHttpConfig() {
    this._httpConfig.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpConfigInput() {
    return this._httpConfig.internalValue;
  }

  // http_delay - computed: false, optional: true, required: false
  private _httpDelay = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelayOutputReference(this, "http_delay");
  public get httpDelay() {
    return this._httpDelay;
  }
  public putHttpDelay(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpDelay) {
    this._httpDelay.internalValue = value;
  }
  public resetHttpDelay() {
    this._httpDelay.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpDelayInput() {
    return this._httpDelay.internalValue;
  }

  // http_request - computed: false, optional: true, required: false
  private _httpRequest = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequestOutputReference(this, "http_request");
  public get httpRequest() {
    return this._httpRequest;
  }
  public putHttpRequest(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosHttpRequest) {
    this._httpRequest.internalValue = value;
  }
  public resetHttpRequest() {
    this._httpRequest.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get httpRequestInput() {
    return this._httpRequest.internalValue;
  }

  // jvm_exception - computed: false, optional: true, required: false
  private _jvmException = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmExceptionOutputReference(this, "jvm_exception");
  public get jvmException() {
    return this._jvmException;
  }
  public putJvmException(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmException) {
    this._jvmException.internalValue = value;
  }
  public resetJvmException() {
    this._jvmException.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jvmExceptionInput() {
    return this._jvmException.internalValue;
  }

  // jvm_gc - computed: false, optional: true, required: false
  private _jvmGc = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGcOutputReference(this, "jvm_gc");
  public get jvmGc() {
    return this._jvmGc;
  }
  public putJvmGc(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmGc) {
    this._jvmGc.internalValue = value;
  }
  public resetJvmGc() {
    this._jvmGc.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jvmGcInput() {
    return this._jvmGc.internalValue;
  }

  // jvm_latency - computed: false, optional: true, required: false
  private _jvmLatency = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatencyOutputReference(this, "jvm_latency");
  public get jvmLatency() {
    return this._jvmLatency;
  }
  public putJvmLatency(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmLatency) {
    this._jvmLatency.internalValue = value;
  }
  public resetJvmLatency() {
    this._jvmLatency.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jvmLatencyInput() {
    return this._jvmLatency.internalValue;
  }

  // jvm_mysql - computed: false, optional: true, required: false
  private _jvmMysql = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysqlOutputReference(this, "jvm_mysql");
  public get jvmMysql() {
    return this._jvmMysql;
  }
  public putJvmMysql(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmMysql) {
    this._jvmMysql.internalValue = value;
  }
  public resetJvmMysql() {
    this._jvmMysql.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jvmMysqlInput() {
    return this._jvmMysql.internalValue;
  }

  // jvm_return - computed: false, optional: true, required: false
  private _jvmReturn = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturnOutputReference(this, "jvm_return");
  public get jvmReturn() {
    return this._jvmReturn;
  }
  public putJvmReturn(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmReturn) {
    this._jvmReturn.internalValue = value;
  }
  public resetJvmReturn() {
    this._jvmReturn.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jvmReturnInput() {
    return this._jvmReturn.internalValue;
  }

  // jvm_rule_data - computed: false, optional: true, required: false
  private _jvmRuleData = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleDataOutputReference(this, "jvm_rule_data");
  public get jvmRuleData() {
    return this._jvmRuleData;
  }
  public putJvmRuleData(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmRuleData) {
    this._jvmRuleData.internalValue = value;
  }
  public resetJvmRuleData() {
    this._jvmRuleData.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jvmRuleDataInput() {
    return this._jvmRuleData.internalValue;
  }

  // jvm_stress - computed: false, optional: true, required: false
  private _jvmStress = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStressOutputReference(this, "jvm_stress");
  public get jvmStress() {
    return this._jvmStress;
  }
  public putJvmStress(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosJvmStress) {
    this._jvmStress.internalValue = value;
  }
  public resetJvmStress() {
    this._jvmStress.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jvmStressInput() {
    return this._jvmStress.internalValue;
  }

  // kafka_fill - computed: false, optional: true, required: false
  private _kafkaFill = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFillOutputReference(this, "kafka_fill");
  public get kafkaFill() {
    return this._kafkaFill;
  }
  public putKafkaFill(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFill) {
    this._kafkaFill.internalValue = value;
  }
  public resetKafkaFill() {
    this._kafkaFill.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kafkaFillInput() {
    return this._kafkaFill.internalValue;
  }

  // kafka_flood - computed: false, optional: true, required: false
  private _kafkaFlood = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFloodOutputReference(this, "kafka_flood");
  public get kafkaFlood() {
    return this._kafkaFlood;
  }
  public putKafkaFlood(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaFlood) {
    this._kafkaFlood.internalValue = value;
  }
  public resetKafkaFlood() {
    this._kafkaFlood.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kafkaFloodInput() {
    return this._kafkaFlood.internalValue;
  }

  // kafka_io - computed: false, optional: true, required: false
  private _kafkaIo = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIoOutputReference(this, "kafka_io");
  public get kafkaIo() {
    return this._kafkaIo;
  }
  public putKafkaIo(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosKafkaIo) {
    this._kafkaIo.internalValue = value;
  }
  public resetKafkaIo() {
    this._kafkaIo.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kafkaIoInput() {
    return this._kafkaIo.internalValue;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // network_bandwidth - computed: false, optional: true, required: false
  private _networkBandwidth = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidthOutputReference(this, "network_bandwidth");
  public get networkBandwidth() {
    return this._networkBandwidth;
  }
  public putNetworkBandwidth(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkBandwidth) {
    this._networkBandwidth.internalValue = value;
  }
  public resetNetworkBandwidth() {
    this._networkBandwidth.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkBandwidthInput() {
    return this._networkBandwidth.internalValue;
  }

  // network_corrupt - computed: false, optional: true, required: false
  private _networkCorrupt = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorruptOutputReference(this, "network_corrupt");
  public get networkCorrupt() {
    return this._networkCorrupt;
  }
  public putNetworkCorrupt(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkCorrupt) {
    this._networkCorrupt.internalValue = value;
  }
  public resetNetworkCorrupt() {
    this._networkCorrupt.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkCorruptInput() {
    return this._networkCorrupt.internalValue;
  }

  // network_delay - computed: false, optional: true, required: false
  private _networkDelay = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelayOutputReference(this, "network_delay");
  public get networkDelay() {
    return this._networkDelay;
  }
  public putNetworkDelay(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDelay) {
    this._networkDelay.internalValue = value;
  }
  public resetNetworkDelay() {
    this._networkDelay.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkDelayInput() {
    return this._networkDelay.internalValue;
  }

  // network_dns - computed: false, optional: true, required: false
  private _networkDns = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDnsOutputReference(this, "network_dns");
  public get networkDns() {
    return this._networkDns;
  }
  public putNetworkDns(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDns) {
    this._networkDns.internalValue = value;
  }
  public resetNetworkDns() {
    this._networkDns.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkDnsInput() {
    return this._networkDns.internalValue;
  }

  // network_down - computed: false, optional: true, required: false
  private _networkDown = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDownOutputReference(this, "network_down");
  public get networkDown() {
    return this._networkDown;
  }
  public putNetworkDown(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDown) {
    this._networkDown.internalValue = value;
  }
  public resetNetworkDown() {
    this._networkDown.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkDownInput() {
    return this._networkDown.internalValue;
  }

  // network_duplicate - computed: false, optional: true, required: false
  private _networkDuplicate = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicateOutputReference(this, "network_duplicate");
  public get networkDuplicate() {
    return this._networkDuplicate;
  }
  public putNetworkDuplicate(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkDuplicate) {
    this._networkDuplicate.internalValue = value;
  }
  public resetNetworkDuplicate() {
    this._networkDuplicate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkDuplicateInput() {
    return this._networkDuplicate.internalValue;
  }

  // network_flood - computed: false, optional: true, required: false
  private _networkFlood = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFloodOutputReference(this, "network_flood");
  public get networkFlood() {
    return this._networkFlood;
  }
  public putNetworkFlood(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkFlood) {
    this._networkFlood.internalValue = value;
  }
  public resetNetworkFlood() {
    this._networkFlood.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkFloodInput() {
    return this._networkFlood.internalValue;
  }

  // network_loss - computed: false, optional: true, required: false
  private _networkLoss = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLossOutputReference(this, "network_loss");
  public get networkLoss() {
    return this._networkLoss;
  }
  public putNetworkLoss(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkLoss) {
    this._networkLoss.internalValue = value;
  }
  public resetNetworkLoss() {
    this._networkLoss.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkLossInput() {
    return this._networkLoss.internalValue;
  }

  // network_partition - computed: false, optional: true, required: false
  private _networkPartition = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartitionOutputReference(this, "network_partition");
  public get networkPartition() {
    return this._networkPartition;
  }
  public putNetworkPartition(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosNetworkPartition) {
    this._networkPartition.internalValue = value;
  }
  public resetNetworkPartition() {
    this._networkPartition.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get networkPartitionInput() {
    return this._networkPartition.internalValue;
  }

  // process - computed: false, optional: true, required: false
  private _process = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcessOutputReference(this, "process");
  public get process() {
    return this._process;
  }
  public putProcess(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosProcess) {
    this._process.internalValue = value;
  }
  public resetProcess() {
    this._process.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get processInput() {
    return this._process.internalValue;
  }

  // redis_cache_limit - computed: false, optional: true, required: false
  private _redisCacheLimit = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimitOutputReference(this, "redis_cache_limit");
  public get redisCacheLimit() {
    return this._redisCacheLimit;
  }
  public putRedisCacheLimit(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisCacheLimit) {
    this._redisCacheLimit.internalValue = value;
  }
  public resetRedisCacheLimit() {
    this._redisCacheLimit.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redisCacheLimitInput() {
    return this._redisCacheLimit.internalValue;
  }

  // redis_expiration - computed: false, optional: true, required: false
  private _redisExpiration = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpirationOutputReference(this, "redis_expiration");
  public get redisExpiration() {
    return this._redisExpiration;
  }
  public putRedisExpiration(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisExpiration) {
    this._redisExpiration.internalValue = value;
  }
  public resetRedisExpiration() {
    this._redisExpiration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redisExpirationInput() {
    return this._redisExpiration.internalValue;
  }

  // redis_penetration - computed: false, optional: true, required: false
  private _redisPenetration = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetrationOutputReference(this, "redis_penetration");
  public get redisPenetration() {
    return this._redisPenetration;
  }
  public putRedisPenetration(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisPenetration) {
    this._redisPenetration.internalValue = value;
  }
  public resetRedisPenetration() {
    this._redisPenetration.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redisPenetrationInput() {
    return this._redisPenetration.internalValue;
  }

  // redis_restart - computed: false, optional: true, required: false
  private _redisRestart = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestartOutputReference(this, "redis_restart");
  public get redisRestart() {
    return this._redisRestart;
  }
  public putRedisRestart(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisRestart) {
    this._redisRestart.internalValue = value;
  }
  public resetRedisRestart() {
    this._redisRestart.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redisRestartInput() {
    return this._redisRestart.internalValue;
  }

  // redis_stop - computed: false, optional: true, required: false
  private _redisStop = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStopOutputReference(this, "redis_stop");
  public get redisStop() {
    return this._redisStop;
  }
  public putRedisStop(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosRedisStop) {
    this._redisStop.internalValue = value;
  }
  public resetRedisStop() {
    this._redisStop.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get redisStopInput() {
    return this._redisStop.internalValue;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: true, required: false
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosSelector) {
    this._selector.internalValue = value;
  }
  public resetSelector() {
    this._selector.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // stress_cpu - computed: false, optional: true, required: false
  private _stressCpu = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpuOutputReference(this, "stress_cpu");
  public get stressCpu() {
    return this._stressCpu;
  }
  public putStressCpu(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressCpu) {
    this._stressCpu.internalValue = value;
  }
  public resetStressCpu() {
    this._stressCpu.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stressCpuInput() {
    return this._stressCpu.internalValue;
  }

  // stress_mem - computed: false, optional: true, required: false
  private _stressMem = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMemOutputReference(this, "stress_mem");
  public get stressMem() {
    return this._stressMem;
  }
  public putStressMem(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosStressMem) {
    this._stressMem.internalValue = value;
  }
  public resetStressMem() {
    this._stressMem.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stressMemInput() {
    return this._stressMem.internalValue;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: string; 
  public get uid() {
    return this.getStringAttribute('uid');
  }
  public set uid(value: string) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }

  // user_defined - computed: false, optional: true, required: false
  private _userDefined = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefinedOutputReference(this, "user_defined");
  public get userDefined() {
    return this._userDefined;
  }
  public putUserDefined(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosUserDefined) {
    this._userDefined.internalValue = value;
  }
  public resetUserDefined() {
    this._userDefined.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get userDefinedInput() {
    return this._userDefined.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // vm - computed: false, optional: true, required: false
  private _vm = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVmOutputReference(this, "vm");
  public get vm() {
    return this._vm;
  }
  public putVm(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPhysicalmachineChaosVm) {
    this._vm.internalValue = value;
  }
  public resetVm() {
    this._vm.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vmInput() {
    return this._vm.internalValue;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaos {
  /**
  * Action defines the specific pod chaos action. Supported action: pod-kill / pod-failure / container-kill Default action: pod-kill
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * Duration represents the duration of the chaos action. It is required when the action is 'PodFailureAction'. A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as '300ms', '-1.5h' or '2h45m'. Valid time units are 'ns', 'us' (or 'µs'), 'ms', 's', 'm', 'h'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * GracePeriod is used in pod-kill action. It represents the duration in seconds before the pod should be deleted. Value must be non-negative integer. The default value is zero that indicates delete immediately.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#grace_period DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#grace_period}
  */
  readonly gracePeriod?: number;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelector;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    duration: cdktf.stringToTerraform(struct!.duration),
    grace_period: cdktf.numberToTerraform(struct!.gracePeriod),
    mode: cdktf.stringToTerraform(struct!.mode),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    grace_period: {
      value: cdktf.numberToHclTerraform(struct!.gracePeriod),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelector",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._gracePeriod !== undefined) {
      hasAnyValues = true;
      internalValueResult.gracePeriod = this._gracePeriod;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._containerNames = undefined;
      this._duration = undefined;
      this._gracePeriod = undefined;
      this._mode = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._containerNames = value.containerNames;
      this._duration = value.duration;
      this._gracePeriod = value.gracePeriod;
      this._mode = value.mode;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._value = value.value;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // grace_period - computed: false, optional: true, required: false
  private _gracePeriod?: number; 
  public get gracePeriod() {
    return this.getNumberAttribute('grace_period');
  }
  public set gracePeriod(value: number) {
    this._gracePeriod = value;
  }
  public resetGracePeriod() {
    this._gracePeriod = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gracePeriodInput() {
    return this._gracePeriod;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecPodChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpu {
  /**
  * Load specifies P percent loading per CPU worker. 0 is effectively a sleep (no load) and 100 is full loading.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#load DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#load}
  */
  readonly load?: number;
  /**
  * extend stress-ng options
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#options DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#options}
  */
  readonly options?: string[];
  /**
  * Workers specifies N workers to apply the stressor. Maximum 8192 workers can run by stress-ng
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#workers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#workers}
  */
  readonly workers: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpuToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpu | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    load: cdktf.numberToTerraform(struct!.load),
    options: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.options),
    workers: cdktf.numberToTerraform(struct!.workers),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpuToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpu | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    load: {
      value: cdktf.numberToHclTerraform(struct!.load),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    options: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.options),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    workers: {
      value: cdktf.numberToHclTerraform(struct!.workers),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpuOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpu | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._load !== undefined) {
      hasAnyValues = true;
      internalValueResult.load = this._load;
    }
    if (this._options !== undefined) {
      hasAnyValues = true;
      internalValueResult.options = this._options;
    }
    if (this._workers !== undefined) {
      hasAnyValues = true;
      internalValueResult.workers = this._workers;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpu | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._load = undefined;
      this._options = undefined;
      this._workers = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._load = value.load;
      this._options = value.options;
      this._workers = value.workers;
    }
  }

  // load - computed: false, optional: true, required: false
  private _load?: number; 
  public get load() {
    return this.getNumberAttribute('load');
  }
  public set load(value: number) {
    this._load = value;
  }
  public resetLoad() {
    this._load = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loadInput() {
    return this._load;
  }

  // options - computed: false, optional: true, required: false
  private _options?: string[]; 
  public get options() {
    return this.getListAttribute('options');
  }
  public set options(value: string[]) {
    this._options = value;
  }
  public resetOptions() {
    this._options = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionsInput() {
    return this._options;
  }

  // workers - computed: false, optional: false, required: true
  private _workers?: number; 
  public get workers() {
    return this.getNumberAttribute('workers');
  }
  public set workers(value: number) {
    this._workers = value;
  }
  // Temporarily expose input value. Use with caution.
  public get workersInput() {
    return this._workers;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemory {
  /**
  * OOMScoreAdj sets the oom_score_adj of the stress process. See 'man 5 proc' to know more about this option.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#oom_score_adj DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#oom_score_adj}
  */
  readonly oomScoreAdj?: number;
  /**
  * extend stress-ng options
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#options DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#options}
  */
  readonly options?: string[];
  /**
  * Size specifies N bytes consumed per vm worker, default is the total available memory. One can specify the size as % of total available memory or in units of B, KB/KiB, MB/MiB, GB/GiB, TB/TiB.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#size}
  */
  readonly size?: string;
  /**
  * Workers specifies N workers to apply the stressor. Maximum 8192 workers can run by stress-ng
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#workers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#workers}
  */
  readonly workers: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemoryToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemory | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    oom_score_adj: cdktf.numberToTerraform(struct!.oomScoreAdj),
    options: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.options),
    size: cdktf.stringToTerraform(struct!.size),
    workers: cdktf.numberToTerraform(struct!.workers),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemoryToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemory | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    oom_score_adj: {
      value: cdktf.numberToHclTerraform(struct!.oomScoreAdj),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    options: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.options),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    size: {
      value: cdktf.stringToHclTerraform(struct!.size),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    workers: {
      value: cdktf.numberToHclTerraform(struct!.workers),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemoryOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemory | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._oomScoreAdj !== undefined) {
      hasAnyValues = true;
      internalValueResult.oomScoreAdj = this._oomScoreAdj;
    }
    if (this._options !== undefined) {
      hasAnyValues = true;
      internalValueResult.options = this._options;
    }
    if (this._size !== undefined) {
      hasAnyValues = true;
      internalValueResult.size = this._size;
    }
    if (this._workers !== undefined) {
      hasAnyValues = true;
      internalValueResult.workers = this._workers;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemory | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._oomScoreAdj = undefined;
      this._options = undefined;
      this._size = undefined;
      this._workers = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._oomScoreAdj = value.oomScoreAdj;
      this._options = value.options;
      this._size = value.size;
      this._workers = value.workers;
    }
  }

  // oom_score_adj - computed: false, optional: true, required: false
  private _oomScoreAdj?: number; 
  public get oomScoreAdj() {
    return this.getNumberAttribute('oom_score_adj');
  }
  public set oomScoreAdj(value: number) {
    this._oomScoreAdj = value;
  }
  public resetOomScoreAdj() {
    this._oomScoreAdj = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get oomScoreAdjInput() {
    return this._oomScoreAdj;
  }

  // options - computed: false, optional: true, required: false
  private _options?: string[]; 
  public get options() {
    return this.getListAttribute('options');
  }
  public set options(value: string[]) {
    this._options = value;
  }
  public resetOptions() {
    this._options = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get optionsInput() {
    return this._options;
  }

  // size - computed: false, optional: true, required: false
  private _size?: string; 
  public get size() {
    return this.getStringAttribute('size');
  }
  public set size(value: string) {
    this._size = value;
  }
  public resetSize() {
    this._size = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeInput() {
    return this._size;
  }

  // workers - computed: false, optional: false, required: true
  private _workers?: number; 
  public get workers() {
    return this.getNumberAttribute('workers');
  }
  public set workers(value: number) {
    this._workers = value;
  }
  // Temporarily expose input value. Use with caution.
  public get workersInput() {
    return this._workers;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressors {
  /**
  * CPUStressor stresses CPU out
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#cpu DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#cpu}
  */
  readonly cpu?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpu;
  /**
  * MemoryStressor stresses virtual memory out
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#memory DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#memory}
  */
  readonly memory?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemory;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cpu: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpuToTerraform(struct!.cpu),
    memory: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemoryToTerraform(struct!.memory),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cpu: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpuToHclTerraform(struct!.cpu),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpu",
    },
    memory: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemoryToHclTerraform(struct!.memory),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemory",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cpu?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.cpu = this._cpu?.internalValue;
    }
    if (this._memory?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.memory = this._memory?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cpu.internalValue = undefined;
      this._memory.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cpu.internalValue = value.cpu;
      this._memory.internalValue = value.memory;
    }
  }

  // cpu - computed: false, optional: true, required: false
  private _cpu = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpuOutputReference(this, "cpu");
  public get cpu() {
    return this._cpu;
  }
  public putCpu(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsCpu) {
    this._cpu.internalValue = value;
  }
  public resetCpu() {
    this._cpu.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cpuInput() {
    return this._cpu.internalValue;
  }

  // memory - computed: false, optional: true, required: false
  private _memory = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemoryOutputReference(this, "memory");
  public get memory() {
    return this._memory;
  }
  public putMemory(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsMemory) {
    this._memory.internalValue = value;
  }
  public resetMemory() {
    this._memory.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get memoryInput() {
    return this._memory.internalValue;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaos {
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * Duration represents the duration of the chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelector;
  /**
  * StressngStressors defines plenty of stressors just like 'Stressors' except that it's an experimental feature and more powerful. You can define stressors in 'stress-ng' (see also 'man stress-ng') dialect, however not all of the supported stressors are well tested. It maybe retired in later releases. You should always use 'Stressors' to define the stressors and use this only when you want more stressors unsupported by 'Stressors'. When both 'StressngStressors' and 'Stressors' are defined, 'StressngStressors' wins.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#stressng_stressors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#stressng_stressors}
  */
  readonly stressngStressors?: string;
  /**
  * Stressors defines plenty of stressors supported to stress system components out. You can use one or more of them to make up various kinds of stresses. At least one of the stressors should be specified.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#stressors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#stressors}
  */
  readonly stressors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressors;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    duration: cdktf.stringToTerraform(struct!.duration),
    mode: cdktf.stringToTerraform(struct!.mode),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorToTerraform(struct!.selector),
    stressng_stressors: cdktf.stringToTerraform(struct!.stressngStressors),
    stressors: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsToTerraform(struct!.stressors),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelector",
    },
    stressng_stressors: {
      value: cdktf.stringToHclTerraform(struct!.stressngStressors),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    stressors: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsToHclTerraform(struct!.stressors),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressors",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._stressngStressors !== undefined) {
      hasAnyValues = true;
      internalValueResult.stressngStressors = this._stressngStressors;
    }
    if (this._stressors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.stressors = this._stressors?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerNames = undefined;
      this._duration = undefined;
      this._mode = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._stressngStressors = undefined;
      this._stressors.internalValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerNames = value.containerNames;
      this._duration = value.duration;
      this._mode = value.mode;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._stressngStressors = value.stressngStressors;
      this._stressors.internalValue = value.stressors;
      this._value = value.value;
    }
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // stressng_stressors - computed: false, optional: true, required: false
  private _stressngStressors?: string; 
  public get stressngStressors() {
    return this.getStringAttribute('stressng_stressors');
  }
  public set stressngStressors(value: string) {
    this._stressngStressors = value;
  }
  public resetStressngStressors() {
    this._stressngStressors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stressngStressorsInput() {
    return this._stressngStressors;
  }

  // stressors - computed: false, optional: true, required: false
  private _stressors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressorsOutputReference(this, "stressors");
  public get stressors() {
    return this._stressors;
  }
  public putStressors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecStressChaosStressors) {
    this._stressors.internalValue = value;
  }
  public resetStressors() {
    this._stressors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get stressorsInput() {
    return this._stressors.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaos {
  /**
  * ClockIds defines all affected clock id All available options are ['CLOCK_REALTIME','CLOCK_MONOTONIC','CLOCK_PROCESS_CPUTIME_ID','CLOCK_THREAD_CPUTIME_ID', 'CLOCK_MONOTONIC_RAW','CLOCK_REALTIME_COARSE','CLOCK_MONOTONIC_COARSE','CLOCK_BOOTTIME','CLOCK_REALTIME_ALARM', 'CLOCK_BOOTTIME_ALARM'] Default value is ['CLOCK_REALTIME']
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#clock_ids DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#clock_ids}
  */
  readonly clockIds?: string[];
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * Duration represents the duration of the chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelector;
  /**
  * TimeOffset defines the delta time of injected program. It's a possibly signed sequence of decimal numbers, such as '300ms', '-1.5h' or '2h45m'. Valid time units are 'ns', 'us' (or 'µs'), 'ms', 's', 'm', 'h'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#time_offset DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#time_offset}
  */
  readonly timeOffset: string;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    clock_ids: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.clockIds),
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    duration: cdktf.stringToTerraform(struct!.duration),
    mode: cdktf.stringToTerraform(struct!.mode),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorToTerraform(struct!.selector),
    time_offset: cdktf.stringToTerraform(struct!.timeOffset),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    clock_ids: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.clockIds),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelector",
    },
    time_offset: {
      value: cdktf.stringToHclTerraform(struct!.timeOffset),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clockIds !== undefined) {
      hasAnyValues = true;
      internalValueResult.clockIds = this._clockIds;
    }
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._timeOffset !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeOffset = this._timeOffset;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clockIds = undefined;
      this._containerNames = undefined;
      this._duration = undefined;
      this._mode = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._timeOffset = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clockIds = value.clockIds;
      this._containerNames = value.containerNames;
      this._duration = value.duration;
      this._mode = value.mode;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._timeOffset = value.timeOffset;
      this._value = value.value;
    }
  }

  // clock_ids - computed: false, optional: true, required: false
  private _clockIds?: string[]; 
  public get clockIds() {
    return this.getListAttribute('clock_ids');
  }
  public set clockIds(value: string[]) {
    this._clockIds = value;
  }
  public resetClockIds() {
    this._clockIds = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clockIdsInput() {
    return this._clockIds;
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecTimeChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // time_offset - computed: false, optional: false, required: true
  private _timeOffset?: string; 
  public get timeOffset() {
    return this.getStringAttribute('time_offset');
  }
  public set timeOffset(value: string) {
    this._timeOffset = value;
  }
  // Temporarily expose input value. Use with caution.
  public get timeOffsetInput() {
    return this._timeOffset;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAwsChaos {
  /**
  * Action defines the specific aws chaos action. Supported action: ec2-stop / ec2-restart / detach-volume Default action: ec2-stop
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * AWSRegion defines the region of aws.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#aws_region DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#aws_region}
  */
  readonly awsRegion: string;
  /**
  * DeviceName indicates the name of the device. Needed in detach-volume.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device_name}
  */
  readonly deviceName?: string;
  /**
  * Duration represents the duration of the chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Ec2Instance indicates the ID of the ec2 instance.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ec2_instance DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ec2_instance}
  */
  readonly ec2Instance: string;
  /**
  * Endpoint indicates the endpoint of the aws server. Just used it in test now.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#endpoint DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#endpoint}
  */
  readonly endpoint?: string;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * SecretName defines the name of kubernetes secret.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#secret_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
  /**
  * EbsVolume indicates the ID of the EBS volume. Needed in detach-volume.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#volume_id DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#volume_id}
  */
  readonly volumeId?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAwsChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAwsChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    aws_region: cdktf.stringToTerraform(struct!.awsRegion),
    device_name: cdktf.stringToTerraform(struct!.deviceName),
    duration: cdktf.stringToTerraform(struct!.duration),
    ec2_instance: cdktf.stringToTerraform(struct!.ec2Instance),
    endpoint: cdktf.stringToTerraform(struct!.endpoint),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
    volume_id: cdktf.stringToTerraform(struct!.volumeId),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAwsChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAwsChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    aws_region: {
      value: cdktf.stringToHclTerraform(struct!.awsRegion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_name: {
      value: cdktf.stringToHclTerraform(struct!.deviceName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ec2_instance: {
      value: cdktf.stringToHclTerraform(struct!.ec2Instance),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    endpoint: {
      value: cdktf.stringToHclTerraform(struct!.endpoint),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_id: {
      value: cdktf.stringToHclTerraform(struct!.volumeId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAwsChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAwsChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._awsRegion !== undefined) {
      hasAnyValues = true;
      internalValueResult.awsRegion = this._awsRegion;
    }
    if (this._deviceName !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceName = this._deviceName;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._ec2Instance !== undefined) {
      hasAnyValues = true;
      internalValueResult.ec2Instance = this._ec2Instance;
    }
    if (this._endpoint !== undefined) {
      hasAnyValues = true;
      internalValueResult.endpoint = this._endpoint;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    if (this._volumeId !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeId = this._volumeId;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAwsChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._awsRegion = undefined;
      this._deviceName = undefined;
      this._duration = undefined;
      this._ec2Instance = undefined;
      this._endpoint = undefined;
      this._remoteCluster = undefined;
      this._secretName = undefined;
      this._volumeId = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._awsRegion = value.awsRegion;
      this._deviceName = value.deviceName;
      this._duration = value.duration;
      this._ec2Instance = value.ec2Instance;
      this._endpoint = value.endpoint;
      this._remoteCluster = value.remoteCluster;
      this._secretName = value.secretName;
      this._volumeId = value.volumeId;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // aws_region - computed: false, optional: false, required: true
  private _awsRegion?: string; 
  public get awsRegion() {
    return this.getStringAttribute('aws_region');
  }
  public set awsRegion(value: string) {
    this._awsRegion = value;
  }
  // Temporarily expose input value. Use with caution.
  public get awsRegionInput() {
    return this._awsRegion;
  }

  // device_name - computed: false, optional: true, required: false
  private _deviceName?: string; 
  public get deviceName() {
    return this.getStringAttribute('device_name');
  }
  public set deviceName(value: string) {
    this._deviceName = value;
  }
  public resetDeviceName() {
    this._deviceName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceNameInput() {
    return this._deviceName;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // ec2_instance - computed: false, optional: false, required: true
  private _ec2Instance?: string; 
  public get ec2Instance() {
    return this.getStringAttribute('ec2_instance');
  }
  public set ec2Instance(value: string) {
    this._ec2Instance = value;
  }
  // Temporarily expose input value. Use with caution.
  public get ec2InstanceInput() {
    return this._ec2Instance;
  }

  // endpoint - computed: false, optional: true, required: false
  private _endpoint?: string; 
  public get endpoint() {
    return this.getStringAttribute('endpoint');
  }
  public set endpoint(value: string) {
    this._endpoint = value;
  }
  public resetEndpoint() {
    this._endpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get endpointInput() {
    return this._endpoint;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }

  // volume_id - computed: false, optional: true, required: false
  private _volumeId?: string; 
  public get volumeId() {
    return this.getStringAttribute('volume_id');
  }
  public set volumeId(value: string) {
    this._volumeId = value;
  }
  public resetVolumeId() {
    this._volumeId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeIdInput() {
    return this._volumeId;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAzureChaos {
  /**
  * Action defines the specific azure chaos action. Supported action: vm-stop / vm-restart / disk-detach Default action: vm-stop
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * DiskName indicates the name of the disk. Needed in disk-detach.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#disk_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#disk_name}
  */
  readonly diskName?: string;
  /**
  * Duration represents the duration of the chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * LUN indicates the Logical Unit Number of the data disk. Needed in disk-detach.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#lun DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#lun}
  */
  readonly lun?: number;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * ResourceGroupName defines the name of ResourceGroup
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#resource_group_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#resource_group_name}
  */
  readonly resourceGroupName: string;
  /**
  * SecretName defines the name of kubernetes secret. It is used for Azure credentials.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#secret_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
  /**
  * SubscriptionID defines the id of Azure subscription.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#subscription_id DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#subscription_id}
  */
  readonly subscriptionId: string;
  /**
  * VMName defines the name of Virtual Machine
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#vm_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#vm_name}
  */
  readonly vmName: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAzureChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAzureChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    disk_name: cdktf.stringToTerraform(struct!.diskName),
    duration: cdktf.stringToTerraform(struct!.duration),
    lun: cdktf.numberToTerraform(struct!.lun),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    resource_group_name: cdktf.stringToTerraform(struct!.resourceGroupName),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
    subscription_id: cdktf.stringToTerraform(struct!.subscriptionId),
    vm_name: cdktf.stringToTerraform(struct!.vmName),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAzureChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAzureChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    disk_name: {
      value: cdktf.stringToHclTerraform(struct!.diskName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    lun: {
      value: cdktf.numberToHclTerraform(struct!.lun),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    resource_group_name: {
      value: cdktf.stringToHclTerraform(struct!.resourceGroupName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    subscription_id: {
      value: cdktf.stringToHclTerraform(struct!.subscriptionId),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vm_name: {
      value: cdktf.stringToHclTerraform(struct!.vmName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAzureChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAzureChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._diskName !== undefined) {
      hasAnyValues = true;
      internalValueResult.diskName = this._diskName;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._lun !== undefined) {
      hasAnyValues = true;
      internalValueResult.lun = this._lun;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._resourceGroupName !== undefined) {
      hasAnyValues = true;
      internalValueResult.resourceGroupName = this._resourceGroupName;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    if (this._subscriptionId !== undefined) {
      hasAnyValues = true;
      internalValueResult.subscriptionId = this._subscriptionId;
    }
    if (this._vmName !== undefined) {
      hasAnyValues = true;
      internalValueResult.vmName = this._vmName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesAzureChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._diskName = undefined;
      this._duration = undefined;
      this._lun = undefined;
      this._remoteCluster = undefined;
      this._resourceGroupName = undefined;
      this._secretName = undefined;
      this._subscriptionId = undefined;
      this._vmName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._diskName = value.diskName;
      this._duration = value.duration;
      this._lun = value.lun;
      this._remoteCluster = value.remoteCluster;
      this._resourceGroupName = value.resourceGroupName;
      this._secretName = value.secretName;
      this._subscriptionId = value.subscriptionId;
      this._vmName = value.vmName;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // disk_name - computed: false, optional: true, required: false
  private _diskName?: string; 
  public get diskName() {
    return this.getStringAttribute('disk_name');
  }
  public set diskName(value: string) {
    this._diskName = value;
  }
  public resetDiskName() {
    this._diskName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get diskNameInput() {
    return this._diskName;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // lun - computed: false, optional: true, required: false
  private _lun?: number; 
  public get lun() {
    return this.getNumberAttribute('lun');
  }
  public set lun(value: number) {
    this._lun = value;
  }
  public resetLun() {
    this._lun = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lunInput() {
    return this._lun;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // resource_group_name - computed: false, optional: false, required: true
  private _resourceGroupName?: string; 
  public get resourceGroupName() {
    return this.getStringAttribute('resource_group_name');
  }
  public set resourceGroupName(value: string) {
    this._resourceGroupName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get resourceGroupNameInput() {
    return this._resourceGroupName;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }

  // subscription_id - computed: false, optional: false, required: true
  private _subscriptionId?: string; 
  public get subscriptionId() {
    return this.getStringAttribute('subscription_id');
  }
  public set subscriptionId(value: string) {
    this._subscriptionId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get subscriptionIdInput() {
    return this._subscriptionId;
  }

  // vm_name - computed: false, optional: false, required: true
  private _vmName?: string; 
  public get vmName() {
    return this.getStringAttribute('vm_name');
  }
  public set vmName(value: string) {
    this._vmName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get vmNameInput() {
    return this._vmName;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelay {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jitter DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jitter}
  */
  readonly jitter?: string;
  /**
  * Latency defines the latency of every io request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#latency}
  */
  readonly latency?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelayToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    jitter: cdktf.stringToTerraform(struct!.jitter),
    latency: cdktf.stringToTerraform(struct!.latency),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelayToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    jitter: {
      value: cdktf.stringToHclTerraform(struct!.jitter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    latency: {
      value: cdktf.stringToHclTerraform(struct!.latency),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelayOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelay | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._jitter !== undefined) {
      hasAnyValues = true;
      internalValueResult.jitter = this._jitter;
    }
    if (this._latency !== undefined) {
      hasAnyValues = true;
      internalValueResult.latency = this._latency;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelay | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._jitter = undefined;
      this._latency = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._jitter = value.jitter;
      this._latency = value.latency;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // jitter - computed: false, optional: true, required: false
  private _jitter?: string; 
  public get jitter() {
    return this.getStringAttribute('jitter');
  }
  public set jitter(value: string) {
    this._jitter = value;
  }
  public resetJitter() {
    this._jitter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jitterInput() {
    return this._jitter;
  }

  // latency - computed: false, optional: true, required: false
  private _latency?: string; 
  public get latency() {
    return this.getStringAttribute('latency');
  }
  public set latency(value: string) {
    this._latency = value;
  }
  public resetLatency() {
    this._latency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get latencyInput() {
    return this._latency;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaos {
  /**
  * Action defines the specific block chaos action. Supported action: delay
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * Delay defines the delay distribution.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#delay}
  */
  readonly delay?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelay;
  /**
  * Duration represents the duration of the chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelector;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#volume_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#volume_name}
  */
  readonly volumeName: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    delay: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelayToTerraform(struct!.delay),
    duration: cdktf.stringToTerraform(struct!.duration),
    mode: cdktf.stringToTerraform(struct!.mode),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
    volume_name: cdktf.stringToTerraform(struct!.volumeName),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    delay: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelayToHclTerraform(struct!.delay),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelay",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelector",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_name: {
      value: cdktf.stringToHclTerraform(struct!.volumeName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._delay?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.delay = this._delay?.internalValue;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._volumeName !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumeName = this._volumeName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._containerNames = undefined;
      this._delay.internalValue = undefined;
      this._duration = undefined;
      this._mode = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._value = undefined;
      this._volumeName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._containerNames = value.containerNames;
      this._delay.internalValue = value.delay;
      this._duration = value.duration;
      this._mode = value.mode;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._value = value.value;
      this._volumeName = value.volumeName;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // delay - computed: false, optional: true, required: false
  private _delay = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelayOutputReference(this, "delay");
  public get delay() {
    return this._delay;
  }
  public putDelay(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosDelay) {
    this._delay.internalValue = value;
  }
  public resetDelay() {
    this._delay.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get delayInput() {
    return this._delay.internalValue;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesBlockChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // volume_name - computed: false, optional: false, required: true
  private _volumeName?: string; 
  public get volumeName() {
    return this.getStringAttribute('volume_name');
  }
  public set volumeName(value: string) {
    this._volumeName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get volumeNameInput() {
    return this._volumeName;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranches {
  /**
  * Expression is the expression for this conditional branch, expected type of result is boolean. If expression is empty, this branch will always be selected/the template will be spawned.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression}
  */
  readonly expression?: string;
  /**
  * Target is the name of other template, if expression is evaluated as true, this template will be spawned.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#target DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#target}
  */
  readonly target: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranchesToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    expression: cdktf.stringToTerraform(struct!.expression),
    target: cdktf.stringToTerraform(struct!.target),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranchesToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranches | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    expression: {
      value: cdktf.stringToHclTerraform(struct!.expression),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    target: {
      value: cdktf.stringToHclTerraform(struct!.target),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranchesOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranches | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._expression !== undefined) {
      hasAnyValues = true;
      internalValueResult.expression = this._expression;
    }
    if (this._target !== undefined) {
      hasAnyValues = true;
      internalValueResult.target = this._target;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranches | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._expression = undefined;
      this._target = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._expression = value.expression;
      this._target = value.target;
    }
  }

  // expression - computed: false, optional: true, required: false
  private _expression?: string; 
  public get expression() {
    return this.getStringAttribute('expression');
  }
  public set expression(value: string) {
    this._expression = value;
  }
  public resetExpression() {
    this._expression = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionInput() {
    return this._expression;
  }

  // target - computed: false, optional: false, required: true
  private _target?: string; 
  public get target() {
    return this.getStringAttribute('target');
  }
  public set target(value: string) {
    this._target = value;
  }
  // Temporarily expose input value. Use with caution.
  public get targetInput() {
    return this._target;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranchesList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranches[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranchesOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesConditionalBranchesOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaos {
  /**
  * Action defines the specific DNS chaos action. Supported action: error, random Default action: error
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * Duration represents the duration of the chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Choose which domain names to take effect, support the placeholder ? and wildcard *, or the Specified domain name. Note: 1. The wildcard * must be at the end of the string. For example, chaos-*.org is invalid. 2. if the patterns is empty, will take effect on all the domain names. For example: The value is ['google.com', 'github.*', 'chaos-mes?.org'], will take effect on 'google.com', 'github.com' and 'chaos-mesh.org'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#patterns DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#patterns}
  */
  readonly patterns?: string[];
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelector;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    duration: cdktf.stringToTerraform(struct!.duration),
    mode: cdktf.stringToTerraform(struct!.mode),
    patterns: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.patterns),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    patterns: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.patterns),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelector",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._patterns !== undefined) {
      hasAnyValues = true;
      internalValueResult.patterns = this._patterns;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._containerNames = undefined;
      this._duration = undefined;
      this._mode = undefined;
      this._patterns = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._containerNames = value.containerNames;
      this._duration = value.duration;
      this._mode = value.mode;
      this._patterns = value.patterns;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._value = value.value;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // patterns - computed: false, optional: true, required: false
  private _patterns?: string[]; 
  public get patterns() {
    return this.getListAttribute('patterns');
  }
  public set patterns(value: string[]) {
    this._patterns = value;
  }
  public resetPatterns() {
    this._patterns = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patternsInput() {
    return this._patterns;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesDnsChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesGcpChaos {
  /**
  * Action defines the specific gcp chaos action. Supported action: node-stop / node-reset / disk-loss Default action: node-stop
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * The device name of disks to detach. Needed in disk-loss.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device_names}
  */
  readonly deviceNames?: string[];
  /**
  * Duration represents the duration of the chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Instance defines the name of the instance
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#instance DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#instance}
  */
  readonly instance: string;
  /**
  * Project defines the ID of gcp project.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#project DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#project}
  */
  readonly project: string;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * SecretName defines the name of kubernetes secret. It is used for GCP credentials.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#secret_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#secret_name}
  */
  readonly secretName?: string;
  /**
  * Zone defines the zone of gcp project.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#zone DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#zone}
  */
  readonly zone: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesGcpChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesGcpChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    device_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.deviceNames),
    duration: cdktf.stringToTerraform(struct!.duration),
    instance: cdktf.stringToTerraform(struct!.instance),
    project: cdktf.stringToTerraform(struct!.project),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
    zone: cdktf.stringToTerraform(struct!.zone),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesGcpChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesGcpChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    device_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.deviceNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    instance: {
      value: cdktf.stringToHclTerraform(struct!.instance),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    project: {
      value: cdktf.stringToHclTerraform(struct!.project),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    zone: {
      value: cdktf.stringToHclTerraform(struct!.zone),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesGcpChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesGcpChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._deviceNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.deviceNames = this._deviceNames;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._instance !== undefined) {
      hasAnyValues = true;
      internalValueResult.instance = this._instance;
    }
    if (this._project !== undefined) {
      hasAnyValues = true;
      internalValueResult.project = this._project;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    if (this._zone !== undefined) {
      hasAnyValues = true;
      internalValueResult.zone = this._zone;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesGcpChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._deviceNames = undefined;
      this._duration = undefined;
      this._instance = undefined;
      this._project = undefined;
      this._remoteCluster = undefined;
      this._secretName = undefined;
      this._zone = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._deviceNames = value.deviceNames;
      this._duration = value.duration;
      this._instance = value.instance;
      this._project = value.project;
      this._remoteCluster = value.remoteCluster;
      this._secretName = value.secretName;
      this._zone = value.zone;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // device_names - computed: false, optional: true, required: false
  private _deviceNames?: string[]; 
  public get deviceNames() {
    return this.getListAttribute('device_names');
  }
  public set deviceNames(value: string[]) {
    this._deviceNames = value;
  }
  public resetDeviceNames() {
    this._deviceNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceNamesInput() {
    return this._deviceNames;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // instance - computed: false, optional: false, required: true
  private _instance?: string; 
  public get instance() {
    return this.getStringAttribute('instance');
  }
  public set instance(value: string) {
    this._instance = value;
  }
  // Temporarily expose input value. Use with caution.
  public get instanceInput() {
    return this._instance;
  }

  // project - computed: false, optional: false, required: true
  private _project?: string; 
  public get project() {
    return this.getStringAttribute('project');
  }
  public set project(value: string) {
    this._project = value;
  }
  // Temporarily expose input value. Use with caution.
  public get projectInput() {
    return this._project;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // secret_name - computed: false, optional: true, required: false
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  public resetSecretName() {
    this._secretName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }

  // zone - computed: false, optional: false, required: true
  private _zone?: string; 
  public get zone() {
    return this.getStringAttribute('zone');
  }
  public set zone(value: string) {
    this._zone = value;
  }
  // Temporarily expose input value. Use with caution.
  public get zoneInput() {
    return this._zone;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBody {
  /**
  * Type represents the patch type, only support 'JSON' as [merge patch json](https://tools.ietf.org/html/rfc7396) currently.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#type DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#type}
  */
  readonly type: string;
  /**
  * Value is the patch contents.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBodyToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    type: cdktf.stringToTerraform(struct!.type),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBodyToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBody | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    type: {
      value: cdktf.stringToHclTerraform(struct!.type),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBodyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBody | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._type !== undefined) {
      hasAnyValues = true;
      internalValueResult.type = this._type;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBody | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._type = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._type = value.type;
      this._value = value.value;
    }
  }

  // type - computed: false, optional: false, required: true
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // value - computed: false, optional: false, required: true
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatch {
  /**
  * Body is a rule to patch message body of target.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#body DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#body}
  */
  readonly body?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBody;
  /**
  * Headers is a rule to append http headers of target. For example: '[['Set-Cookie', '<one cookie>'], ['Set-Cookie', '<another cookie>']]'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#headers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#headers}
  */
  readonly headers?: string[];
  /**
  * Queries is a rule to append uri queries of target(Request only). For example: '[['foo', 'bar'], ['foo', 'unknown']]'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#queries DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#queries}
  */
  readonly queries?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    body: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBodyToTerraform(struct!.body),
    headers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.headers),
    queries: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.queries),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatch | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    body: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBodyToHclTerraform(struct!.body),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBody",
    },
    headers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.headers),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    queries: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.queries),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatch | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._body?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.body = this._body?.internalValue;
    }
    if (this._headers !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers;
    }
    if (this._queries !== undefined) {
      hasAnyValues = true;
      internalValueResult.queries = this._queries;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatch | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._body.internalValue = undefined;
      this._headers = undefined;
      this._queries = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._body.internalValue = value.body;
      this._headers = value.headers;
      this._queries = value.queries;
    }
  }

  // body - computed: false, optional: true, required: false
  private _body = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBodyOutputReference(this, "body");
  public get body() {
    return this._body;
  }
  public putBody(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchBody) {
    this._body.internalValue = value;
  }
  public resetBody() {
    this._body.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bodyInput() {
    return this._body.internalValue;
  }

  // headers - computed: false, optional: true, required: false
  private _headers?: string[]; 
  public get headers() {
    return this.getListAttribute('headers');
  }
  public set headers(value: string[]) {
    this._headers = value;
  }
  public resetHeaders() {
    this._headers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers;
  }

  // queries - computed: false, optional: true, required: false
  private _queries?: string[]; 
  public get queries() {
    return this.getListAttribute('queries');
  }
  public set queries(value: string[]) {
    this._queries = value;
  }
  public resetQueries() {
    this._queries = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queriesInput() {
    return this._queries;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplace {
  /**
  * Body is a rule to replace http message body in target.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#body DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#body}
  */
  readonly body?: string;
  /**
  * Code is a rule to replace http status code in response.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#code DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#code}
  */
  readonly code?: number;
  /**
  * Headers is a rule to replace http headers of target. The key-value pairs represent header name and header value pairs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#headers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#headers}
  */
  readonly headers?: { [key: string]: string };
  /**
  * Method is a rule to replace http method in request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * Path is rule to to replace uri path in http request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Queries is a rule to replace uri queries in http request. For example, with value '{ 'foo': 'unknown' }', the '/?foo=bar' will be altered to '/?foo=unknown',
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#queries DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#queries}
  */
  readonly queries?: { [key: string]: string };
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplaceToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    body: cdktf.stringToTerraform(struct!.body),
    code: cdktf.numberToTerraform(struct!.code),
    headers: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.headers),
    method: cdktf.stringToTerraform(struct!.method),
    path: cdktf.stringToTerraform(struct!.path),
    queries: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.queries),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplaceToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    body: {
      value: cdktf.stringToHclTerraform(struct!.body),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    code: {
      value: cdktf.numberToHclTerraform(struct!.code),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    headers: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.headers),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    queries: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.queries),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplace | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._body !== undefined) {
      hasAnyValues = true;
      internalValueResult.body = this._body;
    }
    if (this._code !== undefined) {
      hasAnyValues = true;
      internalValueResult.code = this._code;
    }
    if (this._headers !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._queries !== undefined) {
      hasAnyValues = true;
      internalValueResult.queries = this._queries;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplace | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._body = undefined;
      this._code = undefined;
      this._headers = undefined;
      this._method = undefined;
      this._path = undefined;
      this._queries = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._body = value.body;
      this._code = value.code;
      this._headers = value.headers;
      this._method = value.method;
      this._path = value.path;
      this._queries = value.queries;
    }
  }

  // body - computed: false, optional: true, required: false
  private _body?: string; 
  public get body() {
    return this.getStringAttribute('body');
  }
  public set body(value: string) {
    this._body = value;
  }
  public resetBody() {
    this._body = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bodyInput() {
    return this._body;
  }

  // code - computed: false, optional: true, required: false
  private _code?: number; 
  public get code() {
    return this.getNumberAttribute('code');
  }
  public set code(value: number) {
    this._code = value;
  }
  public resetCode() {
    this._code = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get codeInput() {
    return this._code;
  }

  // headers - computed: false, optional: true, required: false
  private _headers?: { [key: string]: string }; 
  public get headers() {
    return this.getStringMapAttribute('headers');
  }
  public set headers(value: { [key: string]: string }) {
    this._headers = value;
  }
  public resetHeaders() {
    this._headers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // queries - computed: false, optional: true, required: false
  private _queries?: { [key: string]: string }; 
  public get queries() {
    return this.getStringMapAttribute('queries');
  }
  public set queries(value: { [key: string]: string }) {
    this._queries = value;
  }
  public resetQueries() {
    this._queries = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queriesInput() {
    return this._queries;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTls {
  /**
  * CAName represents the data name of ca file in secret, 'ca.crt' for example
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ca_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ca_name}
  */
  readonly caName?: string;
  /**
  * CertName represents the data name of cert file in secret, 'tls.crt' for example
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#cert_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#cert_name}
  */
  readonly certName: string;
  /**
  * KeyName represents the data name of key file in secret, 'tls.key' for example
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key_name}
  */
  readonly keyName: string;
  /**
  * SecretName represents the name of required secret resource
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#secret_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#secret_name}
  */
  readonly secretName: string;
  /**
  * SecretNamespace represents the namespace of required secret resource
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#secret_namespace DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#secret_namespace}
  */
  readonly secretNamespace: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTlsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTls | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    ca_name: cdktf.stringToTerraform(struct!.caName),
    cert_name: cdktf.stringToTerraform(struct!.certName),
    key_name: cdktf.stringToTerraform(struct!.keyName),
    secret_name: cdktf.stringToTerraform(struct!.secretName),
    secret_namespace: cdktf.stringToTerraform(struct!.secretNamespace),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTlsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTls | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    ca_name: {
      value: cdktf.stringToHclTerraform(struct!.caName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    cert_name: {
      value: cdktf.stringToHclTerraform(struct!.certName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    key_name: {
      value: cdktf.stringToHclTerraform(struct!.keyName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_name: {
      value: cdktf.stringToHclTerraform(struct!.secretName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    secret_namespace: {
      value: cdktf.stringToHclTerraform(struct!.secretNamespace),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTlsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTls | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._caName !== undefined) {
      hasAnyValues = true;
      internalValueResult.caName = this._caName;
    }
    if (this._certName !== undefined) {
      hasAnyValues = true;
      internalValueResult.certName = this._certName;
    }
    if (this._keyName !== undefined) {
      hasAnyValues = true;
      internalValueResult.keyName = this._keyName;
    }
    if (this._secretName !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretName = this._secretName;
    }
    if (this._secretNamespace !== undefined) {
      hasAnyValues = true;
      internalValueResult.secretNamespace = this._secretNamespace;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTls | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._caName = undefined;
      this._certName = undefined;
      this._keyName = undefined;
      this._secretName = undefined;
      this._secretNamespace = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._caName = value.caName;
      this._certName = value.certName;
      this._keyName = value.keyName;
      this._secretName = value.secretName;
      this._secretNamespace = value.secretNamespace;
    }
  }

  // ca_name - computed: false, optional: true, required: false
  private _caName?: string; 
  public get caName() {
    return this.getStringAttribute('ca_name');
  }
  public set caName(value: string) {
    this._caName = value;
  }
  public resetCaName() {
    this._caName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get caNameInput() {
    return this._caName;
  }

  // cert_name - computed: false, optional: false, required: true
  private _certName?: string; 
  public get certName() {
    return this.getStringAttribute('cert_name');
  }
  public set certName(value: string) {
    this._certName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get certNameInput() {
    return this._certName;
  }

  // key_name - computed: false, optional: false, required: true
  private _keyName?: string; 
  public get keyName() {
    return this.getStringAttribute('key_name');
  }
  public set keyName(value: string) {
    this._keyName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyNameInput() {
    return this._keyName;
  }

  // secret_name - computed: false, optional: false, required: true
  private _secretName?: string; 
  public get secretName() {
    return this.getStringAttribute('secret_name');
  }
  public set secretName(value: string) {
    this._secretName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNameInput() {
    return this._secretName;
  }

  // secret_namespace - computed: false, optional: false, required: true
  private _secretNamespace?: string; 
  public get secretNamespace() {
    return this.getStringAttribute('secret_namespace');
  }
  public set secretNamespace(value: string) {
    this._secretNamespace = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secretNamespaceInput() {
    return this._secretNamespace;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaos {
  /**
  * Abort is a rule to abort a http session.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#abort DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#abort}
  */
  readonly abort?: boolean | cdktf.IResolvable;
  /**
  * Code is a rule to select target by http status code in response.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#code DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#code}
  */
  readonly code?: number;
  /**
  * Delay represents the delay of the target request/response. A duration string is a possibly unsigned sequence of decimal numbers, each with optional fraction and a unit suffix, such as '300ms', '2h45m'. Valid time units are 'ns', 'us' (or 'µs'), 'ms', 's', 'm', 'h'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#delay}
  */
  readonly delay?: string;
  /**
  * Duration represents the duration of the chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Method is a rule to select target by http method in request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Patch is a rule to patch some contents in target.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#patch DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#patch}
  */
  readonly patch?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatch;
  /**
  * Path is a rule to select target by uri path in http request.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Port represents the target port to be proxy of.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Replace is a rule to replace some contents in target.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#replace DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#replace}
  */
  readonly replace?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplace;
  /**
  * RequestHeaders is a rule to select target by http headers in request. The key-value pairs represent header name and header value pairs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#request_headers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#request_headers}
  */
  readonly requestHeaders?: { [key: string]: string };
  /**
  * ResponseHeaders is a rule to select target by http headers in response. The key-value pairs represent header name and header value pairs.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#response_headers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#response_headers}
  */
  readonly responseHeaders?: { [key: string]: string };
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelector;
  /**
  * Target is the object to be selected and injected.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#target DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#target}
  */
  readonly target: string;
  /**
  * TLS is the tls config, will override PodHttpChaos if there are multiple HTTPChaos experiments are applied
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#tls DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#tls}
  */
  readonly tls?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTls;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    abort: cdktf.booleanToTerraform(struct!.abort),
    code: cdktf.numberToTerraform(struct!.code),
    delay: cdktf.stringToTerraform(struct!.delay),
    duration: cdktf.stringToTerraform(struct!.duration),
    method: cdktf.stringToTerraform(struct!.method),
    mode: cdktf.stringToTerraform(struct!.mode),
    patch: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchToTerraform(struct!.patch),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.numberToTerraform(struct!.port),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    replace: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplaceToTerraform(struct!.replace),
    request_headers: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.requestHeaders),
    response_headers: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.responseHeaders),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorToTerraform(struct!.selector),
    target: cdktf.stringToTerraform(struct!.target),
    tls: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTlsToTerraform(struct!.tls),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    abort: {
      value: cdktf.booleanToHclTerraform(struct!.abort),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    code: {
      value: cdktf.numberToHclTerraform(struct!.code),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    delay: {
      value: cdktf.stringToHclTerraform(struct!.delay),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    patch: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchToHclTerraform(struct!.patch),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatch",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    replace: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplaceToHclTerraform(struct!.replace),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplace",
    },
    request_headers: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.requestHeaders),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    response_headers: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.responseHeaders),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelector",
    },
    target: {
      value: cdktf.stringToHclTerraform(struct!.target),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    tls: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTlsToHclTerraform(struct!.tls),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTls",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._abort !== undefined) {
      hasAnyValues = true;
      internalValueResult.abort = this._abort;
    }
    if (this._code !== undefined) {
      hasAnyValues = true;
      internalValueResult.code = this._code;
    }
    if (this._delay !== undefined) {
      hasAnyValues = true;
      internalValueResult.delay = this._delay;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._patch?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.patch = this._patch?.internalValue;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._replace?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.replace = this._replace?.internalValue;
    }
    if (this._requestHeaders !== undefined) {
      hasAnyValues = true;
      internalValueResult.requestHeaders = this._requestHeaders;
    }
    if (this._responseHeaders !== undefined) {
      hasAnyValues = true;
      internalValueResult.responseHeaders = this._responseHeaders;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._target !== undefined) {
      hasAnyValues = true;
      internalValueResult.target = this._target;
    }
    if (this._tls?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.tls = this._tls?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._abort = undefined;
      this._code = undefined;
      this._delay = undefined;
      this._duration = undefined;
      this._method = undefined;
      this._mode = undefined;
      this._patch.internalValue = undefined;
      this._path = undefined;
      this._port = undefined;
      this._remoteCluster = undefined;
      this._replace.internalValue = undefined;
      this._requestHeaders = undefined;
      this._responseHeaders = undefined;
      this._selector.internalValue = undefined;
      this._target = undefined;
      this._tls.internalValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._abort = value.abort;
      this._code = value.code;
      this._delay = value.delay;
      this._duration = value.duration;
      this._method = value.method;
      this._mode = value.mode;
      this._patch.internalValue = value.patch;
      this._path = value.path;
      this._port = value.port;
      this._remoteCluster = value.remoteCluster;
      this._replace.internalValue = value.replace;
      this._requestHeaders = value.requestHeaders;
      this._responseHeaders = value.responseHeaders;
      this._selector.internalValue = value.selector;
      this._target = value.target;
      this._tls.internalValue = value.tls;
      this._value = value.value;
    }
  }

  // abort - computed: false, optional: true, required: false
  private _abort?: boolean | cdktf.IResolvable; 
  public get abort() {
    return this.getBooleanAttribute('abort');
  }
  public set abort(value: boolean | cdktf.IResolvable) {
    this._abort = value;
  }
  public resetAbort() {
    this._abort = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get abortInput() {
    return this._abort;
  }

  // code - computed: false, optional: true, required: false
  private _code?: number; 
  public get code() {
    return this.getNumberAttribute('code');
  }
  public set code(value: number) {
    this._code = value;
  }
  public resetCode() {
    this._code = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get codeInput() {
    return this._code;
  }

  // delay - computed: false, optional: true, required: false
  private _delay?: string; 
  public get delay() {
    return this.getStringAttribute('delay');
  }
  public set delay(value: string) {
    this._delay = value;
  }
  public resetDelay() {
    this._delay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get delayInput() {
    return this._delay;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // patch - computed: false, optional: true, required: false
  private _patch = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatchOutputReference(this, "patch");
  public get patch() {
    return this._patch;
  }
  public putPatch(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosPatch) {
    this._patch.internalValue = value;
  }
  public resetPatch() {
    this._patch.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get patchInput() {
    return this._patch.internalValue;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // replace - computed: false, optional: true, required: false
  private _replace = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplaceOutputReference(this, "replace");
  public get replace() {
    return this._replace;
  }
  public putReplace(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosReplace) {
    this._replace.internalValue = value;
  }
  public resetReplace() {
    this._replace.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get replaceInput() {
    return this._replace.internalValue;
  }

  // request_headers - computed: false, optional: true, required: false
  private _requestHeaders?: { [key: string]: string }; 
  public get requestHeaders() {
    return this.getStringMapAttribute('request_headers');
  }
  public set requestHeaders(value: { [key: string]: string }) {
    this._requestHeaders = value;
  }
  public resetRequestHeaders() {
    this._requestHeaders = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get requestHeadersInput() {
    return this._requestHeaders;
  }

  // response_headers - computed: false, optional: true, required: false
  private _responseHeaders?: { [key: string]: string }; 
  public get responseHeaders() {
    return this.getStringMapAttribute('response_headers');
  }
  public set responseHeaders(value: { [key: string]: string }) {
    this._responseHeaders = value;
  }
  public resetResponseHeaders() {
    this._responseHeaders = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get responseHeadersInput() {
    return this._responseHeaders;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // target - computed: false, optional: false, required: true
  private _target?: string; 
  public get target() {
    return this.getStringAttribute('target');
  }
  public set target(value: string) {
    this._target = value;
  }
  // Temporarily expose input value. Use with caution.
  public get targetInput() {
    return this._target;
  }

  // tls - computed: false, optional: true, required: false
  private _tls = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTlsOutputReference(this, "tls");
  public get tls() {
    return this._tls;
  }
  public putTls(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesHttpChaosTls) {
    this._tls.internalValue = value;
  }
  public resetTls() {
    this._tls.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tlsInput() {
    return this._tls.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtime {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nsec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nsec}
  */
  readonly nsec: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#sec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#sec}
  */
  readonly sec: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtimeToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nsec: cdktf.numberToTerraform(struct!.nsec),
    sec: cdktf.numberToTerraform(struct!.sec),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtimeToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nsec: {
      value: cdktf.numberToHclTerraform(struct!.nsec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sec: {
      value: cdktf.numberToHclTerraform(struct!.sec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtimeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtime | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nsec !== undefined) {
      hasAnyValues = true;
      internalValueResult.nsec = this._nsec;
    }
    if (this._sec !== undefined) {
      hasAnyValues = true;
      internalValueResult.sec = this._sec;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtime | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nsec = undefined;
      this._sec = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nsec = value.nsec;
      this._sec = value.sec;
    }
  }

  // nsec - computed: false, optional: false, required: true
  private _nsec?: number; 
  public get nsec() {
    return this.getNumberAttribute('nsec');
  }
  public set nsec(value: number) {
    this._nsec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nsecInput() {
    return this._nsec;
  }

  // sec - computed: false, optional: false, required: true
  private _sec?: number; 
  public get sec() {
    return this.getNumberAttribute('sec');
  }
  public set sec(value: number) {
    this._sec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secInput() {
    return this._sec;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtime {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nsec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nsec}
  */
  readonly nsec: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#sec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#sec}
  */
  readonly sec: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtimeToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nsec: cdktf.numberToTerraform(struct!.nsec),
    sec: cdktf.numberToTerraform(struct!.sec),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtimeToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nsec: {
      value: cdktf.numberToHclTerraform(struct!.nsec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sec: {
      value: cdktf.numberToHclTerraform(struct!.sec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtimeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtime | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nsec !== undefined) {
      hasAnyValues = true;
      internalValueResult.nsec = this._nsec;
    }
    if (this._sec !== undefined) {
      hasAnyValues = true;
      internalValueResult.sec = this._sec;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtime | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nsec = undefined;
      this._sec = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nsec = value.nsec;
      this._sec = value.sec;
    }
  }

  // nsec - computed: false, optional: false, required: true
  private _nsec?: number; 
  public get nsec() {
    return this.getNumberAttribute('nsec');
  }
  public set nsec(value: number) {
    this._nsec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nsecInput() {
    return this._nsec;
  }

  // sec - computed: false, optional: false, required: true
  private _sec?: number; 
  public get sec() {
    return this.getNumberAttribute('sec');
  }
  public set sec(value: number) {
    this._sec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secInput() {
    return this._sec;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtime {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nsec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nsec}
  */
  readonly nsec: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#sec DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#sec}
  */
  readonly sec: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtimeToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    nsec: cdktf.numberToTerraform(struct!.nsec),
    sec: cdktf.numberToTerraform(struct!.sec),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtimeToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtime | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    nsec: {
      value: cdktf.numberToHclTerraform(struct!.nsec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sec: {
      value: cdktf.numberToHclTerraform(struct!.sec),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtimeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtime | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._nsec !== undefined) {
      hasAnyValues = true;
      internalValueResult.nsec = this._nsec;
    }
    if (this._sec !== undefined) {
      hasAnyValues = true;
      internalValueResult.sec = this._sec;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtime | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._nsec = undefined;
      this._sec = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._nsec = value.nsec;
      this._sec = value.sec;
    }
  }

  // nsec - computed: false, optional: false, required: true
  private _nsec?: number; 
  public get nsec() {
    return this.getNumberAttribute('nsec');
  }
  public set nsec(value: number) {
    this._nsec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nsecInput() {
    return this._nsec;
  }

  // sec - computed: false, optional: false, required: true
  private _sec?: number; 
  public get sec() {
    return this.getNumberAttribute('sec');
  }
  public set sec(value: number) {
    this._sec = value;
  }
  // Temporarily expose input value. Use with caution.
  public get secInput() {
    return this._sec;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttr {
  /**
  * Timespec represents a time
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#atime DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#atime}
  */
  readonly atime?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtime;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#blocks DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#blocks}
  */
  readonly blocks?: number;
  /**
  * Timespec represents a time
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ctime DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ctime}
  */
  readonly ctime?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtime;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#gid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#gid}
  */
  readonly gid?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ino DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ino}
  */
  readonly ino?: number;
  /**
  * FileType represents type of file
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#kind DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#kind}
  */
  readonly kind?: string;
  /**
  * Timespec represents a time
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mtime DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mtime}
  */
  readonly mtime?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtime;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nlink DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nlink}
  */
  readonly nlink?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#perm DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#perm}
  */
  readonly perm?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rdev DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rdev}
  */
  readonly rdev?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#size}
  */
  readonly size?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#uid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#uid}
  */
  readonly uid?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttr | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    atime: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtimeToTerraform(struct!.atime),
    blocks: cdktf.numberToTerraform(struct!.blocks),
    ctime: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtimeToTerraform(struct!.ctime),
    gid: cdktf.numberToTerraform(struct!.gid),
    ino: cdktf.numberToTerraform(struct!.ino),
    kind: cdktf.stringToTerraform(struct!.kind),
    mtime: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtimeToTerraform(struct!.mtime),
    nlink: cdktf.numberToTerraform(struct!.nlink),
    perm: cdktf.numberToTerraform(struct!.perm),
    rdev: cdktf.numberToTerraform(struct!.rdev),
    size: cdktf.numberToTerraform(struct!.size),
    uid: cdktf.numberToTerraform(struct!.uid),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttr | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    atime: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtimeToHclTerraform(struct!.atime),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtime",
    },
    blocks: {
      value: cdktf.numberToHclTerraform(struct!.blocks),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ctime: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtimeToHclTerraform(struct!.ctime),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtime",
    },
    gid: {
      value: cdktf.numberToHclTerraform(struct!.gid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ino: {
      value: cdktf.numberToHclTerraform(struct!.ino),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    kind: {
      value: cdktf.stringToHclTerraform(struct!.kind),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mtime: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtimeToHclTerraform(struct!.mtime),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtime",
    },
    nlink: {
      value: cdktf.numberToHclTerraform(struct!.nlink),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    perm: {
      value: cdktf.numberToHclTerraform(struct!.perm),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rdev: {
      value: cdktf.numberToHclTerraform(struct!.rdev),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    size: {
      value: cdktf.numberToHclTerraform(struct!.size),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    uid: {
      value: cdktf.numberToHclTerraform(struct!.uid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttr | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._atime?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.atime = this._atime?.internalValue;
    }
    if (this._blocks !== undefined) {
      hasAnyValues = true;
      internalValueResult.blocks = this._blocks;
    }
    if (this._ctime?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ctime = this._ctime?.internalValue;
    }
    if (this._gid !== undefined) {
      hasAnyValues = true;
      internalValueResult.gid = this._gid;
    }
    if (this._ino !== undefined) {
      hasAnyValues = true;
      internalValueResult.ino = this._ino;
    }
    if (this._kind !== undefined) {
      hasAnyValues = true;
      internalValueResult.kind = this._kind;
    }
    if (this._mtime?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mtime = this._mtime?.internalValue;
    }
    if (this._nlink !== undefined) {
      hasAnyValues = true;
      internalValueResult.nlink = this._nlink;
    }
    if (this._perm !== undefined) {
      hasAnyValues = true;
      internalValueResult.perm = this._perm;
    }
    if (this._rdev !== undefined) {
      hasAnyValues = true;
      internalValueResult.rdev = this._rdev;
    }
    if (this._size !== undefined) {
      hasAnyValues = true;
      internalValueResult.size = this._size;
    }
    if (this._uid !== undefined) {
      hasAnyValues = true;
      internalValueResult.uid = this._uid;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttr | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._atime.internalValue = undefined;
      this._blocks = undefined;
      this._ctime.internalValue = undefined;
      this._gid = undefined;
      this._ino = undefined;
      this._kind = undefined;
      this._mtime.internalValue = undefined;
      this._nlink = undefined;
      this._perm = undefined;
      this._rdev = undefined;
      this._size = undefined;
      this._uid = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._atime.internalValue = value.atime;
      this._blocks = value.blocks;
      this._ctime.internalValue = value.ctime;
      this._gid = value.gid;
      this._ino = value.ino;
      this._kind = value.kind;
      this._mtime.internalValue = value.mtime;
      this._nlink = value.nlink;
      this._perm = value.perm;
      this._rdev = value.rdev;
      this._size = value.size;
      this._uid = value.uid;
    }
  }

  // atime - computed: false, optional: true, required: false
  private _atime = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtimeOutputReference(this, "atime");
  public get atime() {
    return this._atime;
  }
  public putAtime(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrAtime) {
    this._atime.internalValue = value;
  }
  public resetAtime() {
    this._atime.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get atimeInput() {
    return this._atime.internalValue;
  }

  // blocks - computed: false, optional: true, required: false
  private _blocks?: number; 
  public get blocks() {
    return this.getNumberAttribute('blocks');
  }
  public set blocks(value: number) {
    this._blocks = value;
  }
  public resetBlocks() {
    this._blocks = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get blocksInput() {
    return this._blocks;
  }

  // ctime - computed: false, optional: true, required: false
  private _ctime = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtimeOutputReference(this, "ctime");
  public get ctime() {
    return this._ctime;
  }
  public putCtime(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrCtime) {
    this._ctime.internalValue = value;
  }
  public resetCtime() {
    this._ctime.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ctimeInput() {
    return this._ctime.internalValue;
  }

  // gid - computed: false, optional: true, required: false
  private _gid?: number; 
  public get gid() {
    return this.getNumberAttribute('gid');
  }
  public set gid(value: number) {
    this._gid = value;
  }
  public resetGid() {
    this._gid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gidInput() {
    return this._gid;
  }

  // ino - computed: false, optional: true, required: false
  private _ino?: number; 
  public get ino() {
    return this.getNumberAttribute('ino');
  }
  public set ino(value: number) {
    this._ino = value;
  }
  public resetIno() {
    this._ino = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get inoInput() {
    return this._ino;
  }

  // kind - computed: false, optional: true, required: false
  private _kind?: string; 
  public get kind() {
    return this.getStringAttribute('kind');
  }
  public set kind(value: string) {
    this._kind = value;
  }
  public resetKind() {
    this._kind = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get kindInput() {
    return this._kind;
  }

  // mtime - computed: false, optional: true, required: false
  private _mtime = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtimeOutputReference(this, "mtime");
  public get mtime() {
    return this._mtime;
  }
  public putMtime(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrMtime) {
    this._mtime.internalValue = value;
  }
  public resetMtime() {
    this._mtime.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mtimeInput() {
    return this._mtime.internalValue;
  }

  // nlink - computed: false, optional: true, required: false
  private _nlink?: number; 
  public get nlink() {
    return this.getNumberAttribute('nlink');
  }
  public set nlink(value: number) {
    this._nlink = value;
  }
  public resetNlink() {
    this._nlink = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nlinkInput() {
    return this._nlink;
  }

  // perm - computed: false, optional: true, required: false
  private _perm?: number; 
  public get perm() {
    return this.getNumberAttribute('perm');
  }
  public set perm(value: number) {
    this._perm = value;
  }
  public resetPerm() {
    this._perm = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get permInput() {
    return this._perm;
  }

  // rdev - computed: false, optional: true, required: false
  private _rdev?: number; 
  public get rdev() {
    return this.getNumberAttribute('rdev');
  }
  public set rdev(value: number) {
    this._rdev = value;
  }
  public resetRdev() {
    this._rdev = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rdevInput() {
    return this._rdev;
  }

  // size - computed: false, optional: true, required: false
  private _size?: number; 
  public get size() {
    return this.getNumberAttribute('size');
  }
  public set size(value: number) {
    this._size = value;
  }
  public resetSize() {
    this._size = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeInput() {
    return this._size;
  }

  // uid - computed: false, optional: true, required: false
  private _uid?: number; 
  public get uid() {
    return this.getNumberAttribute('uid');
  }
  public set uid(value: number) {
    this._uid = value;
  }
  public resetUid() {
    this._uid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get uidInput() {
    return this._uid;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistake {
  /**
  * Filling determines what is filled in the mistake data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#filling DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#filling}
  */
  readonly filling?: string;
  /**
  * Max length of each wrong data segment in bytes
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#max_length DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#max_length}
  */
  readonly maxLength?: number;
  /**
  * There will be [1, MaxOccurrences] segments of wrong data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#max_occurrences DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#max_occurrences}
  */
  readonly maxOccurrences?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistakeToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistake | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    filling: cdktf.stringToTerraform(struct!.filling),
    max_length: cdktf.numberToTerraform(struct!.maxLength),
    max_occurrences: cdktf.numberToTerraform(struct!.maxOccurrences),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistakeToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistake | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    filling: {
      value: cdktf.stringToHclTerraform(struct!.filling),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_length: {
      value: cdktf.numberToHclTerraform(struct!.maxLength),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    max_occurrences: {
      value: cdktf.numberToHclTerraform(struct!.maxOccurrences),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistakeOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistake | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._filling !== undefined) {
      hasAnyValues = true;
      internalValueResult.filling = this._filling;
    }
    if (this._maxLength !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxLength = this._maxLength;
    }
    if (this._maxOccurrences !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxOccurrences = this._maxOccurrences;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistake | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._filling = undefined;
      this._maxLength = undefined;
      this._maxOccurrences = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._filling = value.filling;
      this._maxLength = value.maxLength;
      this._maxOccurrences = value.maxOccurrences;
    }
  }

  // filling - computed: false, optional: true, required: false
  private _filling?: string; 
  public get filling() {
    return this.getStringAttribute('filling');
  }
  public set filling(value: string) {
    this._filling = value;
  }
  public resetFilling() {
    this._filling = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fillingInput() {
    return this._filling;
  }

  // max_length - computed: false, optional: true, required: false
  private _maxLength?: number; 
  public get maxLength() {
    return this.getNumberAttribute('max_length');
  }
  public set maxLength(value: number) {
    this._maxLength = value;
  }
  public resetMaxLength() {
    this._maxLength = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxLengthInput() {
    return this._maxLength;
  }

  // max_occurrences - computed: false, optional: true, required: false
  private _maxOccurrences?: number; 
  public get maxOccurrences() {
    return this.getNumberAttribute('max_occurrences');
  }
  public set maxOccurrences(value: number) {
    this._maxOccurrences = value;
  }
  public resetMaxOccurrences() {
    this._maxOccurrences = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxOccurrencesInput() {
    return this._maxOccurrences;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaos {
  /**
  * Action defines the specific pod chaos action. Supported action: latency / fault / attrOverride / mistake
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * Attr defines the overrided attribution
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#attr DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#attr}
  */
  readonly attr?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttr;
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * Delay defines the value of I/O chaos action delay. A delay string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as '300ms'. Valid time units are 'ns', 'us' (or 'µs'), 'ms', 's', 'm', 'h'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#delay}
  */
  readonly delay?: string;
  /**
  * Duration represents the duration of the chaos action. It is required when the action is 'PodFailureAction'. A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as '300ms', '-1.5h' or '2h45m'. Valid time units are 'ns', 'us' (or 'µs'), 'ms', 's', 'm', 'h'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * Errno defines the error code that returned by I/O action. refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#errno DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#errno}
  */
  readonly errno?: number;
  /**
  * Methods defines the I/O methods for injecting I/O chaos action. default: all I/O methods.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#methods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#methods}
  */
  readonly methods?: string[];
  /**
  * Mistake defines what types of incorrectness are injected to IO operations
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mistake DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mistake}
  */
  readonly mistake?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistake;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Path defines the path of files for injecting I/O chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * Percent defines the percentage of injection errors and provides a number from 0-100. default: 100.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#percent DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#percent}
  */
  readonly percent?: number;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelector;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
  /**
  * VolumePath represents the mount path of injected volume
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#volume_path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#volume_path}
  */
  readonly volumePath: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    attr: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrToTerraform(struct!.attr),
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    delay: cdktf.stringToTerraform(struct!.delay),
    duration: cdktf.stringToTerraform(struct!.duration),
    errno: cdktf.numberToTerraform(struct!.errno),
    methods: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.methods),
    mistake: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistakeToTerraform(struct!.mistake),
    mode: cdktf.stringToTerraform(struct!.mode),
    path: cdktf.stringToTerraform(struct!.path),
    percent: cdktf.numberToTerraform(struct!.percent),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
    volume_path: cdktf.stringToTerraform(struct!.volumePath),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    attr: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrToHclTerraform(struct!.attr),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttr",
    },
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    delay: {
      value: cdktf.stringToHclTerraform(struct!.delay),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    errno: {
      value: cdktf.numberToHclTerraform(struct!.errno),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    methods: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.methods),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    mistake: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistakeToHclTerraform(struct!.mistake),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistake",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    percent: {
      value: cdktf.numberToHclTerraform(struct!.percent),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelector",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    volume_path: {
      value: cdktf.stringToHclTerraform(struct!.volumePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._attr?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.attr = this._attr?.internalValue;
    }
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._delay !== undefined) {
      hasAnyValues = true;
      internalValueResult.delay = this._delay;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._errno !== undefined) {
      hasAnyValues = true;
      internalValueResult.errno = this._errno;
    }
    if (this._methods !== undefined) {
      hasAnyValues = true;
      internalValueResult.methods = this._methods;
    }
    if (this._mistake?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.mistake = this._mistake?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._percent !== undefined) {
      hasAnyValues = true;
      internalValueResult.percent = this._percent;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    if (this._volumePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.volumePath = this._volumePath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._attr.internalValue = undefined;
      this._containerNames = undefined;
      this._delay = undefined;
      this._duration = undefined;
      this._errno = undefined;
      this._methods = undefined;
      this._mistake.internalValue = undefined;
      this._mode = undefined;
      this._path = undefined;
      this._percent = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._value = undefined;
      this._volumePath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._attr.internalValue = value.attr;
      this._containerNames = value.containerNames;
      this._delay = value.delay;
      this._duration = value.duration;
      this._errno = value.errno;
      this._methods = value.methods;
      this._mistake.internalValue = value.mistake;
      this._mode = value.mode;
      this._path = value.path;
      this._percent = value.percent;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._value = value.value;
      this._volumePath = value.volumePath;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // attr - computed: false, optional: true, required: false
  private _attr = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttrOutputReference(this, "attr");
  public get attr() {
    return this._attr;
  }
  public putAttr(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosAttr) {
    this._attr.internalValue = value;
  }
  public resetAttr() {
    this._attr.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get attrInput() {
    return this._attr.internalValue;
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // delay - computed: false, optional: true, required: false
  private _delay?: string; 
  public get delay() {
    return this.getStringAttribute('delay');
  }
  public set delay(value: string) {
    this._delay = value;
  }
  public resetDelay() {
    this._delay = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get delayInput() {
    return this._delay;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // errno - computed: false, optional: true, required: false
  private _errno?: number; 
  public get errno() {
    return this.getNumberAttribute('errno');
  }
  public set errno(value: number) {
    this._errno = value;
  }
  public resetErrno() {
    this._errno = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get errnoInput() {
    return this._errno;
  }

  // methods - computed: false, optional: true, required: false
  private _methods?: string[]; 
  public get methods() {
    return this.getListAttribute('methods');
  }
  public set methods(value: string[]) {
    this._methods = value;
  }
  public resetMethods() {
    this._methods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodsInput() {
    return this._methods;
  }

  // mistake - computed: false, optional: true, required: false
  private _mistake = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistakeOutputReference(this, "mistake");
  public get mistake() {
    return this._mistake;
  }
  public putMistake(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosMistake) {
    this._mistake.internalValue = value;
  }
  public resetMistake() {
    this._mistake.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mistakeInput() {
    return this._mistake.internalValue;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // percent - computed: false, optional: true, required: false
  private _percent?: number; 
  public get percent() {
    return this.getNumberAttribute('percent');
  }
  public set percent(value: number) {
    this._percent = value;
  }
  public resetPercent() {
    this._percent = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get percentInput() {
    return this._percent;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesIoChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }

  // volume_path - computed: false, optional: false, required: true
  private _volumePath?: string; 
  public get volumePath() {
    return this.getStringAttribute('volume_path');
  }
  public set volumePath(value: string) {
    this._volumePath = value;
  }
  // Temporarily expose input value. Use with caution.
  public get volumePathInput() {
    return this._volumePath;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaos {
  /**
  * Action defines the specific jvm chaos action. Supported action: latency;return;exception;stress;gc;ruleData
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#class DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#class}
  */
  readonly class?: string;
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * the CPU core number needs to use, only set it when action is stress
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#cpu_count DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#cpu_count}
  */
  readonly cpuCount?: number;
  /**
  * the match database default value is '', means match all database
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#database DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#database}
  */
  readonly database?: string;
  /**
  * Duration represents the duration of the chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * the exception which needs to throw for action 'exception' or the exception message needs to throw in action 'mysql'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#exception DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#exception}
  */
  readonly exception?: string;
  /**
  * the latency duration for action 'latency', unit ms or the latency duration in action 'mysql'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#latency}
  */
  readonly latency?: number;
  /**
  * the memory type needs to locate, only set it when action is stress, the value can be 'stack' or 'heap'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mem_type DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mem_type}
  */
  readonly memType?: string;
  /**
  * the method in Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * the version of mysql-connector-java, only support 5.X.X(set to '5') and 8.X.X(set to '8') now
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mysql_connector_version DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mysql_connector_version}
  */
  readonly mysqlConnectorVersion?: string;
  /**
  * byteman rule name, should be unique, and will generate one if not set
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#name}
  */
  readonly name?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * the byteman rule's data for action 'ruleData'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rule_data DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rule_data}
  */
  readonly ruleData?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelector;
  /**
  * the match sql type default value is '', means match all SQL type. The value can be 'select', 'insert', 'update', 'delete', 'replace'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#sql_type DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#sql_type}
  */
  readonly sqlType?: string;
  /**
  * the match table default value is '', means match all table
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#table DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#table}
  */
  readonly table?: string;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    class: cdktf.stringToTerraform(struct!.class),
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    cpu_count: cdktf.numberToTerraform(struct!.cpuCount),
    database: cdktf.stringToTerraform(struct!.database),
    duration: cdktf.stringToTerraform(struct!.duration),
    exception: cdktf.stringToTerraform(struct!.exception),
    latency: cdktf.numberToTerraform(struct!.latency),
    mem_type: cdktf.stringToTerraform(struct!.memType),
    method: cdktf.stringToTerraform(struct!.method),
    mode: cdktf.stringToTerraform(struct!.mode),
    mysql_connector_version: cdktf.stringToTerraform(struct!.mysqlConnectorVersion),
    name: cdktf.stringToTerraform(struct!.name),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    rule_data: cdktf.stringToTerraform(struct!.ruleData),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorToTerraform(struct!.selector),
    sql_type: cdktf.stringToTerraform(struct!.sqlType),
    table: cdktf.stringToTerraform(struct!.table),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    class: {
      value: cdktf.stringToHclTerraform(struct!.class),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    cpu_count: {
      value: cdktf.numberToHclTerraform(struct!.cpuCount),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    exception: {
      value: cdktf.stringToHclTerraform(struct!.exception),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    latency: {
      value: cdktf.numberToHclTerraform(struct!.latency),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    mem_type: {
      value: cdktf.stringToHclTerraform(struct!.memType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    mysql_connector_version: {
      value: cdktf.stringToHclTerraform(struct!.mysqlConnectorVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    name: {
      value: cdktf.stringToHclTerraform(struct!.name),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    rule_data: {
      value: cdktf.stringToHclTerraform(struct!.ruleData),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelector",
    },
    sql_type: {
      value: cdktf.stringToHclTerraform(struct!.sqlType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._class !== undefined) {
      hasAnyValues = true;
      internalValueResult.class = this._class;
    }
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._cpuCount !== undefined) {
      hasAnyValues = true;
      internalValueResult.cpuCount = this._cpuCount;
    }
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._exception !== undefined) {
      hasAnyValues = true;
      internalValueResult.exception = this._exception;
    }
    if (this._latency !== undefined) {
      hasAnyValues = true;
      internalValueResult.latency = this._latency;
    }
    if (this._memType !== undefined) {
      hasAnyValues = true;
      internalValueResult.memType = this._memType;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._mysqlConnectorVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.mysqlConnectorVersion = this._mysqlConnectorVersion;
    }
    if (this._name !== undefined) {
      hasAnyValues = true;
      internalValueResult.name = this._name;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._ruleData !== undefined) {
      hasAnyValues = true;
      internalValueResult.ruleData = this._ruleData;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._sqlType !== undefined) {
      hasAnyValues = true;
      internalValueResult.sqlType = this._sqlType;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._class = undefined;
      this._containerNames = undefined;
      this._cpuCount = undefined;
      this._database = undefined;
      this._duration = undefined;
      this._exception = undefined;
      this._latency = undefined;
      this._memType = undefined;
      this._method = undefined;
      this._mode = undefined;
      this._mysqlConnectorVersion = undefined;
      this._name = undefined;
      this._pid = undefined;
      this._port = undefined;
      this._remoteCluster = undefined;
      this._ruleData = undefined;
      this._selector.internalValue = undefined;
      this._sqlType = undefined;
      this._table = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._class = value.class;
      this._containerNames = value.containerNames;
      this._cpuCount = value.cpuCount;
      this._database = value.database;
      this._duration = value.duration;
      this._exception = value.exception;
      this._latency = value.latency;
      this._memType = value.memType;
      this._method = value.method;
      this._mode = value.mode;
      this._mysqlConnectorVersion = value.mysqlConnectorVersion;
      this._name = value.name;
      this._pid = value.pid;
      this._port = value.port;
      this._remoteCluster = value.remoteCluster;
      this._ruleData = value.ruleData;
      this._selector.internalValue = value.selector;
      this._sqlType = value.sqlType;
      this._table = value.table;
      this._value = value.value;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // class - computed: false, optional: true, required: false
  private _class?: string; 
  public get class() {
    return this.getStringAttribute('class');
  }
  public set class(value: string) {
    this._class = value;
  }
  public resetClass() {
    this._class = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get classInput() {
    return this._class;
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // cpu_count - computed: false, optional: true, required: false
  private _cpuCount?: number; 
  public get cpuCount() {
    return this.getNumberAttribute('cpu_count');
  }
  public set cpuCount(value: number) {
    this._cpuCount = value;
  }
  public resetCpuCount() {
    this._cpuCount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cpuCountInput() {
    return this._cpuCount;
  }

  // database - computed: false, optional: true, required: false
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  public resetDatabase() {
    this._database = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // exception - computed: false, optional: true, required: false
  private _exception?: string; 
  public get exception() {
    return this.getStringAttribute('exception');
  }
  public set exception(value: string) {
    this._exception = value;
  }
  public resetException() {
    this._exception = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exceptionInput() {
    return this._exception;
  }

  // latency - computed: false, optional: true, required: false
  private _latency?: number; 
  public get latency() {
    return this.getNumberAttribute('latency');
  }
  public set latency(value: number) {
    this._latency = value;
  }
  public resetLatency() {
    this._latency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get latencyInput() {
    return this._latency;
  }

  // mem_type - computed: false, optional: true, required: false
  private _memType?: string; 
  public get memType() {
    return this.getStringAttribute('mem_type');
  }
  public set memType(value: string) {
    this._memType = value;
  }
  public resetMemType() {
    this._memType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get memTypeInput() {
    return this._memType;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // mysql_connector_version - computed: false, optional: true, required: false
  private _mysqlConnectorVersion?: string; 
  public get mysqlConnectorVersion() {
    return this.getStringAttribute('mysql_connector_version');
  }
  public set mysqlConnectorVersion(value: string) {
    this._mysqlConnectorVersion = value;
  }
  public resetMysqlConnectorVersion() {
    this._mysqlConnectorVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mysqlConnectorVersionInput() {
    return this._mysqlConnectorVersion;
  }

  // name - computed: false, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // rule_data - computed: false, optional: true, required: false
  private _ruleData?: string; 
  public get ruleData() {
    return this.getStringAttribute('rule_data');
  }
  public set ruleData(value: string) {
    this._ruleData = value;
  }
  public resetRuleData() {
    this._ruleData = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ruleDataInput() {
    return this._ruleData;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesJvmChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // sql_type - computed: false, optional: true, required: false
  private _sqlType?: string; 
  public get sqlType() {
    return this.getStringAttribute('sql_type');
  }
  public set sqlType(value: string) {
    this._sqlType = value;
  }
  public resetSqlType() {
    this._sqlType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sqlTypeInput() {
    return this._sqlType;
  }

  // table - computed: false, optional: true, required: false
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  public resetTable() {
    this._table = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchain {
  /**
  * Funcname can be find from kernel source or '/proc/kallsyms', such as 'ext4_mount'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#funcname DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#funcname}
  */
  readonly funcname?: string;
  /**
  * Parameters is used with predicate, for example, if you want to inject slab error in 'd_alloc_parallel(struct dentry *parent, const struct qstr *name)' with a special name 'bananas', you need to set it to 'struct dentry *parent, const struct qstr *name' otherwise omit it.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#parameters DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#parameters}
  */
  readonly parameters?: string;
  /**
  * Predicate will access the arguments of this Frame, example with Parameters's, you can set it to 'STRNCMP(name->name, 'bananas', 8)' to make inject only with it, or omit it to inject for all d_alloc_parallel call chain.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#predicate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#predicate}
  */
  readonly predicate?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchainToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    funcname: cdktf.stringToTerraform(struct!.funcname),
    parameters: cdktf.stringToTerraform(struct!.parameters),
    predicate: cdktf.stringToTerraform(struct!.predicate),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchainToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchain | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    funcname: {
      value: cdktf.stringToHclTerraform(struct!.funcname),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    parameters: {
      value: cdktf.stringToHclTerraform(struct!.parameters),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    predicate: {
      value: cdktf.stringToHclTerraform(struct!.predicate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchainOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchain | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._funcname !== undefined) {
      hasAnyValues = true;
      internalValueResult.funcname = this._funcname;
    }
    if (this._parameters !== undefined) {
      hasAnyValues = true;
      internalValueResult.parameters = this._parameters;
    }
    if (this._predicate !== undefined) {
      hasAnyValues = true;
      internalValueResult.predicate = this._predicate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchain | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._funcname = undefined;
      this._parameters = undefined;
      this._predicate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._funcname = value.funcname;
      this._parameters = value.parameters;
      this._predicate = value.predicate;
    }
  }

  // funcname - computed: false, optional: true, required: false
  private _funcname?: string; 
  public get funcname() {
    return this.getStringAttribute('funcname');
  }
  public set funcname(value: string) {
    this._funcname = value;
  }
  public resetFuncname() {
    this._funcname = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get funcnameInput() {
    return this._funcname;
  }

  // parameters - computed: false, optional: true, required: false
  private _parameters?: string; 
  public get parameters() {
    return this.getStringAttribute('parameters');
  }
  public set parameters(value: string) {
    this._parameters = value;
  }
  public resetParameters() {
    this._parameters = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get parametersInput() {
    return this._parameters;
  }

  // predicate - computed: false, optional: true, required: false
  private _predicate?: string; 
  public get predicate() {
    return this.getStringAttribute('predicate');
  }
  public set predicate(value: string) {
    this._predicate = value;
  }
  public resetPredicate() {
    this._predicate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get predicateInput() {
    return this._predicate;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchainList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchain[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchainOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchainOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequest {
  /**
  * Callchain indicate a special call chain, such as: ext4_mount -> mount_subtree -> ... -> should_failslab With an optional set of predicates and an optional set of parameters, which used with predicates. You can read call chan and predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples to learn more. If no special call chain, just keep Callchain empty, which means it will fail at any call chain with slab alloc (eg: kmalloc).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#callchain DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#callchain}
  */
  readonly callchain?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchain[] | cdktf.IResolvable;
  /**
  * FailType indicates what to fail, can be set to '0' / '1' / '2' If '0', indicates slab to fail (should_failslab) If '1', indicates alloc_page to fail (should_fail_alloc_page) If '2', indicates bio to fail (should_fail_bio) You can read: 1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html 2. http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt to learn more
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#failtype DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#failtype}
  */
  readonly failtype: number;
  /**
  * Headers indicates the appropriate kernel headers you need. Eg: 'linux/mmzone.h', 'linux/blkdev.h' and so on
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#headers DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#headers}
  */
  readonly headers?: string[];
  /**
  * Probability indicates the fails with probability. If you want 1%, please set this field with 1.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#probability DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#probability}
  */
  readonly probability?: number;
  /**
  * Times indicates the max times of fails.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#times DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#times}
  */
  readonly times?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    callchain: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchainToTerraform, false)(struct!.callchain),
    failtype: cdktf.numberToTerraform(struct!.failtype),
    headers: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.headers),
    probability: cdktf.numberToTerraform(struct!.probability),
    times: cdktf.numberToTerraform(struct!.times),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    callchain: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchainToHclTerraform, false)(struct!.callchain),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchainList",
    },
    failtype: {
      value: cdktf.numberToHclTerraform(struct!.failtype),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    headers: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.headers),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    probability: {
      value: cdktf.numberToHclTerraform(struct!.probability),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    times: {
      value: cdktf.numberToHclTerraform(struct!.times),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequest | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._callchain?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.callchain = this._callchain?.internalValue;
    }
    if (this._failtype !== undefined) {
      hasAnyValues = true;
      internalValueResult.failtype = this._failtype;
    }
    if (this._headers !== undefined) {
      hasAnyValues = true;
      internalValueResult.headers = this._headers;
    }
    if (this._probability !== undefined) {
      hasAnyValues = true;
      internalValueResult.probability = this._probability;
    }
    if (this._times !== undefined) {
      hasAnyValues = true;
      internalValueResult.times = this._times;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequest | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._callchain.internalValue = undefined;
      this._failtype = undefined;
      this._headers = undefined;
      this._probability = undefined;
      this._times = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._callchain.internalValue = value.callchain;
      this._failtype = value.failtype;
      this._headers = value.headers;
      this._probability = value.probability;
      this._times = value.times;
    }
  }

  // callchain - computed: false, optional: true, required: false
  private _callchain = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchainList(this, "callchain", false);
  public get callchain() {
    return this._callchain;
  }
  public putCallchain(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestCallchain[] | cdktf.IResolvable) {
    this._callchain.internalValue = value;
  }
  public resetCallchain() {
    this._callchain.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get callchainInput() {
    return this._callchain.internalValue;
  }

  // failtype - computed: false, optional: false, required: true
  private _failtype?: number; 
  public get failtype() {
    return this.getNumberAttribute('failtype');
  }
  public set failtype(value: number) {
    this._failtype = value;
  }
  // Temporarily expose input value. Use with caution.
  public get failtypeInput() {
    return this._failtype;
  }

  // headers - computed: false, optional: true, required: false
  private _headers?: string[]; 
  public get headers() {
    return this.getListAttribute('headers');
  }
  public set headers(value: string[]) {
    this._headers = value;
  }
  public resetHeaders() {
    this._headers = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get headersInput() {
    return this._headers;
  }

  // probability - computed: false, optional: true, required: false
  private _probability?: number; 
  public get probability() {
    return this.getNumberAttribute('probability');
  }
  public set probability(value: number) {
    this._probability = value;
  }
  public resetProbability() {
    this._probability = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get probabilityInput() {
    return this._probability;
  }

  // times - computed: false, optional: true, required: false
  private _times?: number; 
  public get times() {
    return this.getNumberAttribute('times');
  }
  public set times(value: number) {
    this._times = value;
  }
  public resetTimes() {
    this._times = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timesInput() {
    return this._times;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaos {
  /**
  * ContainerNames indicates list of the name of affected container. If not set, the first container will be injected
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#container_names DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#container_names}
  */
  readonly containerNames?: string[];
  /**
  * Duration represents the duration of the chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * FailKernRequest defines the request of kernel injection
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#fail_kern_request DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#fail_kern_request}
  */
  readonly failKernRequest: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequest;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelector;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    container_names: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.containerNames),
    duration: cdktf.stringToTerraform(struct!.duration),
    fail_kern_request: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestToTerraform(struct!.failKernRequest),
    mode: cdktf.stringToTerraform(struct!.mode),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    container_names: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.containerNames),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    fail_kern_request: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestToHclTerraform(struct!.failKernRequest),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequest",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelector",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._containerNames !== undefined) {
      hasAnyValues = true;
      internalValueResult.containerNames = this._containerNames;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._failKernRequest?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.failKernRequest = this._failKernRequest?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._containerNames = undefined;
      this._duration = undefined;
      this._failKernRequest.internalValue = undefined;
      this._mode = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._containerNames = value.containerNames;
      this._duration = value.duration;
      this._failKernRequest.internalValue = value.failKernRequest;
      this._mode = value.mode;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._value = value.value;
    }
  }

  // container_names - computed: false, optional: true, required: false
  private _containerNames?: string[]; 
  public get containerNames() {
    return this.getListAttribute('container_names');
  }
  public set containerNames(value: string[]) {
    this._containerNames = value;
  }
  public resetContainerNames() {
    this._containerNames = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get containerNamesInput() {
    return this._containerNames;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // fail_kern_request - computed: false, optional: false, required: true
  private _failKernRequest = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequestOutputReference(this, "fail_kern_request");
  public get failKernRequest() {
    return this._failKernRequest;
  }
  public putFailKernRequest(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosFailKernRequest) {
    this._failKernRequest.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get failKernRequestInput() {
    return this._failKernRequest.internalValue;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesKernelChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidth {
  /**
  * Buffer is the maximum amount of bytes that tokens can be available for instantaneously.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#buffer DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#buffer}
  */
  readonly buffer: number;
  /**
  * Limit is the number of bytes that can be queued waiting for tokens to become available.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#limit DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#limit}
  */
  readonly limit: number;
  /**
  * Minburst specifies the size of the peakrate bucket. For perfect accuracy, should be set to the MTU of the interface. If a peakrate is needed, but some burstiness is acceptable, this size can be raised. A 3000 byte minburst allows around 3mbit/s of peakrate, given 1000 byte packets.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#minburst DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#minburst}
  */
  readonly minburst?: number;
  /**
  * Peakrate is the maximum depletion rate of the bucket. The peakrate does not need to be set, it is only necessary if perfect millisecond timescale shaping is required.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#peakrate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#peakrate}
  */
  readonly peakrate?: number;
  /**
  * Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rate}
  */
  readonly rate: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidthToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    buffer: cdktf.numberToTerraform(struct!.buffer),
    limit: cdktf.numberToTerraform(struct!.limit),
    minburst: cdktf.numberToTerraform(struct!.minburst),
    peakrate: cdktf.numberToTerraform(struct!.peakrate),
    rate: cdktf.stringToTerraform(struct!.rate),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidthToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    buffer: {
      value: cdktf.numberToHclTerraform(struct!.buffer),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    limit: {
      value: cdktf.numberToHclTerraform(struct!.limit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    minburst: {
      value: cdktf.numberToHclTerraform(struct!.minburst),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    peakrate: {
      value: cdktf.numberToHclTerraform(struct!.peakrate),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rate: {
      value: cdktf.stringToHclTerraform(struct!.rate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidthOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidth | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._buffer !== undefined) {
      hasAnyValues = true;
      internalValueResult.buffer = this._buffer;
    }
    if (this._limit !== undefined) {
      hasAnyValues = true;
      internalValueResult.limit = this._limit;
    }
    if (this._minburst !== undefined) {
      hasAnyValues = true;
      internalValueResult.minburst = this._minburst;
    }
    if (this._peakrate !== undefined) {
      hasAnyValues = true;
      internalValueResult.peakrate = this._peakrate;
    }
    if (this._rate !== undefined) {
      hasAnyValues = true;
      internalValueResult.rate = this._rate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidth | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._buffer = undefined;
      this._limit = undefined;
      this._minburst = undefined;
      this._peakrate = undefined;
      this._rate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._buffer = value.buffer;
      this._limit = value.limit;
      this._minburst = value.minburst;
      this._peakrate = value.peakrate;
      this._rate = value.rate;
    }
  }

  // buffer - computed: false, optional: false, required: true
  private _buffer?: number; 
  public get buffer() {
    return this.getNumberAttribute('buffer');
  }
  public set buffer(value: number) {
    this._buffer = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bufferInput() {
    return this._buffer;
  }

  // limit - computed: false, optional: false, required: true
  private _limit?: number; 
  public get limit() {
    return this.getNumberAttribute('limit');
  }
  public set limit(value: number) {
    this._limit = value;
  }
  // Temporarily expose input value. Use with caution.
  public get limitInput() {
    return this._limit;
  }

  // minburst - computed: false, optional: true, required: false
  private _minburst?: number; 
  public get minburst() {
    return this.getNumberAttribute('minburst');
  }
  public set minburst(value: number) {
    this._minburst = value;
  }
  public resetMinburst() {
    this._minburst = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minburstInput() {
    return this._minburst;
  }

  // peakrate - computed: false, optional: true, required: false
  private _peakrate?: number; 
  public get peakrate() {
    return this.getNumberAttribute('peakrate');
  }
  public set peakrate(value: number) {
    this._peakrate = value;
  }
  public resetPeakrate() {
    this._peakrate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get peakrateInput() {
    return this._peakrate;
  }

  // rate - computed: false, optional: false, required: true
  private _rate?: string; 
  public get rate() {
    return this.getStringAttribute('rate');
  }
  public set rate(value: string) {
    this._rate = value;
  }
  // Temporarily expose input value. Use with caution.
  public get rateInput() {
    return this._rate;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorrupt {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#corrupt DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#corrupt}
  */
  readonly corrupt: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorruptToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorrupt | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    corrupt: cdktf.stringToTerraform(struct!.corrupt),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorruptToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorrupt | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    corrupt: {
      value: cdktf.stringToHclTerraform(struct!.corrupt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorruptOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorrupt | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._corrupt !== undefined) {
      hasAnyValues = true;
      internalValueResult.corrupt = this._corrupt;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorrupt | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._corrupt = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._corrupt = value.corrupt;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // corrupt - computed: false, optional: false, required: true
  private _corrupt?: string; 
  public get corrupt() {
    return this.getStringAttribute('corrupt');
  }
  public set corrupt(value: string) {
    this._corrupt = value;
  }
  // Temporarily expose input value. Use with caution.
  public get corruptInput() {
    return this._corrupt;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorder {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#gap DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#gap}
  */
  readonly gap: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#reorder DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#reorder}
  */
  readonly reorder: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorderToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    gap: cdktf.numberToTerraform(struct!.gap),
    reorder: cdktf.stringToTerraform(struct!.reorder),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorderToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorder | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gap: {
      value: cdktf.numberToHclTerraform(struct!.gap),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    reorder: {
      value: cdktf.stringToHclTerraform(struct!.reorder),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorderOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorder | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._gap !== undefined) {
      hasAnyValues = true;
      internalValueResult.gap = this._gap;
    }
    if (this._reorder !== undefined) {
      hasAnyValues = true;
      internalValueResult.reorder = this._reorder;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorder | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._gap = undefined;
      this._reorder = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._gap = value.gap;
      this._reorder = value.reorder;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // gap - computed: false, optional: false, required: true
  private _gap?: number; 
  public get gap() {
    return this.getNumberAttribute('gap');
  }
  public set gap(value: number) {
    this._gap = value;
  }
  // Temporarily expose input value. Use with caution.
  public get gapInput() {
    return this._gap;
  }

  // reorder - computed: false, optional: false, required: true
  private _reorder?: string; 
  public get reorder() {
    return this.getStringAttribute('reorder');
  }
  public set reorder(value: string) {
    this._reorder = value;
  }
  // Temporarily expose input value. Use with caution.
  public get reorderInput() {
    return this._reorder;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelay {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#jitter DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#jitter}
  */
  readonly jitter?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#latency}
  */
  readonly latency: string;
  /**
  * ReorderSpec defines details of packet reorder.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#reorder DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#reorder}
  */
  readonly reorder?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorder;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    jitter: cdktf.stringToTerraform(struct!.jitter),
    latency: cdktf.stringToTerraform(struct!.latency),
    reorder: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorderToTerraform(struct!.reorder),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    jitter: {
      value: cdktf.stringToHclTerraform(struct!.jitter),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    latency: {
      value: cdktf.stringToHclTerraform(struct!.latency),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    reorder: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorderToHclTerraform(struct!.reorder),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorder",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelay | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._jitter !== undefined) {
      hasAnyValues = true;
      internalValueResult.jitter = this._jitter;
    }
    if (this._latency !== undefined) {
      hasAnyValues = true;
      internalValueResult.latency = this._latency;
    }
    if (this._reorder?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.reorder = this._reorder?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelay | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._jitter = undefined;
      this._latency = undefined;
      this._reorder.internalValue = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._jitter = value.jitter;
      this._latency = value.latency;
      this._reorder.internalValue = value.reorder;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // jitter - computed: false, optional: true, required: false
  private _jitter?: string; 
  public get jitter() {
    return this.getStringAttribute('jitter');
  }
  public set jitter(value: string) {
    this._jitter = value;
  }
  public resetJitter() {
    this._jitter = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get jitterInput() {
    return this._jitter;
  }

  // latency - computed: false, optional: false, required: true
  private _latency?: string; 
  public get latency() {
    return this.getStringAttribute('latency');
  }
  public set latency(value: string) {
    this._latency = value;
  }
  // Temporarily expose input value. Use with caution.
  public get latencyInput() {
    return this._latency;
  }

  // reorder - computed: false, optional: true, required: false
  private _reorder = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorderOutputReference(this, "reorder");
  public get reorder() {
    return this._reorder;
  }
  public putReorder(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayReorder) {
    this._reorder.internalValue = value;
  }
  public resetReorder() {
    this._reorder.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reorderInput() {
    return this._reorder.internalValue;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicate {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duplicate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duplicate}
  */
  readonly duplicate: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicateToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    duplicate: cdktf.stringToTerraform(struct!.duplicate),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicateToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duplicate: {
      value: cdktf.stringToHclTerraform(struct!.duplicate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._duplicate !== undefined) {
      hasAnyValues = true;
      internalValueResult.duplicate = this._duplicate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._duplicate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._duplicate = value.duplicate;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // duplicate - computed: false, optional: false, required: true
  private _duplicate?: string; 
  public get duplicate() {
    return this.getStringAttribute('duplicate');
  }
  public set duplicate(value: string) {
    this._duplicate = value;
  }
  // Temporarily expose input value. Use with caution.
  public get duplicateInput() {
    return this._duplicate;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLoss {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#correlation DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#correlation}
  */
  readonly correlation?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#loss DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#loss}
  */
  readonly loss: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLossToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLoss | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    correlation: cdktf.stringToTerraform(struct!.correlation),
    loss: cdktf.stringToTerraform(struct!.loss),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLossToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLoss | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    correlation: {
      value: cdktf.stringToHclTerraform(struct!.correlation),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    loss: {
      value: cdktf.stringToHclTerraform(struct!.loss),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLossOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLoss | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._correlation !== undefined) {
      hasAnyValues = true;
      internalValueResult.correlation = this._correlation;
    }
    if (this._loss !== undefined) {
      hasAnyValues = true;
      internalValueResult.loss = this._loss;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLoss | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._correlation = undefined;
      this._loss = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._correlation = value.correlation;
      this._loss = value.loss;
    }
  }

  // correlation - computed: false, optional: true, required: false
  private _correlation?: string; 
  public get correlation() {
    return this.getStringAttribute('correlation');
  }
  public set correlation(value: string) {
    this._correlation = value;
  }
  public resetCorrelation() {
    this._correlation = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get correlationInput() {
    return this._correlation;
  }

  // loss - computed: false, optional: false, required: true
  private _loss?: string; 
  public get loss() {
    return this.getStringAttribute('loss');
  }
  public set loss(value: string) {
    this._loss = value;
  }
  // Temporarily expose input value. Use with caution.
  public get lossInput() {
    return this._loss;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRate {
  /**
  * Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rate}
  */
  readonly rate: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRateToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    rate: cdktf.stringToTerraform(struct!.rate),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRateToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    rate: {
      value: cdktf.stringToHclTerraform(struct!.rate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._rate !== undefined) {
      hasAnyValues = true;
      internalValueResult.rate = this._rate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._rate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._rate = value.rate;
    }
  }

  // rate - computed: false, optional: false, required: true
  private _rate?: string; 
  public get rate() {
    return this.getStringAttribute('rate');
  }
  public set rate(value: string) {
    this._rate = value;
  }
  // Temporarily expose input value. Use with caution.
  public get rateInput() {
    return this._rate;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectors {
  /**
  * key is the label key that the selector applies to.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#key DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#key}
  */
  readonly key: string;
  /**
  * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#operator DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#operator}
  */
  readonly operator: string;
  /**
  * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#values DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#values}
  */
  readonly values?: string[];
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectorsToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    key: cdktf.stringToTerraform(struct!.key),
    operator: cdktf.stringToTerraform(struct!.operator),
    values: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.values),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectorsToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectors | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    key: {
      value: cdktf.stringToHclTerraform(struct!.key),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    operator: {
      value: cdktf.stringToHclTerraform(struct!.operator),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    values: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.values),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectorsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectors | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._key !== undefined) {
      hasAnyValues = true;
      internalValueResult.key = this._key;
    }
    if (this._operator !== undefined) {
      hasAnyValues = true;
      internalValueResult.operator = this._operator;
    }
    if (this._values !== undefined) {
      hasAnyValues = true;
      internalValueResult.values = this._values;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectors | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._key = undefined;
      this._operator = undefined;
      this._values = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._key = value.key;
      this._operator = value.operator;
      this._values = value.values;
    }
  }

  // key - computed: false, optional: false, required: true
  private _key?: string; 
  public get key() {
    return this.getStringAttribute('key');
  }
  public set key(value: string) {
    this._key = value;
  }
  // Temporarily expose input value. Use with caution.
  public get keyInput() {
    return this._key;
  }

  // operator - computed: false, optional: false, required: true
  private _operator?: string; 
  public get operator() {
    return this.getStringAttribute('operator');
  }
  public set operator(value: string) {
    this._operator = value;
  }
  // Temporarily expose input value. Use with caution.
  public get operatorInput() {
    return this._operator;
  }

  // values - computed: false, optional: true, required: false
  private _values?: string[]; 
  public get values() {
    return this.getListAttribute('values');
  }
  public set values(value: string[]) {
    this._values = value;
  }
  public resetValues() {
    this._values = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valuesInput() {
    return this._values;
  }
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectorsList extends cdktf.ComplexList {
  public internalValue? : DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectors[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectorsOutputReference {
    return new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectorsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelector {
  /**
  * Map of string keys and values that can be used to select objects. A selector based on annotations.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#annotation_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#annotation_selectors}
  */
  readonly annotationSelectors?: { [key: string]: string };
  /**
  * a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#expression_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#expression_selectors}
  */
  readonly expressionSelectors?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectors[] | cdktf.IResolvable;
  /**
  * Map of string keys and values that can be used to select objects. A selector based on fields.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#field_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#field_selectors}
  */
  readonly fieldSelectors?: { [key: string]: string };
  /**
  * Map of string keys and values that can be used to select objects. A selector based on labels.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#label_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#label_selectors}
  */
  readonly labelSelectors?: { [key: string]: string };
  /**
  * Namespaces is a set of namespace to which objects belong.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#namespaces DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#namespaces}
  */
  readonly namespaces?: string[];
  /**
  * Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#node_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#node_selectors}
  */
  readonly nodeSelectors?: { [key: string]: string };
  /**
  * Nodes is a set of node name and objects must belong to these nodes.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#nodes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#nodes}
  */
  readonly nodes?: string[];
  /**
  * PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pod_phase_selectors DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pod_phase_selectors}
  */
  readonly podPhaseSelectors?: string[];
  /**
  * Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pods DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pods}
  */
  readonly pods?: { [key: string]: string[] } | cdktf.IResolvable;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    annotation_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.annotationSelectors),
    expression_selectors: cdktf.listMapper(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectorsToTerraform, false)(struct!.expressionSelectors),
    field_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.fieldSelectors),
    label_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.labelSelectors),
    namespaces: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.namespaces),
    node_selectors: cdktf.hashMapper(cdktf.stringToTerraform)(struct!.nodeSelectors),
    nodes: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.nodes),
    pod_phase_selectors: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.podPhaseSelectors),
    pods: cdktf.hashMapper(cdktf.listMapper(cdktf.stringToTerraform, false))(struct!.pods),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelector | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    annotation_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.annotationSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    expression_selectors: {
      value: cdktf.listMapperHcl(dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectorsToHclTerraform, false)(struct!.expressionSelectors),
      isBlock: true,
      type: "list",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectorsList",
    },
    field_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.fieldSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    label_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.labelSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    namespaces: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.namespaces),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    node_selectors: {
      value: cdktf.hashMapperHcl(cdktf.stringToHclTerraform)(struct!.nodeSelectors),
      isBlock: false,
      type: "map",
      storageClassType: "stringMap",
    },
    nodes: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.nodes),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pod_phase_selectors: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.podPhaseSelectors),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    pods: {
      value: cdktf.hashMapperHcl(cdktf.listMapperHcl(cdktf.stringToHclTerraform, false))(struct!.pods),
      isBlock: false,
      type: "map",
      storageClassType: "stringListMap",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelector | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._annotationSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.annotationSelectors = this._annotationSelectors;
    }
    if (this._expressionSelectors?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.expressionSelectors = this._expressionSelectors?.internalValue;
    }
    if (this._fieldSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.fieldSelectors = this._fieldSelectors;
    }
    if (this._labelSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.labelSelectors = this._labelSelectors;
    }
    if (this._namespaces !== undefined) {
      hasAnyValues = true;
      internalValueResult.namespaces = this._namespaces;
    }
    if (this._nodeSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodeSelectors = this._nodeSelectors;
    }
    if (this._nodes !== undefined) {
      hasAnyValues = true;
      internalValueResult.nodes = this._nodes;
    }
    if (this._podPhaseSelectors !== undefined) {
      hasAnyValues = true;
      internalValueResult.podPhaseSelectors = this._podPhaseSelectors;
    }
    if (this._pods !== undefined) {
      hasAnyValues = true;
      internalValueResult.pods = this._pods;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelector | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._annotationSelectors = undefined;
      this._expressionSelectors.internalValue = undefined;
      this._fieldSelectors = undefined;
      this._labelSelectors = undefined;
      this._namespaces = undefined;
      this._nodeSelectors = undefined;
      this._nodes = undefined;
      this._podPhaseSelectors = undefined;
      this._pods = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._annotationSelectors = value.annotationSelectors;
      this._expressionSelectors.internalValue = value.expressionSelectors;
      this._fieldSelectors = value.fieldSelectors;
      this._labelSelectors = value.labelSelectors;
      this._namespaces = value.namespaces;
      this._nodeSelectors = value.nodeSelectors;
      this._nodes = value.nodes;
      this._podPhaseSelectors = value.podPhaseSelectors;
      this._pods = value.pods;
    }
  }

  // annotation_selectors - computed: false, optional: true, required: false
  private _annotationSelectors?: { [key: string]: string }; 
  public get annotationSelectors() {
    return this.getStringMapAttribute('annotation_selectors');
  }
  public set annotationSelectors(value: { [key: string]: string }) {
    this._annotationSelectors = value;
  }
  public resetAnnotationSelectors() {
    this._annotationSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get annotationSelectorsInput() {
    return this._annotationSelectors;
  }

  // expression_selectors - computed: false, optional: true, required: false
  private _expressionSelectors = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectorsList(this, "expression_selectors", false);
  public get expressionSelectors() {
    return this._expressionSelectors;
  }
  public putExpressionSelectors(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorExpressionSelectors[] | cdktf.IResolvable) {
    this._expressionSelectors.internalValue = value;
  }
  public resetExpressionSelectors() {
    this._expressionSelectors.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get expressionSelectorsInput() {
    return this._expressionSelectors.internalValue;
  }

  // field_selectors - computed: false, optional: true, required: false
  private _fieldSelectors?: { [key: string]: string }; 
  public get fieldSelectors() {
    return this.getStringMapAttribute('field_selectors');
  }
  public set fieldSelectors(value: { [key: string]: string }) {
    this._fieldSelectors = value;
  }
  public resetFieldSelectors() {
    this._fieldSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fieldSelectorsInput() {
    return this._fieldSelectors;
  }

  // label_selectors - computed: false, optional: true, required: false
  private _labelSelectors?: { [key: string]: string }; 
  public get labelSelectors() {
    return this.getStringMapAttribute('label_selectors');
  }
  public set labelSelectors(value: { [key: string]: string }) {
    this._labelSelectors = value;
  }
  public resetLabelSelectors() {
    this._labelSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get labelSelectorsInput() {
    return this._labelSelectors;
  }

  // namespaces - computed: false, optional: true, required: false
  private _namespaces?: string[]; 
  public get namespaces() {
    return this.getListAttribute('namespaces');
  }
  public set namespaces(value: string[]) {
    this._namespaces = value;
  }
  public resetNamespaces() {
    this._namespaces = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get namespacesInput() {
    return this._namespaces;
  }

  // node_selectors - computed: false, optional: true, required: false
  private _nodeSelectors?: { [key: string]: string }; 
  public get nodeSelectors() {
    return this.getStringMapAttribute('node_selectors');
  }
  public set nodeSelectors(value: { [key: string]: string }) {
    this._nodeSelectors = value;
  }
  public resetNodeSelectors() {
    this._nodeSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodeSelectorsInput() {
    return this._nodeSelectors;
  }

  // nodes - computed: false, optional: true, required: false
  private _nodes?: string[]; 
  public get nodes() {
    return this.getListAttribute('nodes');
  }
  public set nodes(value: string[]) {
    this._nodes = value;
  }
  public resetNodes() {
    this._nodes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nodesInput() {
    return this._nodes;
  }

  // pod_phase_selectors - computed: false, optional: true, required: false
  private _podPhaseSelectors?: string[]; 
  public get podPhaseSelectors() {
    return this.getListAttribute('pod_phase_selectors');
  }
  public set podPhaseSelectors(value: string[]) {
    this._podPhaseSelectors = value;
  }
  public resetPodPhaseSelectors() {
    this._podPhaseSelectors = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podPhaseSelectorsInput() {
    return this._podPhaseSelectors;
  }

  // pods - computed: false, optional: true, required: false
  private _pods?: { [key: string]: string[] } | cdktf.IResolvable; 
  public get pods() {
    return this.interpolationForAttribute('pods');
  }
  public set pods(value: { [key: string]: string[] } | cdktf.IResolvable) {
    this._pods = value;
  }
  public resetPods() {
    this._pods = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get podsInput() {
    return this._pods;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTarget {
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelector;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTarget | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    mode: cdktf.stringToTerraform(struct!.mode),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorToTerraform(struct!.selector),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTarget | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelector",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTarget | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTarget | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._mode = undefined;
      this._selector.internalValue = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._mode = value.mode;
      this._selector.internalValue = value.selector;
      this._value = value.value;
    }
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaos {
  /**
  * Action defines the specific network chaos action. Supported action: partition, netem, delay, loss, duplicate, corrupt Default action: delay
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#action DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#action}
  */
  readonly action: string;
  /**
  * Bandwidth represents the detail about bandwidth control action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#bandwidth DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#bandwidth}
  */
  readonly bandwidth?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidth;
  /**
  * Corrupt represents the detail about corrupt action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#corrupt DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#corrupt}
  */
  readonly corrupt?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorrupt;
  /**
  * Delay represents the detail about delay action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#delay}
  */
  readonly delay?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelay;
  /**
  * Device represents the network device to be affected.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * Direction represents the direction, this applies on netem and network partition action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#direction DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#direction}
  */
  readonly direction?: string;
  /**
  * DuplicateSpec represents the detail about loss action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duplicate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duplicate}
  */
  readonly duplicate?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicate;
  /**
  * Duration represents the duration of the chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#duration DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#duration}
  */
  readonly duration?: string;
  /**
  * ExternalTargets represents network targets outside k8s
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#external_targets DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#external_targets}
  */
  readonly externalTargets?: string[];
  /**
  * Loss represents the detail about loss action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#loss DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#loss}
  */
  readonly loss?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLoss;
  /**
  * Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mode DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mode}
  */
  readonly mode: string;
  /**
  * Rate represents the detail about rate control action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rate}
  */
  readonly rate?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRate;
  /**
  * RemoteCluster represents the remote cluster where the chaos will be deployed
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#remote_cluster DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#remote_cluster}
  */
  readonly remoteCluster?: string;
  /**
  * Selector is used to select pods that are used to inject chaos action.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#selector DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#selector}
  */
  readonly selector: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelector;
  /**
  * Target represents network target, this applies on netem and network partition action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#target DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#target}
  */
  readonly target?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTarget;
  /**
  * TargetDevice represents the network device to be affected in target scope.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#target_device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#target_device}
  */
  readonly targetDevice?: string;
  /**
  * Value is required when the mode is set to 'FixedMode' / 'FixedPercentMode' / 'RandomMaxPercentMode'. If 'FixedMode', provide an integer of pods to do chaos action. If 'FixedPercentMode', provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF 'RandomMaxPercentMode', provide a number from 0-100 to specify the max percent of pods to do chaos action
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    action: cdktf.stringToTerraform(struct!.action),
    bandwidth: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidthToTerraform(struct!.bandwidth),
    corrupt: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorruptToTerraform(struct!.corrupt),
    delay: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayToTerraform(struct!.delay),
    device: cdktf.stringToTerraform(struct!.device),
    direction: cdktf.stringToTerraform(struct!.direction),
    duplicate: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicateToTerraform(struct!.duplicate),
    duration: cdktf.stringToTerraform(struct!.duration),
    external_targets: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.externalTargets),
    loss: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLossToTerraform(struct!.loss),
    mode: cdktf.stringToTerraform(struct!.mode),
    rate: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRateToTerraform(struct!.rate),
    remote_cluster: cdktf.stringToTerraform(struct!.remoteCluster),
    selector: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorToTerraform(struct!.selector),
    target: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetToTerraform(struct!.target),
    target_device: cdktf.stringToTerraform(struct!.targetDevice),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaos | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    action: {
      value: cdktf.stringToHclTerraform(struct!.action),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    bandwidth: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidthToHclTerraform(struct!.bandwidth),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidth",
    },
    corrupt: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorruptToHclTerraform(struct!.corrupt),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorrupt",
    },
    delay: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayToHclTerraform(struct!.delay),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelay",
    },
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    direction: {
      value: cdktf.stringToHclTerraform(struct!.direction),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    duplicate: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicateToHclTerraform(struct!.duplicate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicate",
    },
    duration: {
      value: cdktf.stringToHclTerraform(struct!.duration),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    external_targets: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.externalTargets),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    loss: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLossToHclTerraform(struct!.loss),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLoss",
    },
    mode: {
      value: cdktf.stringToHclTerraform(struct!.mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    rate: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRateToHclTerraform(struct!.rate),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRate",
    },
    remote_cluster: {
      value: cdktf.stringToHclTerraform(struct!.remoteCluster),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    selector: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorToHclTerraform(struct!.selector),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelector",
    },
    target: {
      value: dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetToHclTerraform(struct!.target),
      isBlock: true,
      type: "struct",
      storageClassType: "DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTarget",
    },
    target_device: {
      value: cdktf.stringToHclTerraform(struct!.targetDevice),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaos | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._action !== undefined) {
      hasAnyValues = true;
      internalValueResult.action = this._action;
    }
    if (this._bandwidth?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.bandwidth = this._bandwidth?.internalValue;
    }
    if (this._corrupt?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.corrupt = this._corrupt?.internalValue;
    }
    if (this._delay?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.delay = this._delay?.internalValue;
    }
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._direction !== undefined) {
      hasAnyValues = true;
      internalValueResult.direction = this._direction;
    }
    if (this._duplicate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.duplicate = this._duplicate?.internalValue;
    }
    if (this._duration !== undefined) {
      hasAnyValues = true;
      internalValueResult.duration = this._duration;
    }
    if (this._externalTargets !== undefined) {
      hasAnyValues = true;
      internalValueResult.externalTargets = this._externalTargets;
    }
    if (this._loss?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.loss = this._loss?.internalValue;
    }
    if (this._mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.mode = this._mode;
    }
    if (this._rate?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.rate = this._rate?.internalValue;
    }
    if (this._remoteCluster !== undefined) {
      hasAnyValues = true;
      internalValueResult.remoteCluster = this._remoteCluster;
    }
    if (this._selector?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.selector = this._selector?.internalValue;
    }
    if (this._target?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.target = this._target?.internalValue;
    }
    if (this._targetDevice !== undefined) {
      hasAnyValues = true;
      internalValueResult.targetDevice = this._targetDevice;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaos | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._action = undefined;
      this._bandwidth.internalValue = undefined;
      this._corrupt.internalValue = undefined;
      this._delay.internalValue = undefined;
      this._device = undefined;
      this._direction = undefined;
      this._duplicate.internalValue = undefined;
      this._duration = undefined;
      this._externalTargets = undefined;
      this._loss.internalValue = undefined;
      this._mode = undefined;
      this._rate.internalValue = undefined;
      this._remoteCluster = undefined;
      this._selector.internalValue = undefined;
      this._target.internalValue = undefined;
      this._targetDevice = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._action = value.action;
      this._bandwidth.internalValue = value.bandwidth;
      this._corrupt.internalValue = value.corrupt;
      this._delay.internalValue = value.delay;
      this._device = value.device;
      this._direction = value.direction;
      this._duplicate.internalValue = value.duplicate;
      this._duration = value.duration;
      this._externalTargets = value.externalTargets;
      this._loss.internalValue = value.loss;
      this._mode = value.mode;
      this._rate.internalValue = value.rate;
      this._remoteCluster = value.remoteCluster;
      this._selector.internalValue = value.selector;
      this._target.internalValue = value.target;
      this._targetDevice = value.targetDevice;
      this._value = value.value;
    }
  }

  // action - computed: false, optional: false, required: true
  private _action?: string; 
  public get action() {
    return this.getStringAttribute('action');
  }
  public set action(value: string) {
    this._action = value;
  }
  // Temporarily expose input value. Use with caution.
  public get actionInput() {
    return this._action;
  }

  // bandwidth - computed: false, optional: true, required: false
  private _bandwidth = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidthOutputReference(this, "bandwidth");
  public get bandwidth() {
    return this._bandwidth;
  }
  public putBandwidth(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosBandwidth) {
    this._bandwidth.internalValue = value;
  }
  public resetBandwidth() {
    this._bandwidth.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bandwidthInput() {
    return this._bandwidth.internalValue;
  }

  // corrupt - computed: false, optional: true, required: false
  private _corrupt = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorruptOutputReference(this, "corrupt");
  public get corrupt() {
    return this._corrupt;
  }
  public putCorrupt(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosCorrupt) {
    this._corrupt.internalValue = value;
  }
  public resetCorrupt() {
    this._corrupt.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get corruptInput() {
    return this._corrupt.internalValue;
  }

  // delay - computed: false, optional: true, required: false
  private _delay = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelayOutputReference(this, "delay");
  public get delay() {
    return this._delay;
  }
  public putDelay(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDelay) {
    this._delay.internalValue = value;
  }
  public resetDelay() {
    this._delay.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get delayInput() {
    return this._delay.internalValue;
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // direction - computed: false, optional: true, required: false
  private _direction?: string; 
  public get direction() {
    return this.getStringAttribute('direction');
  }
  public set direction(value: string) {
    this._direction = value;
  }
  public resetDirection() {
    this._direction = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get directionInput() {
    return this._direction;
  }

  // duplicate - computed: false, optional: true, required: false
  private _duplicate = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicateOutputReference(this, "duplicate");
  public get duplicate() {
    return this._duplicate;
  }
  public putDuplicate(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosDuplicate) {
    this._duplicate.internalValue = value;
  }
  public resetDuplicate() {
    this._duplicate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get duplicateInput() {
    return this._duplicate.internalValue;
  }

  // duration - computed: false, optional: true, required: false
  private _duration?: string; 
  public get duration() {
    return this.getStringAttribute('duration');
  }
  public set duration(value: string) {
    this._duration = value;
  }
  public resetDuration() {
    this._duration = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get durationInput() {
    return this._duration;
  }

  // external_targets - computed: false, optional: true, required: false
  private _externalTargets?: string[]; 
  public get externalTargets() {
    return this.getListAttribute('external_targets');
  }
  public set externalTargets(value: string[]) {
    this._externalTargets = value;
  }
  public resetExternalTargets() {
    this._externalTargets = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get externalTargetsInput() {
    return this._externalTargets;
  }

  // loss - computed: false, optional: true, required: false
  private _loss = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLossOutputReference(this, "loss");
  public get loss() {
    return this._loss;
  }
  public putLoss(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosLoss) {
    this._loss.internalValue = value;
  }
  public resetLoss() {
    this._loss.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lossInput() {
    return this._loss.internalValue;
  }

  // mode - computed: false, optional: false, required: true
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // rate - computed: false, optional: true, required: false
  private _rate = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRateOutputReference(this, "rate");
  public get rate() {
    return this._rate;
  }
  public putRate(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosRate) {
    this._rate.internalValue = value;
  }
  public resetRate() {
    this._rate.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rateInput() {
    return this._rate.internalValue;
  }

  // remote_cluster - computed: false, optional: true, required: false
  private _remoteCluster?: string; 
  public get remoteCluster() {
    return this.getStringAttribute('remote_cluster');
  }
  public set remoteCluster(value: string) {
    this._remoteCluster = value;
  }
  public resetRemoteCluster() {
    this._remoteCluster = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteClusterInput() {
    return this._remoteCluster;
  }

  // selector - computed: false, optional: false, required: true
  private _selector = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelectorOutputReference(this, "selector");
  public get selector() {
    return this._selector;
  }
  public putSelector(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosSelector) {
    this._selector.internalValue = value;
  }
  // Temporarily expose input value. Use with caution.
  public get selectorInput() {
    return this._selector.internalValue;
  }

  // target - computed: false, optional: true, required: false
  private _target = new DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTargetOutputReference(this, "target");
  public get target() {
    return this._target;
  }
  public putTarget(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesNetworkChaosTarget) {
    this._target.internalValue = value;
  }
  public resetTarget() {
    this._target.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetInput() {
    return this._target.internalValue;
  }

  // target_device - computed: false, optional: true, required: false
  private _targetDevice?: string; 
  public get targetDevice() {
    return this.getStringAttribute('target_device');
  }
  public set targetDevice(value: string) {
    this._targetDevice = value;
  }
  public resetTargetDevice() {
    this._targetDevice = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get targetDeviceInput() {
    return this._targetDevice;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosClock {
  /**
  * the identifier of the particular clock on which to act. More clock description in linux kernel can be found in man page of clock_getres, clock_gettime, clock_settime. Muti clock ids should be split with ','
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#clock_ids_slice DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#clock_ids_slice}
  */
  readonly clockIdsSlice?: string;
  /**
  * the pid of target program.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * specifies the length of time offset.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#time_offset DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#time_offset}
  */
  readonly timeOffset?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosClockToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosClock | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    clock_ids_slice: cdktf.stringToTerraform(struct!.clockIdsSlice),
    pid: cdktf.numberToTerraform(struct!.pid),
    time_offset: cdktf.stringToTerraform(struct!.timeOffset),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosClockToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosClock | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    clock_ids_slice: {
      value: cdktf.stringToHclTerraform(struct!.clockIdsSlice),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    time_offset: {
      value: cdktf.stringToHclTerraform(struct!.timeOffset),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosClockOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosClock | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._clockIdsSlice !== undefined) {
      hasAnyValues = true;
      internalValueResult.clockIdsSlice = this._clockIdsSlice;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._timeOffset !== undefined) {
      hasAnyValues = true;
      internalValueResult.timeOffset = this._timeOffset;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosClock | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._clockIdsSlice = undefined;
      this._pid = undefined;
      this._timeOffset = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._clockIdsSlice = value.clockIdsSlice;
      this._pid = value.pid;
      this._timeOffset = value.timeOffset;
    }
  }

  // clock_ids_slice - computed: false, optional: true, required: false
  private _clockIdsSlice?: string; 
  public get clockIdsSlice() {
    return this.getStringAttribute('clock_ids_slice');
  }
  public set clockIdsSlice(value: string) {
    this._clockIdsSlice = value;
  }
  public resetClockIdsSlice() {
    this._clockIdsSlice = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get clockIdsSliceInput() {
    return this._clockIdsSlice;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // time_offset - computed: false, optional: true, required: false
  private _timeOffset?: string; 
  public get timeOffset() {
    return this.getStringAttribute('time_offset');
  }
  public set timeOffset(value: string) {
    this._timeOffset = value;
  }
  public resetTimeOffset() {
    this._timeOffset = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeOffsetInput() {
    return this._timeOffset;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskFill {
  /**
  * fill disk by fallocate
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#fill_by_fallocate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#fill_by_fallocate}
  */
  readonly fillByFallocate?: boolean | cdktf.IResolvable;
  /**
  * specifies the location to fill data in. if path not provided, payload will read/write from/into a temp file, temp file will be deleted after writing
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000, K=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#size}
  */
  readonly size?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskFillToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskFill | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    fill_by_fallocate: cdktf.booleanToTerraform(struct!.fillByFallocate),
    path: cdktf.stringToTerraform(struct!.path),
    size: cdktf.stringToTerraform(struct!.size),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskFillToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskFill | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    fill_by_fallocate: {
      value: cdktf.booleanToHclTerraform(struct!.fillByFallocate),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    size: {
      value: cdktf.stringToHclTerraform(struct!.size),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskFillOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskFill | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fillByFallocate !== undefined) {
      hasAnyValues = true;
      internalValueResult.fillByFallocate = this._fillByFallocate;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._size !== undefined) {
      hasAnyValues = true;
      internalValueResult.size = this._size;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskFill | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fillByFallocate = undefined;
      this._path = undefined;
      this._size = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fillByFallocate = value.fillByFallocate;
      this._path = value.path;
      this._size = value.size;
    }
  }

  // fill_by_fallocate - computed: false, optional: true, required: false
  private _fillByFallocate?: boolean | cdktf.IResolvable; 
  public get fillByFallocate() {
    return this.getBooleanAttribute('fill_by_fallocate');
  }
  public set fillByFallocate(value: boolean | cdktf.IResolvable) {
    this._fillByFallocate = value;
  }
  public resetFillByFallocate() {
    this._fillByFallocate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fillByFallocateInput() {
    return this._fillByFallocate;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // size - computed: false, optional: true, required: false
  private _size?: string; 
  public get size() {
    return this.getStringAttribute('size');
  }
  public set size(value: string) {
    this._size = value;
  }
  public resetSize() {
    this._size = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeInput() {
    return this._size;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskReadPayload {
  /**
  * specifies the location to fill data in. if path not provided, payload will read/write from/into a temp file, temp file will be deleted after writing
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * specifies the number of process work on writing, default 1, only 1-255 is valid value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#payload_process_num DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#payload_process_num}
  */
  readonly payloadProcessNum?: number;
  /**
  * specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000, K=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#size}
  */
  readonly size?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskReadPayloadToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskReadPayload | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    path: cdktf.stringToTerraform(struct!.path),
    payload_process_num: cdktf.numberToTerraform(struct!.payloadProcessNum),
    size: cdktf.stringToTerraform(struct!.size),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskReadPayloadToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskReadPayload | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    payload_process_num: {
      value: cdktf.numberToHclTerraform(struct!.payloadProcessNum),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    size: {
      value: cdktf.stringToHclTerraform(struct!.size),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskReadPayloadOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskReadPayload | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._payloadProcessNum !== undefined) {
      hasAnyValues = true;
      internalValueResult.payloadProcessNum = this._payloadProcessNum;
    }
    if (this._size !== undefined) {
      hasAnyValues = true;
      internalValueResult.size = this._size;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskReadPayload | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._path = undefined;
      this._payloadProcessNum = undefined;
      this._size = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._path = value.path;
      this._payloadProcessNum = value.payloadProcessNum;
      this._size = value.size;
    }
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // payload_process_num - computed: false, optional: true, required: false
  private _payloadProcessNum?: number; 
  public get payloadProcessNum() {
    return this.getNumberAttribute('payload_process_num');
  }
  public set payloadProcessNum(value: number) {
    this._payloadProcessNum = value;
  }
  public resetPayloadProcessNum() {
    this._payloadProcessNum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get payloadProcessNumInput() {
    return this._payloadProcessNum;
  }

  // size - computed: false, optional: true, required: false
  private _size?: string; 
  public get size() {
    return this.getStringAttribute('size');
  }
  public set size(value: string) {
    this._size = value;
  }
  public resetSize() {
    this._size = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeInput() {
    return this._size;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskWritePayload {
  /**
  * specifies the location to fill data in. if path not provided, payload will read/write from/into a temp file, temp file will be deleted after writing
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * specifies the number of process work on writing, default 1, only 1-255 is valid value
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#payload_process_num DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#payload_process_num}
  */
  readonly payloadProcessNum?: number;
  /**
  * specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000, K=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#size}
  */
  readonly size?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskWritePayloadToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskWritePayload | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    path: cdktf.stringToTerraform(struct!.path),
    payload_process_num: cdktf.numberToTerraform(struct!.payloadProcessNum),
    size: cdktf.stringToTerraform(struct!.size),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskWritePayloadToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskWritePayload | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    payload_process_num: {
      value: cdktf.numberToHclTerraform(struct!.payloadProcessNum),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    size: {
      value: cdktf.stringToHclTerraform(struct!.size),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskWritePayloadOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskWritePayload | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._payloadProcessNum !== undefined) {
      hasAnyValues = true;
      internalValueResult.payloadProcessNum = this._payloadProcessNum;
    }
    if (this._size !== undefined) {
      hasAnyValues = true;
      internalValueResult.size = this._size;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosDiskWritePayload | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._path = undefined;
      this._payloadProcessNum = undefined;
      this._size = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._path = value.path;
      this._payloadProcessNum = value.payloadProcessNum;
      this._size = value.size;
    }
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // payload_process_num - computed: false, optional: true, required: false
  private _payloadProcessNum?: number; 
  public get payloadProcessNum() {
    return this.getNumberAttribute('payload_process_num');
  }
  public set payloadProcessNum(value: number) {
    this._payloadProcessNum = value;
  }
  public resetPayloadProcessNum() {
    this._payloadProcessNum = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get payloadProcessNumInput() {
    return this._payloadProcessNum;
  }

  // size - computed: false, optional: true, required: false
  private _size?: string; 
  public get size() {
    return this.getStringAttribute('size');
  }
  public set size(value: string) {
    this._size = value;
  }
  public resetSize() {
    this._size = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sizeInput() {
    return this._size;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileAppend {
  /**
  * Count is the number of times to append the data.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#count DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#count}
  */
  readonly count?: number;
  /**
  * Data is the data for append.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#data DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#data}
  */
  readonly data?: string;
  /**
  * FileName is the name of the file to be created, modified, deleted, renamed, or appended.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_name}
  */
  readonly fileName?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileAppendToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileAppend | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    count: cdktf.numberToTerraform(struct!.count),
    data: cdktf.stringToTerraform(struct!.data),
    file_name: cdktf.stringToTerraform(struct!.fileName),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileAppendToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileAppend | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    count: {
      value: cdktf.numberToHclTerraform(struct!.count),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    data: {
      value: cdktf.stringToHclTerraform(struct!.data),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    file_name: {
      value: cdktf.stringToHclTerraform(struct!.fileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileAppendOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileAppend | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._count !== undefined) {
      hasAnyValues = true;
      internalValueResult.count = this._count;
    }
    if (this._data !== undefined) {
      hasAnyValues = true;
      internalValueResult.data = this._data;
    }
    if (this._fileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileName = this._fileName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileAppend | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._count = undefined;
      this._data = undefined;
      this._fileName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._count = value.count;
      this._data = value.data;
      this._fileName = value.fileName;
    }
  }

  // count - computed: false, optional: true, required: false
  private _count?: number; 
  public get count() {
    return this.getNumberAttribute('count');
  }
  public set count(value: number) {
    this._count = value;
  }
  public resetCount() {
    this._count = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get countInput() {
    return this._count;
  }

  // data - computed: false, optional: true, required: false
  private _data?: string; 
  public get data() {
    return this.getStringAttribute('data');
  }
  public set data(value: string) {
    this._data = value;
  }
  public resetData() {
    this._data = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dataInput() {
    return this._data;
  }

  // file_name - computed: false, optional: true, required: false
  private _fileName?: string; 
  public get fileName() {
    return this.getStringAttribute('file_name');
  }
  public set fileName(value: string) {
    this._fileName = value;
  }
  public resetFileName() {
    this._fileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileNameInput() {
    return this._fileName;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileCreate {
  /**
  * DirName is the directory name to create or delete.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#dir_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#dir_name}
  */
  readonly dirName?: string;
  /**
  * FileName is the name of the file to be created, modified, deleted, renamed, or appended.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_name}
  */
  readonly fileName?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileCreateToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileCreate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dir_name: cdktf.stringToTerraform(struct!.dirName),
    file_name: cdktf.stringToTerraform(struct!.fileName),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileCreateToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileCreate | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dir_name: {
      value: cdktf.stringToHclTerraform(struct!.dirName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    file_name: {
      value: cdktf.stringToHclTerraform(struct!.fileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileCreateOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileCreate | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dirName !== undefined) {
      hasAnyValues = true;
      internalValueResult.dirName = this._dirName;
    }
    if (this._fileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileName = this._fileName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileCreate | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dirName = undefined;
      this._fileName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dirName = value.dirName;
      this._fileName = value.fileName;
    }
  }

  // dir_name - computed: false, optional: true, required: false
  private _dirName?: string; 
  public get dirName() {
    return this.getStringAttribute('dir_name');
  }
  public set dirName(value: string) {
    this._dirName = value;
  }
  public resetDirName() {
    this._dirName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dirNameInput() {
    return this._dirName;
  }

  // file_name - computed: false, optional: true, required: false
  private _fileName?: string; 
  public get fileName() {
    return this.getStringAttribute('file_name');
  }
  public set fileName(value: string) {
    this._fileName = value;
  }
  public resetFileName() {
    this._fileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileNameInput() {
    return this._fileName;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileDelete {
  /**
  * DirName is the directory name to create or delete.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#dir_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#dir_name}
  */
  readonly dirName?: string;
  /**
  * FileName is the name of the file to be created, modified, deleted, renamed, or appended.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_name}
  */
  readonly fileName?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileDeleteToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileDelete | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dir_name: cdktf.stringToTerraform(struct!.dirName),
    file_name: cdktf.stringToTerraform(struct!.fileName),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileDeleteToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileDelete | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dir_name: {
      value: cdktf.stringToHclTerraform(struct!.dirName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    file_name: {
      value: cdktf.stringToHclTerraform(struct!.fileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileDeleteOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileDelete | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._dirName !== undefined) {
      hasAnyValues = true;
      internalValueResult.dirName = this._dirName;
    }
    if (this._fileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileName = this._fileName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileDelete | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._dirName = undefined;
      this._fileName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._dirName = value.dirName;
      this._fileName = value.fileName;
    }
  }

  // dir_name - computed: false, optional: true, required: false
  private _dirName?: string; 
  public get dirName() {
    return this.getStringAttribute('dir_name');
  }
  public set dirName(value: string) {
    this._dirName = value;
  }
  public resetDirName() {
    this._dirName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dirNameInput() {
    return this._dirName;
  }

  // file_name - computed: false, optional: true, required: false
  private _fileName?: string; 
  public get fileName() {
    return this.getStringAttribute('file_name');
  }
  public set fileName(value: string) {
    this._fileName = value;
  }
  public resetFileName() {
    this._fileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileNameInput() {
    return this._fileName;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileModify {
  /**
  * FileName is the name of the file to be created, modified, deleted, renamed, or appended.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_name}
  */
  readonly fileName?: string;
  /**
  * Privilege is the file privilege to be set.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#privilege DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#privilege}
  */
  readonly privilege?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileModifyToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileModify | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    file_name: cdktf.stringToTerraform(struct!.fileName),
    privilege: cdktf.numberToTerraform(struct!.privilege),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileModifyToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileModify | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    file_name: {
      value: cdktf.stringToHclTerraform(struct!.fileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    privilege: {
      value: cdktf.numberToHclTerraform(struct!.privilege),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileModifyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileModify | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._fileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileName = this._fileName;
    }
    if (this._privilege !== undefined) {
      hasAnyValues = true;
      internalValueResult.privilege = this._privilege;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileModify | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._fileName = undefined;
      this._privilege = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._fileName = value.fileName;
      this._privilege = value.privilege;
    }
  }

  // file_name - computed: false, optional: true, required: false
  private _fileName?: string; 
  public get fileName() {
    return this.getStringAttribute('file_name');
  }
  public set fileName(value: string) {
    this._fileName = value;
  }
  public resetFileName() {
    this._fileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileNameInput() {
    return this._fileName;
  }

  // privilege - computed: false, optional: true, required: false
  private _privilege?: number; 
  public get privilege() {
    return this.getNumberAttribute('privilege');
  }
  public set privilege(value: number) {
    this._privilege = value;
  }
  public resetPrivilege() {
    this._privilege = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get privilegeInput() {
    return this._privilege;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileRename {
  /**
  * DestFile is the name to be renamed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#dest_file DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#dest_file}
  */
  readonly destFile?: string;
  /**
  * SourceFile is the name need to be renamed.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#source_file DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#source_file}
  */
  readonly sourceFile?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileRenameToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileRename | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dest_file: cdktf.stringToTerraform(struct!.destFile),
    source_file: cdktf.stringToTerraform(struct!.sourceFile),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileRenameToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileRename | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dest_file: {
      value: cdktf.stringToHclTerraform(struct!.destFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    source_file: {
      value: cdktf.stringToHclTerraform(struct!.sourceFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileRenameOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileRename | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._destFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.destFile = this._destFile;
    }
    if (this._sourceFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.sourceFile = this._sourceFile;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileRename | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._destFile = undefined;
      this._sourceFile = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._destFile = value.destFile;
      this._sourceFile = value.sourceFile;
    }
  }

  // dest_file - computed: false, optional: true, required: false
  private _destFile?: string; 
  public get destFile() {
    return this.getStringAttribute('dest_file');
  }
  public set destFile(value: string) {
    this._destFile = value;
  }
  public resetDestFile() {
    this._destFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destFileInput() {
    return this._destFile;
  }

  // source_file - computed: false, optional: true, required: false
  private _sourceFile?: string; 
  public get sourceFile() {
    return this.getStringAttribute('source_file');
  }
  public set sourceFile(value: string) {
    this._sourceFile = value;
  }
  public resetSourceFile() {
    this._sourceFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sourceFileInput() {
    return this._sourceFile;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileReplace {
  /**
  * DestStr is the destination string of the file.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#dest_string DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#dest_string}
  */
  readonly destString?: string;
  /**
  * FileName is the name of the file to be created, modified, deleted, renamed, or appended.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_name DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_name}
  */
  readonly fileName?: string;
  /**
  * Line is the line number of the file to be replaced.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#line DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#line}
  */
  readonly line?: number;
  /**
  * OriginStr is the origin string of the file.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#origin_string DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#origin_string}
  */
  readonly originString?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileReplaceToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileReplace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    dest_string: cdktf.stringToTerraform(struct!.destString),
    file_name: cdktf.stringToTerraform(struct!.fileName),
    line: cdktf.numberToTerraform(struct!.line),
    origin_string: cdktf.stringToTerraform(struct!.originString),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileReplaceToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileReplace | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    dest_string: {
      value: cdktf.stringToHclTerraform(struct!.destString),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    file_name: {
      value: cdktf.stringToHclTerraform(struct!.fileName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    line: {
      value: cdktf.numberToHclTerraform(struct!.line),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    origin_string: {
      value: cdktf.stringToHclTerraform(struct!.originString),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileReplaceOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileReplace | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._destString !== undefined) {
      hasAnyValues = true;
      internalValueResult.destString = this._destString;
    }
    if (this._fileName !== undefined) {
      hasAnyValues = true;
      internalValueResult.fileName = this._fileName;
    }
    if (this._line !== undefined) {
      hasAnyValues = true;
      internalValueResult.line = this._line;
    }
    if (this._originString !== undefined) {
      hasAnyValues = true;
      internalValueResult.originString = this._originString;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosFileReplace | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._destString = undefined;
      this._fileName = undefined;
      this._line = undefined;
      this._originString = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._destString = value.destString;
      this._fileName = value.fileName;
      this._line = value.line;
      this._originString = value.originString;
    }
  }

  // dest_string - computed: false, optional: true, required: false
  private _destString?: string; 
  public get destString() {
    return this.getStringAttribute('dest_string');
  }
  public set destString(value: string) {
    this._destString = value;
  }
  public resetDestString() {
    this._destString = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get destStringInput() {
    return this._destString;
  }

  // file_name - computed: false, optional: true, required: false
  private _fileName?: string; 
  public get fileName() {
    return this.getStringAttribute('file_name');
  }
  public set fileName(value: string) {
    this._fileName = value;
  }
  public resetFileName() {
    this._fileName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get fileNameInput() {
    return this._fileName;
  }

  // line - computed: false, optional: true, required: false
  private _line?: number; 
  public get line() {
    return this.getNumberAttribute('line');
  }
  public set line(value: number) {
    this._line = value;
  }
  public resetLine() {
    this._line = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get lineInput() {
    return this._line;
  }

  // origin_string - computed: false, optional: true, required: false
  private _originString?: string; 
  public get originString() {
    return this.getStringAttribute('origin_string');
  }
  public set originString(value: string) {
    this._originString = value;
  }
  public resetOriginString() {
    this._originString = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get originStringInput() {
    return this._originString;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpAbort {
  /**
  * Code is a rule to select target by http status code in response
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#code DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#code}
  */
  readonly code?: string;
  /**
  * HTTP method
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * Match path of Uri with wildcard matches
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * The TCP port that the target service listens on
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Composed with one of the port of HTTP connection, we will only attack HTTP connection with port inside proxy_ports
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#proxy_ports DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#proxy_ports}
  */
  readonly proxyPorts: string[];
  /**
  * HTTP target: Request or Response
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#target DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#target}
  */
  readonly target: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpAbortToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpAbort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    code: cdktf.stringToTerraform(struct!.code),
    method: cdktf.stringToTerraform(struct!.method),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.numberToTerraform(struct!.port),
    proxy_ports: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.proxyPorts),
    target: cdktf.stringToTerraform(struct!.target),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpAbortToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpAbort | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    code: {
      value: cdktf.stringToHclTerraform(struct!.code),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    proxy_ports: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.proxyPorts),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    target: {
      value: cdktf.stringToHclTerraform(struct!.target),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpAbortOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpAbort | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._code !== undefined) {
      hasAnyValues = true;
      internalValueResult.code = this._code;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._proxyPorts !== undefined) {
      hasAnyValues = true;
      internalValueResult.proxyPorts = this._proxyPorts;
    }
    if (this._target !== undefined) {
      hasAnyValues = true;
      internalValueResult.target = this._target;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpAbort | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._code = undefined;
      this._method = undefined;
      this._path = undefined;
      this._port = undefined;
      this._proxyPorts = undefined;
      this._target = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._code = value.code;
      this._method = value.method;
      this._path = value.path;
      this._port = value.port;
      this._proxyPorts = value.proxyPorts;
      this._target = value.target;
    }
  }

  // code - computed: false, optional: true, required: false
  private _code?: string; 
  public get code() {
    return this.getStringAttribute('code');
  }
  public set code(value: string) {
    this._code = value;
  }
  public resetCode() {
    this._code = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get codeInput() {
    return this._code;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // proxy_ports - computed: false, optional: false, required: true
  private _proxyPorts?: string[]; 
  public get proxyPorts() {
    return this.getListAttribute('proxy_ports');
  }
  public set proxyPorts(value: string[]) {
    this._proxyPorts = value;
  }
  // Temporarily expose input value. Use with caution.
  public get proxyPortsInput() {
    return this._proxyPorts;
  }

  // target - computed: false, optional: false, required: true
  private _target?: string; 
  public get target() {
    return this.getStringAttribute('target');
  }
  public set target(value: string) {
    this._target = value;
  }
  // Temporarily expose input value. Use with caution.
  public get targetInput() {
    return this._target;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpConfig {
  /**
  * The config file path
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#file_path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#file_path}
  */
  readonly filePath?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpConfigToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    file_path: cdktf.stringToTerraform(struct!.filePath),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpConfigToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpConfig | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    file_path: {
      value: cdktf.stringToHclTerraform(struct!.filePath),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpConfigOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpConfig | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._filePath !== undefined) {
      hasAnyValues = true;
      internalValueResult.filePath = this._filePath;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpConfig | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._filePath = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._filePath = value.filePath;
    }
  }

  // file_path - computed: false, optional: true, required: false
  private _filePath?: string; 
  public get filePath() {
    return this.getStringAttribute('file_path');
  }
  public set filePath(value: string) {
    this._filePath = value;
  }
  public resetFilePath() {
    this._filePath = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get filePathInput() {
    return this._filePath;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpDelay {
  /**
  * Code is a rule to select target by http status code in response
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#code DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#code}
  */
  readonly code?: string;
  /**
  * Delay represents the delay of the target request/response
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#delay DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#delay}
  */
  readonly delay: string;
  /**
  * HTTP method
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * Match path of Uri with wildcard matches
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#path DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#path}
  */
  readonly path?: string;
  /**
  * The TCP port that the target service listens on
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * Composed with one of the port of HTTP connection, we will only attack HTTP connection with port inside proxy_ports
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#proxy_ports DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#proxy_ports}
  */
  readonly proxyPorts: string[];
  /**
  * HTTP target: Request or Response
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#target DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#target}
  */
  readonly target: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpDelayToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    code: cdktf.stringToTerraform(struct!.code),
    delay: cdktf.stringToTerraform(struct!.delay),
    method: cdktf.stringToTerraform(struct!.method),
    path: cdktf.stringToTerraform(struct!.path),
    port: cdktf.numberToTerraform(struct!.port),
    proxy_ports: cdktf.listMapper(cdktf.stringToTerraform, false)(struct!.proxyPorts),
    target: cdktf.stringToTerraform(struct!.target),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpDelayToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpDelay | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    code: {
      value: cdktf.stringToHclTerraform(struct!.code),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    delay: {
      value: cdktf.stringToHclTerraform(struct!.delay),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    path: {
      value: cdktf.stringToHclTerraform(struct!.path),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    proxy_ports: {
      value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(struct!.proxyPorts),
      isBlock: false,
      type: "list",
      storageClassType: "stringList",
    },
    target: {
      value: cdktf.stringToHclTerraform(struct!.target),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpDelayOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpDelay | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._code !== undefined) {
      hasAnyValues = true;
      internalValueResult.code = this._code;
    }
    if (this._delay !== undefined) {
      hasAnyValues = true;
      internalValueResult.delay = this._delay;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._path !== undefined) {
      hasAnyValues = true;
      internalValueResult.path = this._path;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._proxyPorts !== undefined) {
      hasAnyValues = true;
      internalValueResult.proxyPorts = this._proxyPorts;
    }
    if (this._target !== undefined) {
      hasAnyValues = true;
      internalValueResult.target = this._target;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpDelay | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._code = undefined;
      this._delay = undefined;
      this._method = undefined;
      this._path = undefined;
      this._port = undefined;
      this._proxyPorts = undefined;
      this._target = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._code = value.code;
      this._delay = value.delay;
      this._method = value.method;
      this._path = value.path;
      this._port = value.port;
      this._proxyPorts = value.proxyPorts;
      this._target = value.target;
    }
  }

  // code - computed: false, optional: true, required: false
  private _code?: string; 
  public get code() {
    return this.getStringAttribute('code');
  }
  public set code(value: string) {
    this._code = value;
  }
  public resetCode() {
    this._code = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get codeInput() {
    return this._code;
  }

  // delay - computed: false, optional: false, required: true
  private _delay?: string; 
  public get delay() {
    return this.getStringAttribute('delay');
  }
  public set delay(value: string) {
    this._delay = value;
  }
  // Temporarily expose input value. Use with caution.
  public get delayInput() {
    return this._delay;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // path - computed: false, optional: true, required: false
  private _path?: string; 
  public get path() {
    return this.getStringAttribute('path');
  }
  public set path(value: string) {
    this._path = value;
  }
  public resetPath() {
    this._path = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pathInput() {
    return this._path;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // proxy_ports - computed: false, optional: false, required: true
  private _proxyPorts?: string[]; 
  public get proxyPorts() {
    return this.getListAttribute('proxy_ports');
  }
  public set proxyPorts(value: string[]) {
    this._proxyPorts = value;
  }
  // Temporarily expose input value. Use with caution.
  public get proxyPortsInput() {
    return this._proxyPorts;
  }

  // target - computed: false, optional: false, required: true
  private _target?: string; 
  public get target() {
    return this.getStringAttribute('target');
  }
  public set target(value: string) {
    this._target = value;
  }
  // Temporarily expose input value. Use with caution.
  public get targetInput() {
    return this._target;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpRequest {
  /**
  * The number of requests to send
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#count DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#count}
  */
  readonly count?: number;
  /**
  * Enable connection pool
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#enable_conn_pool DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#enable_conn_pool}
  */
  readonly enableConnPool?: boolean | cdktf.IResolvable;
  /**
  * Request to send'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#url DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#url}
  */
  readonly url?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpRequestToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpRequest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    count: cdktf.numberToTerraform(struct!.count),
    enable_conn_pool: cdktf.booleanToTerraform(struct!.enableConnPool),
    url: cdktf.stringToTerraform(struct!.url),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpRequestToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpRequest | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    count: {
      value: cdktf.numberToHclTerraform(struct!.count),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    enable_conn_pool: {
      value: cdktf.booleanToHclTerraform(struct!.enableConnPool),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    url: {
      value: cdktf.stringToHclTerraform(struct!.url),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpRequestOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpRequest | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._count !== undefined) {
      hasAnyValues = true;
      internalValueResult.count = this._count;
    }
    if (this._enableConnPool !== undefined) {
      hasAnyValues = true;
      internalValueResult.enableConnPool = this._enableConnPool;
    }
    if (this._url !== undefined) {
      hasAnyValues = true;
      internalValueResult.url = this._url;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosHttpRequest | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._count = undefined;
      this._enableConnPool = undefined;
      this._url = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._count = value.count;
      this._enableConnPool = value.enableConnPool;
      this._url = value.url;
    }
  }

  // count - computed: false, optional: true, required: false
  private _count?: number; 
  public get count() {
    return this.getNumberAttribute('count');
  }
  public set count(value: number) {
    this._count = value;
  }
  public resetCount() {
    this._count = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get countInput() {
    return this._count;
  }

  // enable_conn_pool - computed: false, optional: true, required: false
  private _enableConnPool?: boolean | cdktf.IResolvable; 
  public get enableConnPool() {
    return this.getBooleanAttribute('enable_conn_pool');
  }
  public set enableConnPool(value: boolean | cdktf.IResolvable) {
    this._enableConnPool = value;
  }
  public resetEnableConnPool() {
    this._enableConnPool = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enableConnPoolInput() {
    return this._enableConnPool;
  }

  // url - computed: false, optional: true, required: false
  private _url?: string; 
  public get url() {
    return this.getStringAttribute('url');
  }
  public set url(value: string) {
    this._url = value;
  }
  public resetUrl() {
    this._url = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get urlInput() {
    return this._url;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmException {
  /**
  * Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#class DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#class}
  */
  readonly class?: string;
  /**
  * the exception which needs to throw for action 'exception'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#exception DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#exception}
  */
  readonly exception?: string;
  /**
  * the method in Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmExceptionToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmException | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    class: cdktf.stringToTerraform(struct!.class),
    exception: cdktf.stringToTerraform(struct!.exception),
    method: cdktf.stringToTerraform(struct!.method),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmExceptionToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmException | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    class: {
      value: cdktf.stringToHclTerraform(struct!.class),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    exception: {
      value: cdktf.stringToHclTerraform(struct!.exception),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmExceptionOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmException | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._class !== undefined) {
      hasAnyValues = true;
      internalValueResult.class = this._class;
    }
    if (this._exception !== undefined) {
      hasAnyValues = true;
      internalValueResult.exception = this._exception;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmException | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._class = undefined;
      this._exception = undefined;
      this._method = undefined;
      this._pid = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._class = value.class;
      this._exception = value.exception;
      this._method = value.method;
      this._pid = value.pid;
      this._port = value.port;
    }
  }

  // class - computed: false, optional: true, required: false
  private _class?: string; 
  public get class() {
    return this.getStringAttribute('class');
  }
  public set class(value: string) {
    this._class = value;
  }
  public resetClass() {
    this._class = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get classInput() {
    return this._class;
  }

  // exception - computed: false, optional: true, required: false
  private _exception?: string; 
  public get exception() {
    return this.getStringAttribute('exception');
  }
  public set exception(value: string) {
    this._exception = value;
  }
  public resetException() {
    this._exception = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exceptionInput() {
    return this._exception;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmGc {
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmGcToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmGc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmGcToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmGc | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmGcOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmGc | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmGc | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._pid = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._pid = value.pid;
      this._port = value.port;
    }
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmLatency {
  /**
  * Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#class DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#class}
  */
  readonly class?: string;
  /**
  * the latency duration for action 'latency', unit ms
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#latency}
  */
  readonly latency?: number;
  /**
  * the method in Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmLatencyToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmLatency | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    class: cdktf.stringToTerraform(struct!.class),
    latency: cdktf.numberToTerraform(struct!.latency),
    method: cdktf.stringToTerraform(struct!.method),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmLatencyToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmLatency | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    class: {
      value: cdktf.stringToHclTerraform(struct!.class),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    latency: {
      value: cdktf.numberToHclTerraform(struct!.latency),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmLatencyOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmLatency | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._class !== undefined) {
      hasAnyValues = true;
      internalValueResult.class = this._class;
    }
    if (this._latency !== undefined) {
      hasAnyValues = true;
      internalValueResult.latency = this._latency;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmLatency | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._class = undefined;
      this._latency = undefined;
      this._method = undefined;
      this._pid = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._class = value.class;
      this._latency = value.latency;
      this._method = value.method;
      this._pid = value.pid;
      this._port = value.port;
    }
  }

  // class - computed: false, optional: true, required: false
  private _class?: string; 
  public get class() {
    return this.getStringAttribute('class');
  }
  public set class(value: string) {
    this._class = value;
  }
  public resetClass() {
    this._class = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get classInput() {
    return this._class;
  }

  // latency - computed: false, optional: true, required: false
  private _latency?: number; 
  public get latency() {
    return this.getNumberAttribute('latency');
  }
  public set latency(value: number) {
    this._latency = value;
  }
  public resetLatency() {
    this._latency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get latencyInput() {
    return this._latency;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmMysql {
  /**
  * the match database default value is '', means match all database
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#database DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#database}
  */
  readonly database?: string;
  /**
  * The exception which needs to throw for action 'exception' or the exception message needs to throw in action 'mysql'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#exception DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#exception}
  */
  readonly exception?: string;
  /**
  * The latency duration for action 'latency' or the latency duration in action 'mysql'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#latency DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#latency}
  */
  readonly latency?: number;
  /**
  * the version of mysql-connector-java, only support 5.X.X(set to '5') and 8.X.X(set to '8') now
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mysql_connector_version DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mysql_connector_version}
  */
  readonly mysqlConnectorVersion?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * the match sql type default value is '', means match all SQL type. The value can be 'select', 'insert', 'update', 'delete', 'replace'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#sql_type DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#sql_type}
  */
  readonly sqlType?: string;
  /**
  * the match table default value is '', means match all table
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#table DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#table}
  */
  readonly table?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmMysqlToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmMysql | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    database: cdktf.stringToTerraform(struct!.database),
    exception: cdktf.stringToTerraform(struct!.exception),
    latency: cdktf.numberToTerraform(struct!.latency),
    mysql_connector_version: cdktf.stringToTerraform(struct!.mysqlConnectorVersion),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
    sql_type: cdktf.stringToTerraform(struct!.sqlType),
    table: cdktf.stringToTerraform(struct!.table),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmMysqlToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmMysql | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    database: {
      value: cdktf.stringToHclTerraform(struct!.database),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    exception: {
      value: cdktf.stringToHclTerraform(struct!.exception),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    latency: {
      value: cdktf.numberToHclTerraform(struct!.latency),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    mysql_connector_version: {
      value: cdktf.stringToHclTerraform(struct!.mysqlConnectorVersion),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    sql_type: {
      value: cdktf.stringToHclTerraform(struct!.sqlType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    table: {
      value: cdktf.stringToHclTerraform(struct!.table),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmMysqlOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmMysql | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._database !== undefined) {
      hasAnyValues = true;
      internalValueResult.database = this._database;
    }
    if (this._exception !== undefined) {
      hasAnyValues = true;
      internalValueResult.exception = this._exception;
    }
    if (this._latency !== undefined) {
      hasAnyValues = true;
      internalValueResult.latency = this._latency;
    }
    if (this._mysqlConnectorVersion !== undefined) {
      hasAnyValues = true;
      internalValueResult.mysqlConnectorVersion = this._mysqlConnectorVersion;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._sqlType !== undefined) {
      hasAnyValues = true;
      internalValueResult.sqlType = this._sqlType;
    }
    if (this._table !== undefined) {
      hasAnyValues = true;
      internalValueResult.table = this._table;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmMysql | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._database = undefined;
      this._exception = undefined;
      this._latency = undefined;
      this._mysqlConnectorVersion = undefined;
      this._pid = undefined;
      this._port = undefined;
      this._sqlType = undefined;
      this._table = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._database = value.database;
      this._exception = value.exception;
      this._latency = value.latency;
      this._mysqlConnectorVersion = value.mysqlConnectorVersion;
      this._pid = value.pid;
      this._port = value.port;
      this._sqlType = value.sqlType;
      this._table = value.table;
    }
  }

  // database - computed: false, optional: true, required: false
  private _database?: string; 
  public get database() {
    return this.getStringAttribute('database');
  }
  public set database(value: string) {
    this._database = value;
  }
  public resetDatabase() {
    this._database = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseInput() {
    return this._database;
  }

  // exception - computed: false, optional: true, required: false
  private _exception?: string; 
  public get exception() {
    return this.getStringAttribute('exception');
  }
  public set exception(value: string) {
    this._exception = value;
  }
  public resetException() {
    this._exception = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get exceptionInput() {
    return this._exception;
  }

  // latency - computed: false, optional: true, required: false
  private _latency?: number; 
  public get latency() {
    return this.getNumberAttribute('latency');
  }
  public set latency(value: number) {
    this._latency = value;
  }
  public resetLatency() {
    this._latency = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get latencyInput() {
    return this._latency;
  }

  // mysql_connector_version - computed: false, optional: true, required: false
  private _mysqlConnectorVersion?: string; 
  public get mysqlConnectorVersion() {
    return this.getStringAttribute('mysql_connector_version');
  }
  public set mysqlConnectorVersion(value: string) {
    this._mysqlConnectorVersion = value;
  }
  public resetMysqlConnectorVersion() {
    this._mysqlConnectorVersion = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mysqlConnectorVersionInput() {
    return this._mysqlConnectorVersion;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // sql_type - computed: false, optional: true, required: false
  private _sqlType?: string; 
  public get sqlType() {
    return this.getStringAttribute('sql_type');
  }
  public set sqlType(value: string) {
    this._sqlType = value;
  }
  public resetSqlType() {
    this._sqlType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get sqlTypeInput() {
    return this._sqlType;
  }

  // table - computed: false, optional: true, required: false
  private _table?: string; 
  public get table() {
    return this.getStringAttribute('table');
  }
  public set table(value: string) {
    this._table = value;
  }
  public resetTable() {
    this._table = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tableInput() {
    return this._table;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmReturn {
  /**
  * Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#class DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#class}
  */
  readonly class?: string;
  /**
  * the method in Java class
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#method DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#method}
  */
  readonly method?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * the return value for action 'return'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#value DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#value}
  */
  readonly value?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmReturnToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmReturn | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    class: cdktf.stringToTerraform(struct!.class),
    method: cdktf.stringToTerraform(struct!.method),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
    value: cdktf.stringToTerraform(struct!.value),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmReturnToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmReturn | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    class: {
      value: cdktf.stringToHclTerraform(struct!.class),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    method: {
      value: cdktf.stringToHclTerraform(struct!.method),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    value: {
      value: cdktf.stringToHclTerraform(struct!.value),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmReturnOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmReturn | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._class !== undefined) {
      hasAnyValues = true;
      internalValueResult.class = this._class;
    }
    if (this._method !== undefined) {
      hasAnyValues = true;
      internalValueResult.method = this._method;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._value !== undefined) {
      hasAnyValues = true;
      internalValueResult.value = this._value;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmReturn | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._class = undefined;
      this._method = undefined;
      this._pid = undefined;
      this._port = undefined;
      this._value = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._class = value.class;
      this._method = value.method;
      this._pid = value.pid;
      this._port = value.port;
      this._value = value.value;
    }
  }

  // class - computed: false, optional: true, required: false
  private _class?: string; 
  public get class() {
    return this.getStringAttribute('class');
  }
  public set class(value: string) {
    this._class = value;
  }
  public resetClass() {
    this._class = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get classInput() {
    return this._class;
  }

  // method - computed: false, optional: true, required: false
  private _method?: string; 
  public get method() {
    return this.getStringAttribute('method');
  }
  public set method(value: string) {
    this._method = value;
  }
  public resetMethod() {
    this._method = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get methodInput() {
    return this._method;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // value - computed: false, optional: true, required: false
  private _value?: string; 
  public get value() {
    return this.getStringAttribute('value');
  }
  public set value(value: string) {
    this._value = value;
  }
  public resetValue() {
    this._value = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get valueInput() {
    return this._value;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmRuleData {
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * RuleData used to save the rule file's data, will use it when recover
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rule_data DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rule_data}
  */
  readonly ruleData?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmRuleDataToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmRuleData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
    rule_data: cdktf.stringToTerraform(struct!.ruleData),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmRuleDataToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmRuleData | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rule_data: {
      value: cdktf.stringToHclTerraform(struct!.ruleData),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmRuleDataOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmRuleData | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._ruleData !== undefined) {
      hasAnyValues = true;
      internalValueResult.ruleData = this._ruleData;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmRuleData | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._pid = undefined;
      this._port = undefined;
      this._ruleData = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._pid = value.pid;
      this._port = value.port;
      this._ruleData = value.ruleData;
    }
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // rule_data - computed: false, optional: true, required: false
  private _ruleData?: string; 
  public get ruleData() {
    return this.getStringAttribute('rule_data');
  }
  public set ruleData(value: string) {
    this._ruleData = value;
  }
  public resetRuleData() {
    this._ruleData = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ruleDataInput() {
    return this._ruleData;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmStress {
  /**
  * the CPU core number need to use, only set it when action is stress
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#cpu_count DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#cpu_count}
  */
  readonly cpuCount?: number;
  /**
  * the memory type need to locate, only set it when action is stress, the value can be 'stack' or 'heap'
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#mem_type DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#mem_type}
  */
  readonly memType?: string;
  /**
  * the pid of Java process which needs to attach
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#pid DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#pid}
  */
  readonly pid?: number;
  /**
  * the port of agent server, default 9277
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmStressToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmStress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    cpu_count: cdktf.numberToTerraform(struct!.cpuCount),
    mem_type: cdktf.stringToTerraform(struct!.memType),
    pid: cdktf.numberToTerraform(struct!.pid),
    port: cdktf.numberToTerraform(struct!.port),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmStressToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmStress | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    cpu_count: {
      value: cdktf.numberToHclTerraform(struct!.cpuCount),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    mem_type: {
      value: cdktf.stringToHclTerraform(struct!.memType),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    pid: {
      value: cdktf.numberToHclTerraform(struct!.pid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmStressOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmStress | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._cpuCount !== undefined) {
      hasAnyValues = true;
      internalValueResult.cpuCount = this._cpuCount;
    }
    if (this._memType !== undefined) {
      hasAnyValues = true;
      internalValueResult.memType = this._memType;
    }
    if (this._pid !== undefined) {
      hasAnyValues = true;
      internalValueResult.pid = this._pid;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosJvmStress | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._cpuCount = undefined;
      this._memType = undefined;
      this._pid = undefined;
      this._port = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._cpuCount = value.cpuCount;
      this._memType = value.memType;
      this._pid = value.pid;
      this._port = value.port;
    }
  }

  // cpu_count - computed: false, optional: true, required: false
  private _cpuCount?: number; 
  public get cpuCount() {
    return this.getNumberAttribute('cpu_count');
  }
  public set cpuCount(value: number) {
    this._cpuCount = value;
  }
  public resetCpuCount() {
    this._cpuCount = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cpuCountInput() {
    return this._cpuCount;
  }

  // mem_type - computed: false, optional: true, required: false
  private _memType?: string; 
  public get memType() {
    return this.getStringAttribute('mem_type');
  }
  public set memType(value: string) {
    this._memType = value;
  }
  public resetMemType() {
    this._memType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get memTypeInput() {
    return this._memType;
  }

  // pid - computed: false, optional: true, required: false
  private _pid?: number; 
  public get pid() {
    return this.getNumberAttribute('pid');
  }
  public set pid(value: number) {
    this._pid = value;
  }
  public resetPid() {
    this._pid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pidInput() {
    return this._pid;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFill {
  /**
  * The host of kafka server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#host DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * The max bytes to fill
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#max_bytes DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#max_bytes}
  */
  readonly maxBytes?: number;
  /**
  * The size of each message
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#message_size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#message_size}
  */
  readonly messageSize?: number;
  /**
  * The password of kafka client
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#password DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#password}
  */
  readonly password?: string;
  /**
  * The port of kafka server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * The command to reload kafka config
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#reload_command DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#reload_command}
  */
  readonly reloadCommand?: string;
  /**
  * The topic to attack
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#topic DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#topic}
  */
  readonly topic?: string;
  /**
  * The username of kafka client
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#username DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#username}
  */
  readonly username?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFillToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFill | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    max_bytes: cdktf.numberToTerraform(struct!.maxBytes),
    message_size: cdktf.numberToTerraform(struct!.messageSize),
    password: cdktf.stringToTerraform(struct!.password),
    port: cdktf.numberToTerraform(struct!.port),
    reload_command: cdktf.stringToTerraform(struct!.reloadCommand),
    topic: cdktf.stringToTerraform(struct!.topic),
    username: cdktf.stringToTerraform(struct!.username),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFillToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFill | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    max_bytes: {
      value: cdktf.numberToHclTerraform(struct!.maxBytes),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    message_size: {
      value: cdktf.numberToHclTerraform(struct!.messageSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    reload_command: {
      value: cdktf.stringToHclTerraform(struct!.reloadCommand),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    username: {
      value: cdktf.stringToHclTerraform(struct!.username),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFillOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFill | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._maxBytes !== undefined) {
      hasAnyValues = true;
      internalValueResult.maxBytes = this._maxBytes;
    }
    if (this._messageSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.messageSize = this._messageSize;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._reloadCommand !== undefined) {
      hasAnyValues = true;
      internalValueResult.reloadCommand = this._reloadCommand;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._username !== undefined) {
      hasAnyValues = true;
      internalValueResult.username = this._username;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFill | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._maxBytes = undefined;
      this._messageSize = undefined;
      this._password = undefined;
      this._port = undefined;
      this._reloadCommand = undefined;
      this._topic = undefined;
      this._username = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._maxBytes = value.maxBytes;
      this._messageSize = value.messageSize;
      this._password = value.password;
      this._port = value.port;
      this._reloadCommand = value.reloadCommand;
      this._topic = value.topic;
      this._username = value.username;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // max_bytes - computed: false, optional: true, required: false
  private _maxBytes?: number; 
  public get maxBytes() {
    return this.getNumberAttribute('max_bytes');
  }
  public set maxBytes(value: number) {
    this._maxBytes = value;
  }
  public resetMaxBytes() {
    this._maxBytes = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxBytesInput() {
    return this._maxBytes;
  }

  // message_size - computed: false, optional: true, required: false
  private _messageSize?: number; 
  public get messageSize() {
    return this.getNumberAttribute('message_size');
  }
  public set messageSize(value: number) {
    this._messageSize = value;
  }
  public resetMessageSize() {
    this._messageSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageSizeInput() {
    return this._messageSize;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // reload_command - computed: false, optional: true, required: false
  private _reloadCommand?: string; 
  public get reloadCommand() {
    return this.getStringAttribute('reload_command');
  }
  public set reloadCommand(value: string) {
    this._reloadCommand = value;
  }
  public resetReloadCommand() {
    this._reloadCommand = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get reloadCommandInput() {
    return this._reloadCommand;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // username - computed: false, optional: true, required: false
  private _username?: string; 
  public get username() {
    return this.getStringAttribute('username');
  }
  public set username(value: string) {
    this._username = value;
  }
  public resetUsername() {
    this._username = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usernameInput() {
    return this._username;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFlood {
  /**
  * The host of kafka server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#host DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#host}
  */
  readonly host?: string;
  /**
  * The size of each message
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#message_size DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#message_size}
  */
  readonly messageSize?: number;
  /**
  * The password of kafka client
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#password DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#password}
  */
  readonly password?: string;
  /**
  * The port of kafka server
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#port DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#port}
  */
  readonly port?: number;
  /**
  * The number of worker threads
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#threads DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#threads}
  */
  readonly threads?: number;
  /**
  * The topic to attack
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#topic DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#topic}
  */
  readonly topic?: string;
  /**
  * The username of kafka client
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#username DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#username}
  */
  readonly username?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFloodToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFlood | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    host: cdktf.stringToTerraform(struct!.host),
    message_size: cdktf.numberToTerraform(struct!.messageSize),
    password: cdktf.stringToTerraform(struct!.password),
    port: cdktf.numberToTerraform(struct!.port),
    threads: cdktf.numberToTerraform(struct!.threads),
    topic: cdktf.stringToTerraform(struct!.topic),
    username: cdktf.stringToTerraform(struct!.username),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFloodToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFlood | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    host: {
      value: cdktf.stringToHclTerraform(struct!.host),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    message_size: {
      value: cdktf.numberToHclTerraform(struct!.messageSize),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    password: {
      value: cdktf.stringToHclTerraform(struct!.password),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    port: {
      value: cdktf.numberToHclTerraform(struct!.port),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    threads: {
      value: cdktf.numberToHclTerraform(struct!.threads),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    username: {
      value: cdktf.stringToHclTerraform(struct!.username),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFloodOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFlood | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._host !== undefined) {
      hasAnyValues = true;
      internalValueResult.host = this._host;
    }
    if (this._messageSize !== undefined) {
      hasAnyValues = true;
      internalValueResult.messageSize = this._messageSize;
    }
    if (this._password !== undefined) {
      hasAnyValues = true;
      internalValueResult.password = this._password;
    }
    if (this._port !== undefined) {
      hasAnyValues = true;
      internalValueResult.port = this._port;
    }
    if (this._threads !== undefined) {
      hasAnyValues = true;
      internalValueResult.threads = this._threads;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    if (this._username !== undefined) {
      hasAnyValues = true;
      internalValueResult.username = this._username;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaFlood | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._host = undefined;
      this._messageSize = undefined;
      this._password = undefined;
      this._port = undefined;
      this._threads = undefined;
      this._topic = undefined;
      this._username = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._host = value.host;
      this._messageSize = value.messageSize;
      this._password = value.password;
      this._port = value.port;
      this._threads = value.threads;
      this._topic = value.topic;
      this._username = value.username;
    }
  }

  // host - computed: false, optional: true, required: false
  private _host?: string; 
  public get host() {
    return this.getStringAttribute('host');
  }
  public set host(value: string) {
    this._host = value;
  }
  public resetHost() {
    this._host = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostInput() {
    return this._host;
  }

  // message_size - computed: false, optional: true, required: false
  private _messageSize?: number; 
  public get messageSize() {
    return this.getNumberAttribute('message_size');
  }
  public set messageSize(value: number) {
    this._messageSize = value;
  }
  public resetMessageSize() {
    this._messageSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get messageSizeInput() {
    return this._messageSize;
  }

  // password - computed: false, optional: true, required: false
  private _password?: string; 
  public get password() {
    return this.getStringAttribute('password');
  }
  public set password(value: string) {
    this._password = value;
  }
  public resetPassword() {
    this._password = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get passwordInput() {
    return this._password;
  }

  // port - computed: false, optional: true, required: false
  private _port?: number; 
  public get port() {
    return this.getNumberAttribute('port');
  }
  public set port(value: number) {
    this._port = value;
  }
  public resetPort() {
    this._port = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get portInput() {
    return this._port;
  }

  // threads - computed: false, optional: true, required: false
  private _threads?: number; 
  public get threads() {
    return this.getNumberAttribute('threads');
  }
  public set threads(value: number) {
    this._threads = value;
  }
  public resetThreads() {
    this._threads = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get threadsInput() {
    return this._threads;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }

  // username - computed: false, optional: true, required: false
  private _username?: string; 
  public get username() {
    return this.getStringAttribute('username');
  }
  public set username(value: string) {
    this._username = value;
  }
  public resetUsername() {
    this._username = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get usernameInput() {
    return this._username;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaIo {
  /**
  * The path of server config
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#config_file DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#config_file}
  */
  readonly configFile?: string;
  /**
  * Make kafka cluster non-readable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#non_readable DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#non_readable}
  */
  readonly nonReadable?: boolean | cdktf.IResolvable;
  /**
  * Make kafka cluster non-writable
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#non_writable DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#non_writable}
  */
  readonly nonWritable?: boolean | cdktf.IResolvable;
  /**
  * The topic to attack
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#topic DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#topic}
  */
  readonly topic?: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaIoToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaIo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    config_file: cdktf.stringToTerraform(struct!.configFile),
    non_readable: cdktf.booleanToTerraform(struct!.nonReadable),
    non_writable: cdktf.booleanToTerraform(struct!.nonWritable),
    topic: cdktf.stringToTerraform(struct!.topic),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaIoToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaIo | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    config_file: {
      value: cdktf.stringToHclTerraform(struct!.configFile),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    non_readable: {
      value: cdktf.booleanToHclTerraform(struct!.nonReadable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    non_writable: {
      value: cdktf.booleanToHclTerraform(struct!.nonWritable),
      isBlock: false,
      type: "simple",
      storageClassType: "boolean",
    },
    topic: {
      value: cdktf.stringToHclTerraform(struct!.topic),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaIoOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaIo | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._configFile !== undefined) {
      hasAnyValues = true;
      internalValueResult.configFile = this._configFile;
    }
    if (this._nonReadable !== undefined) {
      hasAnyValues = true;
      internalValueResult.nonReadable = this._nonReadable;
    }
    if (this._nonWritable !== undefined) {
      hasAnyValues = true;
      internalValueResult.nonWritable = this._nonWritable;
    }
    if (this._topic !== undefined) {
      hasAnyValues = true;
      internalValueResult.topic = this._topic;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosKafkaIo | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._configFile = undefined;
      this._nonReadable = undefined;
      this._nonWritable = undefined;
      this._topic = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._configFile = value.configFile;
      this._nonReadable = value.nonReadable;
      this._nonWritable = value.nonWritable;
      this._topic = value.topic;
    }
  }

  // config_file - computed: false, optional: true, required: false
  private _configFile?: string; 
  public get configFile() {
    return this.getStringAttribute('config_file');
  }
  public set configFile(value: string) {
    this._configFile = value;
  }
  public resetConfigFile() {
    this._configFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get configFileInput() {
    return this._configFile;
  }

  // non_readable - computed: false, optional: true, required: false
  private _nonReadable?: boolean | cdktf.IResolvable; 
  public get nonReadable() {
    return this.getBooleanAttribute('non_readable');
  }
  public set nonReadable(value: boolean | cdktf.IResolvable) {
    this._nonReadable = value;
  }
  public resetNonReadable() {
    this._nonReadable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nonReadableInput() {
    return this._nonReadable;
  }

  // non_writable - computed: false, optional: true, required: false
  private _nonWritable?: boolean | cdktf.IResolvable; 
  public get nonWritable() {
    return this.getBooleanAttribute('non_writable');
  }
  public set nonWritable(value: boolean | cdktf.IResolvable) {
    this._nonWritable = value;
  }
  public resetNonWritable() {
    this._nonWritable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nonWritableInput() {
    return this._nonWritable;
  }

  // topic - computed: false, optional: true, required: false
  private _topic?: string; 
  public get topic() {
    return this.getStringAttribute('topic');
  }
  public set topic(value: string) {
    this._topic = value;
  }
  public resetTopic() {
    this._topic = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get topicInput() {
    return this._topic;
  }
}
export interface DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosNetworkBandwidth {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#buffer DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#buffer}
  */
  readonly buffer: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#device DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#device}
  */
  readonly device?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#hostname DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#hostname}
  */
  readonly hostname?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#ip_address DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#ip_address}
  */
  readonly ipAddress?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#limit DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#limit}
  */
  readonly limit: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#minburst DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#minburst}
  */
  readonly minburst?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#peakrate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#peakrate}
  */
  readonly peakrate?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/metio/k8s/2025.10.20/docs/data-sources/chaos_mesh_org_schedule_v1alpha1_manifest#rate DataK8SChaosMeshOrgScheduleV1Alpha1Manifest#rate}
  */
  readonly rate: string;
}

export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosNetworkBandwidthToTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosNetworkBandwidth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    buffer: cdktf.numberToTerraform(struct!.buffer),
    device: cdktf.stringToTerraform(struct!.device),
    hostname: cdktf.stringToTerraform(struct!.hostname),
    ip_address: cdktf.stringToTerraform(struct!.ipAddress),
    limit: cdktf.numberToTerraform(struct!.limit),
    minburst: cdktf.numberToTerraform(struct!.minburst),
    peakrate: cdktf.numberToTerraform(struct!.peakrate),
    rate: cdktf.stringToTerraform(struct!.rate),
  }
}


export function dataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosNetworkBandwidthToHclTerraform(struct?: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosNetworkBandwidth | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    buffer: {
      value: cdktf.numberToHclTerraform(struct!.buffer),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    device: {
      value: cdktf.stringToHclTerraform(struct!.device),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    hostname: {
      value: cdktf.stringToHclTerraform(struct!.hostname),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip_address: {
      value: cdktf.stringToHclTerraform(struct!.ipAddress),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    limit: {
      value: cdktf.numberToHclTerraform(struct!.limit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    minburst: {
      value: cdktf.numberToHclTerraform(struct!.minburst),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    peakrate: {
      value: cdktf.numberToHclTerraform(struct!.peakrate),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    rate: {
      value: cdktf.stringToHclTerraform(struct!.rate),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosNetworkBandwidthOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false);
  }

  public get internalValue(): DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosNetworkBandwidth | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._buffer !== undefined) {
      hasAnyValues = true;
      internalValueResult.buffer = this._buffer;
    }
    if (this._device !== undefined) {
      hasAnyValues = true;
      internalValueResult.device = this._device;
    }
    if (this._hostname !== undefined) {
      hasAnyValues = true;
      internalValueResult.hostname = this._hostname;
    }
    if (this._ipAddress !== undefined) {
      hasAnyValues = true;
      internalValueResult.ipAddress = this._ipAddress;
    }
    if (this._limit !== undefined) {
      hasAnyValues = true;
      internalValueResult.limit = this._limit;
    }
    if (this._minburst !== undefined) {
      hasAnyValues = true;
      internalValueResult.minburst = this._minburst;
    }
    if (this._peakrate !== undefined) {
      hasAnyValues = true;
      internalValueResult.peakrate = this._peakrate;
    }
    if (this._rate !== undefined) {
      hasAnyValues = true;
      internalValueResult.rate = this._rate;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DataK8SChaosMeshOrgScheduleV1Alpha1ManifestSpecWorkflowTemplatesPhysicalmachineChaosNetworkBandwidth | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._buffer = undefined;
      this._device = undefined;
      this._hostname = undefined;
      this._ipAddress = undefined;
      this._limit = undefined;
      this._minburst = undefined;
      this._peakrate = undefined;
      this._rate = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._buffer = value.buffer;
      this._device = value.device;
      this._hostname = value.hostname;
      this._ipAddress = value.ipAddress;
      this._limit = value.limit;
      this._minburst = value.minburst;
      this._peakrate = value.peakrate;
      this._rate = value.rate;
    }
  }

  // buffer - computed: false, optional: false, required: true
  private _buffer?: number; 
  public get buffer() {
    return this.getNumberAttribute('buffer');
  }
  public set buffer(value: number) {
    this._buffer = value;
  }
  // Temporarily expose input value. Use with caution.
  public get bufferInput() {
    return this._buffer;
  }

  // device - computed: false, optional: true, required: false
  private _device?: string; 
  public get device() {
    return this.getStringAttribute('device');
  }
  public set device(value: string) {
    this._device = value;
  }
  public resetDevice() {
    this._device = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get deviceInput() {
    return this._device;
  }

  // hostname - computed: false, optional: true, required: false
  private _hostname?: string; 
  public get hostname() {
    return this.getStringAttribute('hostname');
  }
  public set hostname(value: string) {
    this._hostname = value;
  }
  public resetHostname() {
    this._hostname = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get hostnameInput() {
    return this._hostname;
  }

  // ip_address - computed: false, optional: true, required: false
  private _ipAddress?: string; 
  public get ipAddress() {
    return this.getStringAttribute('ip_address');
  }
  public set ipAddress(value: string) {
    this._ipAddress = value;
  }
  public resetIpAddress() {
    this._ipAddress = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipAddressInput() {
    return this._ipAddress;
  }

  // limit - computed: false, optional: false, required: true
  private _limit?: number; 
  public get limit() {
    return this.getNumberAttribute('limit');
  }
  public set limit(value: number) {
    this._limit = value;
  }
  // Temporarily expose input value. Use with caution.
  public get limitInput() {
    return this._limit;
  }

  // minburst - computed: false, optional: true, required: false
  private _minburst?: number; 
  public get minburst() {
    return this.getNumberAttribute('minburst');
  }
  public set minburst(value: number) {
    this._minburst = value;
  }
  public resetMinburst() {
    this._minburst = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get minburstInput() {
    return this._minburst;
  }

  // peakrate - computed: false, optional: true, required: false
  private _peakrate?: number; 
  public get peakrate() {
    return this.getNumberAttribute('peakrate');
  }
  public set peakrate(value: number) {
    this._peakrate = value;
  }
  public resetPeakrate() {
    this._peakrate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get peakrateInput() {
    return this._peakrate;
  }

  // rate - computed: false, optional: false, required: true
  private _rate?: string; 
  public get rate() {
    return this.getStringAttribute('rate');
  }
  public set rate(value: string) {
    this._rate = value;
  }
  // Temporarily expose input value. Use with caution.
  public get rateInput() {
    return this._rate;
  }
}
