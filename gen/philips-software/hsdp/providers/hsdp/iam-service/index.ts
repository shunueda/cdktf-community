// https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface IamServiceConfig extends cdktf.TerraformMetaArguments {
  /**
  * The application ID this service falls under.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#application_id IamService#application_id}
  */
  readonly applicationId: string;
  /**
  * Default scopes. You do not have to specify these explicitly when requesting a token.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#default_scopes IamService#default_scopes}
  */
  readonly defaultScopes: string[];
  /**
  * The service description.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#description IamService#description}
  */
  readonly description: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#id IamService#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * The service name.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#name IamService#name}
  */
  readonly name: string;
  /**
  * List of supported scopes for this service.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#scopes IamService#scopes}
  */
  readonly scopes: string[];
  /**
  * X509 Certificate in PEM format. When provided, overrides the generated certificate / private key combination of the IAM service. This gives you full control over the credentials. When not specified, a private key will be generated by IAM.
  * Mutually exclusive with `self_managed_private_key`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#self_managed_certificate IamService#self_managed_certificate}
  */
  readonly selfManagedCertificate?: string;
  /**
  * X509 Certificate in PEM format. When provided, overrides the generated certificate / private key combination of the IAM service. This gives you full control over the credentials. When not specified, a private key will be generated by IAM.
  * Mutually exclusive with `self_managed_certificate`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#self_managed_certificate_nonsensitive IamService#self_managed_certificate_nonsensitive}
  */
  readonly selfManagedCertificateNonsensitive?: string;
  /**
  * Sets the certificate validity. When not specified, the certificate will have a validity of 5 years.
  * Only applicable when `self_managed_private_key` is used
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#self_managed_expires_on IamService#self_managed_expires_on}
  */
  readonly selfManagedExpiresOn?: string;
  /**
  * RSA private key in PEM format. When provided, overrides the generated certificate / private key combination of the IAM service. This gives you full control over the credentials. When not specified, a private key will be generated by IAM.
  * Mutually exclusive with `self_managed_certificate`
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#self_managed_private_key IamService#self_managed_private_key}
  */
  readonly selfManagedPrivateKey?: string;
  /**
  * Access Token Lifetime (in seconds). Default: 1800 (30 minutes), Maximum: 2592000 (30 days).
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#token_validity IamService#token_validity}
  */
  readonly tokenValidity?: number;
  /**
  * The validity of the service credentials in months.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#validity IamService#validity}
  */
  readonly validity?: number;
}

/**
* Represents a {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service hsdp_iam_service}
*/
export class IamService extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "hsdp_iam_service";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a IamService resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the IamService to import
  * @param importFromId The id of the existing IamService that should be imported. Refer to the {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the IamService to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "hsdp_iam_service", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/philips-software/hsdp/0.70.0/docs/resources/iam_service hsdp_iam_service} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options IamServiceConfig
  */
  public constructor(scope: Construct, id: string, config: IamServiceConfig) {
    super(scope, id, {
      terraformResourceType: 'hsdp_iam_service',
      terraformGeneratorMetadata: {
        providerName: 'hsdp',
        providerVersion: '0.70.0'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._applicationId = config.applicationId;
    this._defaultScopes = config.defaultScopes;
    this._description = config.description;
    this._id = config.id;
    this._name = config.name;
    this._scopes = config.scopes;
    this._selfManagedCertificate = config.selfManagedCertificate;
    this._selfManagedCertificateNonsensitive = config.selfManagedCertificateNonsensitive;
    this._selfManagedExpiresOn = config.selfManagedExpiresOn;
    this._selfManagedPrivateKey = config.selfManagedPrivateKey;
    this._tokenValidity = config.tokenValidity;
    this._validity = config.validity;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // application_id - computed: false, optional: false, required: true
  private _applicationId?: string; 
  public get applicationId() {
    return this.getStringAttribute('application_id');
  }
  public set applicationId(value: string) {
    this._applicationId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get applicationIdInput() {
    return this._applicationId;
  }

  // default_scopes - computed: false, optional: false, required: true
  private _defaultScopes?: string[]; 
  public get defaultScopes() {
    return cdktf.Fn.tolist(this.getListAttribute('default_scopes'));
  }
  public set defaultScopes(value: string[]) {
    this._defaultScopes = value;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultScopesInput() {
    return this._defaultScopes;
  }

  // description - computed: false, optional: false, required: true
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // expires_on - computed: true, optional: false, required: false
  public get expiresOn() {
    return this.getStringAttribute('expires_on');
  }

  // id - computed: true, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // name - computed: false, optional: false, required: true
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // organization_id - computed: true, optional: false, required: false
  public get organizationId() {
    return this.getStringAttribute('organization_id');
  }

  // private_key - computed: true, optional: false, required: false
  public get privateKey() {
    return this.getStringAttribute('private_key');
  }

  // scopes - computed: false, optional: false, required: true
  private _scopes?: string[]; 
  public get scopes() {
    return cdktf.Fn.tolist(this.getListAttribute('scopes'));
  }
  public set scopes(value: string[]) {
    this._scopes = value;
  }
  // Temporarily expose input value. Use with caution.
  public get scopesInput() {
    return this._scopes;
  }

  // self_managed_certificate - computed: false, optional: true, required: false
  private _selfManagedCertificate?: string; 
  public get selfManagedCertificate() {
    return this.getStringAttribute('self_managed_certificate');
  }
  public set selfManagedCertificate(value: string) {
    this._selfManagedCertificate = value;
  }
  public resetSelfManagedCertificate() {
    this._selfManagedCertificate = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfManagedCertificateInput() {
    return this._selfManagedCertificate;
  }

  // self_managed_certificate_nonsensitive - computed: false, optional: true, required: false
  private _selfManagedCertificateNonsensitive?: string; 
  public get selfManagedCertificateNonsensitive() {
    return this.getStringAttribute('self_managed_certificate_nonsensitive');
  }
  public set selfManagedCertificateNonsensitive(value: string) {
    this._selfManagedCertificateNonsensitive = value;
  }
  public resetSelfManagedCertificateNonsensitive() {
    this._selfManagedCertificateNonsensitive = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfManagedCertificateNonsensitiveInput() {
    return this._selfManagedCertificateNonsensitive;
  }

  // self_managed_expires_on - computed: false, optional: true, required: false
  private _selfManagedExpiresOn?: string; 
  public get selfManagedExpiresOn() {
    return this.getStringAttribute('self_managed_expires_on');
  }
  public set selfManagedExpiresOn(value: string) {
    this._selfManagedExpiresOn = value;
  }
  public resetSelfManagedExpiresOn() {
    this._selfManagedExpiresOn = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfManagedExpiresOnInput() {
    return this._selfManagedExpiresOn;
  }

  // self_managed_private_key - computed: false, optional: true, required: false
  private _selfManagedPrivateKey?: string; 
  public get selfManagedPrivateKey() {
    return this.getStringAttribute('self_managed_private_key');
  }
  public set selfManagedPrivateKey(value: string) {
    this._selfManagedPrivateKey = value;
  }
  public resetSelfManagedPrivateKey() {
    this._selfManagedPrivateKey = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get selfManagedPrivateKeyInput() {
    return this._selfManagedPrivateKey;
  }

  // service_id - computed: true, optional: false, required: false
  public get serviceId() {
    return this.getStringAttribute('service_id');
  }

  // token_validity - computed: false, optional: true, required: false
  private _tokenValidity?: number; 
  public get tokenValidity() {
    return this.getNumberAttribute('token_validity');
  }
  public set tokenValidity(value: number) {
    this._tokenValidity = value;
  }
  public resetTokenValidity() {
    this._tokenValidity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get tokenValidityInput() {
    return this._tokenValidity;
  }

  // validity - computed: false, optional: true, required: false
  private _validity?: number; 
  public get validity() {
    return this.getNumberAttribute('validity');
  }
  public set validity(value: number) {
    this._validity = value;
  }
  public resetValidity() {
    this._validity = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get validityInput() {
    return this._validity;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      application_id: cdktf.stringToTerraform(this._applicationId),
      default_scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(this._defaultScopes),
      description: cdktf.stringToTerraform(this._description),
      id: cdktf.stringToTerraform(this._id),
      name: cdktf.stringToTerraform(this._name),
      scopes: cdktf.listMapper(cdktf.stringToTerraform, false)(this._scopes),
      self_managed_certificate: cdktf.stringToTerraform(this._selfManagedCertificate),
      self_managed_certificate_nonsensitive: cdktf.stringToTerraform(this._selfManagedCertificateNonsensitive),
      self_managed_expires_on: cdktf.stringToTerraform(this._selfManagedExpiresOn),
      self_managed_private_key: cdktf.stringToTerraform(this._selfManagedPrivateKey),
      token_validity: cdktf.numberToTerraform(this._tokenValidity),
      validity: cdktf.numberToTerraform(this._validity),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      application_id: {
        value: cdktf.stringToHclTerraform(this._applicationId),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      default_scopes: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._defaultScopes),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      description: {
        value: cdktf.stringToHclTerraform(this._description),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      id: {
        value: cdktf.stringToHclTerraform(this._id),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      name: {
        value: cdktf.stringToHclTerraform(this._name),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      scopes: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._scopes),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      self_managed_certificate: {
        value: cdktf.stringToHclTerraform(this._selfManagedCertificate),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      self_managed_certificate_nonsensitive: {
        value: cdktf.stringToHclTerraform(this._selfManagedCertificateNonsensitive),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      self_managed_expires_on: {
        value: cdktf.stringToHclTerraform(this._selfManagedExpiresOn),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      self_managed_private_key: {
        value: cdktf.stringToHclTerraform(this._selfManagedPrivateKey),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      token_validity: {
        value: cdktf.numberToHclTerraform(this._tokenValidity),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      validity: {
        value: cdktf.numberToHclTerraform(this._validity),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
