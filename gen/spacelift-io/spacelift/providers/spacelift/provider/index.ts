// https://registry.terraform.io/providers/spacelift-io/spacelift/1.35.1/docs
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface SpaceliftProviderConfig {
  /**
  * Endpoint to use when authenticating with an API key outside of Spacelift
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/spacelift-io/spacelift/1.35.1/docs#api_key_endpoint SpaceliftProvider#api_key_endpoint}
  */
  readonly apiKeyEndpoint?: string;
  /**
  * ID of the API key to use when executing outside of Spacelift
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/spacelift-io/spacelift/1.35.1/docs#api_key_id SpaceliftProvider#api_key_id}
  */
  readonly apiKeyId?: string;
  /**
  * API key secret to use when executing outside of Spacelift
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/spacelift-io/spacelift/1.35.1/docs#api_key_secret SpaceliftProvider#api_key_secret}
  */
  readonly apiKeySecret?: string;
  /**
  * Spacelift token generated by a run, only useful from within Spacelift
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/spacelift-io/spacelift/1.35.1/docs#api_token SpaceliftProvider#api_token}
  */
  readonly apiToken?: string;
  /**
  * Alias name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/spacelift-io/spacelift/1.35.1/docs#alias SpaceliftProvider#alias}
  */
  readonly alias?: string;
}

/**
* Represents a {@link https://registry.terraform.io/providers/spacelift-io/spacelift/1.35.1/docs spacelift}
*/
export class SpaceliftProvider extends cdktf.TerraformProvider {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "spacelift";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a SpaceliftProvider resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the SpaceliftProvider to import
  * @param importFromId The id of the existing SpaceliftProvider that should be imported. Refer to the {@link https://registry.terraform.io/providers/spacelift-io/spacelift/1.35.1/docs#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the SpaceliftProvider to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "spacelift", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/spacelift-io/spacelift/1.35.1/docs spacelift} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options SpaceliftProviderConfig = {}
  */
  public constructor(scope: Construct, id: string, config: SpaceliftProviderConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'spacelift',
      terraformGeneratorMetadata: {
        providerName: 'spacelift',
        providerVersion: '1.35.1'
      },
      terraformProviderSource: 'spacelift-io/spacelift'
    });
    this._apiKeyEndpoint = config.apiKeyEndpoint;
    this._apiKeyId = config.apiKeyId;
    this._apiKeySecret = config.apiKeySecret;
    this._apiToken = config.apiToken;
    this._alias = config.alias;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // api_key_endpoint - computed: false, optional: true, required: false
  private _apiKeyEndpoint?: string; 
  public get apiKeyEndpoint() {
    return this._apiKeyEndpoint;
  }
  public set apiKeyEndpoint(value: string | undefined) {
    this._apiKeyEndpoint = value;
  }
  public resetApiKeyEndpoint() {
    this._apiKeyEndpoint = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiKeyEndpointInput() {
    return this._apiKeyEndpoint;
  }

  // api_key_id - computed: false, optional: true, required: false
  private _apiKeyId?: string; 
  public get apiKeyId() {
    return this._apiKeyId;
  }
  public set apiKeyId(value: string | undefined) {
    this._apiKeyId = value;
  }
  public resetApiKeyId() {
    this._apiKeyId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiKeyIdInput() {
    return this._apiKeyId;
  }

  // api_key_secret - computed: false, optional: true, required: false
  private _apiKeySecret?: string; 
  public get apiKeySecret() {
    return this._apiKeySecret;
  }
  public set apiKeySecret(value: string | undefined) {
    this._apiKeySecret = value;
  }
  public resetApiKeySecret() {
    this._apiKeySecret = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiKeySecretInput() {
    return this._apiKeySecret;
  }

  // api_token - computed: false, optional: true, required: false
  private _apiToken?: string; 
  public get apiToken() {
    return this._apiToken;
  }
  public set apiToken(value: string | undefined) {
    this._apiToken = value;
  }
  public resetApiToken() {
    this._apiToken = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get apiTokenInput() {
    return this._apiToken;
  }

  // alias - computed: false, optional: true, required: false
  private _alias?: string; 
  public get alias() {
    return this._alias;
  }
  public set alias(value: string | undefined) {
    this._alias = value;
  }
  public resetAlias() {
    this._alias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aliasInput() {
    return this._alias;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      api_key_endpoint: cdktf.stringToTerraform(this._apiKeyEndpoint),
      api_key_id: cdktf.stringToTerraform(this._apiKeyId),
      api_key_secret: cdktf.stringToTerraform(this._apiKeySecret),
      api_token: cdktf.stringToTerraform(this._apiToken),
      alias: cdktf.stringToTerraform(this._alias),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      api_key_endpoint: {
        value: cdktf.stringToHclTerraform(this._apiKeyEndpoint),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      api_key_id: {
        value: cdktf.stringToHclTerraform(this._apiKeyId),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      api_key_secret: {
        value: cdktf.stringToHclTerraform(this._apiKeySecret),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      api_token: {
        value: cdktf.stringToHclTerraform(this._apiToken),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      alias: {
        value: cdktf.stringToHclTerraform(this._alias),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
