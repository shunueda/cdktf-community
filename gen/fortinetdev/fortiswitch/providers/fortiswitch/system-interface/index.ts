// https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface SystemInterfaceConfig extends cdktf.TerraformMetaArguments {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#alias SystemInterface#alias}
  */
  readonly alias?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#allowaccess SystemInterface#allowaccess}
  */
  readonly allowaccess?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#auth_type SystemInterface#auth_type}
  */
  readonly authType?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#autogenerated SystemInterface#autogenerated}
  */
  readonly autogenerated?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#bfd SystemInterface#bfd}
  */
  readonly bfd?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#bfd_desired_min_tx SystemInterface#bfd_desired_min_tx}
  */
  readonly bfdDesiredMinTx?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#bfd_detect_mult SystemInterface#bfd_detect_mult}
  */
  readonly bfdDetectMult?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#bfd_required_min_rx SystemInterface#bfd_required_min_rx}
  */
  readonly bfdRequiredMinRx?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#cli_conn_status SystemInterface#cli_conn_status}
  */
  readonly cliConnStatus?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#defaultgw SystemInterface#defaultgw}
  */
  readonly defaultgw?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#description SystemInterface#description}
  */
  readonly description?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#detectprotocol SystemInterface#detectprotocol}
  */
  readonly detectprotocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#detectserver SystemInterface#detectserver}
  */
  readonly detectserver?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dhcp_client_identifier SystemInterface#dhcp_client_identifier}
  */
  readonly dhcpClientIdentifier?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dhcp_client_status SystemInterface#dhcp_client_status}
  */
  readonly dhcpClientStatus?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dhcp_expire SystemInterface#dhcp_expire}
  */
  readonly dhcpExpire?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dhcp_relay_ip SystemInterface#dhcp_relay_ip}
  */
  readonly dhcpRelayIp?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dhcp_relay_option82 SystemInterface#dhcp_relay_option82}
  */
  readonly dhcpRelayOption82?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dhcp_relay_service SystemInterface#dhcp_relay_service}
  */
  readonly dhcpRelayService?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dhcp_vendor_specific_option SystemInterface#dhcp_vendor_specific_option}
  */
  readonly dhcpVendorSpecificOption?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#distance SystemInterface#distance}
  */
  readonly distance?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dns_server_override SystemInterface#dns_server_override}
  */
  readonly dnsServerOverride?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dynamic_dns1 SystemInterface#dynamic_dns1}
  */
  readonly dynamicDns1?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dynamic_dns2 SystemInterface#dynamic_dns2}
  */
  readonly dynamicDns2?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dynamic_sort_subtable SystemInterface#dynamic_sort_subtable}
  */
  readonly dynamicSortSubtable?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dynamicgw SystemInterface#dynamicgw}
  */
  readonly dynamicgw?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#forward_domain SystemInterface#forward_domain}
  */
  readonly forwardDomain?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#gwdetect SystemInterface#gwdetect}
  */
  readonly gwdetect?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ha_priority SystemInterface#ha_priority}
  */
  readonly haPriority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#icmp_redirect SystemInterface#icmp_redirect}
  */
  readonly icmpRedirect?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#id SystemInterface#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#interface SystemInterface#interface}
  */
  readonly interface?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip SystemInterface#ip}
  */
  readonly ip?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#l2_interface SystemInterface#l2_interface}
  */
  readonly l2Interface?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#macaddr SystemInterface#macaddr}
  */
  readonly macaddr?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#mode SystemInterface#mode}
  */
  readonly mode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#mtu SystemInterface#mtu}
  */
  readonly mtu?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#mtu_override SystemInterface#mtu_override}
  */
  readonly mtuOverride?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#name SystemInterface#name}
  */
  readonly name?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ping_serv_status SystemInterface#ping_serv_status}
  */
  readonly pingServStatus?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#priority SystemInterface#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#remote_ip SystemInterface#remote_ip}
  */
  readonly remoteIp?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#secondary_ip SystemInterface#secondary_ip}
  */
  readonly secondaryIp?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#snmp_index SystemInterface#snmp_index}
  */
  readonly snmpIndex?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#speed SystemInterface#speed}
  */
  readonly speed?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#src_check SystemInterface#src_check}
  */
  readonly srcCheck?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#src_check_allow_default SystemInterface#src_check_allow_default}
  */
  readonly srcCheckAllowDefault?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#status SystemInterface#status}
  */
  readonly status?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#switch SystemInterface#switch}
  */
  readonly switch?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#type SystemInterface#type}
  */
  readonly type?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vdom SystemInterface#vdom}
  */
  readonly vdom?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vlanforward SystemInterface#vlanforward}
  */
  readonly vlanforward?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vlanid SystemInterface#vlanid}
  */
  readonly vlanid?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrf SystemInterface#vrf}
  */
  readonly vrf?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrrp_virtual_mac SystemInterface#vrrp_virtual_mac}
  */
  readonly vrrpVirtualMac?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#weight SystemInterface#weight}
  */
  readonly weight?: number;
  /**
  * ipv6 block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ipv6 SystemInterface#ipv6}
  */
  readonly ipv6?: SystemInterfaceIpv6;
  /**
  * secondaryip block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#secondaryip SystemInterface#secondaryip}
  */
  readonly secondaryip?: SystemInterfaceSecondaryip[] | cdktf.IResolvable;
  /**
  * switch_members block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#switch_members SystemInterface#switch_members}
  */
  readonly switchMembers?: SystemInterfaceSwitchMembers[] | cdktf.IResolvable;
  /**
  * vrrp block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrrp SystemInterface#vrrp}
  */
  readonly vrrp?: SystemInterfaceVrrp[] | cdktf.IResolvable;
}
export interface SystemInterfaceIpv6Ip6ExtraAddr {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#prefix SystemInterface#prefix}
  */
  readonly prefix?: string;
}

export function systemInterfaceIpv6Ip6ExtraAddrToTerraform(struct?: SystemInterfaceIpv6Ip6ExtraAddr | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    prefix: cdktf.stringToTerraform(struct!.prefix),
  }
}


export function systemInterfaceIpv6Ip6ExtraAddrToHclTerraform(struct?: SystemInterfaceIpv6Ip6ExtraAddr | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class SystemInterfaceIpv6Ip6ExtraAddrOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): SystemInterfaceIpv6Ip6ExtraAddr | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: SystemInterfaceIpv6Ip6ExtraAddr | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._prefix = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._prefix = value.prefix;
    }
  }

  // prefix - computed: true, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }
}

export class SystemInterfaceIpv6Ip6ExtraAddrList extends cdktf.ComplexList {
  public internalValue? : SystemInterfaceIpv6Ip6ExtraAddr[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): SystemInterfaceIpv6Ip6ExtraAddrOutputReference {
    return new SystemInterfaceIpv6Ip6ExtraAddrOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface SystemInterfaceIpv6Ip6PrefixListStruct {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#autonomous_flag SystemInterface#autonomous_flag}
  */
  readonly autonomousFlag?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#onlink_flag SystemInterface#onlink_flag}
  */
  readonly onlinkFlag?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#preferred_life_time SystemInterface#preferred_life_time}
  */
  readonly preferredLifeTime?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#prefix SystemInterface#prefix}
  */
  readonly prefix?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#valid_life_time SystemInterface#valid_life_time}
  */
  readonly validLifeTime?: number;
}

export function systemInterfaceIpv6Ip6PrefixListStructToTerraform(struct?: SystemInterfaceIpv6Ip6PrefixListStruct | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    autonomous_flag: cdktf.stringToTerraform(struct!.autonomousFlag),
    onlink_flag: cdktf.stringToTerraform(struct!.onlinkFlag),
    preferred_life_time: cdktf.numberToTerraform(struct!.preferredLifeTime),
    prefix: cdktf.stringToTerraform(struct!.prefix),
    valid_life_time: cdktf.numberToTerraform(struct!.validLifeTime),
  }
}


export function systemInterfaceIpv6Ip6PrefixListStructToHclTerraform(struct?: SystemInterfaceIpv6Ip6PrefixListStruct | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    autonomous_flag: {
      value: cdktf.stringToHclTerraform(struct!.autonomousFlag),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    onlink_flag: {
      value: cdktf.stringToHclTerraform(struct!.onlinkFlag),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    preferred_life_time: {
      value: cdktf.numberToHclTerraform(struct!.preferredLifeTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    prefix: {
      value: cdktf.stringToHclTerraform(struct!.prefix),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    valid_life_time: {
      value: cdktf.numberToHclTerraform(struct!.validLifeTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class SystemInterfaceIpv6Ip6PrefixListStructOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): SystemInterfaceIpv6Ip6PrefixListStruct | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._autonomousFlag !== undefined) {
      hasAnyValues = true;
      internalValueResult.autonomousFlag = this._autonomousFlag;
    }
    if (this._onlinkFlag !== undefined) {
      hasAnyValues = true;
      internalValueResult.onlinkFlag = this._onlinkFlag;
    }
    if (this._preferredLifeTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.preferredLifeTime = this._preferredLifeTime;
    }
    if (this._prefix !== undefined) {
      hasAnyValues = true;
      internalValueResult.prefix = this._prefix;
    }
    if (this._validLifeTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.validLifeTime = this._validLifeTime;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: SystemInterfaceIpv6Ip6PrefixListStruct | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._autonomousFlag = undefined;
      this._onlinkFlag = undefined;
      this._preferredLifeTime = undefined;
      this._prefix = undefined;
      this._validLifeTime = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._autonomousFlag = value.autonomousFlag;
      this._onlinkFlag = value.onlinkFlag;
      this._preferredLifeTime = value.preferredLifeTime;
      this._prefix = value.prefix;
      this._validLifeTime = value.validLifeTime;
    }
  }

  // autonomous_flag - computed: true, optional: true, required: false
  private _autonomousFlag?: string; 
  public get autonomousFlag() {
    return this.getStringAttribute('autonomous_flag');
  }
  public set autonomousFlag(value: string) {
    this._autonomousFlag = value;
  }
  public resetAutonomousFlag() {
    this._autonomousFlag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autonomousFlagInput() {
    return this._autonomousFlag;
  }

  // onlink_flag - computed: true, optional: true, required: false
  private _onlinkFlag?: string; 
  public get onlinkFlag() {
    return this.getStringAttribute('onlink_flag');
  }
  public set onlinkFlag(value: string) {
    this._onlinkFlag = value;
  }
  public resetOnlinkFlag() {
    this._onlinkFlag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get onlinkFlagInput() {
    return this._onlinkFlag;
  }

  // preferred_life_time - computed: true, optional: true, required: false
  private _preferredLifeTime?: number; 
  public get preferredLifeTime() {
    return this.getNumberAttribute('preferred_life_time');
  }
  public set preferredLifeTime(value: number) {
    this._preferredLifeTime = value;
  }
  public resetPreferredLifeTime() {
    this._preferredLifeTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preferredLifeTimeInput() {
    return this._preferredLifeTime;
  }

  // prefix - computed: true, optional: true, required: false
  private _prefix?: string; 
  public get prefix() {
    return this.getStringAttribute('prefix');
  }
  public set prefix(value: string) {
    this._prefix = value;
  }
  public resetPrefix() {
    this._prefix = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get prefixInput() {
    return this._prefix;
  }

  // valid_life_time - computed: true, optional: true, required: false
  private _validLifeTime?: number; 
  public get validLifeTime() {
    return this.getNumberAttribute('valid_life_time');
  }
  public set validLifeTime(value: number) {
    this._validLifeTime = value;
  }
  public resetValidLifeTime() {
    this._validLifeTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get validLifeTimeInput() {
    return this._validLifeTime;
  }
}

export class SystemInterfaceIpv6Ip6PrefixListStructList extends cdktf.ComplexList {
  public internalValue? : SystemInterfaceIpv6Ip6PrefixListStruct[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): SystemInterfaceIpv6Ip6PrefixListStructOutputReference {
    return new SystemInterfaceIpv6Ip6PrefixListStructOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface SystemInterfaceIpv6Vrrp6 {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#accept_mode SystemInterface#accept_mode}
  */
  readonly acceptMode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#adv_interval SystemInterface#adv_interval}
  */
  readonly advInterval?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#preempt SystemInterface#preempt}
  */
  readonly preempt?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#priority SystemInterface#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#start_time SystemInterface#start_time}
  */
  readonly startTime?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#status SystemInterface#status}
  */
  readonly status?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrdst6 SystemInterface#vrdst6}
  */
  readonly vrdst6?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrgrp SystemInterface#vrgrp}
  */
  readonly vrgrp?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrid SystemInterface#vrid}
  */
  readonly vrid?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrip6 SystemInterface#vrip6}
  */
  readonly vrip6?: string;
}

export function systemInterfaceIpv6Vrrp6ToTerraform(struct?: SystemInterfaceIpv6Vrrp6 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    accept_mode: cdktf.stringToTerraform(struct!.acceptMode),
    adv_interval: cdktf.numberToTerraform(struct!.advInterval),
    preempt: cdktf.stringToTerraform(struct!.preempt),
    priority: cdktf.numberToTerraform(struct!.priority),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    status: cdktf.stringToTerraform(struct!.status),
    vrdst6: cdktf.stringToTerraform(struct!.vrdst6),
    vrgrp: cdktf.numberToTerraform(struct!.vrgrp),
    vrid: cdktf.numberToTerraform(struct!.vrid),
    vrip6: cdktf.stringToTerraform(struct!.vrip6),
  }
}


export function systemInterfaceIpv6Vrrp6ToHclTerraform(struct?: SystemInterfaceIpv6Vrrp6 | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    accept_mode: {
      value: cdktf.stringToHclTerraform(struct!.acceptMode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    adv_interval: {
      value: cdktf.numberToHclTerraform(struct!.advInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    preempt: {
      value: cdktf.stringToHclTerraform(struct!.preempt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    status: {
      value: cdktf.stringToHclTerraform(struct!.status),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vrdst6: {
      value: cdktf.stringToHclTerraform(struct!.vrdst6),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vrgrp: {
      value: cdktf.numberToHclTerraform(struct!.vrgrp),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    vrid: {
      value: cdktf.numberToHclTerraform(struct!.vrid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    vrip6: {
      value: cdktf.stringToHclTerraform(struct!.vrip6),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class SystemInterfaceIpv6Vrrp6OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): SystemInterfaceIpv6Vrrp6 | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._acceptMode !== undefined) {
      hasAnyValues = true;
      internalValueResult.acceptMode = this._acceptMode;
    }
    if (this._advInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.advInterval = this._advInterval;
    }
    if (this._preempt !== undefined) {
      hasAnyValues = true;
      internalValueResult.preempt = this._preempt;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._status !== undefined) {
      hasAnyValues = true;
      internalValueResult.status = this._status;
    }
    if (this._vrdst6 !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrdst6 = this._vrdst6;
    }
    if (this._vrgrp !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrgrp = this._vrgrp;
    }
    if (this._vrid !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrid = this._vrid;
    }
    if (this._vrip6 !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrip6 = this._vrip6;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: SystemInterfaceIpv6Vrrp6 | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._acceptMode = undefined;
      this._advInterval = undefined;
      this._preempt = undefined;
      this._priority = undefined;
      this._startTime = undefined;
      this._status = undefined;
      this._vrdst6 = undefined;
      this._vrgrp = undefined;
      this._vrid = undefined;
      this._vrip6 = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._acceptMode = value.acceptMode;
      this._advInterval = value.advInterval;
      this._preempt = value.preempt;
      this._priority = value.priority;
      this._startTime = value.startTime;
      this._status = value.status;
      this._vrdst6 = value.vrdst6;
      this._vrgrp = value.vrgrp;
      this._vrid = value.vrid;
      this._vrip6 = value.vrip6;
    }
  }

  // accept_mode - computed: true, optional: true, required: false
  private _acceptMode?: string; 
  public get acceptMode() {
    return this.getStringAttribute('accept_mode');
  }
  public set acceptMode(value: string) {
    this._acceptMode = value;
  }
  public resetAcceptMode() {
    this._acceptMode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get acceptModeInput() {
    return this._acceptMode;
  }

  // adv_interval - computed: true, optional: true, required: false
  private _advInterval?: number; 
  public get advInterval() {
    return this.getNumberAttribute('adv_interval');
  }
  public set advInterval(value: number) {
    this._advInterval = value;
  }
  public resetAdvInterval() {
    this._advInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advIntervalInput() {
    return this._advInterval;
  }

  // preempt - computed: true, optional: true, required: false
  private _preempt?: string; 
  public get preempt() {
    return this.getStringAttribute('preempt');
  }
  public set preempt(value: string) {
    this._preempt = value;
  }
  public resetPreempt() {
    this._preempt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preemptInput() {
    return this._preempt;
  }

  // priority - computed: true, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // start_time - computed: true, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // status - computed: true, optional: true, required: false
  private _status?: string; 
  public get status() {
    return this.getStringAttribute('status');
  }
  public set status(value: string) {
    this._status = value;
  }
  public resetStatus() {
    this._status = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get statusInput() {
    return this._status;
  }

  // vrdst6 - computed: true, optional: true, required: false
  private _vrdst6?: string; 
  public get vrdst6() {
    return this.getStringAttribute('vrdst6');
  }
  public set vrdst6(value: string) {
    this._vrdst6 = value;
  }
  public resetVrdst6() {
    this._vrdst6 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrdst6Input() {
    return this._vrdst6;
  }

  // vrgrp - computed: true, optional: true, required: false
  private _vrgrp?: number; 
  public get vrgrp() {
    return this.getNumberAttribute('vrgrp');
  }
  public set vrgrp(value: number) {
    this._vrgrp = value;
  }
  public resetVrgrp() {
    this._vrgrp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrgrpInput() {
    return this._vrgrp;
  }

  // vrid - computed: true, optional: true, required: false
  private _vrid?: number; 
  public get vrid() {
    return this.getNumberAttribute('vrid');
  }
  public set vrid(value: number) {
    this._vrid = value;
  }
  public resetVrid() {
    this._vrid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vridInput() {
    return this._vrid;
  }

  // vrip6 - computed: true, optional: true, required: false
  private _vrip6?: string; 
  public get vrip6() {
    return this.getStringAttribute('vrip6');
  }
  public set vrip6(value: string) {
    this._vrip6 = value;
  }
  public resetVrip6() {
    this._vrip6 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrip6Input() {
    return this._vrip6;
  }
}

export class SystemInterfaceIpv6Vrrp6List extends cdktf.ComplexList {
  public internalValue? : SystemInterfaceIpv6Vrrp6[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): SystemInterfaceIpv6Vrrp6OutputReference {
    return new SystemInterfaceIpv6Vrrp6OutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface SystemInterfaceIpv6 {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#autoconf SystemInterface#autoconf}
  */
  readonly autoconf?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#dhcp6_information_request SystemInterface#dhcp6_information_request}
  */
  readonly dhcp6InformationRequest?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_address SystemInterface#ip6_address}
  */
  readonly ip6Address?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_allowaccess SystemInterface#ip6_allowaccess}
  */
  readonly ip6Allowaccess?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_default_life SystemInterface#ip6_default_life}
  */
  readonly ip6DefaultLife?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_dns_server_override SystemInterface#ip6_dns_server_override}
  */
  readonly ip6DnsServerOverride?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_hop_limit SystemInterface#ip6_hop_limit}
  */
  readonly ip6HopLimit?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_link_mtu SystemInterface#ip6_link_mtu}
  */
  readonly ip6LinkMtu?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_manage_flag SystemInterface#ip6_manage_flag}
  */
  readonly ip6ManageFlag?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_max_interval SystemInterface#ip6_max_interval}
  */
  readonly ip6MaxInterval?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_min_interval SystemInterface#ip6_min_interval}
  */
  readonly ip6MinInterval?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_mode SystemInterface#ip6_mode}
  */
  readonly ip6Mode?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_other_flag SystemInterface#ip6_other_flag}
  */
  readonly ip6OtherFlag?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_reachable_time SystemInterface#ip6_reachable_time}
  */
  readonly ip6ReachableTime?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_retrans_time SystemInterface#ip6_retrans_time}
  */
  readonly ip6RetransTime?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_send_adv SystemInterface#ip6_send_adv}
  */
  readonly ip6SendAdv?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_unknown_mcast_to_cpu SystemInterface#ip6_unknown_mcast_to_cpu}
  */
  readonly ip6UnknownMcastToCpu?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrip6_link_local SystemInterface#vrip6_link_local}
  */
  readonly vrip6LinkLocal?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrrp_virtual_mac6 SystemInterface#vrrp_virtual_mac6}
  */
  readonly vrrpVirtualMac6?: string;
  /**
  * ip6_extra_addr block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_extra_addr SystemInterface#ip6_extra_addr}
  */
  readonly ip6ExtraAddr?: SystemInterfaceIpv6Ip6ExtraAddr[] | cdktf.IResolvable;
  /**
  * ip6_prefix_list block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip6_prefix_list SystemInterface#ip6_prefix_list}
  */
  readonly ip6PrefixList?: SystemInterfaceIpv6Ip6PrefixListStruct[] | cdktf.IResolvable;
  /**
  * vrrp6 block
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrrp6 SystemInterface#vrrp6}
  */
  readonly vrrp6?: SystemInterfaceIpv6Vrrp6[] | cdktf.IResolvable;
}

export function systemInterfaceIpv6ToTerraform(struct?: SystemInterfaceIpv6OutputReference | SystemInterfaceIpv6): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    autoconf: cdktf.stringToTerraform(struct!.autoconf),
    dhcp6_information_request: cdktf.stringToTerraform(struct!.dhcp6InformationRequest),
    ip6_address: cdktf.stringToTerraform(struct!.ip6Address),
    ip6_allowaccess: cdktf.stringToTerraform(struct!.ip6Allowaccess),
    ip6_default_life: cdktf.numberToTerraform(struct!.ip6DefaultLife),
    ip6_dns_server_override: cdktf.stringToTerraform(struct!.ip6DnsServerOverride),
    ip6_hop_limit: cdktf.numberToTerraform(struct!.ip6HopLimit),
    ip6_link_mtu: cdktf.numberToTerraform(struct!.ip6LinkMtu),
    ip6_manage_flag: cdktf.stringToTerraform(struct!.ip6ManageFlag),
    ip6_max_interval: cdktf.numberToTerraform(struct!.ip6MaxInterval),
    ip6_min_interval: cdktf.numberToTerraform(struct!.ip6MinInterval),
    ip6_mode: cdktf.stringToTerraform(struct!.ip6Mode),
    ip6_other_flag: cdktf.stringToTerraform(struct!.ip6OtherFlag),
    ip6_reachable_time: cdktf.numberToTerraform(struct!.ip6ReachableTime),
    ip6_retrans_time: cdktf.numberToTerraform(struct!.ip6RetransTime),
    ip6_send_adv: cdktf.stringToTerraform(struct!.ip6SendAdv),
    ip6_unknown_mcast_to_cpu: cdktf.stringToTerraform(struct!.ip6UnknownMcastToCpu),
    vrip6_link_local: cdktf.stringToTerraform(struct!.vrip6LinkLocal),
    vrrp_virtual_mac6: cdktf.stringToTerraform(struct!.vrrpVirtualMac6),
    ip6_extra_addr: cdktf.listMapper(systemInterfaceIpv6Ip6ExtraAddrToTerraform, true)(struct!.ip6ExtraAddr),
    ip6_prefix_list: cdktf.listMapper(systemInterfaceIpv6Ip6PrefixListStructToTerraform, true)(struct!.ip6PrefixList),
    vrrp6: cdktf.listMapper(systemInterfaceIpv6Vrrp6ToTerraform, true)(struct!.vrrp6),
  }
}


export function systemInterfaceIpv6ToHclTerraform(struct?: SystemInterfaceIpv6OutputReference | SystemInterfaceIpv6): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    autoconf: {
      value: cdktf.stringToHclTerraform(struct!.autoconf),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    dhcp6_information_request: {
      value: cdktf.stringToHclTerraform(struct!.dhcp6InformationRequest),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip6_address: {
      value: cdktf.stringToHclTerraform(struct!.ip6Address),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip6_allowaccess: {
      value: cdktf.stringToHclTerraform(struct!.ip6Allowaccess),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip6_default_life: {
      value: cdktf.numberToHclTerraform(struct!.ip6DefaultLife),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ip6_dns_server_override: {
      value: cdktf.stringToHclTerraform(struct!.ip6DnsServerOverride),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip6_hop_limit: {
      value: cdktf.numberToHclTerraform(struct!.ip6HopLimit),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ip6_link_mtu: {
      value: cdktf.numberToHclTerraform(struct!.ip6LinkMtu),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ip6_manage_flag: {
      value: cdktf.stringToHclTerraform(struct!.ip6ManageFlag),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip6_max_interval: {
      value: cdktf.numberToHclTerraform(struct!.ip6MaxInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ip6_min_interval: {
      value: cdktf.numberToHclTerraform(struct!.ip6MinInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ip6_mode: {
      value: cdktf.stringToHclTerraform(struct!.ip6Mode),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip6_other_flag: {
      value: cdktf.stringToHclTerraform(struct!.ip6OtherFlag),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip6_reachable_time: {
      value: cdktf.numberToHclTerraform(struct!.ip6ReachableTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ip6_retrans_time: {
      value: cdktf.numberToHclTerraform(struct!.ip6RetransTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ip6_send_adv: {
      value: cdktf.stringToHclTerraform(struct!.ip6SendAdv),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip6_unknown_mcast_to_cpu: {
      value: cdktf.stringToHclTerraform(struct!.ip6UnknownMcastToCpu),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vrip6_link_local: {
      value: cdktf.stringToHclTerraform(struct!.vrip6LinkLocal),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vrrp_virtual_mac6: {
      value: cdktf.stringToHclTerraform(struct!.vrrpVirtualMac6),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ip6_extra_addr: {
      value: cdktf.listMapperHcl(systemInterfaceIpv6Ip6ExtraAddrToHclTerraform, true)(struct!.ip6ExtraAddr),
      isBlock: true,
      type: "list",
      storageClassType: "SystemInterfaceIpv6Ip6ExtraAddrList",
    },
    ip6_prefix_list: {
      value: cdktf.listMapperHcl(systemInterfaceIpv6Ip6PrefixListStructToHclTerraform, true)(struct!.ip6PrefixList),
      isBlock: true,
      type: "list",
      storageClassType: "SystemInterfaceIpv6Ip6PrefixListStructList",
    },
    vrrp6: {
      value: cdktf.listMapperHcl(systemInterfaceIpv6Vrrp6ToHclTerraform, true)(struct!.vrrp6),
      isBlock: true,
      type: "list",
      storageClassType: "SystemInterfaceIpv6Vrrp6List",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class SystemInterfaceIpv6OutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string) {
    super(terraformResource, terraformAttribute, false, 0);
  }

  public get internalValue(): SystemInterfaceIpv6 | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._autoconf !== undefined) {
      hasAnyValues = true;
      internalValueResult.autoconf = this._autoconf;
    }
    if (this._dhcp6InformationRequest !== undefined) {
      hasAnyValues = true;
      internalValueResult.dhcp6InformationRequest = this._dhcp6InformationRequest;
    }
    if (this._ip6Address !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6Address = this._ip6Address;
    }
    if (this._ip6Allowaccess !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6Allowaccess = this._ip6Allowaccess;
    }
    if (this._ip6DefaultLife !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6DefaultLife = this._ip6DefaultLife;
    }
    if (this._ip6DnsServerOverride !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6DnsServerOverride = this._ip6DnsServerOverride;
    }
    if (this._ip6HopLimit !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6HopLimit = this._ip6HopLimit;
    }
    if (this._ip6LinkMtu !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6LinkMtu = this._ip6LinkMtu;
    }
    if (this._ip6ManageFlag !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6ManageFlag = this._ip6ManageFlag;
    }
    if (this._ip6MaxInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6MaxInterval = this._ip6MaxInterval;
    }
    if (this._ip6MinInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6MinInterval = this._ip6MinInterval;
    }
    if (this._ip6Mode !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6Mode = this._ip6Mode;
    }
    if (this._ip6OtherFlag !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6OtherFlag = this._ip6OtherFlag;
    }
    if (this._ip6ReachableTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6ReachableTime = this._ip6ReachableTime;
    }
    if (this._ip6RetransTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6RetransTime = this._ip6RetransTime;
    }
    if (this._ip6SendAdv !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6SendAdv = this._ip6SendAdv;
    }
    if (this._ip6UnknownMcastToCpu !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6UnknownMcastToCpu = this._ip6UnknownMcastToCpu;
    }
    if (this._vrip6LinkLocal !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrip6LinkLocal = this._vrip6LinkLocal;
    }
    if (this._vrrpVirtualMac6 !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrrpVirtualMac6 = this._vrrpVirtualMac6;
    }
    if (this._ip6ExtraAddr?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6ExtraAddr = this._ip6ExtraAddr?.internalValue;
    }
    if (this._ip6PrefixList?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip6PrefixList = this._ip6PrefixList?.internalValue;
    }
    if (this._vrrp6?.internalValue !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrrp6 = this._vrrp6?.internalValue;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: SystemInterfaceIpv6 | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this._autoconf = undefined;
      this._dhcp6InformationRequest = undefined;
      this._ip6Address = undefined;
      this._ip6Allowaccess = undefined;
      this._ip6DefaultLife = undefined;
      this._ip6DnsServerOverride = undefined;
      this._ip6HopLimit = undefined;
      this._ip6LinkMtu = undefined;
      this._ip6ManageFlag = undefined;
      this._ip6MaxInterval = undefined;
      this._ip6MinInterval = undefined;
      this._ip6Mode = undefined;
      this._ip6OtherFlag = undefined;
      this._ip6ReachableTime = undefined;
      this._ip6RetransTime = undefined;
      this._ip6SendAdv = undefined;
      this._ip6UnknownMcastToCpu = undefined;
      this._vrip6LinkLocal = undefined;
      this._vrrpVirtualMac6 = undefined;
      this._ip6ExtraAddr.internalValue = undefined;
      this._ip6PrefixList.internalValue = undefined;
      this._vrrp6.internalValue = undefined;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this._autoconf = value.autoconf;
      this._dhcp6InformationRequest = value.dhcp6InformationRequest;
      this._ip6Address = value.ip6Address;
      this._ip6Allowaccess = value.ip6Allowaccess;
      this._ip6DefaultLife = value.ip6DefaultLife;
      this._ip6DnsServerOverride = value.ip6DnsServerOverride;
      this._ip6HopLimit = value.ip6HopLimit;
      this._ip6LinkMtu = value.ip6LinkMtu;
      this._ip6ManageFlag = value.ip6ManageFlag;
      this._ip6MaxInterval = value.ip6MaxInterval;
      this._ip6MinInterval = value.ip6MinInterval;
      this._ip6Mode = value.ip6Mode;
      this._ip6OtherFlag = value.ip6OtherFlag;
      this._ip6ReachableTime = value.ip6ReachableTime;
      this._ip6RetransTime = value.ip6RetransTime;
      this._ip6SendAdv = value.ip6SendAdv;
      this._ip6UnknownMcastToCpu = value.ip6UnknownMcastToCpu;
      this._vrip6LinkLocal = value.vrip6LinkLocal;
      this._vrrpVirtualMac6 = value.vrrpVirtualMac6;
      this._ip6ExtraAddr.internalValue = value.ip6ExtraAddr;
      this._ip6PrefixList.internalValue = value.ip6PrefixList;
      this._vrrp6.internalValue = value.vrrp6;
    }
  }

  // autoconf - computed: true, optional: true, required: false
  private _autoconf?: string; 
  public get autoconf() {
    return this.getStringAttribute('autoconf');
  }
  public set autoconf(value: string) {
    this._autoconf = value;
  }
  public resetAutoconf() {
    this._autoconf = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoconfInput() {
    return this._autoconf;
  }

  // dhcp6_information_request - computed: true, optional: true, required: false
  private _dhcp6InformationRequest?: string; 
  public get dhcp6InformationRequest() {
    return this.getStringAttribute('dhcp6_information_request');
  }
  public set dhcp6InformationRequest(value: string) {
    this._dhcp6InformationRequest = value;
  }
  public resetDhcp6InformationRequest() {
    this._dhcp6InformationRequest = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dhcp6InformationRequestInput() {
    return this._dhcp6InformationRequest;
  }

  // ip6_address - computed: true, optional: true, required: false
  private _ip6Address?: string; 
  public get ip6Address() {
    return this.getStringAttribute('ip6_address');
  }
  public set ip6Address(value: string) {
    this._ip6Address = value;
  }
  public resetIp6Address() {
    this._ip6Address = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6AddressInput() {
    return this._ip6Address;
  }

  // ip6_allowaccess - computed: true, optional: true, required: false
  private _ip6Allowaccess?: string; 
  public get ip6Allowaccess() {
    return this.getStringAttribute('ip6_allowaccess');
  }
  public set ip6Allowaccess(value: string) {
    this._ip6Allowaccess = value;
  }
  public resetIp6Allowaccess() {
    this._ip6Allowaccess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6AllowaccessInput() {
    return this._ip6Allowaccess;
  }

  // ip6_default_life - computed: true, optional: true, required: false
  private _ip6DefaultLife?: number; 
  public get ip6DefaultLife() {
    return this.getNumberAttribute('ip6_default_life');
  }
  public set ip6DefaultLife(value: number) {
    this._ip6DefaultLife = value;
  }
  public resetIp6DefaultLife() {
    this._ip6DefaultLife = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6DefaultLifeInput() {
    return this._ip6DefaultLife;
  }

  // ip6_dns_server_override - computed: true, optional: true, required: false
  private _ip6DnsServerOverride?: string; 
  public get ip6DnsServerOverride() {
    return this.getStringAttribute('ip6_dns_server_override');
  }
  public set ip6DnsServerOverride(value: string) {
    this._ip6DnsServerOverride = value;
  }
  public resetIp6DnsServerOverride() {
    this._ip6DnsServerOverride = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6DnsServerOverrideInput() {
    return this._ip6DnsServerOverride;
  }

  // ip6_hop_limit - computed: true, optional: true, required: false
  private _ip6HopLimit?: number; 
  public get ip6HopLimit() {
    return this.getNumberAttribute('ip6_hop_limit');
  }
  public set ip6HopLimit(value: number) {
    this._ip6HopLimit = value;
  }
  public resetIp6HopLimit() {
    this._ip6HopLimit = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6HopLimitInput() {
    return this._ip6HopLimit;
  }

  // ip6_link_mtu - computed: true, optional: true, required: false
  private _ip6LinkMtu?: number; 
  public get ip6LinkMtu() {
    return this.getNumberAttribute('ip6_link_mtu');
  }
  public set ip6LinkMtu(value: number) {
    this._ip6LinkMtu = value;
  }
  public resetIp6LinkMtu() {
    this._ip6LinkMtu = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6LinkMtuInput() {
    return this._ip6LinkMtu;
  }

  // ip6_manage_flag - computed: true, optional: true, required: false
  private _ip6ManageFlag?: string; 
  public get ip6ManageFlag() {
    return this.getStringAttribute('ip6_manage_flag');
  }
  public set ip6ManageFlag(value: string) {
    this._ip6ManageFlag = value;
  }
  public resetIp6ManageFlag() {
    this._ip6ManageFlag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6ManageFlagInput() {
    return this._ip6ManageFlag;
  }

  // ip6_max_interval - computed: true, optional: true, required: false
  private _ip6MaxInterval?: number; 
  public get ip6MaxInterval() {
    return this.getNumberAttribute('ip6_max_interval');
  }
  public set ip6MaxInterval(value: number) {
    this._ip6MaxInterval = value;
  }
  public resetIp6MaxInterval() {
    this._ip6MaxInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6MaxIntervalInput() {
    return this._ip6MaxInterval;
  }

  // ip6_min_interval - computed: true, optional: true, required: false
  private _ip6MinInterval?: number; 
  public get ip6MinInterval() {
    return this.getNumberAttribute('ip6_min_interval');
  }
  public set ip6MinInterval(value: number) {
    this._ip6MinInterval = value;
  }
  public resetIp6MinInterval() {
    this._ip6MinInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6MinIntervalInput() {
    return this._ip6MinInterval;
  }

  // ip6_mode - computed: true, optional: true, required: false
  private _ip6Mode?: string; 
  public get ip6Mode() {
    return this.getStringAttribute('ip6_mode');
  }
  public set ip6Mode(value: string) {
    this._ip6Mode = value;
  }
  public resetIp6Mode() {
    this._ip6Mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6ModeInput() {
    return this._ip6Mode;
  }

  // ip6_other_flag - computed: true, optional: true, required: false
  private _ip6OtherFlag?: string; 
  public get ip6OtherFlag() {
    return this.getStringAttribute('ip6_other_flag');
  }
  public set ip6OtherFlag(value: string) {
    this._ip6OtherFlag = value;
  }
  public resetIp6OtherFlag() {
    this._ip6OtherFlag = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6OtherFlagInput() {
    return this._ip6OtherFlag;
  }

  // ip6_reachable_time - computed: true, optional: true, required: false
  private _ip6ReachableTime?: number; 
  public get ip6ReachableTime() {
    return this.getNumberAttribute('ip6_reachable_time');
  }
  public set ip6ReachableTime(value: number) {
    this._ip6ReachableTime = value;
  }
  public resetIp6ReachableTime() {
    this._ip6ReachableTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6ReachableTimeInput() {
    return this._ip6ReachableTime;
  }

  // ip6_retrans_time - computed: true, optional: true, required: false
  private _ip6RetransTime?: number; 
  public get ip6RetransTime() {
    return this.getNumberAttribute('ip6_retrans_time');
  }
  public set ip6RetransTime(value: number) {
    this._ip6RetransTime = value;
  }
  public resetIp6RetransTime() {
    this._ip6RetransTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6RetransTimeInput() {
    return this._ip6RetransTime;
  }

  // ip6_send_adv - computed: true, optional: true, required: false
  private _ip6SendAdv?: string; 
  public get ip6SendAdv() {
    return this.getStringAttribute('ip6_send_adv');
  }
  public set ip6SendAdv(value: string) {
    this._ip6SendAdv = value;
  }
  public resetIp6SendAdv() {
    this._ip6SendAdv = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6SendAdvInput() {
    return this._ip6SendAdv;
  }

  // ip6_unknown_mcast_to_cpu - computed: true, optional: true, required: false
  private _ip6UnknownMcastToCpu?: string; 
  public get ip6UnknownMcastToCpu() {
    return this.getStringAttribute('ip6_unknown_mcast_to_cpu');
  }
  public set ip6UnknownMcastToCpu(value: string) {
    this._ip6UnknownMcastToCpu = value;
  }
  public resetIp6UnknownMcastToCpu() {
    this._ip6UnknownMcastToCpu = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6UnknownMcastToCpuInput() {
    return this._ip6UnknownMcastToCpu;
  }

  // vrip6_link_local - computed: true, optional: true, required: false
  private _vrip6LinkLocal?: string; 
  public get vrip6LinkLocal() {
    return this.getStringAttribute('vrip6_link_local');
  }
  public set vrip6LinkLocal(value: string) {
    this._vrip6LinkLocal = value;
  }
  public resetVrip6LinkLocal() {
    this._vrip6LinkLocal = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrip6LinkLocalInput() {
    return this._vrip6LinkLocal;
  }

  // vrrp_virtual_mac6 - computed: true, optional: true, required: false
  private _vrrpVirtualMac6?: string; 
  public get vrrpVirtualMac6() {
    return this.getStringAttribute('vrrp_virtual_mac6');
  }
  public set vrrpVirtualMac6(value: string) {
    this._vrrpVirtualMac6 = value;
  }
  public resetVrrpVirtualMac6() {
    this._vrrpVirtualMac6 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrrpVirtualMac6Input() {
    return this._vrrpVirtualMac6;
  }

  // ip6_extra_addr - computed: false, optional: true, required: false
  private _ip6ExtraAddr = new SystemInterfaceIpv6Ip6ExtraAddrList(this, "ip6_extra_addr", false);
  public get ip6ExtraAddr() {
    return this._ip6ExtraAddr;
  }
  public putIp6ExtraAddr(value: SystemInterfaceIpv6Ip6ExtraAddr[] | cdktf.IResolvable) {
    this._ip6ExtraAddr.internalValue = value;
  }
  public resetIp6ExtraAddr() {
    this._ip6ExtraAddr.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6ExtraAddrInput() {
    return this._ip6ExtraAddr.internalValue;
  }

  // ip6_prefix_list - computed: false, optional: true, required: false
  private _ip6PrefixList = new SystemInterfaceIpv6Ip6PrefixListStructList(this, "ip6_prefix_list", false);
  public get ip6PrefixList() {
    return this._ip6PrefixList;
  }
  public putIp6PrefixList(value: SystemInterfaceIpv6Ip6PrefixListStruct[] | cdktf.IResolvable) {
    this._ip6PrefixList.internalValue = value;
  }
  public resetIp6PrefixList() {
    this._ip6PrefixList.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ip6PrefixListInput() {
    return this._ip6PrefixList.internalValue;
  }

  // vrrp6 - computed: false, optional: true, required: false
  private _vrrp6 = new SystemInterfaceIpv6Vrrp6List(this, "vrrp6", false);
  public get vrrp6() {
    return this._vrrp6;
  }
  public putVrrp6(value: SystemInterfaceIpv6Vrrp6[] | cdktf.IResolvable) {
    this._vrrp6.internalValue = value;
  }
  public resetVrrp6() {
    this._vrrp6.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrrp6Input() {
    return this._vrrp6.internalValue;
  }
}
export interface SystemInterfaceSecondaryip {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#allowaccess SystemInterface#allowaccess}
  */
  readonly allowaccess?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#detectprotocol SystemInterface#detectprotocol}
  */
  readonly detectprotocol?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#detectserver SystemInterface#detectserver}
  */
  readonly detectserver?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#gwdetect SystemInterface#gwdetect}
  */
  readonly gwdetect?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ha_priority SystemInterface#ha_priority}
  */
  readonly haPriority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#id SystemInterface#id}
  *
  * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
  * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
  */
  readonly id?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ip SystemInterface#ip}
  */
  readonly ip?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#ping_serv_status SystemInterface#ping_serv_status}
  */
  readonly pingServStatus?: number;
}

export function systemInterfaceSecondaryipToTerraform(struct?: SystemInterfaceSecondaryip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    allowaccess: cdktf.stringToTerraform(struct!.allowaccess),
    detectprotocol: cdktf.stringToTerraform(struct!.detectprotocol),
    detectserver: cdktf.stringToTerraform(struct!.detectserver),
    gwdetect: cdktf.stringToTerraform(struct!.gwdetect),
    ha_priority: cdktf.numberToTerraform(struct!.haPriority),
    id: cdktf.numberToTerraform(struct!.id),
    ip: cdktf.stringToTerraform(struct!.ip),
    ping_serv_status: cdktf.numberToTerraform(struct!.pingServStatus),
  }
}


export function systemInterfaceSecondaryipToHclTerraform(struct?: SystemInterfaceSecondaryip | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    allowaccess: {
      value: cdktf.stringToHclTerraform(struct!.allowaccess),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    detectprotocol: {
      value: cdktf.stringToHclTerraform(struct!.detectprotocol),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    detectserver: {
      value: cdktf.stringToHclTerraform(struct!.detectserver),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    gwdetect: {
      value: cdktf.stringToHclTerraform(struct!.gwdetect),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ha_priority: {
      value: cdktf.numberToHclTerraform(struct!.haPriority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    id: {
      value: cdktf.numberToHclTerraform(struct!.id),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    ip: {
      value: cdktf.stringToHclTerraform(struct!.ip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    ping_serv_status: {
      value: cdktf.numberToHclTerraform(struct!.pingServStatus),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class SystemInterfaceSecondaryipOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): SystemInterfaceSecondaryip | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._allowaccess !== undefined) {
      hasAnyValues = true;
      internalValueResult.allowaccess = this._allowaccess;
    }
    if (this._detectprotocol !== undefined) {
      hasAnyValues = true;
      internalValueResult.detectprotocol = this._detectprotocol;
    }
    if (this._detectserver !== undefined) {
      hasAnyValues = true;
      internalValueResult.detectserver = this._detectserver;
    }
    if (this._gwdetect !== undefined) {
      hasAnyValues = true;
      internalValueResult.gwdetect = this._gwdetect;
    }
    if (this._haPriority !== undefined) {
      hasAnyValues = true;
      internalValueResult.haPriority = this._haPriority;
    }
    if (this._id !== undefined) {
      hasAnyValues = true;
      internalValueResult.id = this._id;
    }
    if (this._ip !== undefined) {
      hasAnyValues = true;
      internalValueResult.ip = this._ip;
    }
    if (this._pingServStatus !== undefined) {
      hasAnyValues = true;
      internalValueResult.pingServStatus = this._pingServStatus;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: SystemInterfaceSecondaryip | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._allowaccess = undefined;
      this._detectprotocol = undefined;
      this._detectserver = undefined;
      this._gwdetect = undefined;
      this._haPriority = undefined;
      this._id = undefined;
      this._ip = undefined;
      this._pingServStatus = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._allowaccess = value.allowaccess;
      this._detectprotocol = value.detectprotocol;
      this._detectserver = value.detectserver;
      this._gwdetect = value.gwdetect;
      this._haPriority = value.haPriority;
      this._id = value.id;
      this._ip = value.ip;
      this._pingServStatus = value.pingServStatus;
    }
  }

  // allowaccess - computed: true, optional: true, required: false
  private _allowaccess?: string; 
  public get allowaccess() {
    return this.getStringAttribute('allowaccess');
  }
  public set allowaccess(value: string) {
    this._allowaccess = value;
  }
  public resetAllowaccess() {
    this._allowaccess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowaccessInput() {
    return this._allowaccess;
  }

  // detectprotocol - computed: true, optional: true, required: false
  private _detectprotocol?: string; 
  public get detectprotocol() {
    return this.getStringAttribute('detectprotocol');
  }
  public set detectprotocol(value: string) {
    this._detectprotocol = value;
  }
  public resetDetectprotocol() {
    this._detectprotocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get detectprotocolInput() {
    return this._detectprotocol;
  }

  // detectserver - computed: true, optional: true, required: false
  private _detectserver?: string; 
  public get detectserver() {
    return this.getStringAttribute('detectserver');
  }
  public set detectserver(value: string) {
    this._detectserver = value;
  }
  public resetDetectserver() {
    this._detectserver = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get detectserverInput() {
    return this._detectserver;
  }

  // gwdetect - computed: true, optional: true, required: false
  private _gwdetect?: string; 
  public get gwdetect() {
    return this.getStringAttribute('gwdetect');
  }
  public set gwdetect(value: string) {
    this._gwdetect = value;
  }
  public resetGwdetect() {
    this._gwdetect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gwdetectInput() {
    return this._gwdetect;
  }

  // ha_priority - computed: true, optional: true, required: false
  private _haPriority?: number; 
  public get haPriority() {
    return this.getNumberAttribute('ha_priority');
  }
  public set haPriority(value: number) {
    this._haPriority = value;
  }
  public resetHaPriority() {
    this._haPriority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get haPriorityInput() {
    return this._haPriority;
  }

  // id - computed: true, optional: true, required: false
  private _id?: number; 
  public get id() {
    return this.getNumberAttribute('id');
  }
  public set id(value: number) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // ip - computed: true, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }

  // ping_serv_status - computed: true, optional: true, required: false
  private _pingServStatus?: number; 
  public get pingServStatus() {
    return this.getNumberAttribute('ping_serv_status');
  }
  public set pingServStatus(value: number) {
    this._pingServStatus = value;
  }
  public resetPingServStatus() {
    this._pingServStatus = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pingServStatusInput() {
    return this._pingServStatus;
  }
}

export class SystemInterfaceSecondaryipList extends cdktf.ComplexList {
  public internalValue? : SystemInterfaceSecondaryip[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): SystemInterfaceSecondaryipOutputReference {
    return new SystemInterfaceSecondaryipOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface SystemInterfaceSwitchMembers {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#member_name SystemInterface#member_name}
  */
  readonly memberName?: string;
}

export function systemInterfaceSwitchMembersToTerraform(struct?: SystemInterfaceSwitchMembers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    member_name: cdktf.stringToTerraform(struct!.memberName),
  }
}


export function systemInterfaceSwitchMembersToHclTerraform(struct?: SystemInterfaceSwitchMembers | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    member_name: {
      value: cdktf.stringToHclTerraform(struct!.memberName),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class SystemInterfaceSwitchMembersOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): SystemInterfaceSwitchMembers | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._memberName !== undefined) {
      hasAnyValues = true;
      internalValueResult.memberName = this._memberName;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: SystemInterfaceSwitchMembers | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._memberName = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._memberName = value.memberName;
    }
  }

  // member_name - computed: true, optional: true, required: false
  private _memberName?: string; 
  public get memberName() {
    return this.getStringAttribute('member_name');
  }
  public set memberName(value: string) {
    this._memberName = value;
  }
  public resetMemberName() {
    this._memberName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get memberNameInput() {
    return this._memberName;
  }
}

export class SystemInterfaceSwitchMembersList extends cdktf.ComplexList {
  public internalValue? : SystemInterfaceSwitchMembers[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): SystemInterfaceSwitchMembersOutputReference {
    return new SystemInterfaceSwitchMembersOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}
export interface SystemInterfaceVrrp {
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#adv_interval SystemInterface#adv_interval}
  */
  readonly advInterval?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#backup_vmac_fwd SystemInterface#backup_vmac_fwd}
  */
  readonly backupVmacFwd?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#netmask SystemInterface#netmask}
  */
  readonly netmask?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#preempt SystemInterface#preempt}
  */
  readonly preempt?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#priority SystemInterface#priority}
  */
  readonly priority?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#start_time SystemInterface#start_time}
  */
  readonly startTime?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#status SystemInterface#status}
  */
  readonly status?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#version SystemInterface#version}
  */
  readonly version?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrdst SystemInterface#vrdst}
  */
  readonly vrdst?: string;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrgrp SystemInterface#vrgrp}
  */
  readonly vrgrp?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrid SystemInterface#vrid}
  */
  readonly vrid?: number;
  /**
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#vrip SystemInterface#vrip}
  */
  readonly vrip?: string;
}

export function systemInterfaceVrrpToTerraform(struct?: SystemInterfaceVrrp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
    adv_interval: cdktf.numberToTerraform(struct!.advInterval),
    backup_vmac_fwd: cdktf.stringToTerraform(struct!.backupVmacFwd),
    netmask: cdktf.stringToTerraform(struct!.netmask),
    preempt: cdktf.stringToTerraform(struct!.preempt),
    priority: cdktf.numberToTerraform(struct!.priority),
    start_time: cdktf.numberToTerraform(struct!.startTime),
    status: cdktf.stringToTerraform(struct!.status),
    version: cdktf.stringToTerraform(struct!.version),
    vrdst: cdktf.stringToTerraform(struct!.vrdst),
    vrgrp: cdktf.numberToTerraform(struct!.vrgrp),
    vrid: cdktf.numberToTerraform(struct!.vrid),
    vrip: cdktf.stringToTerraform(struct!.vrip),
  }
}


export function systemInterfaceVrrpToHclTerraform(struct?: SystemInterfaceVrrp | cdktf.IResolvable): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
    adv_interval: {
      value: cdktf.numberToHclTerraform(struct!.advInterval),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    backup_vmac_fwd: {
      value: cdktf.stringToHclTerraform(struct!.backupVmacFwd),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    netmask: {
      value: cdktf.stringToHclTerraform(struct!.netmask),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    preempt: {
      value: cdktf.stringToHclTerraform(struct!.preempt),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    priority: {
      value: cdktf.numberToHclTerraform(struct!.priority),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    start_time: {
      value: cdktf.numberToHclTerraform(struct!.startTime),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    status: {
      value: cdktf.stringToHclTerraform(struct!.status),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    version: {
      value: cdktf.stringToHclTerraform(struct!.version),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vrdst: {
      value: cdktf.stringToHclTerraform(struct!.vrdst),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
    vrgrp: {
      value: cdktf.numberToHclTerraform(struct!.vrgrp),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    vrid: {
      value: cdktf.numberToHclTerraform(struct!.vrid),
      isBlock: false,
      type: "simple",
      storageClassType: "number",
    },
    vrip: {
      value: cdktf.stringToHclTerraform(struct!.vrip),
      isBlock: false,
      type: "simple",
      storageClassType: "string",
    },
  };

  // remove undefined attributes
  return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined));
}

export class SystemInterfaceVrrpOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;
  private resolvableValue?: cdktf.IResolvable;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): SystemInterfaceVrrp | cdktf.IResolvable | undefined {
    if (this.resolvableValue) {
      return this.resolvableValue;
    }
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    if (this._advInterval !== undefined) {
      hasAnyValues = true;
      internalValueResult.advInterval = this._advInterval;
    }
    if (this._backupVmacFwd !== undefined) {
      hasAnyValues = true;
      internalValueResult.backupVmacFwd = this._backupVmacFwd;
    }
    if (this._netmask !== undefined) {
      hasAnyValues = true;
      internalValueResult.netmask = this._netmask;
    }
    if (this._preempt !== undefined) {
      hasAnyValues = true;
      internalValueResult.preempt = this._preempt;
    }
    if (this._priority !== undefined) {
      hasAnyValues = true;
      internalValueResult.priority = this._priority;
    }
    if (this._startTime !== undefined) {
      hasAnyValues = true;
      internalValueResult.startTime = this._startTime;
    }
    if (this._status !== undefined) {
      hasAnyValues = true;
      internalValueResult.status = this._status;
    }
    if (this._version !== undefined) {
      hasAnyValues = true;
      internalValueResult.version = this._version;
    }
    if (this._vrdst !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrdst = this._vrdst;
    }
    if (this._vrgrp !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrgrp = this._vrgrp;
    }
    if (this._vrid !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrid = this._vrid;
    }
    if (this._vrip !== undefined) {
      hasAnyValues = true;
      internalValueResult.vrip = this._vrip;
    }
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: SystemInterfaceVrrp | cdktf.IResolvable | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
      this.resolvableValue = undefined;
      this._advInterval = undefined;
      this._backupVmacFwd = undefined;
      this._netmask = undefined;
      this._preempt = undefined;
      this._priority = undefined;
      this._startTime = undefined;
      this._status = undefined;
      this._version = undefined;
      this._vrdst = undefined;
      this._vrgrp = undefined;
      this._vrid = undefined;
      this._vrip = undefined;
    }
    else if (cdktf.Tokenization.isResolvable(value)) {
      this.isEmptyObject = false;
      this.resolvableValue = value;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
      this.resolvableValue = undefined;
      this._advInterval = value.advInterval;
      this._backupVmacFwd = value.backupVmacFwd;
      this._netmask = value.netmask;
      this._preempt = value.preempt;
      this._priority = value.priority;
      this._startTime = value.startTime;
      this._status = value.status;
      this._version = value.version;
      this._vrdst = value.vrdst;
      this._vrgrp = value.vrgrp;
      this._vrid = value.vrid;
      this._vrip = value.vrip;
    }
  }

  // adv_interval - computed: true, optional: true, required: false
  private _advInterval?: number; 
  public get advInterval() {
    return this.getNumberAttribute('adv_interval');
  }
  public set advInterval(value: number) {
    this._advInterval = value;
  }
  public resetAdvInterval() {
    this._advInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get advIntervalInput() {
    return this._advInterval;
  }

  // backup_vmac_fwd - computed: true, optional: true, required: false
  private _backupVmacFwd?: string; 
  public get backupVmacFwd() {
    return this.getStringAttribute('backup_vmac_fwd');
  }
  public set backupVmacFwd(value: string) {
    this._backupVmacFwd = value;
  }
  public resetBackupVmacFwd() {
    this._backupVmacFwd = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get backupVmacFwdInput() {
    return this._backupVmacFwd;
  }

  // netmask - computed: true, optional: true, required: false
  private _netmask?: string; 
  public get netmask() {
    return this.getStringAttribute('netmask');
  }
  public set netmask(value: string) {
    this._netmask = value;
  }
  public resetNetmask() {
    this._netmask = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get netmaskInput() {
    return this._netmask;
  }

  // preempt - computed: true, optional: true, required: false
  private _preempt?: string; 
  public get preempt() {
    return this.getStringAttribute('preempt');
  }
  public set preempt(value: string) {
    this._preempt = value;
  }
  public resetPreempt() {
    this._preempt = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get preemptInput() {
    return this._preempt;
  }

  // priority - computed: true, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // start_time - computed: true, optional: true, required: false
  private _startTime?: number; 
  public get startTime() {
    return this.getNumberAttribute('start_time');
  }
  public set startTime(value: number) {
    this._startTime = value;
  }
  public resetStartTime() {
    this._startTime = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get startTimeInput() {
    return this._startTime;
  }

  // status - computed: true, optional: true, required: false
  private _status?: string; 
  public get status() {
    return this.getStringAttribute('status');
  }
  public set status(value: string) {
    this._status = value;
  }
  public resetStatus() {
    this._status = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get statusInput() {
    return this._status;
  }

  // version - computed: true, optional: true, required: false
  private _version?: string; 
  public get version() {
    return this.getStringAttribute('version');
  }
  public set version(value: string) {
    this._version = value;
  }
  public resetVersion() {
    this._version = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get versionInput() {
    return this._version;
  }

  // vrdst - computed: true, optional: true, required: false
  private _vrdst?: string; 
  public get vrdst() {
    return this.getStringAttribute('vrdst');
  }
  public set vrdst(value: string) {
    this._vrdst = value;
  }
  public resetVrdst() {
    this._vrdst = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrdstInput() {
    return this._vrdst;
  }

  // vrgrp - computed: true, optional: true, required: false
  private _vrgrp?: number; 
  public get vrgrp() {
    return this.getNumberAttribute('vrgrp');
  }
  public set vrgrp(value: number) {
    this._vrgrp = value;
  }
  public resetVrgrp() {
    this._vrgrp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrgrpInput() {
    return this._vrgrp;
  }

  // vrid - computed: true, optional: true, required: false
  private _vrid?: number; 
  public get vrid() {
    return this.getNumberAttribute('vrid');
  }
  public set vrid(value: number) {
    this._vrid = value;
  }
  public resetVrid() {
    this._vrid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vridInput() {
    return this._vrid;
  }

  // vrip - computed: true, optional: true, required: false
  private _vrip?: string; 
  public get vrip() {
    return this.getStringAttribute('vrip');
  }
  public set vrip(value: string) {
    this._vrip = value;
  }
  public resetVrip() {
    this._vrip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vripInput() {
    return this._vrip;
  }
}

export class SystemInterfaceVrrpList extends cdktf.ComplexList {
  public internalValue? : SystemInterfaceVrrp[] | cdktf.IResolvable

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): SystemInterfaceVrrpOutputReference {
    return new SystemInterfaceVrrpOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface fortiswitch_system_interface}
*/
export class SystemInterface extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "fortiswitch_system_interface";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a SystemInterface resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the SystemInterface to import
  * @param importFromId The id of the existing SystemInterface that should be imported. Refer to the {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the SystemInterface to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "fortiswitch_system_interface", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/fortinetdev/fortiswitch/1.1.6/docs/resources/system_interface fortiswitch_system_interface} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options SystemInterfaceConfig = {}
  */
  public constructor(scope: Construct, id: string, config: SystemInterfaceConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'fortiswitch_system_interface',
      terraformGeneratorMetadata: {
        providerName: 'fortiswitch',
        providerVersion: '1.1.6'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._alias = config.alias;
    this._allowaccess = config.allowaccess;
    this._authType = config.authType;
    this._autogenerated = config.autogenerated;
    this._bfd = config.bfd;
    this._bfdDesiredMinTx = config.bfdDesiredMinTx;
    this._bfdDetectMult = config.bfdDetectMult;
    this._bfdRequiredMinRx = config.bfdRequiredMinRx;
    this._cliConnStatus = config.cliConnStatus;
    this._defaultgw = config.defaultgw;
    this._description = config.description;
    this._detectprotocol = config.detectprotocol;
    this._detectserver = config.detectserver;
    this._dhcpClientIdentifier = config.dhcpClientIdentifier;
    this._dhcpClientStatus = config.dhcpClientStatus;
    this._dhcpExpire = config.dhcpExpire;
    this._dhcpRelayIp = config.dhcpRelayIp;
    this._dhcpRelayOption82 = config.dhcpRelayOption82;
    this._dhcpRelayService = config.dhcpRelayService;
    this._dhcpVendorSpecificOption = config.dhcpVendorSpecificOption;
    this._distance = config.distance;
    this._dnsServerOverride = config.dnsServerOverride;
    this._dynamicDns1 = config.dynamicDns1;
    this._dynamicDns2 = config.dynamicDns2;
    this._dynamicSortSubtable = config.dynamicSortSubtable;
    this._dynamicgw = config.dynamicgw;
    this._forwardDomain = config.forwardDomain;
    this._gwdetect = config.gwdetect;
    this._haPriority = config.haPriority;
    this._icmpRedirect = config.icmpRedirect;
    this._id = config.id;
    this._interface = config.interface;
    this._ip = config.ip;
    this._l2Interface = config.l2Interface;
    this._macaddr = config.macaddr;
    this._mode = config.mode;
    this._mtu = config.mtu;
    this._mtuOverride = config.mtuOverride;
    this._name = config.name;
    this._pingServStatus = config.pingServStatus;
    this._priority = config.priority;
    this._remoteIp = config.remoteIp;
    this._secondaryIp = config.secondaryIp;
    this._snmpIndex = config.snmpIndex;
    this._speed = config.speed;
    this._srcCheck = config.srcCheck;
    this._srcCheckAllowDefault = config.srcCheckAllowDefault;
    this._status = config.status;
    this._switch = config.switch;
    this._type = config.type;
    this._vdom = config.vdom;
    this._vlanforward = config.vlanforward;
    this._vlanid = config.vlanid;
    this._vrf = config.vrf;
    this._vrrpVirtualMac = config.vrrpVirtualMac;
    this._weight = config.weight;
    this._ipv6.internalValue = config.ipv6;
    this._secondaryip.internalValue = config.secondaryip;
    this._switchMembers.internalValue = config.switchMembers;
    this._vrrp.internalValue = config.vrrp;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // alias - computed: true, optional: true, required: false
  private _alias?: string; 
  public get alias() {
    return this.getStringAttribute('alias');
  }
  public set alias(value: string) {
    this._alias = value;
  }
  public resetAlias() {
    this._alias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aliasInput() {
    return this._alias;
  }

  // allowaccess - computed: true, optional: true, required: false
  private _allowaccess?: string; 
  public get allowaccess() {
    return this.getStringAttribute('allowaccess');
  }
  public set allowaccess(value: string) {
    this._allowaccess = value;
  }
  public resetAllowaccess() {
    this._allowaccess = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get allowaccessInput() {
    return this._allowaccess;
  }

  // auth_type - computed: true, optional: true, required: false
  private _authType?: string; 
  public get authType() {
    return this.getStringAttribute('auth_type');
  }
  public set authType(value: string) {
    this._authType = value;
  }
  public resetAuthType() {
    this._authType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get authTypeInput() {
    return this._authType;
  }

  // autogenerated - computed: true, optional: true, required: false
  private _autogenerated?: string; 
  public get autogenerated() {
    return this.getStringAttribute('autogenerated');
  }
  public set autogenerated(value: string) {
    this._autogenerated = value;
  }
  public resetAutogenerated() {
    this._autogenerated = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autogeneratedInput() {
    return this._autogenerated;
  }

  // bfd - computed: true, optional: true, required: false
  private _bfd?: string; 
  public get bfd() {
    return this.getStringAttribute('bfd');
  }
  public set bfd(value: string) {
    this._bfd = value;
  }
  public resetBfd() {
    this._bfd = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bfdInput() {
    return this._bfd;
  }

  // bfd_desired_min_tx - computed: true, optional: true, required: false
  private _bfdDesiredMinTx?: number; 
  public get bfdDesiredMinTx() {
    return this.getNumberAttribute('bfd_desired_min_tx');
  }
  public set bfdDesiredMinTx(value: number) {
    this._bfdDesiredMinTx = value;
  }
  public resetBfdDesiredMinTx() {
    this._bfdDesiredMinTx = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bfdDesiredMinTxInput() {
    return this._bfdDesiredMinTx;
  }

  // bfd_detect_mult - computed: true, optional: true, required: false
  private _bfdDetectMult?: number; 
  public get bfdDetectMult() {
    return this.getNumberAttribute('bfd_detect_mult');
  }
  public set bfdDetectMult(value: number) {
    this._bfdDetectMult = value;
  }
  public resetBfdDetectMult() {
    this._bfdDetectMult = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bfdDetectMultInput() {
    return this._bfdDetectMult;
  }

  // bfd_required_min_rx - computed: true, optional: true, required: false
  private _bfdRequiredMinRx?: number; 
  public get bfdRequiredMinRx() {
    return this.getNumberAttribute('bfd_required_min_rx');
  }
  public set bfdRequiredMinRx(value: number) {
    this._bfdRequiredMinRx = value;
  }
  public resetBfdRequiredMinRx() {
    this._bfdRequiredMinRx = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bfdRequiredMinRxInput() {
    return this._bfdRequiredMinRx;
  }

  // cli_conn_status - computed: true, optional: true, required: false
  private _cliConnStatus?: string; 
  public get cliConnStatus() {
    return this.getStringAttribute('cli_conn_status');
  }
  public set cliConnStatus(value: string) {
    this._cliConnStatus = value;
  }
  public resetCliConnStatus() {
    this._cliConnStatus = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get cliConnStatusInput() {
    return this._cliConnStatus;
  }

  // defaultgw - computed: true, optional: true, required: false
  private _defaultgw?: string; 
  public get defaultgw() {
    return this.getStringAttribute('defaultgw');
  }
  public set defaultgw(value: string) {
    this._defaultgw = value;
  }
  public resetDefaultgw() {
    this._defaultgw = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get defaultgwInput() {
    return this._defaultgw;
  }

  // description - computed: true, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // detectprotocol - computed: true, optional: true, required: false
  private _detectprotocol?: string; 
  public get detectprotocol() {
    return this.getStringAttribute('detectprotocol');
  }
  public set detectprotocol(value: string) {
    this._detectprotocol = value;
  }
  public resetDetectprotocol() {
    this._detectprotocol = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get detectprotocolInput() {
    return this._detectprotocol;
  }

  // detectserver - computed: true, optional: true, required: false
  private _detectserver?: string; 
  public get detectserver() {
    return this.getStringAttribute('detectserver');
  }
  public set detectserver(value: string) {
    this._detectserver = value;
  }
  public resetDetectserver() {
    this._detectserver = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get detectserverInput() {
    return this._detectserver;
  }

  // dhcp_client_identifier - computed: true, optional: true, required: false
  private _dhcpClientIdentifier?: string; 
  public get dhcpClientIdentifier() {
    return this.getStringAttribute('dhcp_client_identifier');
  }
  public set dhcpClientIdentifier(value: string) {
    this._dhcpClientIdentifier = value;
  }
  public resetDhcpClientIdentifier() {
    this._dhcpClientIdentifier = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dhcpClientIdentifierInput() {
    return this._dhcpClientIdentifier;
  }

  // dhcp_client_status - computed: true, optional: true, required: false
  private _dhcpClientStatus?: string; 
  public get dhcpClientStatus() {
    return this.getStringAttribute('dhcp_client_status');
  }
  public set dhcpClientStatus(value: string) {
    this._dhcpClientStatus = value;
  }
  public resetDhcpClientStatus() {
    this._dhcpClientStatus = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dhcpClientStatusInput() {
    return this._dhcpClientStatus;
  }

  // dhcp_expire - computed: true, optional: true, required: false
  private _dhcpExpire?: number; 
  public get dhcpExpire() {
    return this.getNumberAttribute('dhcp_expire');
  }
  public set dhcpExpire(value: number) {
    this._dhcpExpire = value;
  }
  public resetDhcpExpire() {
    this._dhcpExpire = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dhcpExpireInput() {
    return this._dhcpExpire;
  }

  // dhcp_relay_ip - computed: true, optional: true, required: false
  private _dhcpRelayIp?: string; 
  public get dhcpRelayIp() {
    return this.getStringAttribute('dhcp_relay_ip');
  }
  public set dhcpRelayIp(value: string) {
    this._dhcpRelayIp = value;
  }
  public resetDhcpRelayIp() {
    this._dhcpRelayIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dhcpRelayIpInput() {
    return this._dhcpRelayIp;
  }

  // dhcp_relay_option82 - computed: true, optional: true, required: false
  private _dhcpRelayOption82?: string; 
  public get dhcpRelayOption82() {
    return this.getStringAttribute('dhcp_relay_option82');
  }
  public set dhcpRelayOption82(value: string) {
    this._dhcpRelayOption82 = value;
  }
  public resetDhcpRelayOption82() {
    this._dhcpRelayOption82 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dhcpRelayOption82Input() {
    return this._dhcpRelayOption82;
  }

  // dhcp_relay_service - computed: true, optional: true, required: false
  private _dhcpRelayService?: string; 
  public get dhcpRelayService() {
    return this.getStringAttribute('dhcp_relay_service');
  }
  public set dhcpRelayService(value: string) {
    this._dhcpRelayService = value;
  }
  public resetDhcpRelayService() {
    this._dhcpRelayService = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dhcpRelayServiceInput() {
    return this._dhcpRelayService;
  }

  // dhcp_vendor_specific_option - computed: true, optional: true, required: false
  private _dhcpVendorSpecificOption?: string; 
  public get dhcpVendorSpecificOption() {
    return this.getStringAttribute('dhcp_vendor_specific_option');
  }
  public set dhcpVendorSpecificOption(value: string) {
    this._dhcpVendorSpecificOption = value;
  }
  public resetDhcpVendorSpecificOption() {
    this._dhcpVendorSpecificOption = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dhcpVendorSpecificOptionInput() {
    return this._dhcpVendorSpecificOption;
  }

  // distance - computed: true, optional: true, required: false
  private _distance?: number; 
  public get distance() {
    return this.getNumberAttribute('distance');
  }
  public set distance(value: number) {
    this._distance = value;
  }
  public resetDistance() {
    this._distance = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get distanceInput() {
    return this._distance;
  }

  // dns_server_override - computed: true, optional: true, required: false
  private _dnsServerOverride?: string; 
  public get dnsServerOverride() {
    return this.getStringAttribute('dns_server_override');
  }
  public set dnsServerOverride(value: string) {
    this._dnsServerOverride = value;
  }
  public resetDnsServerOverride() {
    this._dnsServerOverride = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dnsServerOverrideInput() {
    return this._dnsServerOverride;
  }

  // dynamic_dns1 - computed: true, optional: true, required: false
  private _dynamicDns1?: string; 
  public get dynamicDns1() {
    return this.getStringAttribute('dynamic_dns1');
  }
  public set dynamicDns1(value: string) {
    this._dynamicDns1 = value;
  }
  public resetDynamicDns1() {
    this._dynamicDns1 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dynamicDns1Input() {
    return this._dynamicDns1;
  }

  // dynamic_dns2 - computed: true, optional: true, required: false
  private _dynamicDns2?: string; 
  public get dynamicDns2() {
    return this.getStringAttribute('dynamic_dns2');
  }
  public set dynamicDns2(value: string) {
    this._dynamicDns2 = value;
  }
  public resetDynamicDns2() {
    this._dynamicDns2 = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dynamicDns2Input() {
    return this._dynamicDns2;
  }

  // dynamic_sort_subtable - computed: false, optional: true, required: false
  private _dynamicSortSubtable?: string; 
  public get dynamicSortSubtable() {
    return this.getStringAttribute('dynamic_sort_subtable');
  }
  public set dynamicSortSubtable(value: string) {
    this._dynamicSortSubtable = value;
  }
  public resetDynamicSortSubtable() {
    this._dynamicSortSubtable = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dynamicSortSubtableInput() {
    return this._dynamicSortSubtable;
  }

  // dynamicgw - computed: true, optional: true, required: false
  private _dynamicgw?: string; 
  public get dynamicgw() {
    return this.getStringAttribute('dynamicgw');
  }
  public set dynamicgw(value: string) {
    this._dynamicgw = value;
  }
  public resetDynamicgw() {
    this._dynamicgw = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get dynamicgwInput() {
    return this._dynamicgw;
  }

  // forward_domain - computed: true, optional: true, required: false
  private _forwardDomain?: number; 
  public get forwardDomain() {
    return this.getNumberAttribute('forward_domain');
  }
  public set forwardDomain(value: number) {
    this._forwardDomain = value;
  }
  public resetForwardDomain() {
    this._forwardDomain = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get forwardDomainInput() {
    return this._forwardDomain;
  }

  // gwdetect - computed: true, optional: true, required: false
  private _gwdetect?: string; 
  public get gwdetect() {
    return this.getStringAttribute('gwdetect');
  }
  public set gwdetect(value: string) {
    this._gwdetect = value;
  }
  public resetGwdetect() {
    this._gwdetect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get gwdetectInput() {
    return this._gwdetect;
  }

  // ha_priority - computed: true, optional: true, required: false
  private _haPriority?: number; 
  public get haPriority() {
    return this.getNumberAttribute('ha_priority');
  }
  public set haPriority(value: number) {
    this._haPriority = value;
  }
  public resetHaPriority() {
    this._haPriority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get haPriorityInput() {
    return this._haPriority;
  }

  // icmp_redirect - computed: true, optional: true, required: false
  private _icmpRedirect?: string; 
  public get icmpRedirect() {
    return this.getStringAttribute('icmp_redirect');
  }
  public set icmpRedirect(value: string) {
    this._icmpRedirect = value;
  }
  public resetIcmpRedirect() {
    this._icmpRedirect = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get icmpRedirectInput() {
    return this._icmpRedirect;
  }

  // id - computed: true, optional: true, required: false
  private _id?: string; 
  public get id() {
    return this.getStringAttribute('id');
  }
  public set id(value: string) {
    this._id = value;
  }
  public resetId() {
    this._id = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get idInput() {
    return this._id;
  }

  // interface - computed: true, optional: true, required: false
  private _interface?: string; 
  public get interface() {
    return this.getStringAttribute('interface');
  }
  public set interface(value: string) {
    this._interface = value;
  }
  public resetInterface() {
    this._interface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get interfaceInput() {
    return this._interface;
  }

  // ip - computed: true, optional: true, required: false
  private _ip?: string; 
  public get ip() {
    return this.getStringAttribute('ip');
  }
  public set ip(value: string) {
    this._ip = value;
  }
  public resetIp() {
    this._ip = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipInput() {
    return this._ip;
  }

  // l2_interface - computed: true, optional: true, required: false
  private _l2Interface?: string; 
  public get l2Interface() {
    return this.getStringAttribute('l2_interface');
  }
  public set l2Interface(value: string) {
    this._l2Interface = value;
  }
  public resetL2Interface() {
    this._l2Interface = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get l2InterfaceInput() {
    return this._l2Interface;
  }

  // macaddr - computed: true, optional: true, required: false
  private _macaddr?: string; 
  public get macaddr() {
    return this.getStringAttribute('macaddr');
  }
  public set macaddr(value: string) {
    this._macaddr = value;
  }
  public resetMacaddr() {
    this._macaddr = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get macaddrInput() {
    return this._macaddr;
  }

  // mode - computed: true, optional: true, required: false
  private _mode?: string; 
  public get mode() {
    return this.getStringAttribute('mode');
  }
  public set mode(value: string) {
    this._mode = value;
  }
  public resetMode() {
    this._mode = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get modeInput() {
    return this._mode;
  }

  // mtu - computed: true, optional: true, required: false
  private _mtu?: number; 
  public get mtu() {
    return this.getNumberAttribute('mtu');
  }
  public set mtu(value: number) {
    this._mtu = value;
  }
  public resetMtu() {
    this._mtu = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mtuInput() {
    return this._mtu;
  }

  // mtu_override - computed: true, optional: true, required: false
  private _mtuOverride?: string; 
  public get mtuOverride() {
    return this.getStringAttribute('mtu_override');
  }
  public set mtuOverride(value: string) {
    this._mtuOverride = value;
  }
  public resetMtuOverride() {
    this._mtuOverride = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get mtuOverrideInput() {
    return this._mtuOverride;
  }

  // name - computed: true, optional: true, required: false
  private _name?: string; 
  public get name() {
    return this.getStringAttribute('name');
  }
  public set name(value: string) {
    this._name = value;
  }
  public resetName() {
    this._name = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get nameInput() {
    return this._name;
  }

  // ping_serv_status - computed: true, optional: true, required: false
  private _pingServStatus?: number; 
  public get pingServStatus() {
    return this.getNumberAttribute('ping_serv_status');
  }
  public set pingServStatus(value: number) {
    this._pingServStatus = value;
  }
  public resetPingServStatus() {
    this._pingServStatus = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get pingServStatusInput() {
    return this._pingServStatus;
  }

  // priority - computed: true, optional: true, required: false
  private _priority?: number; 
  public get priority() {
    return this.getNumberAttribute('priority');
  }
  public set priority(value: number) {
    this._priority = value;
  }
  public resetPriority() {
    this._priority = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get priorityInput() {
    return this._priority;
  }

  // remote_ip - computed: true, optional: true, required: false
  private _remoteIp?: string; 
  public get remoteIp() {
    return this.getStringAttribute('remote_ip');
  }
  public set remoteIp(value: string) {
    this._remoteIp = value;
  }
  public resetRemoteIp() {
    this._remoteIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get remoteIpInput() {
    return this._remoteIp;
  }

  // secondary_ip - computed: true, optional: true, required: false
  private _secondaryIp?: string; 
  public get secondaryIp() {
    return this.getStringAttribute('secondary_ip');
  }
  public set secondaryIp(value: string) {
    this._secondaryIp = value;
  }
  public resetSecondaryIp() {
    this._secondaryIp = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondaryIpInput() {
    return this._secondaryIp;
  }

  // snmp_index - computed: true, optional: true, required: false
  private _snmpIndex?: number; 
  public get snmpIndex() {
    return this.getNumberAttribute('snmp_index');
  }
  public set snmpIndex(value: number) {
    this._snmpIndex = value;
  }
  public resetSnmpIndex() {
    this._snmpIndex = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get snmpIndexInput() {
    return this._snmpIndex;
  }

  // speed - computed: true, optional: true, required: false
  private _speed?: string; 
  public get speed() {
    return this.getStringAttribute('speed');
  }
  public set speed(value: string) {
    this._speed = value;
  }
  public resetSpeed() {
    this._speed = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get speedInput() {
    return this._speed;
  }

  // src_check - computed: true, optional: true, required: false
  private _srcCheck?: string; 
  public get srcCheck() {
    return this.getStringAttribute('src_check');
  }
  public set srcCheck(value: string) {
    this._srcCheck = value;
  }
  public resetSrcCheck() {
    this._srcCheck = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get srcCheckInput() {
    return this._srcCheck;
  }

  // src_check_allow_default - computed: true, optional: true, required: false
  private _srcCheckAllowDefault?: string; 
  public get srcCheckAllowDefault() {
    return this.getStringAttribute('src_check_allow_default');
  }
  public set srcCheckAllowDefault(value: string) {
    this._srcCheckAllowDefault = value;
  }
  public resetSrcCheckAllowDefault() {
    this._srcCheckAllowDefault = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get srcCheckAllowDefaultInput() {
    return this._srcCheckAllowDefault;
  }

  // status - computed: true, optional: true, required: false
  private _status?: string; 
  public get status() {
    return this.getStringAttribute('status');
  }
  public set status(value: string) {
    this._status = value;
  }
  public resetStatus() {
    this._status = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get statusInput() {
    return this._status;
  }

  // switch - computed: true, optional: true, required: false
  private _switch?: string; 
  public get switch() {
    return this.getStringAttribute('switch');
  }
  public set switch(value: string) {
    this._switch = value;
  }
  public resetSwitch() {
    this._switch = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get switchInput() {
    return this._switch;
  }

  // type - computed: true, optional: true, required: false
  private _type?: string; 
  public get type() {
    return this.getStringAttribute('type');
  }
  public set type(value: string) {
    this._type = value;
  }
  public resetType() {
    this._type = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get typeInput() {
    return this._type;
  }

  // vdom - computed: true, optional: true, required: false
  private _vdom?: string; 
  public get vdom() {
    return this.getStringAttribute('vdom');
  }
  public set vdom(value: string) {
    this._vdom = value;
  }
  public resetVdom() {
    this._vdom = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vdomInput() {
    return this._vdom;
  }

  // vlanforward - computed: true, optional: true, required: false
  private _vlanforward?: string; 
  public get vlanforward() {
    return this.getStringAttribute('vlanforward');
  }
  public set vlanforward(value: string) {
    this._vlanforward = value;
  }
  public resetVlanforward() {
    this._vlanforward = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vlanforwardInput() {
    return this._vlanforward;
  }

  // vlanid - computed: true, optional: true, required: false
  private _vlanid?: number; 
  public get vlanid() {
    return this.getNumberAttribute('vlanid');
  }
  public set vlanid(value: number) {
    this._vlanid = value;
  }
  public resetVlanid() {
    this._vlanid = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vlanidInput() {
    return this._vlanid;
  }

  // vrf - computed: true, optional: true, required: false
  private _vrf?: string; 
  public get vrf() {
    return this.getStringAttribute('vrf');
  }
  public set vrf(value: string) {
    this._vrf = value;
  }
  public resetVrf() {
    this._vrf = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrfInput() {
    return this._vrf;
  }

  // vrrp_virtual_mac - computed: true, optional: true, required: false
  private _vrrpVirtualMac?: string; 
  public get vrrpVirtualMac() {
    return this.getStringAttribute('vrrp_virtual_mac');
  }
  public set vrrpVirtualMac(value: string) {
    this._vrrpVirtualMac = value;
  }
  public resetVrrpVirtualMac() {
    this._vrrpVirtualMac = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrrpVirtualMacInput() {
    return this._vrrpVirtualMac;
  }

  // weight - computed: true, optional: true, required: false
  private _weight?: number; 
  public get weight() {
    return this.getNumberAttribute('weight');
  }
  public set weight(value: number) {
    this._weight = value;
  }
  public resetWeight() {
    this._weight = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get weightInput() {
    return this._weight;
  }

  // ipv6 - computed: false, optional: true, required: false
  private _ipv6 = new SystemInterfaceIpv6OutputReference(this, "ipv6");
  public get ipv6() {
    return this._ipv6;
  }
  public putIpv6(value: SystemInterfaceIpv6) {
    this._ipv6.internalValue = value;
  }
  public resetIpv6() {
    this._ipv6.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get ipv6Input() {
    return this._ipv6.internalValue;
  }

  // secondaryip - computed: false, optional: true, required: false
  private _secondaryip = new SystemInterfaceSecondaryipList(this, "secondaryip", false);
  public get secondaryip() {
    return this._secondaryip;
  }
  public putSecondaryip(value: SystemInterfaceSecondaryip[] | cdktf.IResolvable) {
    this._secondaryip.internalValue = value;
  }
  public resetSecondaryip() {
    this._secondaryip.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get secondaryipInput() {
    return this._secondaryip.internalValue;
  }

  // switch_members - computed: false, optional: true, required: false
  private _switchMembers = new SystemInterfaceSwitchMembersList(this, "switch_members", false);
  public get switchMembers() {
    return this._switchMembers;
  }
  public putSwitchMembers(value: SystemInterfaceSwitchMembers[] | cdktf.IResolvable) {
    this._switchMembers.internalValue = value;
  }
  public resetSwitchMembers() {
    this._switchMembers.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get switchMembersInput() {
    return this._switchMembers.internalValue;
  }

  // vrrp - computed: false, optional: true, required: false
  private _vrrp = new SystemInterfaceVrrpList(this, "vrrp", false);
  public get vrrp() {
    return this._vrrp;
  }
  public putVrrp(value: SystemInterfaceVrrp[] | cdktf.IResolvable) {
    this._vrrp.internalValue = value;
  }
  public resetVrrp() {
    this._vrrp.internalValue = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get vrrpInput() {
    return this._vrrp.internalValue;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      alias: cdktf.stringToTerraform(this._alias),
      allowaccess: cdktf.stringToTerraform(this._allowaccess),
      auth_type: cdktf.stringToTerraform(this._authType),
      autogenerated: cdktf.stringToTerraform(this._autogenerated),
      bfd: cdktf.stringToTerraform(this._bfd),
      bfd_desired_min_tx: cdktf.numberToTerraform(this._bfdDesiredMinTx),
      bfd_detect_mult: cdktf.numberToTerraform(this._bfdDetectMult),
      bfd_required_min_rx: cdktf.numberToTerraform(this._bfdRequiredMinRx),
      cli_conn_status: cdktf.stringToTerraform(this._cliConnStatus),
      defaultgw: cdktf.stringToTerraform(this._defaultgw),
      description: cdktf.stringToTerraform(this._description),
      detectprotocol: cdktf.stringToTerraform(this._detectprotocol),
      detectserver: cdktf.stringToTerraform(this._detectserver),
      dhcp_client_identifier: cdktf.stringToTerraform(this._dhcpClientIdentifier),
      dhcp_client_status: cdktf.stringToTerraform(this._dhcpClientStatus),
      dhcp_expire: cdktf.numberToTerraform(this._dhcpExpire),
      dhcp_relay_ip: cdktf.stringToTerraform(this._dhcpRelayIp),
      dhcp_relay_option82: cdktf.stringToTerraform(this._dhcpRelayOption82),
      dhcp_relay_service: cdktf.stringToTerraform(this._dhcpRelayService),
      dhcp_vendor_specific_option: cdktf.stringToTerraform(this._dhcpVendorSpecificOption),
      distance: cdktf.numberToTerraform(this._distance),
      dns_server_override: cdktf.stringToTerraform(this._dnsServerOverride),
      dynamic_dns1: cdktf.stringToTerraform(this._dynamicDns1),
      dynamic_dns2: cdktf.stringToTerraform(this._dynamicDns2),
      dynamic_sort_subtable: cdktf.stringToTerraform(this._dynamicSortSubtable),
      dynamicgw: cdktf.stringToTerraform(this._dynamicgw),
      forward_domain: cdktf.numberToTerraform(this._forwardDomain),
      gwdetect: cdktf.stringToTerraform(this._gwdetect),
      ha_priority: cdktf.numberToTerraform(this._haPriority),
      icmp_redirect: cdktf.stringToTerraform(this._icmpRedirect),
      id: cdktf.stringToTerraform(this._id),
      interface: cdktf.stringToTerraform(this._interface),
      ip: cdktf.stringToTerraform(this._ip),
      l2_interface: cdktf.stringToTerraform(this._l2Interface),
      macaddr: cdktf.stringToTerraform(this._macaddr),
      mode: cdktf.stringToTerraform(this._mode),
      mtu: cdktf.numberToTerraform(this._mtu),
      mtu_override: cdktf.stringToTerraform(this._mtuOverride),
      name: cdktf.stringToTerraform(this._name),
      ping_serv_status: cdktf.numberToTerraform(this._pingServStatus),
      priority: cdktf.numberToTerraform(this._priority),
      remote_ip: cdktf.stringToTerraform(this._remoteIp),
      secondary_ip: cdktf.stringToTerraform(this._secondaryIp),
      snmp_index: cdktf.numberToTerraform(this._snmpIndex),
      speed: cdktf.stringToTerraform(this._speed),
      src_check: cdktf.stringToTerraform(this._srcCheck),
      src_check_allow_default: cdktf.stringToTerraform(this._srcCheckAllowDefault),
      status: cdktf.stringToTerraform(this._status),
      switch: cdktf.stringToTerraform(this._switch),
      type: cdktf.stringToTerraform(this._type),
      vdom: cdktf.stringToTerraform(this._vdom),
      vlanforward: cdktf.stringToTerraform(this._vlanforward),
      vlanid: cdktf.numberToTerraform(this._vlanid),
      vrf: cdktf.stringToTerraform(this._vrf),
      vrrp_virtual_mac: cdktf.stringToTerraform(this._vrrpVirtualMac),
      weight: cdktf.numberToTerraform(this._weight),
      ipv6: systemInterfaceIpv6ToTerraform(this._ipv6.internalValue),
      secondaryip: cdktf.listMapper(systemInterfaceSecondaryipToTerraform, true)(this._secondaryip.internalValue),
      switch_members: cdktf.listMapper(systemInterfaceSwitchMembersToTerraform, true)(this._switchMembers.internalValue),
      vrrp: cdktf.listMapper(systemInterfaceVrrpToTerraform, true)(this._vrrp.internalValue),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      alias: {
        value: cdktf.stringToHclTerraform(this._alias),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      allowaccess: {
        value: cdktf.stringToHclTerraform(this._allowaccess),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      auth_type: {
        value: cdktf.stringToHclTerraform(this._authType),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      autogenerated: {
        value: cdktf.stringToHclTerraform(this._autogenerated),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      bfd: {
        value: cdktf.stringToHclTerraform(this._bfd),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      bfd_desired_min_tx: {
        value: cdktf.numberToHclTerraform(this._bfdDesiredMinTx),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      bfd_detect_mult: {
        value: cdktf.numberToHclTerraform(this._bfdDetectMult),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      bfd_required_min_rx: {
        value: cdktf.numberToHclTerraform(this._bfdRequiredMinRx),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      cli_conn_status: {
        value: cdktf.stringToHclTerraform(this._cliConnStatus),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      defaultgw: {
        value: cdktf.stringToHclTerraform(this._defaultgw),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      description: {
        value: cdktf.stringToHclTerraform(this._description),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      detectprotocol: {
        value: cdktf.stringToHclTerraform(this._detectprotocol),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      detectserver: {
        value: cdktf.stringToHclTerraform(this._detectserver),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      dhcp_client_identifier: {
        value: cdktf.stringToHclTerraform(this._dhcpClientIdentifier),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      dhcp_client_status: {
        value: cdktf.stringToHclTerraform(this._dhcpClientStatus),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      dhcp_expire: {
        value: cdktf.numberToHclTerraform(this._dhcpExpire),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      dhcp_relay_ip: {
        value: cdktf.stringToHclTerraform(this._dhcpRelayIp),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      dhcp_relay_option82: {
        value: cdktf.stringToHclTerraform(this._dhcpRelayOption82),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      dhcp_relay_service: {
        value: cdktf.stringToHclTerraform(this._dhcpRelayService),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      dhcp_vendor_specific_option: {
        value: cdktf.stringToHclTerraform(this._dhcpVendorSpecificOption),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      distance: {
        value: cdktf.numberToHclTerraform(this._distance),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      dns_server_override: {
        value: cdktf.stringToHclTerraform(this._dnsServerOverride),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      dynamic_dns1: {
        value: cdktf.stringToHclTerraform(this._dynamicDns1),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      dynamic_dns2: {
        value: cdktf.stringToHclTerraform(this._dynamicDns2),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      dynamic_sort_subtable: {
        value: cdktf.stringToHclTerraform(this._dynamicSortSubtable),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      dynamicgw: {
        value: cdktf.stringToHclTerraform(this._dynamicgw),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      forward_domain: {
        value: cdktf.numberToHclTerraform(this._forwardDomain),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      gwdetect: {
        value: cdktf.stringToHclTerraform(this._gwdetect),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      ha_priority: {
        value: cdktf.numberToHclTerraform(this._haPriority),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      icmp_redirect: {
        value: cdktf.stringToHclTerraform(this._icmpRedirect),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      id: {
        value: cdktf.stringToHclTerraform(this._id),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      interface: {
        value: cdktf.stringToHclTerraform(this._interface),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      ip: {
        value: cdktf.stringToHclTerraform(this._ip),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      l2_interface: {
        value: cdktf.stringToHclTerraform(this._l2Interface),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      macaddr: {
        value: cdktf.stringToHclTerraform(this._macaddr),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      mode: {
        value: cdktf.stringToHclTerraform(this._mode),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      mtu: {
        value: cdktf.numberToHclTerraform(this._mtu),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      mtu_override: {
        value: cdktf.stringToHclTerraform(this._mtuOverride),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      name: {
        value: cdktf.stringToHclTerraform(this._name),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      ping_serv_status: {
        value: cdktf.numberToHclTerraform(this._pingServStatus),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      priority: {
        value: cdktf.numberToHclTerraform(this._priority),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      remote_ip: {
        value: cdktf.stringToHclTerraform(this._remoteIp),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      secondary_ip: {
        value: cdktf.stringToHclTerraform(this._secondaryIp),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      snmp_index: {
        value: cdktf.numberToHclTerraform(this._snmpIndex),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      speed: {
        value: cdktf.stringToHclTerraform(this._speed),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      src_check: {
        value: cdktf.stringToHclTerraform(this._srcCheck),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      src_check_allow_default: {
        value: cdktf.stringToHclTerraform(this._srcCheckAllowDefault),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      status: {
        value: cdktf.stringToHclTerraform(this._status),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      switch: {
        value: cdktf.stringToHclTerraform(this._switch),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      type: {
        value: cdktf.stringToHclTerraform(this._type),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      vdom: {
        value: cdktf.stringToHclTerraform(this._vdom),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      vlanforward: {
        value: cdktf.stringToHclTerraform(this._vlanforward),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      vlanid: {
        value: cdktf.numberToHclTerraform(this._vlanid),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      vrf: {
        value: cdktf.stringToHclTerraform(this._vrf),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      vrrp_virtual_mac: {
        value: cdktf.stringToHclTerraform(this._vrrpVirtualMac),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      weight: {
        value: cdktf.numberToHclTerraform(this._weight),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      ipv6: {
        value: systemInterfaceIpv6ToHclTerraform(this._ipv6.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "SystemInterfaceIpv6List",
      },
      secondaryip: {
        value: cdktf.listMapperHcl(systemInterfaceSecondaryipToHclTerraform, true)(this._secondaryip.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "SystemInterfaceSecondaryipList",
      },
      switch_members: {
        value: cdktf.listMapperHcl(systemInterfaceSwitchMembersToHclTerraform, true)(this._switchMembers.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "SystemInterfaceSwitchMembersList",
      },
      vrrp: {
        value: cdktf.listMapperHcl(systemInterfaceVrrpToHclTerraform, true)(this._vrrp.internalValue),
        isBlock: true,
        type: "list",
        storageClassType: "SystemInterfaceVrrpList",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
