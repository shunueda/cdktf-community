// https://registry.terraform.io/providers/spring-media/awsmt/2.5.1/docs
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface AwsmtProviderConfig {
  /**
  * The maximum number of times the provider will retry a failed aws operation. Defaults to 10
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/spring-media/awsmt/2.5.1/docs#max_retry_attempts AwsmtProvider#max_retry_attempts}
  */
  readonly maxRetryAttempts?: number;
  /**
  * The profile generated by the SSO login. You can find the profile(s) name in '~/.aws/config'. SSO login will not be used if the profile name is not specified and no environmental variable called 'aws_profile' is found.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/spring-media/awsmt/2.5.1/docs#profile AwsmtProvider#profile}
  */
  readonly profile?: string;
  /**
  * AWS region. defaults to 'eu-central-1'.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/spring-media/awsmt/2.5.1/docs#region AwsmtProvider#region}
  */
  readonly region?: string;
  /**
  * Alias name
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/spring-media/awsmt/2.5.1/docs#alias AwsmtProvider#alias}
  */
  readonly alias?: string;
}

/**
* Represents a {@link https://registry.terraform.io/providers/spring-media/awsmt/2.5.1/docs awsmt}
*/
export class AwsmtProvider extends cdktf.TerraformProvider {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "awsmt";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a AwsmtProvider resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the AwsmtProvider to import
  * @param importFromId The id of the existing AwsmtProvider that should be imported. Refer to the {@link https://registry.terraform.io/providers/spring-media/awsmt/2.5.1/docs#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the AwsmtProvider to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "awsmt", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/spring-media/awsmt/2.5.1/docs awsmt} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options AwsmtProviderConfig = {}
  */
  public constructor(scope: Construct, id: string, config: AwsmtProviderConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'awsmt',
      terraformGeneratorMetadata: {
        providerName: 'awsmt',
        providerVersion: '2.5.1'
      },
      terraformProviderSource: 'spring-media/awsmt'
    });
    this._maxRetryAttempts = config.maxRetryAttempts;
    this._profile = config.profile;
    this._region = config.region;
    this._alias = config.alias;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // max_retry_attempts - computed: false, optional: true, required: false
  private _maxRetryAttempts?: number; 
  public get maxRetryAttempts() {
    return this._maxRetryAttempts;
  }
  public set maxRetryAttempts(value: number | undefined) {
    this._maxRetryAttempts = value;
  }
  public resetMaxRetryAttempts() {
    this._maxRetryAttempts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get maxRetryAttemptsInput() {
    return this._maxRetryAttempts;
  }

  // profile - computed: false, optional: true, required: false
  private _profile?: string; 
  public get profile() {
    return this._profile;
  }
  public set profile(value: string | undefined) {
    this._profile = value;
  }
  public resetProfile() {
    this._profile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get profileInput() {
    return this._profile;
  }

  // region - computed: false, optional: true, required: false
  private _region?: string; 
  public get region() {
    return this._region;
  }
  public set region(value: string | undefined) {
    this._region = value;
  }
  public resetRegion() {
    this._region = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get regionInput() {
    return this._region;
  }

  // alias - computed: false, optional: true, required: false
  private _alias?: string; 
  public get alias() {
    return this._alias;
  }
  public set alias(value: string | undefined) {
    this._alias = value;
  }
  public resetAlias() {
    this._alias = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get aliasInput() {
    return this._alias;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      max_retry_attempts: cdktf.numberToTerraform(this._maxRetryAttempts),
      profile: cdktf.stringToTerraform(this._profile),
      region: cdktf.stringToTerraform(this._region),
      alias: cdktf.stringToTerraform(this._alias),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      max_retry_attempts: {
        value: cdktf.numberToHclTerraform(this._maxRetryAttempts),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      profile: {
        value: cdktf.stringToHclTerraform(this._profile),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      region: {
        value: cdktf.stringToHclTerraform(this._region),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      alias: {
        value: cdktf.stringToHclTerraform(this._alias),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
