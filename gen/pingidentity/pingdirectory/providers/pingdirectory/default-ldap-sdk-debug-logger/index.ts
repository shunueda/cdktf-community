// https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface DefaultLdapSdkDebugLoggerConfig extends cdktf.TerraformMetaArguments {
  /**
  * Specifies whether to append to existing log files.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#append DefaultLdapSdkDebugLogger#append}
  */
  readonly append?: boolean | cdktf.IResolvable;
  /**
  * Indicates whether the LDAP SDK Debug Logger will publish records asynchronously.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#asynchronous DefaultLdapSdkDebugLogger#asynchronous}
  */
  readonly asynchronous?: boolean | cdktf.IResolvable;
  /**
  * Specifies whether to flush the writer after every log record.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#auto_flush DefaultLdapSdkDebugLogger#auto_flush}
  */
  readonly autoFlush?: boolean | cdktf.IResolvable;
  /**
  * Specifies the log file buffer size.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#buffer_size DefaultLdapSdkDebugLogger#buffer_size}
  */
  readonly bufferSize?: string;
  /**
  * Specifies the type of compression (if any) to use for log files that are written.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#compression_mechanism DefaultLdapSdkDebugLogger#compression_mechanism}
  */
  readonly compressionMechanism?: string;
  /**
  * The minimum debug level that should be used for messages to be logged.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#debug_level DefaultLdapSdkDebugLogger#debug_level}
  */
  readonly debugLevel?: string;
  /**
  * The types of debug messages that should be logged.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#debug_type DefaultLdapSdkDebugLogger#debug_type}
  */
  readonly debugType?: string[];
  /**
  * A description for this LDAP SDK Debug Logger
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#description DefaultLdapSdkDebugLogger#description}
  */
  readonly description?: string;
  /**
  * Indicates whether this LDAP SDK Debug Logger is enabled.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#enabled DefaultLdapSdkDebugLogger#enabled}
  */
  readonly enabled?: boolean | cdktf.IResolvable;
  /**
  * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#encrypt_log DefaultLdapSdkDebugLogger#encrypt_log}
  */
  readonly encryptLog?: boolean | cdktf.IResolvable;
  /**
  * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#encryption_settings_definition_id DefaultLdapSdkDebugLogger#encryption_settings_definition_id}
  */
  readonly encryptionSettingsDefinitionId?: string;
  /**
  * Indicates whether a stack trace of the thread which called the debug method should be included in debug log messages.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#include_stack_trace DefaultLdapSdkDebugLogger#include_stack_trace}
  */
  readonly includeStackTrace?: boolean | cdktf.IResolvable;
  /**
  * The path and base name of the file to use for log files generated by this LDAP SDK Debug Logger. The path may be either absolute or relative to the server root.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#log_file DefaultLdapSdkDebugLogger#log_file}
  */
  readonly logFile?: string;
  /**
  * The UNIX permissions of the log files created by this LDAP SDK Debug Logger.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#log_file_permissions DefaultLdapSdkDebugLogger#log_file_permissions}
  */
  readonly logFilePermissions?: string;
  /**
  * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#logging_error_behavior DefaultLdapSdkDebugLogger#logging_error_behavior}
  */
  readonly loggingErrorBehavior?: string;
  /**
  * The maximum number of log records that can be stored in the asynchronous queue.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#queue_size DefaultLdapSdkDebugLogger#queue_size}
  */
  readonly queueSize?: number;
  /**
  * The retention policy to use for the LDAP SDK Debug Logger .
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#retention_policy DefaultLdapSdkDebugLogger#retention_policy}
  */
  readonly retentionPolicy?: string[];
  /**
  * A listener that should be notified whenever a log file is rotated out of service.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#rotation_listener DefaultLdapSdkDebugLogger#rotation_listener}
  */
  readonly rotationListener?: string[];
  /**
  * The rotation policy to use for the LDAP SDK Debug Logger .
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#rotation_policy DefaultLdapSdkDebugLogger#rotation_policy}
  */
  readonly rotationPolicy?: string[];
  /**
  * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#sign_log DefaultLdapSdkDebugLogger#sign_log}
  */
  readonly signLog?: boolean | cdktf.IResolvable;
  /**
  * Specifies the interval at which to check whether the log files need to be rotated.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#time_interval DefaultLdapSdkDebugLogger#time_interval}
  */
  readonly timeInterval?: string;
  /**
  * Specifies the smallest time unit to be included in timestamps.
  *
  * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#timestamp_precision DefaultLdapSdkDebugLogger#timestamp_precision}
  */
  readonly timestampPrecision?: string;
}
export interface DefaultLdapSdkDebugLoggerRequiredActions {
}

export function defaultLdapSdkDebugLoggerRequiredActionsToTerraform(struct?: DefaultLdapSdkDebugLoggerRequiredActions): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  return {
  }
}


export function defaultLdapSdkDebugLoggerRequiredActionsToHclTerraform(struct?: DefaultLdapSdkDebugLoggerRequiredActions): any {
  if (!cdktf.canInspect(struct) || cdktf.Tokenization.isResolvable(struct)) { return struct; }
  if (cdktf.isComplexElement(struct)) {
    throw new Error("A complex element was used as configuration, this is not supported: https://cdk.tf/complex-object-as-configuration");
  }
  const attrs = {
  };
  return attrs;
}

export class DefaultLdapSdkDebugLoggerRequiredActionsOutputReference extends cdktf.ComplexObject {
  private isEmptyObject = false;

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param complexObjectIndex the index of this item in the list
  * @param complexObjectIsFromSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  public constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string, complexObjectIndex: number, complexObjectIsFromSet: boolean) {
    super(terraformResource, terraformAttribute, complexObjectIsFromSet, complexObjectIndex);
  }

  public get internalValue(): DefaultLdapSdkDebugLoggerRequiredActions | undefined {
    let hasAnyValues = this.isEmptyObject;
    const internalValueResult: any = {};
    return hasAnyValues ? internalValueResult : undefined;
  }

  public set internalValue(value: DefaultLdapSdkDebugLoggerRequiredActions | undefined) {
    if (value === undefined) {
      this.isEmptyObject = false;
    }
    else {
      this.isEmptyObject = Object.keys(value).length === 0;
    }
  }

  // property - computed: true, optional: false, required: false
  public get property() {
    return this.getStringAttribute('property');
  }

  // synopsis - computed: true, optional: false, required: false
  public get synopsis() {
    return this.getStringAttribute('synopsis');
  }

  // type - computed: true, optional: false, required: false
  public get type() {
    return this.getStringAttribute('type');
  }
}

export class DefaultLdapSdkDebugLoggerRequiredActionsList extends cdktf.ComplexList {

  /**
  * @param terraformResource The parent resource
  * @param terraformAttribute The attribute on the parent resource this class is referencing
  * @param wrapsSet whether the list is wrapping a set (will add tolist() to be able to access an item via an index)
  */
  constructor(protected terraformResource: cdktf.IInterpolatingParent, protected terraformAttribute: string, protected wrapsSet: boolean) {
    super(terraformResource, terraformAttribute, wrapsSet)
  }

  /**
  * @param index the index of the item to return
  */
  public get(index: number): DefaultLdapSdkDebugLoggerRequiredActionsOutputReference {
    return new DefaultLdapSdkDebugLoggerRequiredActionsOutputReference(this.terraformResource, this.terraformAttribute, index, this.wrapsSet);
  }
}

/**
* Represents a {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger pingdirectory_default_ldap_sdk_debug_logger}
*/
export class DefaultLdapSdkDebugLogger extends cdktf.TerraformResource {

  // =================
  // STATIC PROPERTIES
  // =================
  public static readonly tfResourceType = "pingdirectory_default_ldap_sdk_debug_logger";

  // ==============
  // STATIC Methods
  // ==============
  /**
  * Generates CDKTF code for importing a DefaultLdapSdkDebugLogger resource upon running "cdktf plan <stack-name>"
  * @param scope The scope in which to define this construct
  * @param importToId The construct id used in the generated config for the DefaultLdapSdkDebugLogger to import
  * @param importFromId The id of the existing DefaultLdapSdkDebugLogger that should be imported. Refer to the {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger#import import section} in the documentation of this resource for the id to use
  * @param provider? Optional instance of the provider where the DefaultLdapSdkDebugLogger to import is found
  */
  public static generateConfigForImport(scope: Construct, importToId: string, importFromId: string, provider?: cdktf.TerraformProvider) {
        return new cdktf.ImportableResource(scope, importToId, { terraformResourceType: "pingdirectory_default_ldap_sdk_debug_logger", importId: importFromId, provider });
      }

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://registry.terraform.io/providers/pingidentity/pingdirectory/1.5.0/docs/resources/default_ldap_sdk_debug_logger pingdirectory_default_ldap_sdk_debug_logger} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options DefaultLdapSdkDebugLoggerConfig = {}
  */
  public constructor(scope: Construct, id: string, config: DefaultLdapSdkDebugLoggerConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'pingdirectory_default_ldap_sdk_debug_logger',
      terraformGeneratorMetadata: {
        providerName: 'pingdirectory',
        providerVersion: '1.5.0'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle,
      provisioners: config.provisioners,
      connection: config.connection,
      forEach: config.forEach
    });
    this._append = config.append;
    this._asynchronous = config.asynchronous;
    this._autoFlush = config.autoFlush;
    this._bufferSize = config.bufferSize;
    this._compressionMechanism = config.compressionMechanism;
    this._debugLevel = config.debugLevel;
    this._debugType = config.debugType;
    this._description = config.description;
    this._enabled = config.enabled;
    this._encryptLog = config.encryptLog;
    this._encryptionSettingsDefinitionId = config.encryptionSettingsDefinitionId;
    this._includeStackTrace = config.includeStackTrace;
    this._logFile = config.logFile;
    this._logFilePermissions = config.logFilePermissions;
    this._loggingErrorBehavior = config.loggingErrorBehavior;
    this._queueSize = config.queueSize;
    this._retentionPolicy = config.retentionPolicy;
    this._rotationListener = config.rotationListener;
    this._rotationPolicy = config.rotationPolicy;
    this._signLog = config.signLog;
    this._timeInterval = config.timeInterval;
    this._timestampPrecision = config.timestampPrecision;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // append - computed: true, optional: true, required: false
  private _append?: boolean | cdktf.IResolvable; 
  public get append() {
    return this.getBooleanAttribute('append');
  }
  public set append(value: boolean | cdktf.IResolvable) {
    this._append = value;
  }
  public resetAppend() {
    this._append = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get appendInput() {
    return this._append;
  }

  // asynchronous - computed: true, optional: true, required: false
  private _asynchronous?: boolean | cdktf.IResolvable; 
  public get asynchronous() {
    return this.getBooleanAttribute('asynchronous');
  }
  public set asynchronous(value: boolean | cdktf.IResolvable) {
    this._asynchronous = value;
  }
  public resetAsynchronous() {
    this._asynchronous = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get asynchronousInput() {
    return this._asynchronous;
  }

  // auto_flush - computed: true, optional: true, required: false
  private _autoFlush?: boolean | cdktf.IResolvable; 
  public get autoFlush() {
    return this.getBooleanAttribute('auto_flush');
  }
  public set autoFlush(value: boolean | cdktf.IResolvable) {
    this._autoFlush = value;
  }
  public resetAutoFlush() {
    this._autoFlush = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get autoFlushInput() {
    return this._autoFlush;
  }

  // buffer_size - computed: true, optional: true, required: false
  private _bufferSize?: string; 
  public get bufferSize() {
    return this.getStringAttribute('buffer_size');
  }
  public set bufferSize(value: string) {
    this._bufferSize = value;
  }
  public resetBufferSize() {
    this._bufferSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get bufferSizeInput() {
    return this._bufferSize;
  }

  // compression_mechanism - computed: true, optional: true, required: false
  private _compressionMechanism?: string; 
  public get compressionMechanism() {
    return this.getStringAttribute('compression_mechanism');
  }
  public set compressionMechanism(value: string) {
    this._compressionMechanism = value;
  }
  public resetCompressionMechanism() {
    this._compressionMechanism = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get compressionMechanismInput() {
    return this._compressionMechanism;
  }

  // debug_level - computed: true, optional: true, required: false
  private _debugLevel?: string; 
  public get debugLevel() {
    return this.getStringAttribute('debug_level');
  }
  public set debugLevel(value: string) {
    this._debugLevel = value;
  }
  public resetDebugLevel() {
    this._debugLevel = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get debugLevelInput() {
    return this._debugLevel;
  }

  // debug_type - computed: true, optional: true, required: false
  private _debugType?: string[]; 
  public get debugType() {
    return cdktf.Fn.tolist(this.getListAttribute('debug_type'));
  }
  public set debugType(value: string[]) {
    this._debugType = value;
  }
  public resetDebugType() {
    this._debugType = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get debugTypeInput() {
    return this._debugType;
  }

  // description - computed: true, optional: true, required: false
  private _description?: string; 
  public get description() {
    return this.getStringAttribute('description');
  }
  public set description(value: string) {
    this._description = value;
  }
  public resetDescription() {
    this._description = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get descriptionInput() {
    return this._description;
  }

  // enabled - computed: true, optional: true, required: false
  private _enabled?: boolean | cdktf.IResolvable; 
  public get enabled() {
    return this.getBooleanAttribute('enabled');
  }
  public set enabled(value: boolean | cdktf.IResolvable) {
    this._enabled = value;
  }
  public resetEnabled() {
    this._enabled = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get enabledInput() {
    return this._enabled;
  }

  // encrypt_log - computed: true, optional: true, required: false
  private _encryptLog?: boolean | cdktf.IResolvable; 
  public get encryptLog() {
    return this.getBooleanAttribute('encrypt_log');
  }
  public set encryptLog(value: boolean | cdktf.IResolvable) {
    this._encryptLog = value;
  }
  public resetEncryptLog() {
    this._encryptLog = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get encryptLogInput() {
    return this._encryptLog;
  }

  // encryption_settings_definition_id - computed: true, optional: true, required: false
  private _encryptionSettingsDefinitionId?: string; 
  public get encryptionSettingsDefinitionId() {
    return this.getStringAttribute('encryption_settings_definition_id');
  }
  public set encryptionSettingsDefinitionId(value: string) {
    this._encryptionSettingsDefinitionId = value;
  }
  public resetEncryptionSettingsDefinitionId() {
    this._encryptionSettingsDefinitionId = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get encryptionSettingsDefinitionIdInput() {
    return this._encryptionSettingsDefinitionId;
  }

  // id - computed: true, optional: false, required: false
  public get id() {
    return this.getStringAttribute('id');
  }

  // include_stack_trace - computed: true, optional: true, required: false
  private _includeStackTrace?: boolean | cdktf.IResolvable; 
  public get includeStackTrace() {
    return this.getBooleanAttribute('include_stack_trace');
  }
  public set includeStackTrace(value: boolean | cdktf.IResolvable) {
    this._includeStackTrace = value;
  }
  public resetIncludeStackTrace() {
    this._includeStackTrace = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get includeStackTraceInput() {
    return this._includeStackTrace;
  }

  // log_file - computed: true, optional: true, required: false
  private _logFile?: string; 
  public get logFile() {
    return this.getStringAttribute('log_file');
  }
  public set logFile(value: string) {
    this._logFile = value;
  }
  public resetLogFile() {
    this._logFile = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logFileInput() {
    return this._logFile;
  }

  // log_file_permissions - computed: true, optional: true, required: false
  private _logFilePermissions?: string; 
  public get logFilePermissions() {
    return this.getStringAttribute('log_file_permissions');
  }
  public set logFilePermissions(value: string) {
    this._logFilePermissions = value;
  }
  public resetLogFilePermissions() {
    this._logFilePermissions = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get logFilePermissionsInput() {
    return this._logFilePermissions;
  }

  // logging_error_behavior - computed: true, optional: true, required: false
  private _loggingErrorBehavior?: string; 
  public get loggingErrorBehavior() {
    return this.getStringAttribute('logging_error_behavior');
  }
  public set loggingErrorBehavior(value: string) {
    this._loggingErrorBehavior = value;
  }
  public resetLoggingErrorBehavior() {
    this._loggingErrorBehavior = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get loggingErrorBehaviorInput() {
    return this._loggingErrorBehavior;
  }

  // notifications - computed: true, optional: false, required: false
  public get notifications() {
    return cdktf.Fn.tolist(this.getListAttribute('notifications'));
  }

  // queue_size - computed: true, optional: true, required: false
  private _queueSize?: number; 
  public get queueSize() {
    return this.getNumberAttribute('queue_size');
  }
  public set queueSize(value: number) {
    this._queueSize = value;
  }
  public resetQueueSize() {
    this._queueSize = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get queueSizeInput() {
    return this._queueSize;
  }

  // required_actions - computed: true, optional: false, required: false
  private _requiredActions = new DefaultLdapSdkDebugLoggerRequiredActionsList(this, "required_actions", true);
  public get requiredActions() {
    return this._requiredActions;
  }

  // retention_policy - computed: true, optional: true, required: false
  private _retentionPolicy?: string[]; 
  public get retentionPolicy() {
    return cdktf.Fn.tolist(this.getListAttribute('retention_policy'));
  }
  public set retentionPolicy(value: string[]) {
    this._retentionPolicy = value;
  }
  public resetRetentionPolicy() {
    this._retentionPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get retentionPolicyInput() {
    return this._retentionPolicy;
  }

  // rotation_listener - computed: true, optional: true, required: false
  private _rotationListener?: string[]; 
  public get rotationListener() {
    return cdktf.Fn.tolist(this.getListAttribute('rotation_listener'));
  }
  public set rotationListener(value: string[]) {
    this._rotationListener = value;
  }
  public resetRotationListener() {
    this._rotationListener = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rotationListenerInput() {
    return this._rotationListener;
  }

  // rotation_policy - computed: true, optional: true, required: false
  private _rotationPolicy?: string[]; 
  public get rotationPolicy() {
    return cdktf.Fn.tolist(this.getListAttribute('rotation_policy'));
  }
  public set rotationPolicy(value: string[]) {
    this._rotationPolicy = value;
  }
  public resetRotationPolicy() {
    this._rotationPolicy = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get rotationPolicyInput() {
    return this._rotationPolicy;
  }

  // sign_log - computed: true, optional: true, required: false
  private _signLog?: boolean | cdktf.IResolvable; 
  public get signLog() {
    return this.getBooleanAttribute('sign_log');
  }
  public set signLog(value: boolean | cdktf.IResolvable) {
    this._signLog = value;
  }
  public resetSignLog() {
    this._signLog = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get signLogInput() {
    return this._signLog;
  }

  // time_interval - computed: true, optional: true, required: false
  private _timeInterval?: string; 
  public get timeInterval() {
    return this.getStringAttribute('time_interval');
  }
  public set timeInterval(value: string) {
    this._timeInterval = value;
  }
  public resetTimeInterval() {
    this._timeInterval = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeIntervalInput() {
    return this._timeInterval;
  }

  // timestamp_precision - computed: true, optional: true, required: false
  private _timestampPrecision?: string; 
  public get timestampPrecision() {
    return this.getStringAttribute('timestamp_precision');
  }
  public set timestampPrecision(value: string) {
    this._timestampPrecision = value;
  }
  public resetTimestampPrecision() {
    this._timestampPrecision = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timestampPrecisionInput() {
    return this._timestampPrecision;
  }

  // type - computed: true, optional: false, required: false
  public get type() {
    return this.getStringAttribute('type');
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      append: cdktf.booleanToTerraform(this._append),
      asynchronous: cdktf.booleanToTerraform(this._asynchronous),
      auto_flush: cdktf.booleanToTerraform(this._autoFlush),
      buffer_size: cdktf.stringToTerraform(this._bufferSize),
      compression_mechanism: cdktf.stringToTerraform(this._compressionMechanism),
      debug_level: cdktf.stringToTerraform(this._debugLevel),
      debug_type: cdktf.listMapper(cdktf.stringToTerraform, false)(this._debugType),
      description: cdktf.stringToTerraform(this._description),
      enabled: cdktf.booleanToTerraform(this._enabled),
      encrypt_log: cdktf.booleanToTerraform(this._encryptLog),
      encryption_settings_definition_id: cdktf.stringToTerraform(this._encryptionSettingsDefinitionId),
      include_stack_trace: cdktf.booleanToTerraform(this._includeStackTrace),
      log_file: cdktf.stringToTerraform(this._logFile),
      log_file_permissions: cdktf.stringToTerraform(this._logFilePermissions),
      logging_error_behavior: cdktf.stringToTerraform(this._loggingErrorBehavior),
      queue_size: cdktf.numberToTerraform(this._queueSize),
      retention_policy: cdktf.listMapper(cdktf.stringToTerraform, false)(this._retentionPolicy),
      rotation_listener: cdktf.listMapper(cdktf.stringToTerraform, false)(this._rotationListener),
      rotation_policy: cdktf.listMapper(cdktf.stringToTerraform, false)(this._rotationPolicy),
      sign_log: cdktf.booleanToTerraform(this._signLog),
      time_interval: cdktf.stringToTerraform(this._timeInterval),
      timestamp_precision: cdktf.stringToTerraform(this._timestampPrecision),
    };
  }

  protected synthesizeHclAttributes(): { [name: string]: any } {
    const attrs = {
      append: {
        value: cdktf.booleanToHclTerraform(this._append),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      asynchronous: {
        value: cdktf.booleanToHclTerraform(this._asynchronous),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      auto_flush: {
        value: cdktf.booleanToHclTerraform(this._autoFlush),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      buffer_size: {
        value: cdktf.stringToHclTerraform(this._bufferSize),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      compression_mechanism: {
        value: cdktf.stringToHclTerraform(this._compressionMechanism),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      debug_level: {
        value: cdktf.stringToHclTerraform(this._debugLevel),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      debug_type: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._debugType),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      description: {
        value: cdktf.stringToHclTerraform(this._description),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      enabled: {
        value: cdktf.booleanToHclTerraform(this._enabled),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      encrypt_log: {
        value: cdktf.booleanToHclTerraform(this._encryptLog),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      encryption_settings_definition_id: {
        value: cdktf.stringToHclTerraform(this._encryptionSettingsDefinitionId),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      include_stack_trace: {
        value: cdktf.booleanToHclTerraform(this._includeStackTrace),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      log_file: {
        value: cdktf.stringToHclTerraform(this._logFile),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      log_file_permissions: {
        value: cdktf.stringToHclTerraform(this._logFilePermissions),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      logging_error_behavior: {
        value: cdktf.stringToHclTerraform(this._loggingErrorBehavior),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      queue_size: {
        value: cdktf.numberToHclTerraform(this._queueSize),
        isBlock: false,
        type: "simple",
        storageClassType: "number",
      },
      retention_policy: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._retentionPolicy),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      rotation_listener: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._rotationListener),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      rotation_policy: {
        value: cdktf.listMapperHcl(cdktf.stringToHclTerraform, false)(this._rotationPolicy),
        isBlock: false,
        type: "set",
        storageClassType: "stringList",
      },
      sign_log: {
        value: cdktf.booleanToHclTerraform(this._signLog),
        isBlock: false,
        type: "simple",
        storageClassType: "boolean",
      },
      time_interval: {
        value: cdktf.stringToHclTerraform(this._timeInterval),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
      timestamp_precision: {
        value: cdktf.stringToHclTerraform(this._timestampPrecision),
        isBlock: false,
        type: "simple",
        storageClassType: "string",
      },
    };

    // remove undefined attributes
    return Object.fromEntries(Object.entries(attrs).filter(([_, value]) => value !== undefined && value.value !== undefined ))
  }
}
